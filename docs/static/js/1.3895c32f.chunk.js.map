{"version":3,"sources":["webpack:///static/js/1.3895c32f.chunk.js","webpack:///./~/pdfjs-dist/build/pdf.worker.js"],"names":["webpackJsonp","236","module","exports","__webpack_require__","process","global","root","factory","self","this","modules","__w_pdfjs_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","setVerbosityLevel","level","verbosity","getVerbosityLevel","info","msg","VERBOSITY_LEVELS","infos","console","log","warn","warnings","deprecated","details","unreachable","Error","assert","cond","isSameOrigin","baseUrl","otherUrl","base","URL","origin","e","other","isValidProtocol","url","protocol","createValidAbsoluteUrl","absoluteUrl","ex","shadow","obj","prop","value","writable","getLookupTableFactory","initializer","lookup","create","removeNullCharacters","str","replace","NullCharactersRegExp","bytesToString","bytes","_typeof","undefined","length","MAX_ARGUMENT_COUNT","String","fromCharCode","apply","strBuf","chunkEnd","Math","min","chunk","subarray","push","join","stringToBytes","Uint8Array","charCodeAt","arrayByteLength","arr","byteLength","arraysToBytes","item","itemLength","resultLength","ii","pos","data","set","string32","log2","x","readInt8","start","readUint16","offset","readUint32","isLittleEndian","buffer8","view32","Uint32Array","buffer","isEvalSupported","Function","stringToPDFString","code","PDFStringTranslateTable","charAt","stringToUTF8String","decodeURIComponent","escape","utf8StringToString","unescape","encodeURIComponent","isEmptyObj","key","isBool","v","isNum","isString","isArrayBuffer","isSpace","ch","isNodeJS","createPromiseCapability","capability","promise","Promise","resolve","reject","resolveCall","fn","args","thisArg","arguments","wrapReason","reason","AbortException","message","MissingPDFException","UnexpectedResponseException","status","UnknownErrorException","makeReasonSerializable","toString","resolveOrReject","success","finalize","catch","MessageHandler","sourceName","targetName","comObj","_this","callbackId","streamId","postMessageTransfers","streamSinks","streamControllers","callbacksCapabilities","ah","actionHandler","_onComObjOnMessage","event","stream","_processStreamMessage","isReply","callback","error","action","_sourceName","_targetName","then","result","postMessage","_createStreamSink","addEventListener","loadJpegStream","id","imageUrl","objs","img","Image","onload","onerror","src","ReadableStream","createObjectURL","createBlob","FormatError","XRefParseException","Util","TextRenderingMode","StreamType","StatTimer","PasswordResponses","PasswordException","PageViewport","NotImplementedException","NativeImageDecoding","MissingDataException","InvalidPDFException","CMapCompressionType","ImageKind","FontType","AnnotationType","AnnotationFlag","AnnotationFieldFlag","AnnotationBorderStyleType","UNSUPPORTED_FEATURES","OPS","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","Symbol","iterator","constructor","_streams_polyfill","NONE","DECODE","DISPLAY","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","HIDDEN","PRINT","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","SOLID","DASHED","BEVELED","INSET","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RL","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","errors","BINARY","STREAM","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","smask","shadingPattern","font","NEED_PASSWORD","INCORRECT_PASSWORD","begin","end","rgbBuf","makeCssRgb","r","g","b","m1","m2","applyTransform","xt","yt","applyInverseTransform","getAxialAlignedBoundingBox","p1","p2","slice","p3","p4","max","inverseTransform","apply3dTransform","singularValueDecompose2dScale","transpose","a","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","compare","orderedX","sort","orderedY","ROMAN_NUMBER_MAP","toRoman","number","lowerCase","Number","isInteger","romanBuf","romanStr","toLowerCase","appendToArray","arr1","arr2","Array","prependToArray","unshift","extendObj","obj1","obj2","getInheritableProperty","dict","getArray","has","inherit","sub","loadScript","script","document","createElement","loaded","setAttribute","getElementsByTagName","appendChild","viewBox","scale","rotation","offsetX","offsetY","dontFlip","rotateA","rotateB","rotateC","rotateD","centerX","centerY","offsetCanvasX","offsetCanvasY","width","height","abs","fontScale","clone","convertToViewportPoint","y","convertToViewportRectangle","tl","br","convertToPdfPoint","rpad","pad","started","times","enabled","time","Date","now","timeEnd","out","longest","span","duration","contentType","Blob","type","digits","forceDataSchema","blob","b1","b2","b3","d1","d2","d3","d4","on","actionName","handler","scope","send","transfers","sendWithPromise","sendWithStream","queueingStrategy","_this2","controller","startCapability","startCall","isClosed","desiredSize","pull","pullCapability","pullCall","cancel","cancelCapability","cancelCall","_this3","sendStreamRequest","_ref","streamSink","enqueue","size","isCancelled","lastDesiredSize","sinkCapability","ready","close","onPull","onCancel","_this4","sendStreamResponse","_ref2","deleteStreamController","all","map","destroy","removeEventListener","window","__g","isEOF","EOF","isName","Name","isCmd","cmd","Cmd","isDict","Dict","isRef","Ref","isRefsEqual","v1","v2","num","gen","isStream","getBytes","nameCache","nameValue","cmdCache","cmdValue","xref","_map","objId","suppressEncryption","__nonSerializable__","nonSerializable","assignXref","newXref","key1","key2","key3","fetchIfRef","getAsync","fetchIfRefAsync","isArray","fetch","getRaw","getKeys","keys","forEach","empty","merge","dictArray","mergedDict","keyName","RefSet","ref","put","remove","RefSetCache","putAlias","aliasRef","clear","it","store","uid","_Symbol","USE_SYMBOL","$exports","LZWStream","StringStream","StreamsSequenceStream","Stream","RunLengthStream","PredictorStream","NullStream","JpxStream","JpegStream","FlateStream","DecodeStream","DecryptStream","AsciiHexStream","Ascii85Stream","_util","_primitives","_jpg","_jpx","arrayBuffer","isEmpty","getByte","getUint16","b0","getInt32","strEnd","peekByte","peekedByte","peekBytes","skip","reset","moveStart","makeSubStream","maybeMinBufferLength","bufferLength","eof","emptyBuffer","minBufferLength","readBlock","ensureBuffer","requested","buffer2","bufEnd","getBaseStreams","streams","shift","newLength","baseStreams","maybeLength","cmf","flg","codeSize","codeBuf","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","getBits","bits","getCode","table","codes","maxLen","codeLen","codeVal","generateHuffmanTable","lengths","len","val","code2","t","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","bitsLength","bitsOffset","what","codeLengths","repeatLength","limit","code1","dist","k","blockLen","check","params","predictor","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","rawBytes","inbuf","outbuf","inbits","outbits","bytesPerPixel","sum","compArray","bitMask","j","kk","prevRow","up","upLeft","left","pa","pb","pc","req","jpegImage","JpegImage","decodeArr","forceRGB","bitsPerComponent","decodeArrLength","transformNeeded","maxValue","decodeTransform","colorTransform","parse","getData","drawWidth","drawHeight","getIR","jpxImage","JpxImage","componentsCount","tileCount","tiles","items","Uint8ClampedArray","tileComponents","tileWidth","tileHeight","tileLeft","tileTop","top","srcPosition","dataPosition","imgRowSize","tileRowSize","decrypt","nextChunk","initialized","chunkSize","hasMoreData","input","TILDA_CHAR","Z_LOWER_CHAR","firstDigit","UPSTREAM_BLOCK_SIZE","maxDecodeLength","digit","repeatHeader","source","earlyChange","cachedData","bitsCached","maxLzwDictionarySize","lzwState","codeLength","nextCode","dictionaryValues","dictionaryLengths","Uint16Array","dictionaryPrevCodes","currentSequence","currentSequenceLength","readBits","lastCode","q","blockSize","estimatedDecodedSize","decodedSizeDelta","prevCode","decodedLength","currentBufferLength","hasPrev","core","version","__e","hide","redefine","ctx","PROTOTYPE","$export","own","exp","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","P","IS_BIND","B","target","expProto","U","W","R","dP","createDesc","f","isObject","TypeError","exec","aFunction","that","toInteger","anObject","IE8_DOM_DEFINE","toPrimitive","O","Attributes","SRC","TO_STRING","$toString","TPL","split","inspectSource","safe","isFunction","px","random","concat","ceil","floor","isNaN","defined","Constructor","forbiddenField","def","TAG","tag","stat","ColorSpace","resizeRgbImage","bpc","w1","h1","w2","h2","alpha01","dest","COMPONENTS","py","oldIndex","xRatio","yRatio","newIndex","xScaled","w1Scanline","getRgb","srcOffset","rgb","getRgbItem","destOffset","getRgbBuffer","count","getOutputLength","inputLength","isPassthrough","fillRgb","originalWidth","originalHeight","actualHeight","comps","numComponentColors","needsResizing","numComps","allColors","colorMap","destPos","rgbPos","usesZeroToOneRange","cs","res","pdfFunctionFactory","IR","parseToIR","fromIR","whitePoint","blackPoint","gamma","singletons","gray","cmyk","CalGrayCS","matrix","CalRGBCS","basePatternCS","PatternCS","baseIndexedCS","hiVal","IndexedCS","alt","tintFn","AlternateCS","range","LabCS","colorSpaces","refcs","mode","altIR","altCS","isDefaultDecode","decode","DeviceGrayCS","DeviceRgbCS","DeviceCmykCS","defaultColor","Float32Array","tmpBuf","baseNumComps","baseBuf","scaled","tinted","decodeMap","baseCS","highVal","outputDelta","lookupPos","convertToRgb","srcScale","XW","YW","ZW","XB","YB","ZB","A","AG","pow","L","GR","GG","GB","MXA","MYA","MZA","MXB","MYB","MZB","MXC","MYC","MZC","matrixProduct","convertToFlat","sourceWhitePoint","LMS","convertToD65","D65X","D65Y","D65Z","sRGBTransferFunction","color","adjustToRange","decodeL","DECODE_L_CONSTANT","compensateBlackPoint","sourceBlackPoint","XYZ_Flat","zeroDecodeL","X_DST","X_SRC","Y_DST","Y_SRC","Z_DST","Z_SRC","X_Scale","X_Offset","Y_Scale","Y_Offset","Z_Scale","Z_Offset","normalizeWhitePointToFlat","XYZ_In","BRADFORD_SCALE_MATRIX","LMS_Flat","tempNormalizeMatrix","BRADFORD_SCALE_INVERSE_MATRIX","normalizeWhitePointToD65","LMS_D65","C","AGR","BGG","CGB","X","Y","Z","XYZ","tempConvertMatrix1","tempConvertMatrix2","XYZ_Black","XYZ_D65","FLAT_WHITEPOINT_MATRIX","SRGB","SRGB_D65_XYZ_TO_RGB_MATRIX","sR","sG","sB","round","amin","amax","bmin","bmax","fn_g","high1","low2","high2","maxVal","Ls","as","bs","M","N","getEncoding","encodingName","WinAnsiEncoding","StandardEncoding","MacRomanEncoding","SymbolSetEncoding","ZapfDingbatsEncoding","ExpertEncoding","MacExpertEncoding","bitmap","IObject","index","cof","ARG","tryGet","T","callee","isArrayIter","toLength","getIterFn","BREAK","RETURN","_exports","iterable","entries","ITERATOR","step","iterFn","next","done","Parser","Linearization","Lexer","_stream","_ccitt_stream","_jbig2_stream","MAX_LENGTH_TO_CACHE","lexer","allowStreams","recoveryMode","imageCache","refill","buf1","getObj","buf2","tryShift","cipherTransform","makeInlineImage","array","makeStream","decryptString","findDefaultInlineStreamEnd","E","I","SPACE","LF","CR","NUL","startPos","state","maybeEIPos","followingBytes","findDCTDecodeInlineStreamEnd","markerLength","foundEOI","inlineStreamSkipEI","findASCII85DecodeInlineStreamEnd","TILDE","GT","findASCIIHexDecodeInlineStreamEnd","filterName","filter","filterZero","adler32","imageStream","imageBytes","cacheEntry","createStream","cacheKey","skipToNextLine","nextChar","SCAN_BLOCK_SIZE","ENDSTREAM_SIGNATURE_LENGTH","ENDSTREAM_SIGNATURE","skipped","found","scanBytes","scanLength","makeFilter","filterArray","paramsArray","xrefStreamStats","stats","streamTypes","CCITTFaxStream","Jbig2Stream","knownCommands","toHexDigit","specialChars","currentChar","peekChar","getNumber","eNotation","divideBy","sign","baseValue","powerValue","powerValueSign","currentDigit","getString","numParen","charBuffered","getName","previousCh","x2","getHexString","secondDigit","isFirstHex","comment","knownCommandFound","possibleCommand","getInt","allowZeroValue","linDict","getHints","hintsLength","hints","parser","obj3","objectNumberFirst","endFirst","numPages","mainXRefEntriesOffset","pageFirst","is","valueOf","propertyIsEnumerable","shared","$keys","enumBugKeys","toObject","asc","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","$this","callbackfn","SPECIES","D","SAFE_CLOSING","riter","from","skipClosing","iter","PromiseCapability","$$resolve","$$reject","META","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","w","fastKey","getWeak","onFreeze","meta","NEED","KEY","getGlyphsUnicode","getDingbatsGlyphsUnicode","Typed","TYPED","VIEW","ABV","ArrayBuffer","DataView","CONSTR","TypedArrayConstructors","RangeError","hiddenKeys","getOwnPropertyNames","toIObject","arrayIndexOf","IE_PROTO","names","toAbsoluteIndex","IS_INCLUDES","el","fromIndex","SHARED","copyright","aLen","endPos","Iterators","ArrayProto","dPs","Empty","_createDict","iframeDocument","iframe","lt","gt","style","display","contentWindow","open","write","Properties","documentElement","ObjectProto","getPrototypeOf","classof","getIteratorMethod","addToUnscopables","iterated","kind","_t","_i","_k","Arguments","LIBRARY","$iterCreate","setToStringTag","BUGGY","FF_ITERATOR","KEYS","VALUES","returnThis","Base","NAME","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","values","DESCRIPTORS","pIE","gOPD","getOwnPropertyDescriptor","test","$iterators","wks","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","defer","channel","port","invoke","html","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","queue","ONREADYSTATECHANGE","run","listener","nextTick","port2","port1","onmessage","importScripts","removeChild","setTimeout","newPromiseCapability","promiseCapability","ChunkedStreamManager","ChunkedStream","manager","loadedChunks","numChunksLoaded","numChunks","progressiveDataLength","lastSuccessfulEnsureByteChunk","getMissingChunks","chunks","allChunksLoaded","onReceiveData","curChunk","beginChunk","endChunk","onReceiveProgressiveData","position","ensureByte","ensureRange","nextEmptyChunk","hasChunk","getByteRange","ChunkedStreamSubstream","missingChunks","subStream","pdfNetworkStream","rangeChunkSize","disableAutoFetch","msgHandler","currRequestId","chunksNeededByRequest","requestsByChunk","promisesByRequest","aborted","_loadedStreamCapability","onLoadedStream","sendRequest","rangeReader","getRangeReader","isStreamingSupported","onProgress","bind","readChunk","read","chunkData","requestAllChunks","_requestChunks","requestId","chunksNeeded","chunksToRequest","groupedChunksToRequest","groupChunks","groupedChunk","getStream","requestRange","getBeginChunk","getEndChunk","requestRanges","ranges","indexOf","groupedChunks","prevChunk","bytesLoaded","total","isProgressive","loadedRequests","requestIds","lastChunk","onError","err","abort","cancelAllRequests","FileSpec","XRef","ObjectLoader","Catalog","_slicedToArray","sliceIterator","_arr","_n","_d","_e","_s","_parser","_chunked_stream","_crypto","_colorspace","pdfManager","pageFactory","catDict","getCatalogObj","fontCache","builtInCMapCache","pageKidsCountCache","pagePromises","metadata","streamRef","encryptMetadata","encrypt","subtype","toplevelPagesDict","pagesObj","documentOutline","readDocumentOutline","parent","processed","blackColor","outlineDict","parseDestDictionary","destDict","resultObj","docBaseUrl","title","flags","rgbColor","outlineItem","unsafeUrl","newWindow","bold","italic","destinations","fetchDestination","nameTreeRef","nameDictionaryRef","dests","nameTree","NameTree","getAll","getDestination","destinationId","pageLabels","readPageLabels","prefix","numberTree","NumberTree","nums","currentLabel","currentIndex","labelDict","st","LIMIT","A_UPPER_CASE","A_LOWER_CASE","baseCharCode","letterIndex","character","charBuf","jj","pageMode","attachments","fs","serializable","appendIfJavaScriptDict","jsDict","js","openactionDict","actionType","cleanup","promises","translatedFonts","translated","getPage","pageIndex","getPageDict","createPage","nodesToVisit","currentNode","pop","currentPageIndex","fetchAsync","kids","last","getPageIndex","pageRef","pagesBeforeRef","kidRef","parentRef","node","kidPromises","kid","addDefaultProtocolToUrl","tryConvertUrlEncoding","urlDict","remoteDest","JSON","stringify","namedAction","jsAction","URL_OPEN_METHODS","regex","RegExp","jsUrl","href","xrefstms","cache","fontTypes","setStartXRef","startXRef","startXRefQueue","trailerDict","indexObjects","readXRef","trailer","ids","fileId","CipherTransformFactory","password","processXRefTable","tableState","entryNum","streamPos","parserBuf1","parserBuf2","readXRefTable","firstEntryNum","entryCount","entry","free","uncompressed","processXRefStream","streamParameters","byteWidths","streamState","entryRanges","readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","splice","readToken","token","LT","skipUntil","dataLength","TAB","PERCENT","objRegExp","trailerBytes","startxrefBytes","endobjBytes","xrefBytes","trailers","xrefStms","contentLength","content","xrefTagOffset","startXRefParsedCache","topDict","getEntry","xrefEntry","fetchUncompressed","fetchCompressed","parseInt","substring","createCipherTransform","tableOffset","streamManager","tryFetch","NameOrNumberTree","_type","kidsOrEntries","loopCount","MAX_LEVELS","limits","currentKey","description","contentAvailable","pickPlatformItem","filename","_filename","contentRef","fileObj","mayHaveChildren","addChildren","dictKeys","rawValue","_ii","refSet","load","_walk","nodesToRevisit","pendingRequests","foundMissingData","_i2","_ii2","_arithmetic_decoder","JpxError","failOnCorruptedImage","calculateComponentDimensions","component","siz","x0","XOsiz","XRsiz","x1","Xsiz","y0","YOsiz","YRsiz","y1","Ysiz","calculateTileGrids","context","components","tile","SIZ","numXtiles","XTOsiz","XTsiz","numYtiles","YTOsiz","YTsiz","tx0","ty0","tx1","ty1","Csiz","tileComponent","tcx0","tcy0","tcx1","tcy1","getBlocksDimensions","codOrCoc","codingStyleParameters","entropyCoderWithCustomPrecincts","PPx","precinctsSizes","PPy","xcb_","xcb","ycb_","ycb","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblock","precinctNumber","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","pi","pj","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","LayerResolutionComponentPositionIterator","tileIndex","currentTile","layersCount","codingStyleDefaultParameters","maxDecompositionLevelsCount","decompositionLevelsCount","nextPacket","resolutions","packet","ResolutionLayerComponentPositionIterator","ResolutionPositionComponentLayerIterator","maxNumPrecinctsInLevel","maxNumPrecincts","PositionComponentResolutionLayerIterator","getPrecinctSizesInImageScale","precinctsIterationSizes","maxNumHigh","maxNumWide","sizeInImageScale","getPrecinctIndexIfExist","ComponentPositionResolutionLayerIterator","pxIndex","pyIndex","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","MAX_VALUE","sizePerComponent","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","widthCurrentResolution","heightCurrentResolution","buildPackets","blocksDimensions","bscale","resolutionSubbands","progressionOrder","packetsIterator","parseTilePackets","bufferSize","skipNextBit","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","sopMarkerUsed","COD","ephMarkerUsed","valueReady","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","incrementValue","nextLevel","included","zeroBitPlanes","codingpasses","codingpassesLog2","codedDataLength","packetItem","copyCoefficients","coefficients","levelWidth","levelHeight","delta","mb","reversible","segmentationSymbolUsed","right","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","dataItem","totalLength","encodedData","decoder","ArithmeticDecoder","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","nb","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","interleave","row","levelOffset","transformTile","quantizationParameters","spqcds","SPqcds","scalarExpounded","guardBits","precision","reversibleTransformation","ReversibleTransform","IrreversibleTransform","subbandCoefficients","mu","epsilon","gainLog2","SubbandsGainLog2","calculate","transformComponents","resultImages","transformedTiles","y2","tile0","multipleComponentTransform","fourComponents","y0items","y1items","y2items","y3items","component0","initializeTile","qcdOrQcc","QCC","QCD","COC","LL","LH","HL","HH","head","parseCodestream","headerSize","lbox","tbox","jumpDataLength","method","colorspace","headerType","parseImageProperties","newByte","oldByte","doNotRecover","sqcd","spqcdSize","mainHeader","isSigned","qcd","noQuantization","spqcd","qcc","cqcc","cod","scod","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticalyStripe","predictableTermination","precinctsSize","unsupported","dataEnd","partIndex","partsCount","levelsLength","levels","currentLevel","defaultValue","stopValue","propagateValues","levelIndex","currentValue","contextLabelTable","HHContextLabel","HLContextLabel","LLAndLHContextsLabel","coefficientCount","neighborsSignificance","processingFlags","UNIFORM_CONTEXT","RUNLENGTH_CONTEXT","contexts","Int8Array","setNeighborsSignificance","column","labels","processedInverseMask","processedMask","firstMagnitudeBitMask","i0","i1","contextLabel","decision","readBit","decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","indexNext","width4","index0","significance","bit","iNext","oneRowDown","twoRowsDown","threeRowsDown","indexBase","checkAllEmpty","allEmpty","hasSignificantCoefficent","i2","symbol","Transform","u0","v0","ll","iterate","extend","j1","j2","hl_lh_hh","u","llWidth","llHeight","llItems","bufferPadding","rowBuffer","numBuffers","colBuffers","currentBuffer","current","alpha","beta","K","K_","bp","chigh","clow","byteIn","ct","QeTable","qe","nmps","nlps","switchFlag","cx_index","cx_mps","qeTableIcx","qeIcx","calculateSHA512","calculateSHA384","calculateSHA256","calculateMD5","PDF20","PDF17","ARCFourCipher","AES256Cipher","AES128Cipher","tmp","keyLength","encryptBlock","tmp2","output","decryptBlock","hash","h0","h3","paddedLength","padded","rotateArg","rotate","Word64","highInteger","lowInteger","high","low","and","word","xor","or","shiftRight","places","shiftLeft","rotateRight","not","add","lowAdd","highAdd","copyTo","assign","rotr","z","maj","sigma","sigmaPrime","littleSigma","littleSigmaPrime","h4","h5","h6","h7","t1","t2","h","mode384","tmp3","tmp1","NullCipher","expandKey128","cipherKey","t3","t4","rcon","decrypt128","inv_s","s0","mix","s1","s2","s3","encrypt128","mixCol","bufferPosition","decryptBlock2","sourceLength","iv","plain","outputLength","lastBlock","psLen","cipher","expandKey256","decrypt256","encrypt256","compareByteArrays","array1","array2","checkOwnerPassword","ownerValidationSalt","userBytes","ownerPassword","hashData","checkUserPassword","userValidationSalt","userPassword","getOwnerKey","ownerKeySalt","ownerEncryption","getUserKey","userKeySalt","userEncryption","concatArrays","calculatePDF20Hash","arrayLength","k1","remainder","concatBytes","CipherTransform","stringCipherConstructor","streamCipherConstructor","StringCipherConstructor","StreamCipherConstructor","createEncryptionKey20","revision","uBytes","perms","passwordLength","pdfAlgorithm","prepareKeyData","hashDataSize","defaultPasswordBytes","keyLengthInBytes","checkData","encryptionKey","derivedKey","decodeUserPassword","algorithm","cfDict","streamCryptoName","handlerDict","passwordBytes","fileIdBytes","decodedPassword","cf","stmf","identityName","strf","eff","buildObjectKey","isAes","buildCipherConstructor","cfm","cryptFilter","cipherConstructor","PartialEvaluator","OperatorList","_cmap","_fonts","_encodings","_unicode","_standard_fonts","_pattern","_bidi","_glyphlist","_metrics","_function","_murmurhash","_image","NativeImageDecoder","resources","_ref$forceDataSchema","idFactory","_ref2$options","options","DefaultPartialEvaluatorOptions","fetchBuiltInCMap","cachedCMap","compressionType","TimeSlotManager","normalizeBlendMode","maxImageSize","disableFontFace","nativeImageDecoderSupport","ignoreErrors","canDecode","image","isDecodable","colorSpace","decodePromise","isSupported","TIME_SLOT_DURATION_MS","CHECK_TIME_EVERY","checked","endTime","deferred","TILING_PATTERN","SHADING_PATTERN","newOptions","newEvaluator","hasBlendModes","nodes","graphicStates","graphicStatesKeys","graphicState","bm","xObjects","xObjectsKeys","xObject","xResources","buildFormXObject","xobj","operatorList","task","initialState","bbox","group","groupOptions","isolated","knockout","groupSubtype","backdrop","addOp","getOperatorList","buildPaintImageXObject","inline","imgData","imageMask","bitStrideLength","imgArray","PDFImage","createMask","imageIsFromDecodeStream","inverseDecode","cached","softMask","mask","SMALL_IMAGE_DIMENSIONS","imageObj","createImageData","createObjId","addDependency","nativeImageDecoder","buildImage","nativeDecoder","handleSMask","stateManager","smaskContent","smaskOptions","transferObj","isPDFFunction","transferFn","transferMap","handleTilingType","pattern","patternDict","tilingOpList","resourcesArray","patternResources","getTilingPatternIR","fnArray","argsArray","tilingPatternIR","addDependencies","dependencies","featureId","handleSetFont","fontArgs","fontRef","fontName","loadFont","isType3Font","loadType3Data","TranslatedFont","ErrorFont","loadedName","handleText","chars","_this5","glyphs","charsToGlyphs","isAddToPathSet","textRenderingMode","buildPath","fontChar","renderer","hasBuiltPath","path","getPathJs","glyph","accent","gState","_this6","gStateObj","gStateKeys","_loop","errorFont","_this7","fontRes","fontID","fontCapability","preEvaluatedFont","preEvaluateFont","descriptor","fontRefIsRef","fontAliases","aliasFontRef","Font","getFontID","docId","translatedPromise","translateFont","translatedFont","fontType","xrefFontStats","fontFile3","getFontType","lastIndex","opArgs","handleColorN","patterns","patternName","typeNum","shading","Pattern","parseShading","_ref3","closePendingRestoreOPS","argument","preprocessor","savedStatesDepth","_this8","_ref3$initialState","EvalState","xobjs","StateManager","EvaluatorPreprocessor","timeSlotManager","promiseBody","ensureNotTerminated","stop","operation","resolveXObject","rejectXObject","fontSize","combinedGlyphs","arrLength","arrItem","fillColorSpace","strokeColorSpace","shadingRes","patternIR","dictName","extGState","getTextContent","_ref4","ensureTextContentItem","textContentItem","textState","seenStyles","textContent","styles","fontFamily","fallbackName","ascent","descent","vertical","tsm","textHScale","textRise","fontMatrix","glyphHeight","trm","ctm","textMatrix","textLineMatrix","scaleLineX","scaleCtmX","textAdvanceScale","lastAdvanceWidth","lastAdvanceHeight","spaceWidth","fakeSpaceMin","SPACE_FACTOR","fakeMultiSpaceMin","MULTI_SPACE_FACTOR","fakeMultiSpaceMax","MULTI_SPACE_FACTOR_MAX","textRunBreakAllowed","isMonospace","Infinity","replaceWhitespace","WhitespaceRegexp","runBidiTransform","textChunk","bidiResult","bidi","normalizeWhitespace","dir","buildTextContentItem","glyphWidth","vmetric","glyphUnicode","unicode","NormalizedUnicodes","getNormalizedUnicodes","reverseIfRtl","charSpacing","wordSpacing","addFakeSpaces","tx","ty","w0","translateTextMatrix","fakeSpaces","flushTextContentItem","enqueueChunk","sink","_this9","_ref4$stateManager","_ref4$normalizeWhites","_ref4$combineTextItem","combineTextItems","_ref4$seenStyles","TextState","skipEmptyXObjs","advance","diff","fontNameArg","fontSizeArg","leading","isSameTextLine","translateTextLineMatrix","carriageReturn","calcTextLineMatrixAdvance","setTextLineMatrix","breakTextRun","currentState","xObjStateManager","sinkWrapper","enqueueInvoked","gStateFont","extractDataStructures","baseDict","properties","_this10","toUnicode","toUnicodePromise","readToUnicode","composite","cidSystemInfo","registry","ordering","supplement","cidToGidMap","readCidToGidMap","encoding","differences","baseEncodingName","diffEncoding","defaultEncoding","isSymbolicFont","FontFlags","Symbolic","isNonsymbolicFont","Nonsymbolic","file","hasEncoding","buildToUnicode","hasIncludedToUnicodeMap","charcode","glyphName","glyphsUnicodeMap","substr","getUnicodeForGlyph","baseEncoding","ToUnicodeMap","cMap","builtInCMap","IdentityCMap","ucs2CMapName","CMapFactory","useCMap","ucs2CMap","cid","ucs2","IdentityToUnicodeMap","firstChar","lastChar","cmapObj","cmap","getMap","charCode","cidToGidStream","glyphsData","glyphID","extractWidths","defaultVMetrics","widths","glyphsWidths","defaultWidth","glyphsVMetrics","vmetrics","parseFloat","baseFontName","metrics","getBaseFontMetrics","buildCharCodeToWidth","firstWidth","FixedPitch","isSerifFont","fontNameWoStyle","getSerifFonts","search","monospace","stdFontMap","getStdFontMap","lookupName","Metrics","getMetrics","glyphWidths","widthsByGlyphName","uint8array","df","MurmurHash3_64","update","diffLength","diffBuf","diffEntry","hexdigest","_this11","maxCharIndex","Serif","getSymbolsFonts","baseFont","fontNameStr","baseFontStr","fontFile","length1","length2","length3","wideChars","fixedPitch","xHeight","capHeight","italicAngle","cMapPromise","cidEncoding","type3Loaded","sent","fontData","exportData","evaluator","parentOperatorList","type3Options","type3Evaluator","loadCharProcsPromise","charProcs","fontResources","charProcKeys","charProcOperatorList","_loop2","glyphStream","getTransfers","arg","intent","messageHandler","_totalLength","CHUNK_SIZE","CHUNK_SIZE_ABOUT","flush","addOpList","opList","QueueOptimizer","optimize","stateStack","old","prev","txDiff","tyDiff","denominator","calcRenderMatrix","opMap","getOPMap","nonProcessedArgs","numArgs","variableArgs","opSpec","argsLength","preprocessCommand","addState","parentState","handlePaintSolidColorImageMask","iFirstSave","iFirstPIMXO","InitialState","MIN_IMAGES_IN_INLINE_IMAGES_BLOCK","MAX_IMAGES_IN_INLINE_IMAGES_BLOCK","MAX_WIDTH","IMAGE_PADDING","curr","iCurr","iFirstTransform","iFirstPIIXO","maxX","maxLineHeight","currentX","currentY","imgWidth","imgHeight","rowSize","dataOffset","MIN_IMAGES_IN_MASKS_BLOCK","MAX_IMAGES_IN_MASKS_BLOCK","MAX_SAME_IMAGES_IN_MASKS_BLOCK","iTransform","transformArgs","isSameImage","firstPIMXOArg0","firstTransformArg0","firstTransformArg3","iPIMXO","positions","images","maskParams","MIN_IMAGES_IN_BLOCK","MAX_IMAGES_IN_BLOCK","iFirstPIXO","iFirstRestore","firstPIXOArg0","MIN_CHARS_IN_BLOCK","MAX_CHARS_IN_BLOCK","iFirstBeginText","iFirstSetFont","iFirstSetTextMatrix","iFirstShowText","iFirstEndText","firstSetFontArg0","firstSetFontArg1","iFirst","iEndText","CFFCompiler","CFFPrivateDict","CFFTopDict","CFFCharset","CFFIndex","CFFStrings","CFFHeader","CFF","CFFParser","CFFStandardStrings","_charsets","MAX_SUBR_NESTING","seacAnalysisEnabled","CharstringValidationData","stackClearing","stem","resetStack","undefStack","CharstringValidationData12","stackDelta","stackFn","stack","cff","header","parseHeader","nameIndex","parseIndex","topDictIndex","stringIndex","globalSubrIndex","topDictParsed","parseDict","createDict","strings","parseNameIndex","parseStringIndex","parsePrivateDict","isCIDFont","hasName","charStringOffset","getByName","charStringIndex","fontBBox","ascentScaled","charset","fdArrayIndex","dictRaw","fontDict","fdArray","parseCharsets","fdSelect","parseFDSelect","parseEncoding","charStringsAndSeacs","parseCharStrings","charStrings","localSubrIndex","privateDict","subrsIndex","seacs","bytesLength","major","minor","hdrSize","offSize","parseOperand","parseFloatOperand","NaN","operands","cffIndex","offsets","offsetSize","offsetStart","offsetEnd","Type","cffDict","pair","setByKey","parseCharString","callDepth","stackSize","validationCommand","seac","bias","subrNumber","valid","firstStackClearing","charstring","localSubrToUse","privateDictToUse","fdIndex","getFDIndex","nominalWidth","emptyPrivateDictionary","parentDict","privateOffset","removeByName","privateDictEnd","dictData","subrsOffset","relativeOffset","CFFCharsetPredefinedTypes","ISO_ADOBE","ISOAdobeCharset","EXPERT","ExpertCharset","EXPERT_SUBSET","ExpertSubsetCharset","format","raw","readSupplement","supplementsCount","sid","predefined","dataStart","glyphsCount","rangesCount","gid","CFFEncoding","invalidFirstGID","CFFFDSelect","objects","CFFDict","tables","keyToNameMap","nameToKeyMap","defaults","types","opcodes","order","valueLength","setByName","createTables","layout","glyphIndex","CFFOffsetTracker","isTracking","track","location","setEntryLocation","offset0","offset1","offset2","offset3","offset4","compile","compileHeader","compileNameIndex","subDict","compiled","compileTopDicts","topDictTracker","trackers","compileStringIndex","compileIndex","compileEncoding","compileCharset","compileCharStrings","compileFDSelect","fontDictTrackers","compilePrivateDicts","encodeNumber","encodeFloat","encodeInteger","nibbles","sanitizedName","char","dicts","removeCidKeys","fontDictTracker","fontDictData","compileDict","privateDictTracker","privateDictData","subrs","offsetTracker","compileGlobalSubrIndex","writeByteArray","compileTypedArray","lastOffset","getSupplementalGlyphMapForArialBlack","getGlyphMapForStandardFonts","getNonStdFontMap","mapSpecialUnicodeValues","getSpecialPUASymbols","hexStr","nameLen","toUpperCase","getUnicodeRangeFor","UnicodeRanges","isRTLRangeFor","charsLength","_classCallCheck","instance","toNumberArray","fnDict","PostScriptCompiler","PostScriptEvaluator","PDFFunctionFactory","_createClass","defineProperties","props","protoProps","staticProps","_ps_parser","IsEvalSupportedCached","_ref$isEvalSupported","PDFFunction","fnObj","parseArray","CONSTRUCT_SAMPLED","CONSTRUCT_INTERPOLATED","CONSTRUCT_STICHED","CONSTRUCT_POSTSCRIPT","getSampleArray","outputSize","bps","sampleMul","strBytes","strIdx","constructSampled","constructInterpolated","constructStiched","constructPostScript","typeFn","constructSampledFromIR","constructInterpolatedFromIR","constructStichedFromIR","constructPostScriptFromIR","_ref5","_ref6","toMultiArray","domain","inputSize","encode","samples","_ref7","interpolate","xmin","xmax","ymin","ymax","cubeVertices","cubeN","Float64Array","cubeVertex","domain_2i","domain_2i_1","xi","size_i","e0","n0","n1","rj","_ref8","c0","c1","_ref9","_ref10","fnRefs","fns","bounds","_ref11","dmin","dmax","rmin","rmax","_ref12","PostScriptLexer","PostScriptParser","_ref13","numOutputs","numInputs","MAX_CACHE_SIZE","cache_available","cachedValue","execute","stackIndex","bound","PostScriptStack","initialStack","MAX_STACK_SIZE","copy","roll","operators","operator","atan","cos","LN10","sin","AstNode","AstArgument","AstLiteral","AstBinaryOperation","op","arg1","arg2","AstMin","AstVariable","AstVariableDefinition","variable","ExpressionBuilderVisitor","parts","buildAddOperation","num1","num2","buildMulOperation","buildSubOperation","buildMinOperation","visit","visitor","visitArgument","visitLiteral","visitBinaryOperation","visitMin","visitVariable","visitVariableDefinition","literal","definition","ast1","ast2","tmpVar","instructions","lastRegister","instruction","statementBuilder","expr","pdfjsCoreWorker","WorkerMessageHandler","isMessagePort","maybePort","WorkerTask","_pdf_manager","terminated","_capability","finished","finish","terminate","PDFWorkerStream","_msgHandler","_contentLength","_fullRequestReader","_rangeRequestReaders","PDFWorkerStreamReader","_isRangeSupported","_isStreamingSupported","readableStream","_reader","getReader","_headersReady","isRangeSupported","PDFWorkerStreamRangeReader","getFullReader","reader","readers","headersReady","setup","testMessageProcessed","supportTransfers","xhr","XMLHttpRequest","responseExists","responseType","supportTypedArray","createDocumentHandler","docParams","startWorkerTask","WorkerTasks","finishWorkerTask","loadDocument","loadDocumentCapability","parseSuccess","numPagesPromise","ensureDoc","fingerprintPromise","encryptedPromise","ensureXRef","results","doc","fingerprint","encrypted","parseFailure","getPdfManager","evaluatorOptions","pdfManagerCapability","LocalPdfManager","pdfStream","cachedChunks","fullRequest","NetworkPdfManager","sendProgressiveData","cancelXHRs","flushChunks","pdfFile","readPromise","setupDoc","onSuccess","pdfInfo","onFailure","updatePassword","pdfManagerReady","requestLoadedStream","disableCreateObjectURL","newPdfManager","apiVersion","workerVersion","workerHandlerName","page","rotatePromise","ensure","refPromise","userUnitPromise","viewPromise","userUnit","view","catalog","pdfDocument","ensureCatalog","pageNum","renderInteractiveForms","wrappedException","minimumStackMessage","extractTextContent","waitOn","initializeFromPort","PDFJS","compatibilityChecked","globalScope","userAgent","navigator","isAndroid","isAndroidPre3","isAndroidPre5","isChrome","isChromeWithRangeBug","isIOSChrome","isIE","isIOS","isOpera","isSafari","hasDOM","TypedArray","setArrayOffset","Uint32ArrayView","ensureUint32ArrayViewProps","createUint32ArrayProp","uint32ArrayViewSetters","CanvasPixelArray","cpaProto","webkitURL","definePropertyPossible","Test","__defineGetter__","__defineSetter__","xhrPrototype","mimeType","_responseType","overrideMimeType","VBArray","responseBody","toArray","responseText","text","btoa","atob","bc","idx","headArgs","div","HTMLElement","_dataset","dataset","attributes","attribute","changeList","element","itemName","className","list","classListPrototype","contains","toggle","_classList","classList","consoleTimer","workerConsole","ignoreIfTargetDisabled","isDisabled","stopPropagation","disabled","parentNode","locale","userLanguage","disableRange","disableStream","history","pushState","disableHistory","versionMatch","polyfill","match","contextPrototype","CanvasRenderingContext2D","imageData","installFakeAnimationFrameFunctions","requestAnimationFrame","cancelAnimationFrame","timeoutID","clearTimeout","mozRequestAnimationFrame","webkitRequestAnimationFrame","maxCanvasPixels","disableFullscreen","scripts","inputProto","typeProperty","attachEvent","documentProto","readyStateProto","Element","WeakMap","isRelativeScheme","scheme","relative","invalid","_isInvalid","IDNAToASCII","percentEscape","percentEscapeQuery","stateOverride","cursor","seenAt","seenBracket","loop","ALPHA","ALPHANUMERIC","_scheme","_isRelative","_query","_fragment","_schemeData","_host","_port","_path","_username","_password","nextC","nextNextC","cp","tempC","temp","relativePathDotMapping","JURL","_url","hasWorkingUrl","pathname","authority","host","hostname","_","OriginalURL","revokeObjectURL","init","byteOffset","fails","$typed","$buffer","anInstance","propertyDesc","redefineAll","toIndex","gOPN","createArrayMethod","createArrayIncludes","speciesConstructor","ArrayIterators","$iterDetect","setSpecies","arrayFill","arrayCopyWithin","$DP","$GOPD","ARRAY_BUFFER","SHARED_BUFFER","BYTES_PER_ELEMENT","$ArrayBuffer","$DataView","arrayForEach","arrayFilter","arraySome","arrayEvery","arrayFind","arrayFindIndex","arrayIncludes","arrayValues","arrayKeys","arrayEntries","arrayLastIndexOf","lastIndexOf","arrayReduce","reduce","arrayReduceRight","reduceRight","arrayJoin","arraySort","arraySlice","arrayToString","arrayToLocaleString","toLocaleString","TYPED_CONSTRUCTOR","DEF_CONSTRUCTOR","ALL_CONSTRUCTORS","TYPED_ARRAY","WRONG_LENGTH","$map","allocate","LITTLE_ENDIAN","FORCED_SET","toOffset","BYTES","validate","speciesFromList","fromList","addGetter","internal","$from","mapfn","mapping","$of","TO_LOCALE_BUG","$toLocaleString","copyWithin","every","find","predicate","findIndex","searchElement","includes","separator","reverse","middle","some","comparefn","$begin","$slice","$set","arrayLike","isTAIndex","$getDesc","$setDesc","desc","$TypedArrayPrototype$","wrapper","CLAMPED","GETTER","SETTER","TAC","TypedArrayPrototype","setter","addElement","$offset","$length","klass","$len","$nativeIterator","CORRECT_ITER_NAME","$iterator","of","packIEEE754","mLen","nBytes","eLen","eMax","eBias","rt","LN2","unpackIEEE754","nBits","unpackI32","packI8","packI16","packI32","packF64","packF32","numIndex","intIndex","$LENGTH","WRONG_INDEX","$BUFFER","_b","$OFFSET","pack","conversion","DATA_VIEW","BaseBuffer","BUFFER","BYTE_LENGTH","BYTE_OFFSET","ArrayBufferProto","$setInt8","setInt8","getInt8","setUint8","getUint8","getInt16","getUint32","getFloat32","getFloat64","setInt16","setUint16","setInt32","setUint32","setFloat32","setFloat64","original","UNSCOPABLES","to","inc","isFinite","$at","point","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","forOf","microtask","newPromiseCapabilityModule","perform","promiseResolve","PROMISE","versions","v8","$Promise","isNode","USE_NATIVE","FakePromise","PromiseRejectionEvent","isThenable","notify","isReject","chain","_c","_v","ok","reaction","exited","fail","_h","onHandleUnhandled","enter","exit","onUnhandled","unhandled","isUnhandled","emit","onunhandledrejection","_a","onrejectionhandled","$reject","_w","$resolve","executor","onFulfilled","onRejected","remaining","$index","alreadyCalled","race","ret","un","macrotask","Observer","MutationObserver","WebKitMutationObserver","standalone","createTextNode","observe","characterData","finally","onFinally","try","InternalMap","each","weak","WEAK_MAP","uncaughtFrozenStore","ufstore","$WeakMap","freeze","getConstructor","_f","gOPS","$assign","getSymbols","isEnum","getOwnPropertySymbols","$has","_l","UncaughtFrozenStore","findUncaughtFrozen","delete","ADDER","inheritIfRequired","common","IS_WEAK","fixMethod","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","BUGGY_ZERO","$instance","setStrong","setPrototypeOf","buggy","__proto__","COLLECTION","cb","mapFn","nextItem","isReadableStreamSupported","_typeof2","IsPropertyKey","Call","V","_require","typeIsObject","createDataProperty","createArrayFromList","elements","ArrayBufferCopy","CreateIterResultObject","IsFiniteNonNegativeNumber","InvokeOrNoop","PromiseInvokeOrNoop","returnValueE","PromiseInvokeOrPerformFallback","argsF","methodE","TransferArrayBuffer","ValidateAndNormalizeHighWaterMark","highWaterMark","ValidateAndNormalizeQueuingStrategy","rethrowAssertionErrorRejection","AssertionError","AcquireWritableStreamDefaultWriter","WritableStreamDefaultWriter","IsWritableStream","IsWritableStreamLocked","_writer","WritableStreamAbort","_state","_storedError","_pendingAbortRequest","wasAlreadyErroring","_resolve","_reject","_reason","_wasAlreadyErroring","WritableStreamStartErroring","WritableStreamAddWriteRequest","writeRequest","_writeRequests","WritableStreamDealWithRejection","WritableStreamFinishErroring","_writableStreamController","writer","WritableStreamDefaultWriterEnsureReadyPromiseRejected","WritableStreamHasOperationMarkedInFlight","_started","__errorSteps","storedError","WritableStreamRejectCloseAndClosedPromiseIfNeeded","abortRequest","__abortSteps","WritableStreamFinishInFlightWrite","_inFlightWriteRequest","WritableStreamFinishInFlightWriteWithError","WritableStreamFinishInFlightClose","_inFlightCloseRequest","defaultWriterClosedPromiseResolve","WritableStreamFinishInFlightCloseWithError","WritableStreamCloseQueuedOrInFlight","_closeRequest","WritableStreamMarkCloseRequestInFlight","WritableStreamMarkFirstWriteRequestInFlight","defaultWriterClosedPromiseReject","_closedPromise","WritableStreamUpdateBackpressure","backpressure","_backpressure","defaultWriterReadyPromiseReset","defaultWriterReadyPromiseResolve","IsWritableStreamDefaultWriter","WritableStreamDefaultWriterAbort","_ownerWritableStream","WritableStreamDefaultWriterClose","closeRequest","WritableStreamDefaultControllerClose","WritableStreamDefaultWriterCloseWithErrorPropagation","WritableStreamDefaultWriterEnsureClosedPromiseRejected","_closedPromiseState","defaultWriterClosedPromiseResetToRejected","_readyPromiseState","defaultWriterReadyPromiseReject","defaultWriterReadyPromiseResetToRejected","_readyPromise","WritableStreamDefaultWriterGetDesiredSize","WritableStreamDefaultControllerGetDesiredSize","WritableStreamDefaultWriterRelease","releasedError","WritableStreamDefaultWriterWrite","WritableStreamDefaultControllerGetChunkSize","defaultWriterLockException","WritableStreamDefaultControllerWrite","EnqueueValueWithSize","WritableStreamDefaultControllerAdvanceQueueIfNeeded","strategySize","_strategySize","chunkSizeE","WritableStreamDefaultControllerErrorIfNeeded","_strategyHWM","_queueTotalSize","writeRecord","enqueueE","_controlledWritableStream","WritableStreamDefaultControllerGetBackpressure","IsWritableStreamDefaultController","_queue","PeekQueueValue","WritableStreamDefaultControllerProcessClose","WritableStreamDefaultControllerProcessWrite","WritableStreamDefaultControllerError","DequeueValue","sinkClosePromise","_underlyingSink","sinkWritePromise","streamBrandCheckException","defaultWriterBrandCheckException","defaultWriterClosedPromiseInitialize","_closedPromise_resolve","_closedPromise_reject","defaultWriterClosedPromiseInitializeAsRejected","defaultWriterClosedPromiseInitializeAsResolved","defaultWriterReadyPromiseInitialize","_readyPromise_resolve","_readyPromise_reject","defaultWriterReadyPromiseInitializeAsRejected","defaultWriterReadyPromiseInitializeAsResolved","_require2","_require3","ResetQueue","WritableStream","underlyingSink","_ref$highWaterMark","WritableStreamDefaultController","__startSteps","normalizedStrategy","startResult","container","AcquireReadableStreamBYOBReader","ReadableStreamBYOBReader","AcquireReadableStreamDefaultReader","ReadableStreamDefaultReader","IsReadableStream","IsReadableStreamDisturbed","_disturbed","IsReadableStreamLocked","ReadableStreamTee","cloneForBranch2","teeState","closedOrErrored","canceled1","canceled2","reason1","reason2","create_ReadableStreamTeePullFunction","_teeState","_cloneForBranch2","cancel1","create_ReadableStreamTeeBranch1CancelFunction","cancel2","create_ReadableStreamTeeBranch2CancelFunction","underlyingSource1","branch1Stream","underlyingSource2","branch2Stream","_branch1","_readableStreamController","_branch2","ReadableStreamDefaultControllerError","branch1","branch2","ReadableStreamDefaultReaderRead","ReadableStreamDefaultControllerClose","value1","value2","ReadableStreamDefaultControllerEnqueue","compositeReason","cancelResult","ReadableStreamCancel","ReadableStreamAddReadIntoRequest","IsReadableStreamBYOBReader","readIntoRequest","_readIntoRequests","ReadableStreamAddReadRequest","IsReadableStreamDefaultReader","readRequest","_readRequests","ReadableStreamClose","sourceCancelPromise","__cancelSteps","defaultReaderClosedPromiseResolve","ReadableStreamError","defaultReaderClosedPromiseReject","ReadableStreamFulfillReadIntoRequest","ReadableStreamFulfillReadRequest","ReadableStreamGetNumReadIntoRequests","ReadableStreamGetNumReadRequests","ReadableStreamHasBYOBReader","ReadableStreamHasDefaultReader","ReadableStreamReaderGenericInitialize","_ownerReadableStream","defaultReaderClosedPromiseInitialize","defaultReaderClosedPromiseInitializeAsResolved","defaultReaderClosedPromiseInitializeAsRejected","ReadableStreamReaderGenericCancel","ReadableStreamReaderGenericRelease","defaultReaderClosedPromiseResetToRejected","ReadableStreamBYOBReaderRead","ReadableByteStreamControllerPullInto","__pullSteps","IsReadableStreamDefaultController","ReadableStreamDefaultControllerCallPullIfNeeded","shouldPull","ReadableStreamDefaultControllerShouldCallPull","_pulling","_pullAgain","pullPromise","_underlyingSource","ReadableStreamDefaultControllerErrorIfNeeded","_controlledReadableStream","_closeRequested","ReadableStreamDefaultControllerGetDesiredSize","IsReadableByteStreamController","IsReadableStreamBYOBRequest","ReadableByteStreamControllerCallPullIfNeeded","ReadableByteStreamControllerShouldCallPull","_underlyingByteSource","ReadableByteStreamControllerError","ReadableByteStreamControllerClearPendingPullIntos","ReadableByteStreamControllerInvalidateBYOBRequest","_pendingPullIntos","ReadableByteStreamControllerCommitPullIntoDescriptor","pullIntoDescriptor","bytesFilled","filledView","ReadableByteStreamControllerConvertPullIntoDescriptor","readerType","elementSize","ctor","ReadableByteStreamControllerEnqueueChunkToQueue","ReadableByteStreamControllerFillPullIntoDescriptorFromQueue","currentAlignedBytes","maxBytesToCopy","maxBytesFilled","maxAlignedBytes","totalBytesToCopyRemaining","headOfQueue","bytesToCopy","destStart","ReadableByteStreamControllerFillHeadPullIntoDescriptor","ReadableByteStreamControllerHandleQueueDrain","_byobRequest","_associatedReadableByteStreamController","_view","ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ReadableByteStreamControllerShiftPendingPullInto","emptyView","ReadableByteStreamControllerRespondInClosedState","firstDescriptor","ReadableByteStreamControllerRespondInReadableState","bytesWritten","remainderSize","ReadableByteStreamControllerRespondInternal","ReadableByteStreamControllerGetDesiredSize","ReadableByteStreamControllerClose","firstPendingPullInto","ReadableByteStreamControllerEnqueue","transferredBuffer","transferredView","ReadableByteStreamControllerRespond","ReadableByteStreamControllerRespondWithNewView","readerLockException","defaultReaderBrandCheckException","byobReaderBrandCheckException","defaultControllerBrandCheckException","byobRequestBrandCheckException","byteStreamControllerBrandCheckException","ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue","_require4","_require5","underlyingSource","typeString","ReadableByteStreamController","ReadableStreamDefaultController","readable","pipeTo","preventClose","preventAbort","preventCancel","Boolean","shuttingDown","currentWrite","pipeLoop","waitForWritesToFinish","oldCurrentWrite","isOrBecomesErrored","isOrBecomesClosed","shutdownWithAction","originalIsError","originalError","doTheRest","newError","shutdown","isError","destClosed","branches","isView","pendingPromise","ReadableStreamBYOBRequest","underlyingByteSource","autoAllocateChunkSize","_autoAllocateChunkSize","viewE","bufferE","transformStream","writableStream","TransformStream","TransformStreamCloseReadable","_errored","_readableClosed","TransformStreamCloseReadableInternal","TransformStreamEnqueueToReadable","_readableController","TransformStreamErrorIfNeeded","maybeBackpressure","TransformStreamSetBackpressure","TransformStreamError","TransformStreamErrorInternal","_writableDone","_writableController","TransformStreamReadableReadyPromise","_backpressureChangePromise","_backpressureChangePromise_resolve","TransformStreamDefaultTransform","transformStreamController","_controlledTransformStream","TransformStreamTransform","_transforming","transformer","_transformer","_transformStreamController","transformPromise","IsTransformStreamDefaultController","IsTransformStream","TransformStreamSink","startPromise","_transformStream","_startPromise","flushPromise","TransformStreamSource","TransformStreamDefaultController","readableController","readableStrategy","writableStrategy","startPromise_resolve","_readable","_writable","_document","BasePdfManager","_docId","_docBaseUrl","PDFDocument","ensureHelper","Page","_obj","_evaluator","_annotation","isAnnotationRenderable","annotation","viewable","printable","pageDict","resourcesPromise","uniquePrefix","idCounters","DEFAULT_USER_UNIT","LETTER_SIZE_MEDIABOX","getPageProp","getInheritedPageProp","valueArray","MAX_LOOP_COUNT","mediaBox","cropBox","intersection","getContentStream","loadResources","objectLoader","contentStreamPromise","partialEvaluator","dataPromises","pageListPromise","contentStream","transparency","annotationsPromise","pageOpList","annotations","opListPromises","opLists","getAnnotationsData","annotationsData","annotationRefs","annotationRef","AnnotationFactory","needle","backwards","FINGERPRINT_FIRST_BYTES","EMPTY_FINGERPRINT","DocumentInfoValidators","Title","Author","Subject","Keywords","Creator","Producer","CreationDate","ModDate","Trapped","pdfFormatVersion","acroForm","xfa","fields","linearization","checkHeader","MAX_VERSION_LENGTH","parseStartXRef","documentInfo","infoDict","docInfo","PDFFormatVersion","IsAcroFormPresent","IsXFAPresent","validEntries","fileID","idArray","hex","JpegError","buildHuffmanTable","children","getBlockBufferOffset","col","blocksPerLine","decodeScan","frame","resetInterval","spectralStart","spectralEnd","successivePrev","successive","bitsCount","bitsData","nextByte","decodeHuffman","tree","receive","receiveAndExtend","decodeBaseline","huffmanTableDC","blockData","pred","rs","huffmanTableAC","dctZigZag","decodeDCFirst","decodeDCSuccessive","decodeACFirst","eobrun","decodeACSuccessive","successiveACState","successiveACNextValue","decodeMcu","mcu","mcuRow","mcusPerLine","mcuCol","blockRow","blockCol","decodeBlock","decodeFn","progressive","startOffset","componentsLength","fileMarker","mcuExpected","blocksPerColumn","mcusPerColumn","mcuToRead","findNextFileMarker","marker","quantizeAndInverse","blockBufferOffset","v3","v4","v5","v6","v7","p0","p5","p6","p7","qt","quantizationTable","dctSqrt2","dctSqrt1d2","dctSin6","dctCos6","dctSin3","dctCos3","dctSin1","dctCos1","buildComponentData","computationBuffer","Int16Array","currentPos","peekUint16","maxPos","newPos","currentMarker","newMarker","readDataBlock","endOffset","prepareComponents","samplesPerLine","maxH","scanLines","maxV","blocksPerLineForMcu","blocksPerColumnForMcu","blocksBufferSize","jfif","adobe","quantizationTables","huffmanTablesAC","huffmanTablesDC","appData","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesLength","quantizationTablesEnd","quantizationTableSpec","tableData","extended","componentIds","componentId","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","scaleX","scaleY","numComponents","_getLinearizedBlockData","componentScaleX","componentScaleY","blocksPerScanline","xScaleBlockOffset","mask3LSB","_isColorConversionNeeded","_convertYccToRgb","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","forceRGBoutput","rgbData","grayColor","_ccitt","ccittFaxDecoder","CCITTFaxDecoder","EndOfLine","EncodedByteAlign","Columns","Rows","EndOfBlock","BlackIs1","readNextChar","eoline","byteAlign","rows","eoblock","black","codingLine","refLine","codingPos","nextLine2D","inputBits","inputBuf","outputBits","rowsDone","_lookBits","_eatBits","ccittEOL","ccittEOF","twoDimPass","twoDimHoriz","twoDimVert0","twoDimVertR1","twoDimVertL1","twoDimVertR2","twoDimVertL2","twoDimVertR3","twoDimVertL3","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","refPos","blackPixels","code3","_getTwoDimCode","_addPixels","_getBlackCode","_getWhiteCode","_addPixelsNeg","gotEOL","a1","_findTableCode","limitValue","_jbig","jbig2Image","Jbig2Image","globalsStream","globals","parseChunks","Jbig2Error","ContextCache","DecodingContext","decodeInteger","contextCache","procedure","getContexts","decodeIAID","decodeBitmapTemplate0","decodingContext","pixel","row1","row2","OLD_PIXEL_MASK","decodeBitmap","mmr","templateIndex","prediction","at","useskip","template","CodingTemplates","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","minX","minY","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","j0","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ReusedContexts","ltp","sltp","decodeRefinement","referenceBitmap","codingTemplate","RefinementTemplates","coding","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","reference","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","RefinementReusedContexts","decodeSymbolDictionary","huffman","refinement","symbols","numberOfNewSymbols","numberOfExportedSymbols","huffmanTables","refinementTemplateIndex","refinementAt","newSymbols","currentHeight","symbolCodeLength","deltaHeight","currentWidth","deltaWidth","numberOfInstances","decodeTextRegion","symbolId","rdx","rdy","exportedSymbols","currentFlag","totalSymbolsLength","runLength","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","transposed","dsOffset","referenceCorner","combinationOperator","stripT","firstS","deltaT","deltaFirstS","currentS","currentT","applyRefinement","symbolBitmap","symbolWidth","symbolHeight","rdw","rdh","symbolRow","offsetT","offsetS","maxWidth","deltaS","decodePatternDictionary","patternWidth","patternHeight","maxPatternIndex","collectiveWidth","collectiveBitmap","patternBitmap","xMin","xMax","decodeHalftoneRegion","regionWidth","regionHeight","enableSkip","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridVectorX","gridVectorY","regionBitmap","numberOfPatterns","pattern0","bitsPerValue","grayScaleBitPlanes","mg","ng","patternIndex","patternRow","regionRow","regionX","regionY","readSegmentHeader","segmentHeader","segmentType","SegmentTypes","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionSegmentFlags","RegionSegmentInformationFieldLength","genericRegionMmr","searchPatternLength","searchPattern","headerEnd","readSegments","segments","segment","randomAccess","processSegment","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","patternDictionary","patternDictionaryFlags","halftoneRegion","halftoneRegionFlags","genericRegion","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","parseJbig2Chunks","SimpleSegmentVisitor","onPageInformation","currentPageInfo","drawBitmap","regionInfo","mask0","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","onSymbolDictionary","currentSegment","referredSegments","onImmediateTextRegion","onImmediateLosslessTextRegion","onPatternDictionary","onImmediateHalftoneRegion","onImmediateLosslessHalftoneRegion","CMap","BUILT_IN_CMAPS","codespaceRanges","numCodespaceRanges","addCodespaceRange","mapCidRange","dstLow","mapBfRange","lastByte","mapBfRangeToArray","mapOne","dst","charCodeOf","readCharCode","codespaceRangesLen","codespaceRange","isIdentityCMap","BinaryCMapReader","hexToInt","hexToStr","addHex","incHex","BinaryCMapStream","MAX_ENCODED_NUM_SIZE","processBinaryCMap","readByte","MAX_NUM_SIZE","sequence","dataSize","ucs2DataSize","subitemsCount","readNumber","readHex","readHexNumber","readSigned","readHexSigned","readString","sp","strToInt","expectString","expectInt","parseBfChar","parseBfRange","parseCidChar","parseCidRange","parseCodespaceRange","parseWMode","parseCMapName","parseCMap","previous","embededUseCMap","objLoop","extendCMap","createBuiltInCMap","newCMap","useCodespaceRanges","cMapData","parsedCMap","adjustWidths","adjustToUnicode","builtInEncoding","amend","recoverGlyphName","type1FontGlyphMapping","glyphNames","glyphId","charCodeToGlyphId","standardGlyphName","ProblematicCharRanges","PRIVATE_USE_OFFSET_END","PRIVATE_USE_OFFSET_START","SEAC_ANALYSIS_ENABLED","_cff_parser","_font_renderer","_type1_parser","SKIP_PRIVATE_USE_RANGE_F000_TO_F01F","PDF_GLYPH_SPACE_UNITS","Script","Italic","AllCap","SmallCap","ForceBold","MacStandardGlyphOrdering","Glyph","operatorListId","isInFont","matchesForCache","OpenTypeFileBuilder","writeInt16","writeInt32","writeData","sfnt","getSearchParams","entriesCount","entrySize","maxPower2","searchRange","rangeShift","OTF_HEADER_SIZE","OTF_TABLE_ENTRY_SIZE","tablesNames","tableName","numTables","tableOffsets","searchParams","checksum","quad","addTable","sizes","missingFile","glyphCache","toFontChar","fallbackToSystemFont","isTrueTypeFile","isOpenTypeFile","isType1File","mimetype","CFFFont","Type1Font","convert","checkAndRepair","isOpenType","seacMap","loading","int16","writeSignedInt16","signedInt16","int32","string16","safeString16","buildToFontChar","isProblematicUnicodeLocation","adjustMapping","missingGlyphs","isSymbolic","isIdentityUnicode","newMap","usedFontCharCodes","nextAvailableFontCharCode","originalCharCode","fontCharCode","hasUnicodeValue","getRanges","numGlyphs","codeIndices","createCmapTable","bmpLength","trailingRangesCount","segCount","startCount","endCount","idDeltas","idRangeOffsets","glyphsIds","contiguous","startCode","format314","format31012","header31012","validateOS2Table","os2","selection","usWinAscent","createOS2Table","charstrings","override","unitsPerEm","yMax","yMin","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","firstCharIndex","lastCharIndex","typoAscent","typoDescent","winAscent","winDescent","createPostTable","angle","createNameTable","stringsUnicode","strBufUnicode","platforms","encodings","languages","namesRecordCount","nameTable","strOffset","strs","nameRecord","ID","FontRendererFactory","nonStdFontMap","isStandardFont","remeasure","GlyphMapForStandardFonts","SupplementalGlyphMapForArialBlack","unicodeCharCode","readTableEntry","previousPosition","readOpenTypeHeader","ttf","entrySelector","readCmapTable","platformId","encodingId","mappings","hasShortCmap","potentialTable","canBreak","useTable","segIndex","offsetsCount","rangeOffset","offsetIndex","firstCode","sanitizeMetrics","numOfMetrics","numOfSidebearings","numMissing","sanitizeGlyph","sourceStart","sourceEnd","hintsValid","glyphProfile","sizeOfInstructions","glyf","contoursCount","flagsCount","endPoint","instructionsStart","instructionsLength","instructionsEnd","coordinatesLength","flag","xyLength","repeat","glyphDataLength","sanitizeHead","locaLength","indexToLocFormat","numGlyphsPlusOne","sanitizeGlyphLocations","loca","isGlyphLocationsLong","dupFirstEntry","maxSizeOfInstructions","itemSize","itemDecode","itemEncode","locaData","locaDataSize","oldGlyfData","oldGlyfDataLength","newGlyfData","writeOffset","locaCount","simpleGlyph","firstEntryLength","readPostScriptTable","post","maxpNumGlyphs","glyphNameIndexes","customNames","stringLength","readNameTable","FORMAT_0_HEADER_LENGTH","numRecords","stringsStart","records","NAME_RECORD_LENGTH","platform","language","record","sanitizeTTProgram","ttContext","funcId","lastEndf","lastDeff","callstack","functionsCalled","tooComplexToFollowFunctions","inFDEF","ifLevel","inELSE","functionsStackDeltas","stackTop","functionsDefined","functionsUsed","TTOpsStackDeltas","foldTTTable","checkInvalidFunctions","maxFunctionDefs","sanitizeTTPrograms","fpgm","prep","cvt","cvtData","hasGlyph","cffFile","VALID_TABLES","isTrueType","maxZones","glyphsInfo","metricsOverride","isCidToGidMapEmpty","cmapTable","cmapPlatformId","cmapEncodingId","cmapMappings","cmapMappingsLength","unicodeOrCharCode","newMapping","compiler","namePrototype","builder","tableTag","getCharCodes","charCodes","createCharCode","getGlyphMapping","getCharset","baseGlyphName","accentGlyphName","baseGlyphId","accentGlyphId","accentOffset","baseFontCharCode","accentFontCharCode","tan","cffWidths","hmtx","_shadowWidth","possibleSpaceReplacements","charToGlyph","widthCode","charsCache","charsCacheKey","findBlock","streamBytes","signature","startIndex","streamBytesLength","signatureLength","getHeaderBlock","suggestedLength","headerBytes","headerBytesLength","block","EEXEC_SIGNATURE","streamStartPos","actualLength","SCAN_BLOCK_LENGTH","getEexecBlock","eexecBytes","PFB_HEADER_SIZE","headerBlockLength","eexecBlockLength","pfbHeader","pfbHeaderPresent","headerBlock","headerBlockParser","Type1Parser","extractFontHeader","eexecBlock","eexecBlockParser","extractFontProgram","type2Charstrings","getType2Charstrings","getType2Subrs","wrap","getSeacs","type1Charstrings","type1Subrs","type2Subrs","charsetArray","charStringsIndex","field","privateData","subrIndex","charsets","getLong","getUshort","parseCmap","idDelta","idOffset","groups","parseCff","gsubrs","parseGlyfTable","lookupCmap","compileGlyf","cmds","quadraticCurveTo","xa","ya","numberOfContours","scale01","scale10","subglyph","endPtsOfContours","instructionLength","numberOfPoints","points","startPoint","contour","compileCharString","bezierCurveTo","xb","yb","y3","subrCode","stackClean","stems","subrsBias","achar","bchar","glyphNameMap","gsubrsBias","CompiledFont","compiledGlyphs","compiledCharCodeToGlyphId","TrueTypeCompiled","Type2Compiled","cffInfo","noop","compileGlyph","compileGlyphImpl","HINTING_ENABLED","Type1CharString","lsb","flexing","COMMAND_MAP","hstem","vstem","vmoveto","rlineto","hlineto","vlineto","rrcurveto","callsubr","flex","drop","endchar","rmoveto","hmoveto","vhcurveto","hvcurveto","encoded","wx","sbx","executeCommand","dy","sby","flexArgs","howManyArgs","command","keepStack","stackLength","isHexDigit","discardNumber","c2","decrypted","decryptAscii","digit1","digit2","isSpecial","isBinary","EEXEC_ENCRYPT_KEY","CHAR_STRS_ENCRYPT_KEY","readNumberArray","getToken","readInt","readBoolean","readCharStrings","lenIV","program","blueArray","charString","encodingArg","xstep","ystep","paintType","tilingType","ShadingType","FUNCTION_BASED","AXIAL","RADIAL","FREE_FORM_MESH","LATTICE_FORM_MESH","COONS_PATCH_MESH","TENSOR_PATCH_MESH","getPattern","Shadings","RadialAxial","Mesh","Dummy","SMALL_NUMBER","coordsArr","shadingType","t0","domainArr","extendStart","extendEnd","extendArr","r1","r2","distance","createFromArray","colorStops","ratio","cssColor","background","r0","MeshStreamReader","tmpCompsBuf","csNumComps","tmpCsCompsBuf","colorFn","decodeType4Shading","mesh","coords","ps","verticesLeft","hasData","readFlag","coord","readCoordinate","readComponents","align","figures","decodeType5Shading","verticesPerRow","buildFigureFromPatch","figure","ci","figureMinX","figureMinY","figureMaxX","figureMaxY","splitXBy","TRIANGLE_DENSITY","MIN_SPLIT_PATCH_CHUNKS_AMOUNT","MAX_SPLIT_PATCH_CHUNKS_AMOUNT","splitYBy","figureCoords","figureColors","cl","cr","c3","bRow","getB","bCol","newColor","decodeType6Shading","tmp4","decodeType7Shading","updateBounds","maxY","packData","coordsPacked","xy","colorsPacked","decodeContext","bitsPerCoordinate","bitsPerFlag","patchMesh","yi","buildB","lut","t_","isOdd","isEven","findUnequal","setValues","reverseValues","createBidiText","isLTR","startLevel","strLength","numBidi","charType","baseTypes","arabicTypes","sor","eor","lastType","before","after","highestLevel","lowestOddLevel","nextToken","accept","expect","PostScriptTokenTypes","LBRACE","parseBlock","RBRACE","NUMBER","OPERATOR","parseCondition","conditionLocation","IF","jumpLocation","endOfTrue","IFELSE","PostScriptToken","opCache","getOperator","opValue","seed","SEED","MASK_HIGH","MASK_LOW","blockCounts","tailLength","dataUint32","k2","C1","C2","C1_LOW","C2_LOW","handleImageData","decodeAndClamp","addend","coefficient","resizeImageMask","_ref$smask","_ref$mask","_ref$isMask","isMask","matte","needsDecode","decodeCoefficients","decodeAddends","maskDict","smaskPromise","maskPromise","_ref2$nativeDecoder","imagePromise","smaskData","maskData","computedLength","haveFullData","decodeBuffer","getComponents","buf","bufferPos","rowComps","loop1End","loop2End","remainingBits","fillOpacity","rgbaBuf","alphaBuf","sw","sh","fillGrayBuffer","opacity","imageOffset","maskOffset","undoPreblend","matteRgb","matteR","matteG","matteB","forceRGBA","getImageBytes","newArray","maybeUndoPreblend","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","getTransformMatrix","AnnotationBorderStyle","Annotation","_get","receiver","parameters","LinkAnnotation","TextAnnotation","fieldType","TextWidgetAnnotation","ButtonWidgetAnnotation","ChoiceWidgetAnnotation","WidgetAnnotation","PopupAnnotation","LineAnnotation","SquareAnnotation","CircleAnnotation","PolylineAnnotation","PolygonAnnotation","HighlightAnnotation","UnderlineAnnotation","SquigglyAnnotation","StrikeOutAnnotation","StampAnnotation","FileAttachmentAnnotation","setFlags","setRectangle","setColor","setBorderStyle","setAppearance","annotationFlags","borderStyle","hasAppearance","appearance","_hasFlag","dictType","setWidth","setStyle","setDashArray","setHorizontalCornerRadius","setVerticalCornerRadius","appearanceStates","normalAppearanceState","hasPopup","contents","renderForms","appearanceDict","_isViewable","_isPrintable","dashArray","horizontalCornerRadius","verticalCornerRadius","isValid","allZeros","validNumber","radius","_Annotation","annotationType","fieldName","_constructFieldName","fieldValue","alternativeText","defaultAppearance","fieldResources","fieldFlags","readOnly","hasFieldFlag","loopDict","_WidgetAnnotation","alignment","textAlignment","maximumLength","multiLine","comb","_WidgetAnnotation2","checkBox","radioButton","buttonValue","fieldParent","fieldParentValue","_WidgetAnnotation3","option","isOptionArray","exportValue","displayValue","combo","multiSelect","_Annotation2","DEFAULT_ICON_SIZE","_preparePopup","_Annotation3","_Annotation4","parentItem","parentSubtype","parentType","parentId","parentFlags","_Annotation5","lineCoordinates","_Annotation6","_Annotation7","_Annotation8","_this12","rawVertices","vertices","_PolylineAnnotation","_this13","_Annotation9","_this14","_Annotation10","_this15","_Annotation11","_this16","_Annotation12","_this17","_Annotation13","_this18","_Annotation14","_this19"],"mappings":"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CAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA;AACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA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EAAA,OACAA,EAAA,SACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,E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","file":"static/js/1.3895c32f.chunk.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 236:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process, global) {/* Copyright 2017 Mozilla Foundation\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t */\n\t\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory();\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine(\"pdfjs-dist/build/pdf.worker\", [], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"pdfjs-dist/build/pdf.worker\"] = factory();\n\t\telse\n\t\t\troot[\"pdfjs-dist/build/pdf.worker\"] = root.pdfjsDistBuildPdfWorker = factory();\n\t})(typeof self !== 'undefined' ? self : this, function() {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __w_pdfjs_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId]) {\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/ \t\t}\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\ti: moduleId,\n\t/******/ \t\t\tl: false,\n\t/******/ \t\t\texports: {}\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.l = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__w_pdfjs_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__w_pdfjs_require__.c = installedModules;\n\t/******/\n\t/******/ \t// define getter function for harmony exports\n\t/******/ \t__w_pdfjs_require__.d = function(exports, name, getter) {\n\t/******/ \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n\t/******/ \t\t\tObject.defineProperty(exports, name, {\n\t/******/ \t\t\t\tconfigurable: false,\n\t/******/ \t\t\t\tenumerable: true,\n\t/******/ \t\t\t\tget: getter\n\t/******/ \t\t\t});\n\t/******/ \t\t}\n\t/******/ \t};\n\t/******/\n\t/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n\t/******/ \t__w_pdfjs_require__.n = function(module) {\n\t/******/ \t\tvar getter = module && module.__esModule ?\n\t/******/ \t\t\tfunction getDefault() { return module['default']; } :\n\t/******/ \t\t\tfunction getModuleExports() { return module; };\n\t/******/ \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n\t/******/ \t\treturn getter;\n\t/******/ \t};\n\t/******/\n\t/******/ \t// Object.prototype.hasOwnProperty.call\n\t/******/ \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__w_pdfjs_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 82);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.unreachable = exports.warn = exports.utf8StringToString = exports.stringToUTF8String = exports.stringToPDFString = exports.stringToBytes = exports.string32 = exports.shadow = exports.setVerbosityLevel = exports.ReadableStream = exports.removeNullCharacters = exports.readUint32 = exports.readUint16 = exports.readInt8 = exports.log2 = exports.loadJpegStream = exports.isEvalSupported = exports.isLittleEndian = exports.createValidAbsoluteUrl = exports.isSameOrigin = exports.isNodeJS = exports.isSpace = exports.isString = exports.isNum = exports.isEmptyObj = exports.isBool = exports.isArrayBuffer = exports.info = exports.getVerbosityLevel = exports.getLookupTableFactory = exports.deprecated = exports.createObjectURL = exports.createPromiseCapability = exports.createBlob = exports.bytesToString = exports.assert = exports.arraysToBytes = exports.arrayByteLength = exports.FormatError = exports.XRefParseException = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.StatTimer = exports.PasswordResponses = exports.PasswordException = exports.PageViewport = exports.NotImplementedException = exports.NativeImageDecoding = exports.MissingPDFException = exports.MissingDataException = exports.MessageHandler = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VERBOSITY_LEVELS = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t__w_pdfjs_require__(84);\n\t\n\tvar _streams_polyfill = __w_pdfjs_require__(125);\n\t\n\tvar FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\tvar NativeImageDecoding = {\n\t  NONE: 'none',\n\t  DECODE: 'decode',\n\t  DISPLAY: 'display'\n\t};\n\tvar TextRenderingMode = {\n\t  FILL: 0,\n\t  STROKE: 1,\n\t  FILL_STROKE: 2,\n\t  INVISIBLE: 3,\n\t  FILL_ADD_TO_PATH: 4,\n\t  STROKE_ADD_TO_PATH: 5,\n\t  FILL_STROKE_ADD_TO_PATH: 6,\n\t  ADD_TO_PATH: 7,\n\t  FILL_STROKE_MASK: 3,\n\t  ADD_TO_PATH_FLAG: 4\n\t};\n\tvar ImageKind = {\n\t  GRAYSCALE_1BPP: 1,\n\t  RGB_24BPP: 2,\n\t  RGBA_32BPP: 3\n\t};\n\tvar AnnotationType = {\n\t  TEXT: 1,\n\t  LINK: 2,\n\t  FREETEXT: 3,\n\t  LINE: 4,\n\t  SQUARE: 5,\n\t  CIRCLE: 6,\n\t  POLYGON: 7,\n\t  POLYLINE: 8,\n\t  HIGHLIGHT: 9,\n\t  UNDERLINE: 10,\n\t  SQUIGGLY: 11,\n\t  STRIKEOUT: 12,\n\t  STAMP: 13,\n\t  CARET: 14,\n\t  INK: 15,\n\t  POPUP: 16,\n\t  FILEATTACHMENT: 17,\n\t  SOUND: 18,\n\t  MOVIE: 19,\n\t  WIDGET: 20,\n\t  SCREEN: 21,\n\t  PRINTERMARK: 22,\n\t  TRAPNET: 23,\n\t  WATERMARK: 24,\n\t  THREED: 25,\n\t  REDACT: 26\n\t};\n\tvar AnnotationFlag = {\n\t  INVISIBLE: 0x01,\n\t  HIDDEN: 0x02,\n\t  PRINT: 0x04,\n\t  NOZOOM: 0x08,\n\t  NOROTATE: 0x10,\n\t  NOVIEW: 0x20,\n\t  READONLY: 0x40,\n\t  LOCKED: 0x80,\n\t  TOGGLENOVIEW: 0x100,\n\t  LOCKEDCONTENTS: 0x200\n\t};\n\tvar AnnotationFieldFlag = {\n\t  READONLY: 0x0000001,\n\t  REQUIRED: 0x0000002,\n\t  NOEXPORT: 0x0000004,\n\t  MULTILINE: 0x0001000,\n\t  PASSWORD: 0x0002000,\n\t  NOTOGGLETOOFF: 0x0004000,\n\t  RADIO: 0x0008000,\n\t  PUSHBUTTON: 0x0010000,\n\t  COMBO: 0x0020000,\n\t  EDIT: 0x0040000,\n\t  SORT: 0x0080000,\n\t  FILESELECT: 0x0100000,\n\t  MULTISELECT: 0x0200000,\n\t  DONOTSPELLCHECK: 0x0400000,\n\t  DONOTSCROLL: 0x0800000,\n\t  COMB: 0x1000000,\n\t  RICHTEXT: 0x2000000,\n\t  RADIOSINUNISON: 0x2000000,\n\t  COMMITONSELCHANGE: 0x4000000\n\t};\n\tvar AnnotationBorderStyleType = {\n\t  SOLID: 1,\n\t  DASHED: 2,\n\t  BEVELED: 3,\n\t  INSET: 4,\n\t  UNDERLINE: 5\n\t};\n\tvar StreamType = {\n\t  UNKNOWN: 0,\n\t  FLATE: 1,\n\t  LZW: 2,\n\t  DCT: 3,\n\t  JPX: 4,\n\t  JBIG: 5,\n\t  A85: 6,\n\t  AHX: 7,\n\t  CCF: 8,\n\t  RL: 9\n\t};\n\tvar FontType = {\n\t  UNKNOWN: 0,\n\t  TYPE1: 1,\n\t  TYPE1C: 2,\n\t  CIDFONTTYPE0: 3,\n\t  CIDFONTTYPE0C: 4,\n\t  TRUETYPE: 5,\n\t  CIDFONTTYPE2: 6,\n\t  TYPE3: 7,\n\t  OPENTYPE: 8,\n\t  TYPE0: 9,\n\t  MMTYPE1: 10\n\t};\n\tvar VERBOSITY_LEVELS = {\n\t  errors: 0,\n\t  warnings: 1,\n\t  infos: 5\n\t};\n\tvar CMapCompressionType = {\n\t  NONE: 0,\n\t  BINARY: 1,\n\t  STREAM: 2\n\t};\n\tvar OPS = {\n\t  dependency: 1,\n\t  setLineWidth: 2,\n\t  setLineCap: 3,\n\t  setLineJoin: 4,\n\t  setMiterLimit: 5,\n\t  setDash: 6,\n\t  setRenderingIntent: 7,\n\t  setFlatness: 8,\n\t  setGState: 9,\n\t  save: 10,\n\t  restore: 11,\n\t  transform: 12,\n\t  moveTo: 13,\n\t  lineTo: 14,\n\t  curveTo: 15,\n\t  curveTo2: 16,\n\t  curveTo3: 17,\n\t  closePath: 18,\n\t  rectangle: 19,\n\t  stroke: 20,\n\t  closeStroke: 21,\n\t  fill: 22,\n\t  eoFill: 23,\n\t  fillStroke: 24,\n\t  eoFillStroke: 25,\n\t  closeFillStroke: 26,\n\t  closeEOFillStroke: 27,\n\t  endPath: 28,\n\t  clip: 29,\n\t  eoClip: 30,\n\t  beginText: 31,\n\t  endText: 32,\n\t  setCharSpacing: 33,\n\t  setWordSpacing: 34,\n\t  setHScale: 35,\n\t  setLeading: 36,\n\t  setFont: 37,\n\t  setTextRenderingMode: 38,\n\t  setTextRise: 39,\n\t  moveText: 40,\n\t  setLeadingMoveText: 41,\n\t  setTextMatrix: 42,\n\t  nextLine: 43,\n\t  showText: 44,\n\t  showSpacedText: 45,\n\t  nextLineShowText: 46,\n\t  nextLineSetSpacingShowText: 47,\n\t  setCharWidth: 48,\n\t  setCharWidthAndBounds: 49,\n\t  setStrokeColorSpace: 50,\n\t  setFillColorSpace: 51,\n\t  setStrokeColor: 52,\n\t  setStrokeColorN: 53,\n\t  setFillColor: 54,\n\t  setFillColorN: 55,\n\t  setStrokeGray: 56,\n\t  setFillGray: 57,\n\t  setStrokeRGBColor: 58,\n\t  setFillRGBColor: 59,\n\t  setStrokeCMYKColor: 60,\n\t  setFillCMYKColor: 61,\n\t  shadingFill: 62,\n\t  beginInlineImage: 63,\n\t  beginImageData: 64,\n\t  endInlineImage: 65,\n\t  paintXObject: 66,\n\t  markPoint: 67,\n\t  markPointProps: 68,\n\t  beginMarkedContent: 69,\n\t  beginMarkedContentProps: 70,\n\t  endMarkedContent: 71,\n\t  beginCompat: 72,\n\t  endCompat: 73,\n\t  paintFormXObjectBegin: 74,\n\t  paintFormXObjectEnd: 75,\n\t  beginGroup: 76,\n\t  endGroup: 77,\n\t  beginAnnotations: 78,\n\t  endAnnotations: 79,\n\t  beginAnnotation: 80,\n\t  endAnnotation: 81,\n\t  paintJpegXObject: 82,\n\t  paintImageMaskXObject: 83,\n\t  paintImageMaskXObjectGroup: 84,\n\t  paintImageXObject: 85,\n\t  paintInlineImageXObject: 86,\n\t  paintInlineImageXObjectGroup: 87,\n\t  paintImageXObjectRepeat: 88,\n\t  paintImageMaskXObjectRepeat: 89,\n\t  paintSolidColorImageMask: 90,\n\t  constructPath: 91\n\t};\n\tvar verbosity = VERBOSITY_LEVELS.warnings;\n\tfunction setVerbosityLevel(level) {\n\t  verbosity = level;\n\t}\n\tfunction getVerbosityLevel() {\n\t  return verbosity;\n\t}\n\tfunction info(msg) {\n\t  if (verbosity >= VERBOSITY_LEVELS.infos) {\n\t    console.log('Info: ' + msg);\n\t  }\n\t}\n\tfunction warn(msg) {\n\t  if (verbosity >= VERBOSITY_LEVELS.warnings) {\n\t    console.log('Warning: ' + msg);\n\t  }\n\t}\n\tfunction deprecated(details) {\n\t  console.log('Deprecated API usage: ' + details);\n\t}\n\tfunction unreachable(msg) {\n\t  throw new Error(msg);\n\t}\n\tfunction assert(cond, msg) {\n\t  if (!cond) {\n\t    unreachable(msg);\n\t  }\n\t}\n\tvar UNSUPPORTED_FEATURES = {\n\t  unknown: 'unknown',\n\t  forms: 'forms',\n\t  javaScript: 'javaScript',\n\t  smask: 'smask',\n\t  shadingPattern: 'shadingPattern',\n\t  font: 'font'\n\t};\n\tfunction isSameOrigin(baseUrl, otherUrl) {\n\t  try {\n\t    var base = new URL(baseUrl);\n\t    if (!base.origin || base.origin === 'null') {\n\t      return false;\n\t    }\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t  var other = new URL(otherUrl, base);\n\t  return base.origin === other.origin;\n\t}\n\tfunction isValidProtocol(url) {\n\t  if (!url) {\n\t    return false;\n\t  }\n\t  switch (url.protocol) {\n\t    case 'http:':\n\t    case 'https:':\n\t    case 'ftp:':\n\t    case 'mailto:':\n\t    case 'tel:':\n\t      return true;\n\t    default:\n\t      return false;\n\t  }\n\t}\n\tfunction createValidAbsoluteUrl(url, baseUrl) {\n\t  if (!url) {\n\t    return null;\n\t  }\n\t  try {\n\t    var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n\t    if (isValidProtocol(absoluteUrl)) {\n\t      return absoluteUrl;\n\t    }\n\t  } catch (ex) {}\n\t  return null;\n\t}\n\tfunction shadow(obj, prop, value) {\n\t  Object.defineProperty(obj, prop, {\n\t    value: value,\n\t    enumerable: true,\n\t    configurable: true,\n\t    writable: false\n\t  });\n\t  return value;\n\t}\n\tfunction getLookupTableFactory(initializer) {\n\t  var lookup;\n\t  return function () {\n\t    if (initializer) {\n\t      lookup = Object.create(null);\n\t      initializer(lookup);\n\t      initializer = null;\n\t    }\n\t    return lookup;\n\t  };\n\t}\n\tvar PasswordResponses = {\n\t  NEED_PASSWORD: 1,\n\t  INCORRECT_PASSWORD: 2\n\t};\n\tvar PasswordException = function PasswordExceptionClosure() {\n\t  function PasswordException(msg, code) {\n\t    this.name = 'PasswordException';\n\t    this.message = msg;\n\t    this.code = code;\n\t  }\n\t  PasswordException.prototype = new Error();\n\t  PasswordException.constructor = PasswordException;\n\t  return PasswordException;\n\t}();\n\tvar UnknownErrorException = function UnknownErrorExceptionClosure() {\n\t  function UnknownErrorException(msg, details) {\n\t    this.name = 'UnknownErrorException';\n\t    this.message = msg;\n\t    this.details = details;\n\t  }\n\t  UnknownErrorException.prototype = new Error();\n\t  UnknownErrorException.constructor = UnknownErrorException;\n\t  return UnknownErrorException;\n\t}();\n\tvar InvalidPDFException = function InvalidPDFExceptionClosure() {\n\t  function InvalidPDFException(msg) {\n\t    this.name = 'InvalidPDFException';\n\t    this.message = msg;\n\t  }\n\t  InvalidPDFException.prototype = new Error();\n\t  InvalidPDFException.constructor = InvalidPDFException;\n\t  return InvalidPDFException;\n\t}();\n\tvar MissingPDFException = function MissingPDFExceptionClosure() {\n\t  function MissingPDFException(msg) {\n\t    this.name = 'MissingPDFException';\n\t    this.message = msg;\n\t  }\n\t  MissingPDFException.prototype = new Error();\n\t  MissingPDFException.constructor = MissingPDFException;\n\t  return MissingPDFException;\n\t}();\n\tvar UnexpectedResponseException = function UnexpectedResponseExceptionClosure() {\n\t  function UnexpectedResponseException(msg, status) {\n\t    this.name = 'UnexpectedResponseException';\n\t    this.message = msg;\n\t    this.status = status;\n\t  }\n\t  UnexpectedResponseException.prototype = new Error();\n\t  UnexpectedResponseException.constructor = UnexpectedResponseException;\n\t  return UnexpectedResponseException;\n\t}();\n\tvar NotImplementedException = function NotImplementedExceptionClosure() {\n\t  function NotImplementedException(msg) {\n\t    this.message = msg;\n\t  }\n\t  NotImplementedException.prototype = new Error();\n\t  NotImplementedException.prototype.name = 'NotImplementedException';\n\t  NotImplementedException.constructor = NotImplementedException;\n\t  return NotImplementedException;\n\t}();\n\tvar MissingDataException = function MissingDataExceptionClosure() {\n\t  function MissingDataException(begin, end) {\n\t    this.begin = begin;\n\t    this.end = end;\n\t    this.message = 'Missing data [' + begin + ', ' + end + ')';\n\t  }\n\t  MissingDataException.prototype = new Error();\n\t  MissingDataException.prototype.name = 'MissingDataException';\n\t  MissingDataException.constructor = MissingDataException;\n\t  return MissingDataException;\n\t}();\n\tvar XRefParseException = function XRefParseExceptionClosure() {\n\t  function XRefParseException(msg) {\n\t    this.message = msg;\n\t  }\n\t  XRefParseException.prototype = new Error();\n\t  XRefParseException.prototype.name = 'XRefParseException';\n\t  XRefParseException.constructor = XRefParseException;\n\t  return XRefParseException;\n\t}();\n\tvar FormatError = function FormatErrorClosure() {\n\t  function FormatError(msg) {\n\t    this.message = msg;\n\t  }\n\t  FormatError.prototype = new Error();\n\t  FormatError.prototype.name = 'FormatError';\n\t  FormatError.constructor = FormatError;\n\t  return FormatError;\n\t}();\n\tvar AbortException = function AbortExceptionClosure() {\n\t  function AbortException(msg) {\n\t    this.name = 'AbortException';\n\t    this.message = msg;\n\t  }\n\t  AbortException.prototype = new Error();\n\t  AbortException.constructor = AbortException;\n\t  return AbortException;\n\t}();\n\tvar NullCharactersRegExp = /\\x00/g;\n\tfunction removeNullCharacters(str) {\n\t  if (typeof str !== 'string') {\n\t    warn('The argument for removeNullCharacters must be a string.');\n\t    return str;\n\t  }\n\t  return str.replace(NullCharactersRegExp, '');\n\t}\n\tfunction bytesToString(bytes) {\n\t  assert(bytes !== null && (typeof bytes === 'undefined' ? 'undefined' : _typeof(bytes)) === 'object' && bytes.length !== undefined, 'Invalid argument for bytesToString');\n\t  var length = bytes.length;\n\t  var MAX_ARGUMENT_COUNT = 8192;\n\t  if (length < MAX_ARGUMENT_COUNT) {\n\t    return String.fromCharCode.apply(null, bytes);\n\t  }\n\t  var strBuf = [];\n\t  for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n\t    var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n\t    var chunk = bytes.subarray(i, chunkEnd);\n\t    strBuf.push(String.fromCharCode.apply(null, chunk));\n\t  }\n\t  return strBuf.join('');\n\t}\n\tfunction stringToBytes(str) {\n\t  assert(typeof str === 'string', 'Invalid argument for stringToBytes');\n\t  var length = str.length;\n\t  var bytes = new Uint8Array(length);\n\t  for (var i = 0; i < length; ++i) {\n\t    bytes[i] = str.charCodeAt(i) & 0xFF;\n\t  }\n\t  return bytes;\n\t}\n\tfunction arrayByteLength(arr) {\n\t  if (arr.length !== undefined) {\n\t    return arr.length;\n\t  }\n\t  assert(arr.byteLength !== undefined);\n\t  return arr.byteLength;\n\t}\n\tfunction arraysToBytes(arr) {\n\t  if (arr.length === 1 && arr[0] instanceof Uint8Array) {\n\t    return arr[0];\n\t  }\n\t  var resultLength = 0;\n\t  var i,\n\t      ii = arr.length;\n\t  var item, itemLength;\n\t  for (i = 0; i < ii; i++) {\n\t    item = arr[i];\n\t    itemLength = arrayByteLength(item);\n\t    resultLength += itemLength;\n\t  }\n\t  var pos = 0;\n\t  var data = new Uint8Array(resultLength);\n\t  for (i = 0; i < ii; i++) {\n\t    item = arr[i];\n\t    if (!(item instanceof Uint8Array)) {\n\t      if (typeof item === 'string') {\n\t        item = stringToBytes(item);\n\t      } else {\n\t        item = new Uint8Array(item);\n\t      }\n\t    }\n\t    itemLength = item.byteLength;\n\t    data.set(item, pos);\n\t    pos += itemLength;\n\t  }\n\t  return data;\n\t}\n\tfunction string32(value) {\n\t  return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n\t}\n\tfunction log2(x) {\n\t  var n = 1,\n\t      i = 0;\n\t  while (x > n) {\n\t    n <<= 1;\n\t    i++;\n\t  }\n\t  return i;\n\t}\n\tfunction readInt8(data, start) {\n\t  return data[start] << 24 >> 24;\n\t}\n\tfunction readUint16(data, offset) {\n\t  return data[offset] << 8 | data[offset + 1];\n\t}\n\tfunction readUint32(data, offset) {\n\t  return (data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3]) >>> 0;\n\t}\n\tfunction isLittleEndian() {\n\t  var buffer8 = new Uint8Array(4);\n\t  buffer8[0] = 1;\n\t  var view32 = new Uint32Array(buffer8.buffer, 0, 1);\n\t  return view32[0] === 1;\n\t}\n\tfunction isEvalSupported() {\n\t  try {\n\t    new Function('');\n\t    return true;\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t}\n\tvar IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\n\tvar Util = function UtilClosure() {\n\t  function Util() {}\n\t  var rgbBuf = ['rgb(', 0, ',', 0, ',', 0, ')'];\n\t  Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {\n\t    rgbBuf[1] = r;\n\t    rgbBuf[3] = g;\n\t    rgbBuf[5] = b;\n\t    return rgbBuf.join('');\n\t  };\n\t  Util.transform = function Util_transform(m1, m2) {\n\t    return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n\t  };\n\t  Util.applyTransform = function Util_applyTransform(p, m) {\n\t    var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n\t    var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n\t    return [xt, yt];\n\t  };\n\t  Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {\n\t    var d = m[0] * m[3] - m[1] * m[2];\n\t    var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n\t    var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n\t    return [xt, yt];\n\t  };\n\t  Util.getAxialAlignedBoundingBox = function Util_getAxialAlignedBoundingBox(r, m) {\n\t    var p1 = Util.applyTransform(r, m);\n\t    var p2 = Util.applyTransform(r.slice(2, 4), m);\n\t    var p3 = Util.applyTransform([r[0], r[3]], m);\n\t    var p4 = Util.applyTransform([r[2], r[1]], m);\n\t    return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n\t  };\n\t  Util.inverseTransform = function Util_inverseTransform(m) {\n\t    var d = m[0] * m[3] - m[1] * m[2];\n\t    return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n\t  };\n\t  Util.apply3dTransform = function Util_apply3dTransform(m, v) {\n\t    return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n\t  };\n\t  Util.singularValueDecompose2dScale = function Util_singularValueDecompose2dScale(m) {\n\t    var transpose = [m[0], m[2], m[1], m[3]];\n\t    var a = m[0] * transpose[0] + m[1] * transpose[2];\n\t    var b = m[0] * transpose[1] + m[1] * transpose[3];\n\t    var c = m[2] * transpose[0] + m[3] * transpose[2];\n\t    var d = m[2] * transpose[1] + m[3] * transpose[3];\n\t    var first = (a + d) / 2;\n\t    var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n\t    var sx = first + second || 1;\n\t    var sy = first - second || 1;\n\t    return [Math.sqrt(sx), Math.sqrt(sy)];\n\t  };\n\t  Util.normalizeRect = function Util_normalizeRect(rect) {\n\t    var r = rect.slice(0);\n\t    if (rect[0] > rect[2]) {\n\t      r[0] = rect[2];\n\t      r[2] = rect[0];\n\t    }\n\t    if (rect[1] > rect[3]) {\n\t      r[1] = rect[3];\n\t      r[3] = rect[1];\n\t    }\n\t    return r;\n\t  };\n\t  Util.intersect = function Util_intersect(rect1, rect2) {\n\t    function compare(a, b) {\n\t      return a - b;\n\t    }\n\t    var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare),\n\t        orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare),\n\t        result = [];\n\t    rect1 = Util.normalizeRect(rect1);\n\t    rect2 = Util.normalizeRect(rect2);\n\t    if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n\t      result[0] = orderedX[1];\n\t      result[2] = orderedX[2];\n\t    } else {\n\t      return false;\n\t    }\n\t    if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n\t      result[1] = orderedY[1];\n\t      result[3] = orderedY[2];\n\t    } else {\n\t      return false;\n\t    }\n\t    return result;\n\t  };\n\t  var ROMAN_NUMBER_MAP = ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM', '', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC', '', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'];\n\t  Util.toRoman = function Util_toRoman(number, lowerCase) {\n\t    assert(Number.isInteger(number) && number > 0, 'The number should be a positive integer.');\n\t    var pos,\n\t        romanBuf = [];\n\t    while (number >= 1000) {\n\t      number -= 1000;\n\t      romanBuf.push('M');\n\t    }\n\t    pos = number / 100 | 0;\n\t    number %= 100;\n\t    romanBuf.push(ROMAN_NUMBER_MAP[pos]);\n\t    pos = number / 10 | 0;\n\t    number %= 10;\n\t    romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\n\t    romanBuf.push(ROMAN_NUMBER_MAP[20 + number]);\n\t    var romanStr = romanBuf.join('');\n\t    return lowerCase ? romanStr.toLowerCase() : romanStr;\n\t  };\n\t  Util.appendToArray = function Util_appendToArray(arr1, arr2) {\n\t    Array.prototype.push.apply(arr1, arr2);\n\t  };\n\t  Util.prependToArray = function Util_prependToArray(arr1, arr2) {\n\t    Array.prototype.unshift.apply(arr1, arr2);\n\t  };\n\t  Util.extendObj = function extendObj(obj1, obj2) {\n\t    for (var key in obj2) {\n\t      obj1[key] = obj2[key];\n\t    }\n\t  };\n\t  Util.getInheritableProperty = function Util_getInheritableProperty(dict, name, getArray) {\n\t    while (dict && !dict.has(name)) {\n\t      dict = dict.get('Parent');\n\t    }\n\t    if (!dict) {\n\t      return null;\n\t    }\n\t    return getArray ? dict.getArray(name) : dict.get(name);\n\t  };\n\t  Util.inherit = function Util_inherit(sub, base, prototype) {\n\t    sub.prototype = Object.create(base.prototype);\n\t    sub.prototype.constructor = sub;\n\t    for (var prop in prototype) {\n\t      sub.prototype[prop] = prototype[prop];\n\t    }\n\t  };\n\t  Util.loadScript = function Util_loadScript(src, callback) {\n\t    var script = document.createElement('script');\n\t    var loaded = false;\n\t    script.setAttribute('src', src);\n\t    if (callback) {\n\t      script.onload = function () {\n\t        if (!loaded) {\n\t          callback();\n\t        }\n\t        loaded = true;\n\t      };\n\t    }\n\t    document.getElementsByTagName('head')[0].appendChild(script);\n\t  };\n\t  return Util;\n\t}();\n\tvar PageViewport = function PageViewportClosure() {\n\t  function PageViewport(viewBox, scale, rotation, offsetX, offsetY, dontFlip) {\n\t    this.viewBox = viewBox;\n\t    this.scale = scale;\n\t    this.rotation = rotation;\n\t    this.offsetX = offsetX;\n\t    this.offsetY = offsetY;\n\t    var centerX = (viewBox[2] + viewBox[0]) / 2;\n\t    var centerY = (viewBox[3] + viewBox[1]) / 2;\n\t    var rotateA, rotateB, rotateC, rotateD;\n\t    rotation = rotation % 360;\n\t    rotation = rotation < 0 ? rotation + 360 : rotation;\n\t    switch (rotation) {\n\t      case 180:\n\t        rotateA = -1;\n\t        rotateB = 0;\n\t        rotateC = 0;\n\t        rotateD = 1;\n\t        break;\n\t      case 90:\n\t        rotateA = 0;\n\t        rotateB = 1;\n\t        rotateC = 1;\n\t        rotateD = 0;\n\t        break;\n\t      case 270:\n\t        rotateA = 0;\n\t        rotateB = -1;\n\t        rotateC = -1;\n\t        rotateD = 0;\n\t        break;\n\t      default:\n\t        rotateA = 1;\n\t        rotateB = 0;\n\t        rotateC = 0;\n\t        rotateD = -1;\n\t        break;\n\t    }\n\t    if (dontFlip) {\n\t      rotateC = -rotateC;\n\t      rotateD = -rotateD;\n\t    }\n\t    var offsetCanvasX, offsetCanvasY;\n\t    var width, height;\n\t    if (rotateA === 0) {\n\t      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n\t      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n\t      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n\t      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n\t    } else {\n\t      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n\t      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n\t      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n\t      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n\t    }\n\t    this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n\t    this.width = width;\n\t    this.height = height;\n\t    this.fontScale = scale;\n\t  }\n\t  PageViewport.prototype = {\n\t    clone: function PageViewPort_clone(args) {\n\t      args = args || {};\n\t      var scale = 'scale' in args ? args.scale : this.scale;\n\t      var rotation = 'rotation' in args ? args.rotation : this.rotation;\n\t      return new PageViewport(this.viewBox.slice(), scale, rotation, this.offsetX, this.offsetY, args.dontFlip);\n\t    },\n\t    convertToViewportPoint: function PageViewport_convertToViewportPoint(x, y) {\n\t      return Util.applyTransform([x, y], this.transform);\n\t    },\n\t    convertToViewportRectangle: function PageViewport_convertToViewportRectangle(rect) {\n\t      var tl = Util.applyTransform([rect[0], rect[1]], this.transform);\n\t      var br = Util.applyTransform([rect[2], rect[3]], this.transform);\n\t      return [tl[0], tl[1], br[0], br[1]];\n\t    },\n\t    convertToPdfPoint: function PageViewport_convertToPdfPoint(x, y) {\n\t      return Util.applyInverseTransform([x, y], this.transform);\n\t    }\n\t  };\n\t  return PageViewport;\n\t}();\n\tvar PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\n\tfunction stringToPDFString(str) {\n\t  var i,\n\t      n = str.length,\n\t      strBuf = [];\n\t  if (str[0] === '\\xFE' && str[1] === '\\xFF') {\n\t    for (i = 2; i < n; i += 2) {\n\t      strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n\t    }\n\t  } else {\n\t    for (i = 0; i < n; ++i) {\n\t      var code = PDFStringTranslateTable[str.charCodeAt(i)];\n\t      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n\t    }\n\t  }\n\t  return strBuf.join('');\n\t}\n\tfunction stringToUTF8String(str) {\n\t  return decodeURIComponent(escape(str));\n\t}\n\tfunction utf8StringToString(str) {\n\t  return unescape(encodeURIComponent(str));\n\t}\n\tfunction isEmptyObj(obj) {\n\t  for (var key in obj) {\n\t    return false;\n\t  }\n\t  return true;\n\t}\n\tfunction isBool(v) {\n\t  return typeof v === 'boolean';\n\t}\n\tfunction isNum(v) {\n\t  return typeof v === 'number';\n\t}\n\tfunction isString(v) {\n\t  return typeof v === 'string';\n\t}\n\tfunction isArrayBuffer(v) {\n\t  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.byteLength !== undefined;\n\t}\n\tfunction isSpace(ch) {\n\t  return ch === 0x20 || ch === 0x09 || ch === 0x0D || ch === 0x0A;\n\t}\n\tfunction isNodeJS() {\n\t  return (typeof process === 'undefined' ? 'undefined' : _typeof(process)) === 'object' && process + '' === '[object process]';\n\t}\n\tfunction createPromiseCapability() {\n\t  var capability = {};\n\t  capability.promise = new Promise(function (resolve, reject) {\n\t    capability.resolve = resolve;\n\t    capability.reject = reject;\n\t  });\n\t  return capability;\n\t}\n\tvar StatTimer = function StatTimerClosure() {\n\t  function rpad(str, pad, length) {\n\t    while (str.length < length) {\n\t      str += pad;\n\t    }\n\t    return str;\n\t  }\n\t  function StatTimer() {\n\t    this.started = Object.create(null);\n\t    this.times = [];\n\t    this.enabled = true;\n\t  }\n\t  StatTimer.prototype = {\n\t    time: function StatTimer_time(name) {\n\t      if (!this.enabled) {\n\t        return;\n\t      }\n\t      if (name in this.started) {\n\t        warn('Timer is already running for ' + name);\n\t      }\n\t      this.started[name] = Date.now();\n\t    },\n\t    timeEnd: function StatTimer_timeEnd(name) {\n\t      if (!this.enabled) {\n\t        return;\n\t      }\n\t      if (!(name in this.started)) {\n\t        warn('Timer has not been started for ' + name);\n\t      }\n\t      this.times.push({\n\t        'name': name,\n\t        'start': this.started[name],\n\t        'end': Date.now()\n\t      });\n\t      delete this.started[name];\n\t    },\n\t    toString: function StatTimer_toString() {\n\t      var i, ii;\n\t      var times = this.times;\n\t      var out = '';\n\t      var longest = 0;\n\t      for (i = 0, ii = times.length; i < ii; ++i) {\n\t        var name = times[i]['name'];\n\t        if (name.length > longest) {\n\t          longest = name.length;\n\t        }\n\t      }\n\t      for (i = 0, ii = times.length; i < ii; ++i) {\n\t        var span = times[i];\n\t        var duration = span.end - span.start;\n\t        out += rpad(span['name'], ' ', longest) + ' ' + duration + 'ms\\n';\n\t      }\n\t      return out;\n\t    }\n\t  };\n\t  return StatTimer;\n\t}();\n\tvar createBlob = function createBlob(data, contentType) {\n\t  if (typeof Blob !== 'undefined') {\n\t    return new Blob([data], { type: contentType });\n\t  }\n\t  throw new Error('The \"Blob\" constructor is not supported.');\n\t};\n\tvar createObjectURL = function createObjectURLClosure() {\n\t  var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\t  return function createObjectURL(data, contentType) {\n\t    var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\t\n\t    if (!forceDataSchema && URL.createObjectURL) {\n\t      var blob = createBlob(data, contentType);\n\t      return URL.createObjectURL(blob);\n\t    }\n\t    var buffer = 'data:' + contentType + ';base64,';\n\t    for (var i = 0, ii = data.length; i < ii; i += 3) {\n\t      var b1 = data[i] & 0xFF;\n\t      var b2 = data[i + 1] & 0xFF;\n\t      var b3 = data[i + 2] & 0xFF;\n\t      var d1 = b1 >> 2,\n\t          d2 = (b1 & 3) << 4 | b2 >> 4;\n\t      var d3 = i + 1 < ii ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\n\t      var d4 = i + 2 < ii ? b3 & 0x3F : 64;\n\t      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n\t    }\n\t    return buffer;\n\t  };\n\t}();\n\tfunction resolveCall(fn, args) {\n\t  var thisArg = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\t\n\t  if (!fn) {\n\t    return Promise.resolve(undefined);\n\t  }\n\t  return new Promise(function (resolve, reject) {\n\t    resolve(fn.apply(thisArg, args));\n\t  });\n\t}\n\tfunction wrapReason(reason) {\n\t  if ((typeof reason === 'undefined' ? 'undefined' : _typeof(reason)) !== 'object') {\n\t    return reason;\n\t  }\n\t  switch (reason.name) {\n\t    case 'AbortException':\n\t      return new AbortException(reason.message);\n\t    case 'MissingPDFException':\n\t      return new MissingPDFException(reason.message);\n\t    case 'UnexpectedResponseException':\n\t      return new UnexpectedResponseException(reason.message, reason.status);\n\t    default:\n\t      return new UnknownErrorException(reason.message, reason.details);\n\t  }\n\t}\n\tfunction makeReasonSerializable(reason) {\n\t  if (!(reason instanceof Error) || reason instanceof AbortException || reason instanceof MissingPDFException || reason instanceof UnexpectedResponseException || reason instanceof UnknownErrorException) {\n\t    return reason;\n\t  }\n\t  return new UnknownErrorException(reason.message, reason.toString());\n\t}\n\tfunction resolveOrReject(capability, success, reason) {\n\t  if (success) {\n\t    capability.resolve();\n\t  } else {\n\t    capability.reject(reason);\n\t  }\n\t}\n\tfunction finalize(promise) {\n\t  return Promise.resolve(promise).catch(function () {});\n\t}\n\tfunction MessageHandler(sourceName, targetName, comObj) {\n\t  var _this = this;\n\t\n\t  this.sourceName = sourceName;\n\t  this.targetName = targetName;\n\t  this.comObj = comObj;\n\t  this.callbackId = 1;\n\t  this.streamId = 1;\n\t  this.postMessageTransfers = true;\n\t  this.streamSinks = Object.create(null);\n\t  this.streamControllers = Object.create(null);\n\t  var callbacksCapabilities = this.callbacksCapabilities = Object.create(null);\n\t  var ah = this.actionHandler = Object.create(null);\n\t  this._onComObjOnMessage = function (event) {\n\t    var data = event.data;\n\t    if (data.targetName !== _this.sourceName) {\n\t      return;\n\t    }\n\t    if (data.stream) {\n\t      _this._processStreamMessage(data);\n\t    } else if (data.isReply) {\n\t      var callbackId = data.callbackId;\n\t      if (data.callbackId in callbacksCapabilities) {\n\t        var callback = callbacksCapabilities[callbackId];\n\t        delete callbacksCapabilities[callbackId];\n\t        if ('error' in data) {\n\t          callback.reject(wrapReason(data.error));\n\t        } else {\n\t          callback.resolve(data.data);\n\t        }\n\t      } else {\n\t        throw new Error('Cannot resolve callback ' + callbackId);\n\t      }\n\t    } else if (data.action in ah) {\n\t      var action = ah[data.action];\n\t      if (data.callbackId) {\n\t        var _sourceName = _this.sourceName;\n\t        var _targetName = data.sourceName;\n\t        Promise.resolve().then(function () {\n\t          return action[0].call(action[1], data.data);\n\t        }).then(function (result) {\n\t          comObj.postMessage({\n\t            sourceName: _sourceName,\n\t            targetName: _targetName,\n\t            isReply: true,\n\t            callbackId: data.callbackId,\n\t            data: result\n\t          });\n\t        }, function (reason) {\n\t          comObj.postMessage({\n\t            sourceName: _sourceName,\n\t            targetName: _targetName,\n\t            isReply: true,\n\t            callbackId: data.callbackId,\n\t            error: makeReasonSerializable(reason)\n\t          });\n\t        });\n\t      } else if (data.streamId) {\n\t        _this._createStreamSink(data);\n\t      } else {\n\t        action[0].call(action[1], data.data);\n\t      }\n\t    } else {\n\t      throw new Error('Unknown action from worker: ' + data.action);\n\t    }\n\t  };\n\t  comObj.addEventListener('message', this._onComObjOnMessage);\n\t}\n\tMessageHandler.prototype = {\n\t  on: function on(actionName, handler, scope) {\n\t    var ah = this.actionHandler;\n\t    if (ah[actionName]) {\n\t      throw new Error('There is already an actionName called \"' + actionName + '\"');\n\t    }\n\t    ah[actionName] = [handler, scope];\n\t  },\n\t  send: function send(actionName, data, transfers) {\n\t    var message = {\n\t      sourceName: this.sourceName,\n\t      targetName: this.targetName,\n\t      action: actionName,\n\t      data: data\n\t    };\n\t    this.postMessage(message, transfers);\n\t  },\n\t  sendWithPromise: function sendWithPromise(actionName, data, transfers) {\n\t    var callbackId = this.callbackId++;\n\t    var message = {\n\t      sourceName: this.sourceName,\n\t      targetName: this.targetName,\n\t      action: actionName,\n\t      data: data,\n\t      callbackId: callbackId\n\t    };\n\t    var capability = createPromiseCapability();\n\t    this.callbacksCapabilities[callbackId] = capability;\n\t    try {\n\t      this.postMessage(message, transfers);\n\t    } catch (e) {\n\t      capability.reject(e);\n\t    }\n\t    return capability.promise;\n\t  },\n\t  sendWithStream: function sendWithStream(actionName, data, queueingStrategy, transfers) {\n\t    var _this2 = this;\n\t\n\t    var streamId = this.streamId++;\n\t    var sourceName = this.sourceName;\n\t    var targetName = this.targetName;\n\t    return new _streams_polyfill.ReadableStream({\n\t      start: function start(controller) {\n\t        var startCapability = createPromiseCapability();\n\t        _this2.streamControllers[streamId] = {\n\t          controller: controller,\n\t          startCall: startCapability,\n\t          isClosed: false\n\t        };\n\t        _this2.postMessage({\n\t          sourceName: sourceName,\n\t          targetName: targetName,\n\t          action: actionName,\n\t          streamId: streamId,\n\t          data: data,\n\t          desiredSize: controller.desiredSize\n\t        });\n\t        return startCapability.promise;\n\t      },\n\t      pull: function pull(controller) {\n\t        var pullCapability = createPromiseCapability();\n\t        _this2.streamControllers[streamId].pullCall = pullCapability;\n\t        _this2.postMessage({\n\t          sourceName: sourceName,\n\t          targetName: targetName,\n\t          stream: 'pull',\n\t          streamId: streamId,\n\t          desiredSize: controller.desiredSize\n\t        });\n\t        return pullCapability.promise;\n\t      },\n\t      cancel: function cancel(reason) {\n\t        var cancelCapability = createPromiseCapability();\n\t        _this2.streamControllers[streamId].cancelCall = cancelCapability;\n\t        _this2.streamControllers[streamId].isClosed = true;\n\t        _this2.postMessage({\n\t          sourceName: sourceName,\n\t          targetName: targetName,\n\t          stream: 'cancel',\n\t          reason: reason,\n\t          streamId: streamId\n\t        });\n\t        return cancelCapability.promise;\n\t      }\n\t    }, queueingStrategy);\n\t  },\n\t  _createStreamSink: function _createStreamSink(data) {\n\t    var _this3 = this;\n\t\n\t    var self = this;\n\t    var action = this.actionHandler[data.action];\n\t    var streamId = data.streamId;\n\t    var desiredSize = data.desiredSize;\n\t    var sourceName = this.sourceName;\n\t    var targetName = data.sourceName;\n\t    var capability = createPromiseCapability();\n\t    var sendStreamRequest = function sendStreamRequest(_ref) {\n\t      var stream = _ref.stream,\n\t          chunk = _ref.chunk,\n\t          transfers = _ref.transfers,\n\t          success = _ref.success,\n\t          reason = _ref.reason;\n\t\n\t      _this3.postMessage({\n\t        sourceName: sourceName,\n\t        targetName: targetName,\n\t        stream: stream,\n\t        streamId: streamId,\n\t        chunk: chunk,\n\t        success: success,\n\t        reason: reason\n\t      }, transfers);\n\t    };\n\t    var streamSink = {\n\t      enqueue: function enqueue(chunk) {\n\t        var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\t        var transfers = arguments[2];\n\t\n\t        if (this.isCancelled) {\n\t          return;\n\t        }\n\t        var lastDesiredSize = this.desiredSize;\n\t        this.desiredSize -= size;\n\t        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n\t          this.sinkCapability = createPromiseCapability();\n\t          this.ready = this.sinkCapability.promise;\n\t        }\n\t        sendStreamRequest({\n\t          stream: 'enqueue',\n\t          chunk: chunk,\n\t          transfers: transfers\n\t        });\n\t      },\n\t      close: function close() {\n\t        if (this.isCancelled) {\n\t          return;\n\t        }\n\t        this.isCancelled = true;\n\t        sendStreamRequest({ stream: 'close' });\n\t        delete self.streamSinks[streamId];\n\t      },\n\t      error: function error(reason) {\n\t        if (this.isCancelled) {\n\t          return;\n\t        }\n\t        this.isCancelled = true;\n\t        sendStreamRequest({\n\t          stream: 'error',\n\t          reason: reason\n\t        });\n\t      },\n\t\n\t      sinkCapability: capability,\n\t      onPull: null,\n\t      onCancel: null,\n\t      isCancelled: false,\n\t      desiredSize: desiredSize,\n\t      ready: null\n\t    };\n\t    streamSink.sinkCapability.resolve();\n\t    streamSink.ready = streamSink.sinkCapability.promise;\n\t    this.streamSinks[streamId] = streamSink;\n\t    resolveCall(action[0], [data.data, streamSink], action[1]).then(function () {\n\t      sendStreamRequest({\n\t        stream: 'start_complete',\n\t        success: true\n\t      });\n\t    }, function (reason) {\n\t      sendStreamRequest({\n\t        stream: 'start_complete',\n\t        success: false,\n\t        reason: reason\n\t      });\n\t    });\n\t  },\n\t  _processStreamMessage: function _processStreamMessage(data) {\n\t    var _this4 = this;\n\t\n\t    var sourceName = this.sourceName;\n\t    var targetName = data.sourceName;\n\t    var streamId = data.streamId;\n\t    var sendStreamResponse = function sendStreamResponse(_ref2) {\n\t      var stream = _ref2.stream,\n\t          success = _ref2.success,\n\t          reason = _ref2.reason;\n\t\n\t      _this4.comObj.postMessage({\n\t        sourceName: sourceName,\n\t        targetName: targetName,\n\t        stream: stream,\n\t        success: success,\n\t        streamId: streamId,\n\t        reason: reason\n\t      });\n\t    };\n\t    var deleteStreamController = function deleteStreamController() {\n\t      Promise.all([_this4.streamControllers[data.streamId].startCall, _this4.streamControllers[data.streamId].pullCall, _this4.streamControllers[data.streamId].cancelCall].map(function (capability) {\n\t        return capability && finalize(capability.promise);\n\t      })).then(function () {\n\t        delete _this4.streamControllers[data.streamId];\n\t      });\n\t    };\n\t    switch (data.stream) {\n\t      case 'start_complete':\n\t        resolveOrReject(this.streamControllers[data.streamId].startCall, data.success, wrapReason(data.reason));\n\t        break;\n\t      case 'pull_complete':\n\t        resolveOrReject(this.streamControllers[data.streamId].pullCall, data.success, wrapReason(data.reason));\n\t        break;\n\t      case 'pull':\n\t        if (!this.streamSinks[data.streamId]) {\n\t          sendStreamResponse({\n\t            stream: 'pull_complete',\n\t            success: true\n\t          });\n\t          break;\n\t        }\n\t        if (this.streamSinks[data.streamId].desiredSize <= 0 && data.desiredSize > 0) {\n\t          this.streamSinks[data.streamId].sinkCapability.resolve();\n\t        }\n\t        this.streamSinks[data.streamId].desiredSize = data.desiredSize;\n\t        resolveCall(this.streamSinks[data.streamId].onPull).then(function () {\n\t          sendStreamResponse({\n\t            stream: 'pull_complete',\n\t            success: true\n\t          });\n\t        }, function (reason) {\n\t          sendStreamResponse({\n\t            stream: 'pull_complete',\n\t            success: false,\n\t            reason: reason\n\t          });\n\t        });\n\t        break;\n\t      case 'enqueue':\n\t        assert(this.streamControllers[data.streamId], 'enqueue should have stream controller');\n\t        if (!this.streamControllers[data.streamId].isClosed) {\n\t          this.streamControllers[data.streamId].controller.enqueue(data.chunk);\n\t        }\n\t        break;\n\t      case 'close':\n\t        assert(this.streamControllers[data.streamId], 'close should have stream controller');\n\t        if (this.streamControllers[data.streamId].isClosed) {\n\t          break;\n\t        }\n\t        this.streamControllers[data.streamId].isClosed = true;\n\t        this.streamControllers[data.streamId].controller.close();\n\t        deleteStreamController();\n\t        break;\n\t      case 'error':\n\t        assert(this.streamControllers[data.streamId], 'error should have stream controller');\n\t        this.streamControllers[data.streamId].controller.error(wrapReason(data.reason));\n\t        deleteStreamController();\n\t        break;\n\t      case 'cancel_complete':\n\t        resolveOrReject(this.streamControllers[data.streamId].cancelCall, data.success, wrapReason(data.reason));\n\t        deleteStreamController();\n\t        break;\n\t      case 'cancel':\n\t        if (!this.streamSinks[data.streamId]) {\n\t          break;\n\t        }\n\t        resolveCall(this.streamSinks[data.streamId].onCancel, [wrapReason(data.reason)]).then(function () {\n\t          sendStreamResponse({\n\t            stream: 'cancel_complete',\n\t            success: true\n\t          });\n\t        }, function (reason) {\n\t          sendStreamResponse({\n\t            stream: 'cancel_complete',\n\t            success: false,\n\t            reason: reason\n\t          });\n\t        });\n\t        this.streamSinks[data.streamId].sinkCapability.reject(wrapReason(data.reason));\n\t        this.streamSinks[data.streamId].isCancelled = true;\n\t        delete this.streamSinks[data.streamId];\n\t        break;\n\t      default:\n\t        throw new Error('Unexpected stream case');\n\t    }\n\t  },\n\t  postMessage: function postMessage(message, transfers) {\n\t    if (transfers && this.postMessageTransfers) {\n\t      this.comObj.postMessage(message, transfers);\n\t    } else {\n\t      this.comObj.postMessage(message);\n\t    }\n\t  },\n\t  destroy: function destroy() {\n\t    this.comObj.removeEventListener('message', this._onComObjOnMessage);\n\t  }\n\t};\n\tfunction loadJpegStream(id, imageUrl, objs) {\n\t  var img = new Image();\n\t  img.onload = function loadJpegStream_onloadClosure() {\n\t    objs.resolve(id, img);\n\t  };\n\t  img.onerror = function loadJpegStream_onerrorClosure() {\n\t    objs.resolve(id, null);\n\t    warn('Error during JPEG image loading');\n\t  };\n\t  img.src = imageUrl;\n\t}\n\texports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\n\texports.IDENTITY_MATRIX = IDENTITY_MATRIX;\n\texports.OPS = OPS;\n\texports.VERBOSITY_LEVELS = VERBOSITY_LEVELS;\n\texports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\n\texports.AnnotationBorderStyleType = AnnotationBorderStyleType;\n\texports.AnnotationFieldFlag = AnnotationFieldFlag;\n\texports.AnnotationFlag = AnnotationFlag;\n\texports.AnnotationType = AnnotationType;\n\texports.FontType = FontType;\n\texports.ImageKind = ImageKind;\n\texports.CMapCompressionType = CMapCompressionType;\n\texports.AbortException = AbortException;\n\texports.InvalidPDFException = InvalidPDFException;\n\texports.MessageHandler = MessageHandler;\n\texports.MissingDataException = MissingDataException;\n\texports.MissingPDFException = MissingPDFException;\n\texports.NativeImageDecoding = NativeImageDecoding;\n\texports.NotImplementedException = NotImplementedException;\n\texports.PageViewport = PageViewport;\n\texports.PasswordException = PasswordException;\n\texports.PasswordResponses = PasswordResponses;\n\texports.StatTimer = StatTimer;\n\texports.StreamType = StreamType;\n\texports.TextRenderingMode = TextRenderingMode;\n\texports.UnexpectedResponseException = UnexpectedResponseException;\n\texports.UnknownErrorException = UnknownErrorException;\n\texports.Util = Util;\n\texports.XRefParseException = XRefParseException;\n\texports.FormatError = FormatError;\n\texports.arrayByteLength = arrayByteLength;\n\texports.arraysToBytes = arraysToBytes;\n\texports.assert = assert;\n\texports.bytesToString = bytesToString;\n\texports.createBlob = createBlob;\n\texports.createPromiseCapability = createPromiseCapability;\n\texports.createObjectURL = createObjectURL;\n\texports.deprecated = deprecated;\n\texports.getLookupTableFactory = getLookupTableFactory;\n\texports.getVerbosityLevel = getVerbosityLevel;\n\texports.info = info;\n\texports.isArrayBuffer = isArrayBuffer;\n\texports.isBool = isBool;\n\texports.isEmptyObj = isEmptyObj;\n\texports.isNum = isNum;\n\texports.isString = isString;\n\texports.isSpace = isSpace;\n\texports.isNodeJS = isNodeJS;\n\texports.isSameOrigin = isSameOrigin;\n\texports.createValidAbsoluteUrl = createValidAbsoluteUrl;\n\texports.isLittleEndian = isLittleEndian;\n\texports.isEvalSupported = isEvalSupported;\n\texports.loadJpegStream = loadJpegStream;\n\texports.log2 = log2;\n\texports.readInt8 = readInt8;\n\texports.readUint16 = readUint16;\n\texports.readUint32 = readUint32;\n\texports.removeNullCharacters = removeNullCharacters;\n\texports.ReadableStream = _streams_polyfill.ReadableStream;\n\texports.setVerbosityLevel = setVerbosityLevel;\n\texports.shadow = shadow;\n\texports.string32 = string32;\n\texports.stringToBytes = stringToBytes;\n\texports.stringToPDFString = stringToPDFString;\n\texports.stringToUTF8String = stringToUTF8String;\n\texports.utf8StringToString = utf8StringToString;\n\texports.warn = warn;\n\texports.unreachable = unreachable;\n\t\n\t/***/ }),\n\t/* 1 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\n\tif (typeof __g == 'number') __g = global;\n\t\n\t/***/ }),\n\t/* 2 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar EOF = {};\n\tvar Name = function NameClosure() {\n\t  function Name(name) {\n\t    this.name = name;\n\t  }\n\t  Name.prototype = {};\n\t  var nameCache = Object.create(null);\n\t  Name.get = function Name_get(name) {\n\t    var nameValue = nameCache[name];\n\t    return nameValue ? nameValue : nameCache[name] = new Name(name);\n\t  };\n\t  return Name;\n\t}();\n\tvar Cmd = function CmdClosure() {\n\t  function Cmd(cmd) {\n\t    this.cmd = cmd;\n\t  }\n\t  Cmd.prototype = {};\n\t  var cmdCache = Object.create(null);\n\t  Cmd.get = function Cmd_get(cmd) {\n\t    var cmdValue = cmdCache[cmd];\n\t    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n\t  };\n\t  return Cmd;\n\t}();\n\tvar Dict = function DictClosure() {\n\t  var nonSerializable = function nonSerializableClosure() {\n\t    return nonSerializable;\n\t  };\n\t  function Dict(xref) {\n\t    this._map = Object.create(null);\n\t    this.xref = xref;\n\t    this.objId = null;\n\t    this.suppressEncryption = false;\n\t    this.__nonSerializable__ = nonSerializable;\n\t  }\n\t  Dict.prototype = {\n\t    assignXref: function Dict_assignXref(newXref) {\n\t      this.xref = newXref;\n\t    },\n\t    get: function Dict_get(key1, key2, key3) {\n\t      var value;\n\t      var xref = this.xref,\n\t          suppressEncryption = this.suppressEncryption;\n\t      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n\t        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n\t      }\n\t      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n\t        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n\t      }\n\t      value = this._map[key3] || null;\n\t      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n\t    },\n\t    getAsync: function Dict_getAsync(key1, key2, key3) {\n\t      var value;\n\t      var xref = this.xref,\n\t          suppressEncryption = this.suppressEncryption;\n\t      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n\t        if (xref) {\n\t          return xref.fetchIfRefAsync(value, suppressEncryption);\n\t        }\n\t        return Promise.resolve(value);\n\t      }\n\t      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n\t        if (xref) {\n\t          return xref.fetchIfRefAsync(value, suppressEncryption);\n\t        }\n\t        return Promise.resolve(value);\n\t      }\n\t      value = this._map[key3] || null;\n\t      if (xref) {\n\t        return xref.fetchIfRefAsync(value, suppressEncryption);\n\t      }\n\t      return Promise.resolve(value);\n\t    },\n\t    getArray: function Dict_getArray(key1, key2, key3) {\n\t      var value = this.get(key1, key2, key3);\n\t      var xref = this.xref,\n\t          suppressEncryption = this.suppressEncryption;\n\t      if (!Array.isArray(value) || !xref) {\n\t        return value;\n\t      }\n\t      value = value.slice();\n\t      for (var i = 0, ii = value.length; i < ii; i++) {\n\t        if (!isRef(value[i])) {\n\t          continue;\n\t        }\n\t        value[i] = xref.fetch(value[i], suppressEncryption);\n\t      }\n\t      return value;\n\t    },\n\t    getRaw: function Dict_getRaw(key) {\n\t      return this._map[key];\n\t    },\n\t    getKeys: function Dict_getKeys() {\n\t      return Object.keys(this._map);\n\t    },\n\t    set: function Dict_set(key, value) {\n\t      this._map[key] = value;\n\t    },\n\t    has: function Dict_has(key) {\n\t      return key in this._map;\n\t    },\n\t    forEach: function Dict_forEach(callback) {\n\t      for (var key in this._map) {\n\t        callback(key, this.get(key));\n\t      }\n\t    }\n\t  };\n\t  Dict.empty = new Dict(null);\n\t  Dict.merge = function (xref, dictArray) {\n\t    var mergedDict = new Dict(xref);\n\t    for (var i = 0, ii = dictArray.length; i < ii; i++) {\n\t      var dict = dictArray[i];\n\t      if (!isDict(dict)) {\n\t        continue;\n\t      }\n\t      for (var keyName in dict._map) {\n\t        if (mergedDict._map[keyName] !== undefined) {\n\t          continue;\n\t        }\n\t        mergedDict._map[keyName] = dict._map[keyName];\n\t      }\n\t    }\n\t    return mergedDict;\n\t  };\n\t  return Dict;\n\t}();\n\tvar Ref = function RefClosure() {\n\t  function Ref(num, gen) {\n\t    this.num = num;\n\t    this.gen = gen;\n\t  }\n\t  Ref.prototype = {\n\t    toString: function Ref_toString() {\n\t      var str = this.num + 'R';\n\t      if (this.gen !== 0) {\n\t        str += this.gen;\n\t      }\n\t      return str;\n\t    }\n\t  };\n\t  return Ref;\n\t}();\n\tvar RefSet = function RefSetClosure() {\n\t  function RefSet() {\n\t    this.dict = Object.create(null);\n\t  }\n\t  RefSet.prototype = {\n\t    has: function RefSet_has(ref) {\n\t      return ref.toString() in this.dict;\n\t    },\n\t    put: function RefSet_put(ref) {\n\t      this.dict[ref.toString()] = true;\n\t    },\n\t    remove: function RefSet_remove(ref) {\n\t      delete this.dict[ref.toString()];\n\t    }\n\t  };\n\t  return RefSet;\n\t}();\n\tvar RefSetCache = function RefSetCacheClosure() {\n\t  function RefSetCache() {\n\t    this.dict = Object.create(null);\n\t  }\n\t  RefSetCache.prototype = {\n\t    get: function RefSetCache_get(ref) {\n\t      return this.dict[ref.toString()];\n\t    },\n\t    has: function RefSetCache_has(ref) {\n\t      return ref.toString() in this.dict;\n\t    },\n\t    put: function RefSetCache_put(ref, obj) {\n\t      this.dict[ref.toString()] = obj;\n\t    },\n\t    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n\t      this.dict[ref.toString()] = this.get(aliasRef);\n\t    },\n\t    forEach: function RefSetCache_forEach(fn, thisArg) {\n\t      for (var i in this.dict) {\n\t        fn.call(thisArg, this.dict[i]);\n\t      }\n\t    },\n\t    clear: function RefSetCache_clear() {\n\t      this.dict = Object.create(null);\n\t    }\n\t  };\n\t  return RefSetCache;\n\t}();\n\tfunction isEOF(v) {\n\t  return v === EOF;\n\t}\n\tfunction isName(v, name) {\n\t  return v instanceof Name && (name === undefined || v.name === name);\n\t}\n\tfunction isCmd(v, cmd) {\n\t  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n\t}\n\tfunction isDict(v, type) {\n\t  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n\t}\n\tfunction isRef(v) {\n\t  return v instanceof Ref;\n\t}\n\tfunction isRefsEqual(v1, v2) {\n\t  return v1.num === v2.num && v1.gen === v2.gen;\n\t}\n\tfunction isStream(v) {\n\t  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\n\t}\n\texports.EOF = EOF;\n\texports.Cmd = Cmd;\n\texports.Dict = Dict;\n\texports.Name = Name;\n\texports.Ref = Ref;\n\texports.RefSet = RefSet;\n\texports.RefSetCache = RefSetCache;\n\texports.isEOF = isEOF;\n\texports.isCmd = isCmd;\n\texports.isDict = isDict;\n\texports.isName = isName;\n\texports.isRef = isRef;\n\texports.isRefsEqual = isRefsEqual;\n\texports.isStream = isStream;\n\t\n\t/***/ }),\n\t/* 3 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tmodule.exports = function (it) {\n\t  return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) === 'object' ? it !== null : typeof it === 'function';\n\t};\n\t\n\t/***/ }),\n\t/* 4 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar store = __w_pdfjs_require__(54)('wks');\n\tvar uid = __w_pdfjs_require__(17);\n\tvar _Symbol = __w_pdfjs_require__(1).Symbol;\n\tvar USE_SYMBOL = typeof _Symbol == 'function';\n\tvar $exports = module.exports = function (name) {\n\t  return store[name] || (store[name] = USE_SYMBOL && _Symbol[name] || (USE_SYMBOL ? _Symbol : uid)('Symbol.' + name));\n\t};\n\t$exports.store = store;\n\t\n\t/***/ }),\n\t/* 5 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.JpxStream = exports.JpegStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar _jpg = __w_pdfjs_require__(129);\n\t\n\tvar _jpx = __w_pdfjs_require__(74);\n\t\n\tvar Stream = function StreamClosure() {\n\t  function Stream(arrayBuffer, start, length, dict) {\n\t    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n\t    this.start = start || 0;\n\t    this.pos = this.start;\n\t    this.end = start + length || this.bytes.length;\n\t    this.dict = dict;\n\t  }\n\t  Stream.prototype = {\n\t    get length() {\n\t      return this.end - this.start;\n\t    },\n\t    get isEmpty() {\n\t      return this.length === 0;\n\t    },\n\t    getByte: function Stream_getByte() {\n\t      if (this.pos >= this.end) {\n\t        return -1;\n\t      }\n\t      return this.bytes[this.pos++];\n\t    },\n\t    getUint16: function Stream_getUint16() {\n\t      var b0 = this.getByte();\n\t      var b1 = this.getByte();\n\t      if (b0 === -1 || b1 === -1) {\n\t        return -1;\n\t      }\n\t      return (b0 << 8) + b1;\n\t    },\n\t    getInt32: function Stream_getInt32() {\n\t      var b0 = this.getByte();\n\t      var b1 = this.getByte();\n\t      var b2 = this.getByte();\n\t      var b3 = this.getByte();\n\t      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n\t    },\n\t    getBytes: function Stream_getBytes(length) {\n\t      var bytes = this.bytes;\n\t      var pos = this.pos;\n\t      var strEnd = this.end;\n\t      if (!length) {\n\t        return bytes.subarray(pos, strEnd);\n\t      }\n\t      var end = pos + length;\n\t      if (end > strEnd) {\n\t        end = strEnd;\n\t      }\n\t      this.pos = end;\n\t      return bytes.subarray(pos, end);\n\t    },\n\t    peekByte: function Stream_peekByte() {\n\t      var peekedByte = this.getByte();\n\t      this.pos--;\n\t      return peekedByte;\n\t    },\n\t    peekBytes: function Stream_peekBytes(length) {\n\t      var bytes = this.getBytes(length);\n\t      this.pos -= bytes.length;\n\t      return bytes;\n\t    },\n\t    skip: function Stream_skip(n) {\n\t      if (!n) {\n\t        n = 1;\n\t      }\n\t      this.pos += n;\n\t    },\n\t    reset: function Stream_reset() {\n\t      this.pos = this.start;\n\t    },\n\t    moveStart: function Stream_moveStart() {\n\t      this.start = this.pos;\n\t    },\n\t    makeSubStream: function Stream_makeSubStream(start, length, dict) {\n\t      return new Stream(this.bytes.buffer, start, length, dict);\n\t    }\n\t  };\n\t  return Stream;\n\t}();\n\tvar StringStream = function StringStreamClosure() {\n\t  function StringStream(str) {\n\t    var bytes = (0, _util.stringToBytes)(str);\n\t    Stream.call(this, bytes);\n\t  }\n\t  StringStream.prototype = Stream.prototype;\n\t  return StringStream;\n\t}();\n\tvar DecodeStream = function DecodeStreamClosure() {\n\t  var emptyBuffer = new Uint8Array(0);\n\t  function DecodeStream(maybeMinBufferLength) {\n\t    this.pos = 0;\n\t    this.bufferLength = 0;\n\t    this.eof = false;\n\t    this.buffer = emptyBuffer;\n\t    this.minBufferLength = 512;\n\t    if (maybeMinBufferLength) {\n\t      while (this.minBufferLength < maybeMinBufferLength) {\n\t        this.minBufferLength *= 2;\n\t      }\n\t    }\n\t  }\n\t  DecodeStream.prototype = {\n\t    get isEmpty() {\n\t      while (!this.eof && this.bufferLength === 0) {\n\t        this.readBlock();\n\t      }\n\t      return this.bufferLength === 0;\n\t    },\n\t    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n\t      var buffer = this.buffer;\n\t      if (requested <= buffer.byteLength) {\n\t        return buffer;\n\t      }\n\t      var size = this.minBufferLength;\n\t      while (size < requested) {\n\t        size *= 2;\n\t      }\n\t      var buffer2 = new Uint8Array(size);\n\t      buffer2.set(buffer);\n\t      return this.buffer = buffer2;\n\t    },\n\t    getByte: function DecodeStream_getByte() {\n\t      var pos = this.pos;\n\t      while (this.bufferLength <= pos) {\n\t        if (this.eof) {\n\t          return -1;\n\t        }\n\t        this.readBlock();\n\t      }\n\t      return this.buffer[this.pos++];\n\t    },\n\t    getUint16: function DecodeStream_getUint16() {\n\t      var b0 = this.getByte();\n\t      var b1 = this.getByte();\n\t      if (b0 === -1 || b1 === -1) {\n\t        return -1;\n\t      }\n\t      return (b0 << 8) + b1;\n\t    },\n\t    getInt32: function DecodeStream_getInt32() {\n\t      var b0 = this.getByte();\n\t      var b1 = this.getByte();\n\t      var b2 = this.getByte();\n\t      var b3 = this.getByte();\n\t      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n\t    },\n\t    getBytes: function DecodeStream_getBytes(length) {\n\t      var end,\n\t          pos = this.pos;\n\t      if (length) {\n\t        this.ensureBuffer(pos + length);\n\t        end = pos + length;\n\t        while (!this.eof && this.bufferLength < end) {\n\t          this.readBlock();\n\t        }\n\t        var bufEnd = this.bufferLength;\n\t        if (end > bufEnd) {\n\t          end = bufEnd;\n\t        }\n\t      } else {\n\t        while (!this.eof) {\n\t          this.readBlock();\n\t        }\n\t        end = this.bufferLength;\n\t      }\n\t      this.pos = end;\n\t      return this.buffer.subarray(pos, end);\n\t    },\n\t    peekByte: function DecodeStream_peekByte() {\n\t      var peekedByte = this.getByte();\n\t      this.pos--;\n\t      return peekedByte;\n\t    },\n\t    peekBytes: function DecodeStream_peekBytes(length) {\n\t      var bytes = this.getBytes(length);\n\t      this.pos -= bytes.length;\n\t      return bytes;\n\t    },\n\t    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n\t      var end = start + length;\n\t      while (this.bufferLength <= end && !this.eof) {\n\t        this.readBlock();\n\t      }\n\t      return new Stream(this.buffer, start, length, dict);\n\t    },\n\t    skip: function DecodeStream_skip(n) {\n\t      if (!n) {\n\t        n = 1;\n\t      }\n\t      this.pos += n;\n\t    },\n\t    reset: function DecodeStream_reset() {\n\t      this.pos = 0;\n\t    },\n\t    getBaseStreams: function DecodeStream_getBaseStreams() {\n\t      if (this.str && this.str.getBaseStreams) {\n\t        return this.str.getBaseStreams();\n\t      }\n\t      return [];\n\t    }\n\t  };\n\t  return DecodeStream;\n\t}();\n\tvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n\t  function StreamsSequenceStream(streams) {\n\t    this.streams = streams;\n\t    DecodeStream.call(this, null);\n\t  }\n\t  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n\t  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n\t    var streams = this.streams;\n\t    if (streams.length === 0) {\n\t      this.eof = true;\n\t      return;\n\t    }\n\t    var stream = streams.shift();\n\t    var chunk = stream.getBytes();\n\t    var bufferLength = this.bufferLength;\n\t    var newLength = bufferLength + chunk.length;\n\t    var buffer = this.ensureBuffer(newLength);\n\t    buffer.set(chunk, bufferLength);\n\t    this.bufferLength = newLength;\n\t  };\n\t  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n\t    var baseStreams = [];\n\t    for (var i = 0, ii = this.streams.length; i < ii; i++) {\n\t      var stream = this.streams[i];\n\t      if (stream.getBaseStreams) {\n\t        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\n\t      }\n\t    }\n\t    return baseStreams;\n\t  };\n\t  return StreamsSequenceStream;\n\t}();\n\tvar FlateStream = function FlateStreamClosure() {\n\t  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n\t  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\n\t  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\n\t  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\n\t  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\n\t  function FlateStream(str, maybeLength) {\n\t    this.str = str;\n\t    this.dict = str.dict;\n\t    var cmf = str.getByte();\n\t    var flg = str.getByte();\n\t    if (cmf === -1 || flg === -1) {\n\t      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\n\t    }\n\t    if ((cmf & 0x0f) !== 0x08) {\n\t      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n\t    }\n\t    if (((cmf << 8) + flg) % 31 !== 0) {\n\t      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n\t    }\n\t    if (flg & 0x20) {\n\t      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n\t    }\n\t    this.codeSize = 0;\n\t    this.codeBuf = 0;\n\t    DecodeStream.call(this, maybeLength);\n\t  }\n\t  FlateStream.prototype = Object.create(DecodeStream.prototype);\n\t  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n\t    var str = this.str;\n\t    var codeSize = this.codeSize;\n\t    var codeBuf = this.codeBuf;\n\t    var b;\n\t    while (codeSize < bits) {\n\t      if ((b = str.getByte()) === -1) {\n\t        throw new _util.FormatError('Bad encoding in flate stream');\n\t      }\n\t      codeBuf |= b << codeSize;\n\t      codeSize += 8;\n\t    }\n\t    b = codeBuf & (1 << bits) - 1;\n\t    this.codeBuf = codeBuf >> bits;\n\t    this.codeSize = codeSize -= bits;\n\t    return b;\n\t  };\n\t  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n\t    var str = this.str;\n\t    var codes = table[0];\n\t    var maxLen = table[1];\n\t    var codeSize = this.codeSize;\n\t    var codeBuf = this.codeBuf;\n\t    var b;\n\t    while (codeSize < maxLen) {\n\t      if ((b = str.getByte()) === -1) {\n\t        break;\n\t      }\n\t      codeBuf |= b << codeSize;\n\t      codeSize += 8;\n\t    }\n\t    var code = codes[codeBuf & (1 << maxLen) - 1];\n\t    var codeLen = code >> 16;\n\t    var codeVal = code & 0xffff;\n\t    if (codeLen < 1 || codeSize < codeLen) {\n\t      throw new _util.FormatError('Bad encoding in flate stream');\n\t    }\n\t    this.codeBuf = codeBuf >> codeLen;\n\t    this.codeSize = codeSize - codeLen;\n\t    return codeVal;\n\t  };\n\t  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n\t    var n = lengths.length;\n\t    var maxLen = 0;\n\t    var i;\n\t    for (i = 0; i < n; ++i) {\n\t      if (lengths[i] > maxLen) {\n\t        maxLen = lengths[i];\n\t      }\n\t    }\n\t    var size = 1 << maxLen;\n\t    var codes = new Int32Array(size);\n\t    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n\t      for (var val = 0; val < n; ++val) {\n\t        if (lengths[val] === len) {\n\t          var code2 = 0;\n\t          var t = code;\n\t          for (i = 0; i < len; ++i) {\n\t            code2 = code2 << 1 | t & 1;\n\t            t >>= 1;\n\t          }\n\t          for (i = code2; i < size; i += skip) {\n\t            codes[i] = len << 16 | val;\n\t          }\n\t          ++code;\n\t        }\n\t      }\n\t    }\n\t    return [codes, maxLen];\n\t  };\n\t  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n\t    var buffer, len;\n\t    var str = this.str;\n\t    var hdr = this.getBits(3);\n\t    if (hdr & 1) {\n\t      this.eof = true;\n\t    }\n\t    hdr >>= 1;\n\t    if (hdr === 0) {\n\t      var b;\n\t      if ((b = str.getByte()) === -1) {\n\t        throw new _util.FormatError('Bad block header in flate stream');\n\t      }\n\t      var blockLen = b;\n\t      if ((b = str.getByte()) === -1) {\n\t        throw new _util.FormatError('Bad block header in flate stream');\n\t      }\n\t      blockLen |= b << 8;\n\t      if ((b = str.getByte()) === -1) {\n\t        throw new _util.FormatError('Bad block header in flate stream');\n\t      }\n\t      var check = b;\n\t      if ((b = str.getByte()) === -1) {\n\t        throw new _util.FormatError('Bad block header in flate stream');\n\t      }\n\t      check |= b << 8;\n\t      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n\t        throw new _util.FormatError('Bad uncompressed block length in flate stream');\n\t      }\n\t      this.codeBuf = 0;\n\t      this.codeSize = 0;\n\t      var bufferLength = this.bufferLength;\n\t      buffer = this.ensureBuffer(bufferLength + blockLen);\n\t      var end = bufferLength + blockLen;\n\t      this.bufferLength = end;\n\t      if (blockLen === 0) {\n\t        if (str.peekByte() === -1) {\n\t          this.eof = true;\n\t        }\n\t      } else {\n\t        for (var n = bufferLength; n < end; ++n) {\n\t          if ((b = str.getByte()) === -1) {\n\t            this.eof = true;\n\t            break;\n\t          }\n\t          buffer[n] = b;\n\t        }\n\t      }\n\t      return;\n\t    }\n\t    var litCodeTable;\n\t    var distCodeTable;\n\t    if (hdr === 1) {\n\t      litCodeTable = fixedLitCodeTab;\n\t      distCodeTable = fixedDistCodeTab;\n\t    } else if (hdr === 2) {\n\t      var numLitCodes = this.getBits(5) + 257;\n\t      var numDistCodes = this.getBits(5) + 1;\n\t      var numCodeLenCodes = this.getBits(4) + 4;\n\t      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n\t      var i;\n\t      for (i = 0; i < numCodeLenCodes; ++i) {\n\t        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n\t      }\n\t      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n\t      len = 0;\n\t      i = 0;\n\t      var codes = numLitCodes + numDistCodes;\n\t      var codeLengths = new Uint8Array(codes);\n\t      var bitsLength, bitsOffset, what;\n\t      while (i < codes) {\n\t        var code = this.getCode(codeLenCodeTab);\n\t        if (code === 16) {\n\t          bitsLength = 2;\n\t          bitsOffset = 3;\n\t          what = len;\n\t        } else if (code === 17) {\n\t          bitsLength = 3;\n\t          bitsOffset = 3;\n\t          what = len = 0;\n\t        } else if (code === 18) {\n\t          bitsLength = 7;\n\t          bitsOffset = 11;\n\t          what = len = 0;\n\t        } else {\n\t          codeLengths[i++] = len = code;\n\t          continue;\n\t        }\n\t        var repeatLength = this.getBits(bitsLength) + bitsOffset;\n\t        while (repeatLength-- > 0) {\n\t          codeLengths[i++] = what;\n\t        }\n\t      }\n\t      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n\t      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n\t    } else {\n\t      throw new _util.FormatError('Unknown block type in flate stream');\n\t    }\n\t    buffer = this.buffer;\n\t    var limit = buffer ? buffer.length : 0;\n\t    var pos = this.bufferLength;\n\t    while (true) {\n\t      var code1 = this.getCode(litCodeTable);\n\t      if (code1 < 256) {\n\t        if (pos + 1 >= limit) {\n\t          buffer = this.ensureBuffer(pos + 1);\n\t          limit = buffer.length;\n\t        }\n\t        buffer[pos++] = code1;\n\t        continue;\n\t      }\n\t      if (code1 === 256) {\n\t        this.bufferLength = pos;\n\t        return;\n\t      }\n\t      code1 -= 257;\n\t      code1 = lengthDecode[code1];\n\t      var code2 = code1 >> 16;\n\t      if (code2 > 0) {\n\t        code2 = this.getBits(code2);\n\t      }\n\t      len = (code1 & 0xffff) + code2;\n\t      code1 = this.getCode(distCodeTable);\n\t      code1 = distDecode[code1];\n\t      code2 = code1 >> 16;\n\t      if (code2 > 0) {\n\t        code2 = this.getBits(code2);\n\t      }\n\t      var dist = (code1 & 0xffff) + code2;\n\t      if (pos + len >= limit) {\n\t        buffer = this.ensureBuffer(pos + len);\n\t        limit = buffer.length;\n\t      }\n\t      for (var k = 0; k < len; ++k, ++pos) {\n\t        buffer[pos] = buffer[pos - dist];\n\t      }\n\t    }\n\t  };\n\t  return FlateStream;\n\t}();\n\tvar PredictorStream = function PredictorStreamClosure() {\n\t  function PredictorStream(str, maybeLength, params) {\n\t    if (!(0, _primitives.isDict)(params)) {\n\t      return str;\n\t    }\n\t    var predictor = this.predictor = params.get('Predictor') || 1;\n\t    if (predictor <= 1) {\n\t      return str;\n\t    }\n\t    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n\t      throw new _util.FormatError('Unsupported predictor: ' + predictor);\n\t    }\n\t    if (predictor === 2) {\n\t      this.readBlock = this.readBlockTiff;\n\t    } else {\n\t      this.readBlock = this.readBlockPng;\n\t    }\n\t    this.str = str;\n\t    this.dict = str.dict;\n\t    var colors = this.colors = params.get('Colors') || 1;\n\t    var bits = this.bits = params.get('BitsPerComponent') || 8;\n\t    var columns = this.columns = params.get('Columns') || 1;\n\t    this.pixBytes = colors * bits + 7 >> 3;\n\t    this.rowBytes = columns * colors * bits + 7 >> 3;\n\t    DecodeStream.call(this, maybeLength);\n\t    return this;\n\t  }\n\t  PredictorStream.prototype = Object.create(DecodeStream.prototype);\n\t  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n\t    var rowBytes = this.rowBytes;\n\t    var bufferLength = this.bufferLength;\n\t    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n\t    var bits = this.bits;\n\t    var colors = this.colors;\n\t    var rawBytes = this.str.getBytes(rowBytes);\n\t    this.eof = !rawBytes.length;\n\t    if (this.eof) {\n\t      return;\n\t    }\n\t    var inbuf = 0,\n\t        outbuf = 0;\n\t    var inbits = 0,\n\t        outbits = 0;\n\t    var pos = bufferLength;\n\t    var i;\n\t    if (bits === 1 && colors === 1) {\n\t      for (i = 0; i < rowBytes; ++i) {\n\t        var c = rawBytes[i] ^ inbuf;\n\t        c ^= c >> 1;\n\t        c ^= c >> 2;\n\t        c ^= c >> 4;\n\t        inbuf = (c & 1) << 7;\n\t        buffer[pos++] = c;\n\t      }\n\t    } else if (bits === 8) {\n\t      for (i = 0; i < colors; ++i) {\n\t        buffer[pos++] = rawBytes[i];\n\t      }\n\t      for (; i < rowBytes; ++i) {\n\t        buffer[pos] = buffer[pos - colors] + rawBytes[i];\n\t        pos++;\n\t      }\n\t    } else if (bits === 16) {\n\t      var bytesPerPixel = colors * 2;\n\t      for (i = 0; i < bytesPerPixel; ++i) {\n\t        buffer[pos++] = rawBytes[i];\n\t      }\n\t      for (; i < rowBytes; i += 2) {\n\t        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\n\t        buffer[pos++] = sum >> 8 & 0xFF;\n\t        buffer[pos++] = sum & 0xFF;\n\t      }\n\t    } else {\n\t      var compArray = new Uint8Array(colors + 1);\n\t      var bitMask = (1 << bits) - 1;\n\t      var j = 0,\n\t          k = bufferLength;\n\t      var columns = this.columns;\n\t      for (i = 0; i < columns; ++i) {\n\t        for (var kk = 0; kk < colors; ++kk) {\n\t          if (inbits < bits) {\n\t            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n\t            inbits += 8;\n\t          }\n\t          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n\t          inbits -= bits;\n\t          outbuf = outbuf << bits | compArray[kk];\n\t          outbits += bits;\n\t          if (outbits >= 8) {\n\t            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n\t            outbits -= 8;\n\t          }\n\t        }\n\t      }\n\t      if (outbits > 0) {\n\t        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n\t      }\n\t    }\n\t    this.bufferLength += rowBytes;\n\t  };\n\t  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n\t    var rowBytes = this.rowBytes;\n\t    var pixBytes = this.pixBytes;\n\t    var predictor = this.str.getByte();\n\t    var rawBytes = this.str.getBytes(rowBytes);\n\t    this.eof = !rawBytes.length;\n\t    if (this.eof) {\n\t      return;\n\t    }\n\t    var bufferLength = this.bufferLength;\n\t    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n\t    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n\t    if (prevRow.length === 0) {\n\t      prevRow = new Uint8Array(rowBytes);\n\t    }\n\t    var i,\n\t        j = bufferLength,\n\t        up,\n\t        c;\n\t    switch (predictor) {\n\t      case 0:\n\t        for (i = 0; i < rowBytes; ++i) {\n\t          buffer[j++] = rawBytes[i];\n\t        }\n\t        break;\n\t      case 1:\n\t        for (i = 0; i < pixBytes; ++i) {\n\t          buffer[j++] = rawBytes[i];\n\t        }\n\t        for (; i < rowBytes; ++i) {\n\t          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n\t          j++;\n\t        }\n\t        break;\n\t      case 2:\n\t        for (i = 0; i < rowBytes; ++i) {\n\t          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n\t        }\n\t        break;\n\t      case 3:\n\t        for (i = 0; i < pixBytes; ++i) {\n\t          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n\t        }\n\t        for (; i < rowBytes; ++i) {\n\t          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n\t          j++;\n\t        }\n\t        break;\n\t      case 4:\n\t        for (i = 0; i < pixBytes; ++i) {\n\t          up = prevRow[i];\n\t          c = rawBytes[i];\n\t          buffer[j++] = up + c;\n\t        }\n\t        for (; i < rowBytes; ++i) {\n\t          up = prevRow[i];\n\t          var upLeft = prevRow[i - pixBytes];\n\t          var left = buffer[j - pixBytes];\n\t          var p = left + up - upLeft;\n\t          var pa = p - left;\n\t          if (pa < 0) {\n\t            pa = -pa;\n\t          }\n\t          var pb = p - up;\n\t          if (pb < 0) {\n\t            pb = -pb;\n\t          }\n\t          var pc = p - upLeft;\n\t          if (pc < 0) {\n\t            pc = -pc;\n\t          }\n\t          c = rawBytes[i];\n\t          if (pa <= pb && pa <= pc) {\n\t            buffer[j++] = left + c;\n\t          } else if (pb <= pc) {\n\t            buffer[j++] = up + c;\n\t          } else {\n\t            buffer[j++] = upLeft + c;\n\t          }\n\t        }\n\t        break;\n\t      default:\n\t        throw new _util.FormatError('Unsupported predictor: ' + predictor);\n\t    }\n\t    this.bufferLength += rowBytes;\n\t  };\n\t  return PredictorStream;\n\t}();\n\tvar JpegStream = function JpegStreamClosure() {\n\t  function JpegStream(stream, maybeLength, dict, params) {\n\t    var ch;\n\t    while ((ch = stream.getByte()) !== -1) {\n\t      if (ch === 0xFF) {\n\t        stream.skip(-1);\n\t        break;\n\t      }\n\t    }\n\t    this.stream = stream;\n\t    this.maybeLength = maybeLength;\n\t    this.dict = dict;\n\t    this.params = params;\n\t    DecodeStream.call(this, maybeLength);\n\t  }\n\t  JpegStream.prototype = Object.create(DecodeStream.prototype);\n\t  Object.defineProperty(JpegStream.prototype, 'bytes', {\n\t    get: function JpegStream_bytes() {\n\t      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n\t    },\n\t    configurable: true\n\t  });\n\t  JpegStream.prototype.ensureBuffer = function JpegStream_ensureBuffer(req) {\n\t    if (this.bufferLength) {\n\t      return;\n\t    }\n\t    var jpegImage = new _jpg.JpegImage();\n\t    var decodeArr = this.dict.getArray('Decode', 'D');\n\t    if (this.forceRGB && Array.isArray(decodeArr)) {\n\t      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n\t      var decodeArrLength = decodeArr.length;\n\t      var transform = new Int32Array(decodeArrLength);\n\t      var transformNeeded = false;\n\t      var maxValue = (1 << bitsPerComponent) - 1;\n\t      for (var i = 0; i < decodeArrLength; i += 2) {\n\t        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n\t        transform[i + 1] = decodeArr[i] * maxValue | 0;\n\t        if (transform[i] !== 256 || transform[i + 1] !== 0) {\n\t          transformNeeded = true;\n\t        }\n\t      }\n\t      if (transformNeeded) {\n\t        jpegImage.decodeTransform = transform;\n\t      }\n\t    }\n\t    if ((0, _primitives.isDict)(this.params)) {\n\t      var colorTransform = this.params.get('ColorTransform');\n\t      if (Number.isInteger(colorTransform)) {\n\t        jpegImage.colorTransform = colorTransform;\n\t      }\n\t    }\n\t    jpegImage.parse(this.bytes);\n\t    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n\t    this.buffer = data;\n\t    this.bufferLength = data.length;\n\t    this.eof = true;\n\t  };\n\t  JpegStream.prototype.getBytes = function JpegStream_getBytes(length) {\n\t    this.ensureBuffer();\n\t    return this.buffer;\n\t  };\n\t  JpegStream.prototype.getIR = function JpegStream_getIR(forceDataSchema) {\n\t    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\n\t  };\n\t  return JpegStream;\n\t}();\n\tvar JpxStream = function JpxStreamClosure() {\n\t  function JpxStream(stream, maybeLength, dict, params) {\n\t    this.stream = stream;\n\t    this.maybeLength = maybeLength;\n\t    this.dict = dict;\n\t    this.params = params;\n\t    DecodeStream.call(this, maybeLength);\n\t  }\n\t  JpxStream.prototype = Object.create(DecodeStream.prototype);\n\t  Object.defineProperty(JpxStream.prototype, 'bytes', {\n\t    get: function JpxStream_bytes() {\n\t      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n\t    },\n\t    configurable: true\n\t  });\n\t  JpxStream.prototype.ensureBuffer = function JpxStream_ensureBuffer(req) {\n\t    if (this.bufferLength) {\n\t      return;\n\t    }\n\t    var jpxImage = new _jpx.JpxImage();\n\t    jpxImage.parse(this.bytes);\n\t    var width = jpxImage.width;\n\t    var height = jpxImage.height;\n\t    var componentsCount = jpxImage.componentsCount;\n\t    var tileCount = jpxImage.tiles.length;\n\t    if (tileCount === 1) {\n\t      this.buffer = jpxImage.tiles[0].items;\n\t    } else {\n\t      var data = new Uint8ClampedArray(width * height * componentsCount);\n\t      for (var k = 0; k < tileCount; k++) {\n\t        var tileComponents = jpxImage.tiles[k];\n\t        var tileWidth = tileComponents.width;\n\t        var tileHeight = tileComponents.height;\n\t        var tileLeft = tileComponents.left;\n\t        var tileTop = tileComponents.top;\n\t        var src = tileComponents.items;\n\t        var srcPosition = 0;\n\t        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n\t        var imgRowSize = width * componentsCount;\n\t        var tileRowSize = tileWidth * componentsCount;\n\t        for (var j = 0; j < tileHeight; j++) {\n\t          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n\t          data.set(rowBytes, dataPosition);\n\t          srcPosition += tileRowSize;\n\t          dataPosition += imgRowSize;\n\t        }\n\t      }\n\t      this.buffer = data;\n\t    }\n\t    this.bufferLength = this.buffer.length;\n\t    this.eof = true;\n\t  };\n\t  return JpxStream;\n\t}();\n\tvar DecryptStream = function DecryptStreamClosure() {\n\t  function DecryptStream(str, maybeLength, decrypt) {\n\t    this.str = str;\n\t    this.dict = str.dict;\n\t    this.decrypt = decrypt;\n\t    this.nextChunk = null;\n\t    this.initialized = false;\n\t    DecodeStream.call(this, maybeLength);\n\t  }\n\t  var chunkSize = 512;\n\t  DecryptStream.prototype = Object.create(DecodeStream.prototype);\n\t  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n\t    var chunk;\n\t    if (this.initialized) {\n\t      chunk = this.nextChunk;\n\t    } else {\n\t      chunk = this.str.getBytes(chunkSize);\n\t      this.initialized = true;\n\t    }\n\t    if (!chunk || chunk.length === 0) {\n\t      this.eof = true;\n\t      return;\n\t    }\n\t    this.nextChunk = this.str.getBytes(chunkSize);\n\t    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n\t    var decrypt = this.decrypt;\n\t    chunk = decrypt(chunk, !hasMoreData);\n\t    var bufferLength = this.bufferLength;\n\t    var i,\n\t        n = chunk.length;\n\t    var buffer = this.ensureBuffer(bufferLength + n);\n\t    for (i = 0; i < n; i++) {\n\t      buffer[bufferLength++] = chunk[i];\n\t    }\n\t    this.bufferLength = bufferLength;\n\t  };\n\t  return DecryptStream;\n\t}();\n\tvar Ascii85Stream = function Ascii85StreamClosure() {\n\t  function Ascii85Stream(str, maybeLength) {\n\t    this.str = str;\n\t    this.dict = str.dict;\n\t    this.input = new Uint8Array(5);\n\t    if (maybeLength) {\n\t      maybeLength = 0.8 * maybeLength;\n\t    }\n\t    DecodeStream.call(this, maybeLength);\n\t  }\n\t  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n\t  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n\t    var TILDA_CHAR = 0x7E;\n\t    var Z_LOWER_CHAR = 0x7A;\n\t    var EOF = -1;\n\t    var str = this.str;\n\t    var c = str.getByte();\n\t    while ((0, _util.isSpace)(c)) {\n\t      c = str.getByte();\n\t    }\n\t    if (c === EOF || c === TILDA_CHAR) {\n\t      this.eof = true;\n\t      return;\n\t    }\n\t    var bufferLength = this.bufferLength,\n\t        buffer;\n\t    var i;\n\t    if (c === Z_LOWER_CHAR) {\n\t      buffer = this.ensureBuffer(bufferLength + 4);\n\t      for (i = 0; i < 4; ++i) {\n\t        buffer[bufferLength + i] = 0;\n\t      }\n\t      this.bufferLength += 4;\n\t    } else {\n\t      var input = this.input;\n\t      input[0] = c;\n\t      for (i = 1; i < 5; ++i) {\n\t        c = str.getByte();\n\t        while ((0, _util.isSpace)(c)) {\n\t          c = str.getByte();\n\t        }\n\t        input[i] = c;\n\t        if (c === EOF || c === TILDA_CHAR) {\n\t          break;\n\t        }\n\t      }\n\t      buffer = this.ensureBuffer(bufferLength + i - 1);\n\t      this.bufferLength += i - 1;\n\t      if (i < 5) {\n\t        for (; i < 5; ++i) {\n\t          input[i] = 0x21 + 84;\n\t        }\n\t        this.eof = true;\n\t      }\n\t      var t = 0;\n\t      for (i = 0; i < 5; ++i) {\n\t        t = t * 85 + (input[i] - 0x21);\n\t      }\n\t      for (i = 3; i >= 0; --i) {\n\t        buffer[bufferLength + i] = t & 0xFF;\n\t        t >>= 8;\n\t      }\n\t    }\n\t  };\n\t  return Ascii85Stream;\n\t}();\n\tvar AsciiHexStream = function AsciiHexStreamClosure() {\n\t  function AsciiHexStream(str, maybeLength) {\n\t    this.str = str;\n\t    this.dict = str.dict;\n\t    this.firstDigit = -1;\n\t    if (maybeLength) {\n\t      maybeLength = 0.5 * maybeLength;\n\t    }\n\t    DecodeStream.call(this, maybeLength);\n\t  }\n\t  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n\t  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n\t    var UPSTREAM_BLOCK_SIZE = 8000;\n\t    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n\t    if (!bytes.length) {\n\t      this.eof = true;\n\t      return;\n\t    }\n\t    var maxDecodeLength = bytes.length + 1 >> 1;\n\t    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n\t    var bufferLength = this.bufferLength;\n\t    var firstDigit = this.firstDigit;\n\t    for (var i = 0, ii = bytes.length; i < ii; i++) {\n\t      var ch = bytes[i],\n\t          digit;\n\t      if (ch >= 0x30 && ch <= 0x39) {\n\t        digit = ch & 0x0F;\n\t      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n\t        digit = (ch & 0x0F) + 9;\n\t      } else if (ch === 0x3E) {\n\t        this.eof = true;\n\t        break;\n\t      } else {\n\t        continue;\n\t      }\n\t      if (firstDigit < 0) {\n\t        firstDigit = digit;\n\t      } else {\n\t        buffer[bufferLength++] = firstDigit << 4 | digit;\n\t        firstDigit = -1;\n\t      }\n\t    }\n\t    if (firstDigit >= 0 && this.eof) {\n\t      buffer[bufferLength++] = firstDigit << 4;\n\t      firstDigit = -1;\n\t    }\n\t    this.firstDigit = firstDigit;\n\t    this.bufferLength = bufferLength;\n\t  };\n\t  return AsciiHexStream;\n\t}();\n\tvar RunLengthStream = function RunLengthStreamClosure() {\n\t  function RunLengthStream(str, maybeLength) {\n\t    this.str = str;\n\t    this.dict = str.dict;\n\t    DecodeStream.call(this, maybeLength);\n\t  }\n\t  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n\t  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n\t    var repeatHeader = this.str.getBytes(2);\n\t    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n\t      this.eof = true;\n\t      return;\n\t    }\n\t    var buffer;\n\t    var bufferLength = this.bufferLength;\n\t    var n = repeatHeader[0];\n\t    if (n < 128) {\n\t      buffer = this.ensureBuffer(bufferLength + n + 1);\n\t      buffer[bufferLength++] = repeatHeader[1];\n\t      if (n > 0) {\n\t        var source = this.str.getBytes(n);\n\t        buffer.set(source, bufferLength);\n\t        bufferLength += n;\n\t      }\n\t    } else {\n\t      n = 257 - n;\n\t      var b = repeatHeader[1];\n\t      buffer = this.ensureBuffer(bufferLength + n + 1);\n\t      for (var i = 0; i < n; i++) {\n\t        buffer[bufferLength++] = b;\n\t      }\n\t    }\n\t    this.bufferLength = bufferLength;\n\t  };\n\t  return RunLengthStream;\n\t}();\n\tvar LZWStream = function LZWStreamClosure() {\n\t  function LZWStream(str, maybeLength, earlyChange) {\n\t    this.str = str;\n\t    this.dict = str.dict;\n\t    this.cachedData = 0;\n\t    this.bitsCached = 0;\n\t    var maxLzwDictionarySize = 4096;\n\t    var lzwState = {\n\t      earlyChange: earlyChange,\n\t      codeLength: 9,\n\t      nextCode: 258,\n\t      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n\t      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n\t      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n\t      currentSequence: new Uint8Array(maxLzwDictionarySize),\n\t      currentSequenceLength: 0\n\t    };\n\t    for (var i = 0; i < 256; ++i) {\n\t      lzwState.dictionaryValues[i] = i;\n\t      lzwState.dictionaryLengths[i] = 1;\n\t    }\n\t    this.lzwState = lzwState;\n\t    DecodeStream.call(this, maybeLength);\n\t  }\n\t  LZWStream.prototype = Object.create(DecodeStream.prototype);\n\t  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n\t    var bitsCached = this.bitsCached;\n\t    var cachedData = this.cachedData;\n\t    while (bitsCached < n) {\n\t      var c = this.str.getByte();\n\t      if (c === -1) {\n\t        this.eof = true;\n\t        return null;\n\t      }\n\t      cachedData = cachedData << 8 | c;\n\t      bitsCached += 8;\n\t    }\n\t    this.bitsCached = bitsCached -= n;\n\t    this.cachedData = cachedData;\n\t    this.lastCode = null;\n\t    return cachedData >>> bitsCached & (1 << n) - 1;\n\t  };\n\t  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n\t    var blockSize = 512;\n\t    var estimatedDecodedSize = blockSize * 2,\n\t        decodedSizeDelta = blockSize;\n\t    var i, j, q;\n\t    var lzwState = this.lzwState;\n\t    if (!lzwState) {\n\t      return;\n\t    }\n\t    var earlyChange = lzwState.earlyChange;\n\t    var nextCode = lzwState.nextCode;\n\t    var dictionaryValues = lzwState.dictionaryValues;\n\t    var dictionaryLengths = lzwState.dictionaryLengths;\n\t    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n\t    var codeLength = lzwState.codeLength;\n\t    var prevCode = lzwState.prevCode;\n\t    var currentSequence = lzwState.currentSequence;\n\t    var currentSequenceLength = lzwState.currentSequenceLength;\n\t    var decodedLength = 0;\n\t    var currentBufferLength = this.bufferLength;\n\t    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n\t    for (i = 0; i < blockSize; i++) {\n\t      var code = this.readBits(codeLength);\n\t      var hasPrev = currentSequenceLength > 0;\n\t      if (code < 256) {\n\t        currentSequence[0] = code;\n\t        currentSequenceLength = 1;\n\t      } else if (code >= 258) {\n\t        if (code < nextCode) {\n\t          currentSequenceLength = dictionaryLengths[code];\n\t          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n\t            currentSequence[j] = dictionaryValues[q];\n\t            q = dictionaryPrevCodes[q];\n\t          }\n\t        } else {\n\t          currentSequence[currentSequenceLength++] = currentSequence[0];\n\t        }\n\t      } else if (code === 256) {\n\t        codeLength = 9;\n\t        nextCode = 258;\n\t        currentSequenceLength = 0;\n\t        continue;\n\t      } else {\n\t        this.eof = true;\n\t        delete this.lzwState;\n\t        break;\n\t      }\n\t      if (hasPrev) {\n\t        dictionaryPrevCodes[nextCode] = prevCode;\n\t        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n\t        dictionaryValues[nextCode] = currentSequence[0];\n\t        nextCode++;\n\t        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n\t      }\n\t      prevCode = code;\n\t      decodedLength += currentSequenceLength;\n\t      if (estimatedDecodedSize < decodedLength) {\n\t        do {\n\t          estimatedDecodedSize += decodedSizeDelta;\n\t        } while (estimatedDecodedSize < decodedLength);\n\t        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n\t      }\n\t      for (j = 0; j < currentSequenceLength; j++) {\n\t        buffer[currentBufferLength++] = currentSequence[j];\n\t      }\n\t    }\n\t    lzwState.nextCode = nextCode;\n\t    lzwState.codeLength = codeLength;\n\t    lzwState.prevCode = prevCode;\n\t    lzwState.currentSequenceLength = currentSequenceLength;\n\t    this.bufferLength = currentBufferLength;\n\t  };\n\t  return LZWStream;\n\t}();\n\tvar NullStream = function NullStreamClosure() {\n\t  function NullStream() {\n\t    Stream.call(this, new Uint8Array(0));\n\t  }\n\t  NullStream.prototype = Stream.prototype;\n\t  return NullStream;\n\t}();\n\texports.Ascii85Stream = Ascii85Stream;\n\texports.AsciiHexStream = AsciiHexStream;\n\texports.DecryptStream = DecryptStream;\n\texports.DecodeStream = DecodeStream;\n\texports.FlateStream = FlateStream;\n\texports.JpegStream = JpegStream;\n\texports.JpxStream = JpxStream;\n\texports.NullStream = NullStream;\n\texports.PredictorStream = PredictorStream;\n\texports.RunLengthStream = RunLengthStream;\n\texports.Stream = Stream;\n\texports.StreamsSequenceStream = StreamsSequenceStream;\n\texports.StringStream = StringStream;\n\texports.LZWStream = LZWStream;\n\t\n\t/***/ }),\n\t/* 6 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar core = module.exports = { version: '2.5.7' };\n\tif (typeof __e == 'number') __e = core;\n\t\n\t/***/ }),\n\t/* 7 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar global = __w_pdfjs_require__(1);\n\tvar core = __w_pdfjs_require__(6);\n\tvar hide = __w_pdfjs_require__(8);\n\tvar redefine = __w_pdfjs_require__(16);\n\tvar ctx = __w_pdfjs_require__(13);\n\tvar PROTOTYPE = 'prototype';\n\tvar $export = function $export(type, name, source) {\n\t  var IS_FORCED = type & $export.F;\n\t  var IS_GLOBAL = type & $export.G;\n\t  var IS_STATIC = type & $export.S;\n\t  var IS_PROTO = type & $export.P;\n\t  var IS_BIND = type & $export.B;\n\t  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n\t  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n\t  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n\t  var key, own, out, exp;\n\t  if (IS_GLOBAL) source = name;\n\t  for (key in source) {\n\t    own = !IS_FORCED && target && target[key] !== undefined;\n\t    out = (own ? target : source)[key];\n\t    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n\t    if (target) redefine(target, key, out, type & $export.U);\n\t    if (exports[key] != out) hide(exports, key, exp);\n\t    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n\t  }\n\t};\n\tglobal.core = core;\n\t$export.F = 1;\n\t$export.G = 2;\n\t$export.S = 4;\n\t$export.P = 8;\n\t$export.B = 16;\n\t$export.W = 32;\n\t$export.U = 64;\n\t$export.R = 128;\n\tmodule.exports = $export;\n\t\n\t/***/ }),\n\t/* 8 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar dP = __w_pdfjs_require__(15);\n\tvar createDesc = __w_pdfjs_require__(29);\n\tmodule.exports = __w_pdfjs_require__(10) ? function (object, key, value) {\n\t  return dP.f(object, key, createDesc(1, value));\n\t} : function (object, key, value) {\n\t  object[key] = value;\n\t  return object;\n\t};\n\t\n\t/***/ }),\n\t/* 9 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar isObject = __w_pdfjs_require__(3);\n\tmodule.exports = function (it) {\n\t  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n\t  return it;\n\t};\n\t\n\t/***/ }),\n\t/* 10 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tmodule.exports = !__w_pdfjs_require__(11)(function () {\n\t  return Object.defineProperty({}, 'a', {\n\t    get: function get() {\n\t      return 7;\n\t    }\n\t  }).a != 7;\n\t});\n\t\n\t/***/ }),\n\t/* 11 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tmodule.exports = function (exec) {\n\t  try {\n\t    return !!exec();\n\t  } catch (e) {\n\t    return true;\n\t  }\n\t};\n\t\n\t/***/ }),\n\t/* 12 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar hasOwnProperty = {}.hasOwnProperty;\n\tmodule.exports = function (it, key) {\n\t  return hasOwnProperty.call(it, key);\n\t};\n\t\n\t/***/ }),\n\t/* 13 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar aFunction = __w_pdfjs_require__(22);\n\tmodule.exports = function (fn, that, length) {\n\t  aFunction(fn);\n\t  if (that === undefined) return fn;\n\t  switch (length) {\n\t    case 1:\n\t      return function (a) {\n\t        return fn.call(that, a);\n\t      };\n\t    case 2:\n\t      return function (a, b) {\n\t        return fn.call(that, a, b);\n\t      };\n\t    case 3:\n\t      return function (a, b, c) {\n\t        return fn.call(that, a, b, c);\n\t      };\n\t  }\n\t  return function () {\n\t    return fn.apply(that, arguments);\n\t  };\n\t};\n\t\n\t/***/ }),\n\t/* 14 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar toInteger = __w_pdfjs_require__(18);\n\tvar min = Math.min;\n\tmodule.exports = function (it) {\n\t  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0;\n\t};\n\t\n\t/***/ }),\n\t/* 15 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar anObject = __w_pdfjs_require__(9);\n\tvar IE8_DOM_DEFINE = __w_pdfjs_require__(48);\n\tvar toPrimitive = __w_pdfjs_require__(36);\n\tvar dP = Object.defineProperty;\n\texports.f = __w_pdfjs_require__(10) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n\t  anObject(O);\n\t  P = toPrimitive(P, true);\n\t  anObject(Attributes);\n\t  if (IE8_DOM_DEFINE) try {\n\t    return dP(O, P, Attributes);\n\t  } catch (e) {}\n\t  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n\t  if ('value' in Attributes) O[P] = Attributes.value;\n\t  return O;\n\t};\n\t\n\t/***/ }),\n\t/* 16 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar global = __w_pdfjs_require__(1);\n\tvar hide = __w_pdfjs_require__(8);\n\tvar has = __w_pdfjs_require__(12);\n\tvar SRC = __w_pdfjs_require__(17)('src');\n\tvar TO_STRING = 'toString';\n\tvar $toString = Function[TO_STRING];\n\tvar TPL = ('' + $toString).split(TO_STRING);\n\t__w_pdfjs_require__(6).inspectSource = function (it) {\n\t  return $toString.call(it);\n\t};\n\t(module.exports = function (O, key, val, safe) {\n\t  var isFunction = typeof val == 'function';\n\t  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n\t  if (O[key] === val) return;\n\t  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n\t  if (O === global) {\n\t    O[key] = val;\n\t  } else if (!safe) {\n\t    delete O[key];\n\t    hide(O, key, val);\n\t  } else if (O[key]) {\n\t    O[key] = val;\n\t  } else {\n\t    hide(O, key, val);\n\t  }\n\t})(Function.prototype, TO_STRING, function toString() {\n\t  return typeof this == 'function' && this[SRC] || $toString.call(this);\n\t});\n\t\n\t/***/ }),\n\t/* 17 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar id = 0;\n\tvar px = Math.random();\n\tmodule.exports = function (key) {\n\t  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n\t};\n\t\n\t/***/ }),\n\t/* 18 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar ceil = Math.ceil;\n\tvar floor = Math.floor;\n\tmodule.exports = function (it) {\n\t  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n\t};\n\t\n\t/***/ }),\n\t/* 19 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar defined = __w_pdfjs_require__(38);\n\tmodule.exports = function (it) {\n\t  return Object(defined(it));\n\t};\n\t\n\t/***/ }),\n\t/* 20 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tmodule.exports = {};\n\t\n\t/***/ }),\n\t/* 21 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tmodule.exports = false;\n\t\n\t/***/ }),\n\t/* 22 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tmodule.exports = function (it) {\n\t  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n\t  return it;\n\t};\n\t\n\t/***/ }),\n\t/* 23 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar redefine = __w_pdfjs_require__(16);\n\tmodule.exports = function (target, src, safe) {\n\t  for (var key in src) {\n\t    redefine(target, key, src[key], safe);\n\t  }return target;\n\t};\n\t\n\t/***/ }),\n\t/* 24 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tmodule.exports = function (it, Constructor, name, forbiddenField) {\n\t  if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {\n\t    throw TypeError(name + ': incorrect invocation!');\n\t  }\n\t  return it;\n\t};\n\t\n\t/***/ }),\n\t/* 25 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar toString = {}.toString;\n\tmodule.exports = function (it) {\n\t  return toString.call(it).slice(8, -1);\n\t};\n\t\n\t/***/ }),\n\t/* 26 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar def = __w_pdfjs_require__(15).f;\n\tvar has = __w_pdfjs_require__(12);\n\tvar TAG = __w_pdfjs_require__(4)('toStringTag');\n\tmodule.exports = function (it, tag, stat) {\n\t  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {\n\t    configurable: true,\n\t    value: tag\n\t  });\n\t};\n\t\n\t/***/ }),\n\t/* 27 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.ColorSpace = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar ColorSpace = function ColorSpaceClosure() {\n\t  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n\t    var COMPONENTS = 3;\n\t    alpha01 = alpha01 !== 1 ? 0 : alpha01;\n\t    var xRatio = w1 / w2;\n\t    var yRatio = h1 / h2;\n\t    var i,\n\t        j,\n\t        py,\n\t        newIndex = 0,\n\t        oldIndex;\n\t    var xScaled = new Uint16Array(w2);\n\t    var w1Scanline = w1 * COMPONENTS;\n\t    for (i = 0; i < w2; i++) {\n\t      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n\t    }\n\t    for (i = 0; i < h2; i++) {\n\t      py = Math.floor(i * yRatio) * w1Scanline;\n\t      for (j = 0; j < w2; j++) {\n\t        oldIndex = py + xScaled[j];\n\t        dest[newIndex++] = src[oldIndex++];\n\t        dest[newIndex++] = src[oldIndex++];\n\t        dest[newIndex++] = src[oldIndex++];\n\t        newIndex += alpha01;\n\t      }\n\t    }\n\t  }\n\t  function ColorSpace() {\n\t    throw new Error('should not call ColorSpace constructor');\n\t  }\n\t  ColorSpace.prototype = {\n\t    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n\t      var rgb = new Uint8Array(3);\n\t      this.getRgbItem(src, srcOffset, rgb, 0);\n\t      return rgb;\n\t    },\n\t    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      throw new Error('Should not call ColorSpace.getRgbItem');\n\t    },\n\t    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      throw new Error('Should not call ColorSpace.getRgbBuffer');\n\t    },\n\t    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n\t      throw new Error('Should not call ColorSpace.getOutputLength');\n\t    },\n\t    isPassthrough: function ColorSpace_isPassthrough(bits) {\n\t      return false;\n\t    },\n\t    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n\t      var count = originalWidth * originalHeight;\n\t      var rgbBuf = null;\n\t      var numComponentColors = 1 << bpc;\n\t      var needsResizing = originalHeight !== height || originalWidth !== width;\n\t      var i, ii;\n\t      if (this.isPassthrough(bpc)) {\n\t        rgbBuf = comps;\n\t      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n\t        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n\t        var key;\n\t        for (i = 0; i < numComponentColors; i++) {\n\t          allColors[i] = i;\n\t        }\n\t        var colorMap = new Uint8Array(numComponentColors * 3);\n\t        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n\t        var destPos, rgbPos;\n\t        if (!needsResizing) {\n\t          destPos = 0;\n\t          for (i = 0; i < count; ++i) {\n\t            key = comps[i] * 3;\n\t            dest[destPos++] = colorMap[key];\n\t            dest[destPos++] = colorMap[key + 1];\n\t            dest[destPos++] = colorMap[key + 2];\n\t            destPos += alpha01;\n\t          }\n\t        } else {\n\t          rgbBuf = new Uint8Array(count * 3);\n\t          rgbPos = 0;\n\t          for (i = 0; i < count; ++i) {\n\t            key = comps[i] * 3;\n\t            rgbBuf[rgbPos++] = colorMap[key];\n\t            rgbBuf[rgbPos++] = colorMap[key + 1];\n\t            rgbBuf[rgbPos++] = colorMap[key + 2];\n\t          }\n\t        }\n\t      } else {\n\t        if (!needsResizing) {\n\t          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n\t        } else {\n\t          rgbBuf = new Uint8Array(count * 3);\n\t          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n\t        }\n\t      }\n\t      if (rgbBuf) {\n\t        if (needsResizing) {\n\t          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n\t        } else {\n\t          rgbPos = 0;\n\t          destPos = 0;\n\t          for (i = 0, ii = width * actualHeight; i < ii; i++) {\n\t            dest[destPos++] = rgbBuf[rgbPos++];\n\t            dest[destPos++] = rgbBuf[rgbPos++];\n\t            dest[destPos++] = rgbBuf[rgbPos++];\n\t            destPos += alpha01;\n\t          }\n\t        }\n\t      }\n\t    },\n\t    usesZeroToOneRange: true\n\t  };\n\t  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\n\t    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\n\t    return ColorSpace.fromIR(IR);\n\t  };\n\t  ColorSpace.fromIR = function (IR) {\n\t    var name = Array.isArray(IR) ? IR[0] : IR;\n\t    var whitePoint, blackPoint, gamma;\n\t    switch (name) {\n\t      case 'DeviceGrayCS':\n\t        return this.singletons.gray;\n\t      case 'DeviceRgbCS':\n\t        return this.singletons.rgb;\n\t      case 'DeviceCmykCS':\n\t        return this.singletons.cmyk;\n\t      case 'CalGrayCS':\n\t        whitePoint = IR[1];\n\t        blackPoint = IR[2];\n\t        gamma = IR[3];\n\t        return new CalGrayCS(whitePoint, blackPoint, gamma);\n\t      case 'CalRGBCS':\n\t        whitePoint = IR[1];\n\t        blackPoint = IR[2];\n\t        gamma = IR[3];\n\t        var matrix = IR[4];\n\t        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n\t      case 'PatternCS':\n\t        var basePatternCS = IR[1];\n\t        if (basePatternCS) {\n\t          basePatternCS = ColorSpace.fromIR(basePatternCS);\n\t        }\n\t        return new PatternCS(basePatternCS);\n\t      case 'IndexedCS':\n\t        var baseIndexedCS = IR[1];\n\t        var hiVal = IR[2];\n\t        var lookup = IR[3];\n\t        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS), hiVal, lookup);\n\t      case 'AlternateCS':\n\t        var numComps = IR[1];\n\t        var alt = IR[2];\n\t        var tintFn = IR[3];\n\t        return new AlternateCS(numComps, ColorSpace.fromIR(alt), tintFn);\n\t      case 'LabCS':\n\t        whitePoint = IR[1];\n\t        blackPoint = IR[2];\n\t        var range = IR[3];\n\t        return new LabCS(whitePoint, blackPoint, range);\n\t      default:\n\t        throw new _util.FormatError('Unknown colorspace name: ' + name);\n\t    }\n\t  };\n\t  ColorSpace.parseToIR = function (cs, xref, res, pdfFunctionFactory) {\n\t    if ((0, _primitives.isName)(cs)) {\n\t      var colorSpaces = res.get('ColorSpace');\n\t      if ((0, _primitives.isDict)(colorSpaces)) {\n\t        var refcs = colorSpaces.get(cs.name);\n\t        if (refcs) {\n\t          cs = refcs;\n\t        }\n\t      }\n\t    }\n\t    cs = xref.fetchIfRef(cs);\n\t    if ((0, _primitives.isName)(cs)) {\n\t      switch (cs.name) {\n\t        case 'DeviceGray':\n\t        case 'G':\n\t          return 'DeviceGrayCS';\n\t        case 'DeviceRGB':\n\t        case 'RGB':\n\t          return 'DeviceRgbCS';\n\t        case 'DeviceCMYK':\n\t        case 'CMYK':\n\t          return 'DeviceCmykCS';\n\t        case 'Pattern':\n\t          return ['PatternCS', null];\n\t        default:\n\t          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\n\t      }\n\t    }\n\t    if (Array.isArray(cs)) {\n\t      var mode = xref.fetchIfRef(cs[0]).name;\n\t      var numComps, params, alt, whitePoint, blackPoint, gamma;\n\t      switch (mode) {\n\t        case 'DeviceGray':\n\t        case 'G':\n\t          return 'DeviceGrayCS';\n\t        case 'DeviceRGB':\n\t        case 'RGB':\n\t          return 'DeviceRgbCS';\n\t        case 'DeviceCMYK':\n\t        case 'CMYK':\n\t          return 'DeviceCmykCS';\n\t        case 'CalGray':\n\t          params = xref.fetchIfRef(cs[1]);\n\t          whitePoint = params.getArray('WhitePoint');\n\t          blackPoint = params.getArray('BlackPoint');\n\t          gamma = params.get('Gamma');\n\t          return ['CalGrayCS', whitePoint, blackPoint, gamma];\n\t        case 'CalRGB':\n\t          params = xref.fetchIfRef(cs[1]);\n\t          whitePoint = params.getArray('WhitePoint');\n\t          blackPoint = params.getArray('BlackPoint');\n\t          gamma = params.getArray('Gamma');\n\t          var matrix = params.getArray('Matrix');\n\t          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\n\t        case 'ICCBased':\n\t          var stream = xref.fetchIfRef(cs[1]);\n\t          var dict = stream.dict;\n\t          numComps = dict.get('N');\n\t          alt = dict.get('Alternate');\n\t          if (alt) {\n\t            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\n\t            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\n\t            if (altCS.numComps === numComps) {\n\t              return altIR;\n\t            }\n\t            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\n\t          }\n\t          if (numComps === 1) {\n\t            return 'DeviceGrayCS';\n\t          } else if (numComps === 3) {\n\t            return 'DeviceRgbCS';\n\t          } else if (numComps === 4) {\n\t            return 'DeviceCmykCS';\n\t          }\n\t          break;\n\t        case 'Pattern':\n\t          var basePatternCS = cs[1] || null;\n\t          if (basePatternCS) {\n\t            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\n\t          }\n\t          return ['PatternCS', basePatternCS];\n\t        case 'Indexed':\n\t        case 'I':\n\t          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\n\t          var hiVal = xref.fetchIfRef(cs[2]) + 1;\n\t          var lookup = xref.fetchIfRef(cs[3]);\n\t          if ((0, _primitives.isStream)(lookup)) {\n\t            lookup = lookup.getBytes();\n\t          }\n\t          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n\t        case 'Separation':\n\t        case 'DeviceN':\n\t          var name = xref.fetchIfRef(cs[1]);\n\t          numComps = Array.isArray(name) ? name.length : 1;\n\t          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\n\t          var tintFn = pdfFunctionFactory.create(xref.fetchIfRef(cs[3]));\n\t          return ['AlternateCS', numComps, alt, tintFn];\n\t        case 'Lab':\n\t          params = xref.fetchIfRef(cs[1]);\n\t          whitePoint = params.getArray('WhitePoint');\n\t          blackPoint = params.getArray('BlackPoint');\n\t          var range = params.getArray('Range');\n\t          return ['LabCS', whitePoint, blackPoint, range];\n\t        default:\n\t          throw new _util.FormatError('unimplemented color space object \"' + mode + '\"');\n\t      }\n\t    }\n\t    throw new _util.FormatError('unrecognized color space object: \"' + cs + '\"');\n\t  };\n\t  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n\t    if (!Array.isArray(decode)) {\n\t      return true;\n\t    }\n\t    if (n * 2 !== decode.length) {\n\t      (0, _util.warn)('The decode map is not the correct length');\n\t      return true;\n\t    }\n\t    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n\t      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  };\n\t  ColorSpace.singletons = {\n\t    get gray() {\n\t      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\n\t    },\n\t    get rgb() {\n\t      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\n\t    },\n\t    get cmyk() {\n\t      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\n\t    }\n\t  };\n\t  return ColorSpace;\n\t}();\n\tvar AlternateCS = function AlternateCSClosure() {\n\t  function AlternateCS(numComps, base, tintFn) {\n\t    this.name = 'Alternate';\n\t    this.numComps = numComps;\n\t    this.defaultColor = new Float32Array(numComps);\n\t    for (var i = 0; i < numComps; ++i) {\n\t      this.defaultColor[i] = 1;\n\t    }\n\t    this.base = base;\n\t    this.tintFn = tintFn;\n\t    this.tmpBuf = new Float32Array(base.numComps);\n\t  }\n\t  AlternateCS.prototype = {\n\t    getRgb: ColorSpace.prototype.getRgb,\n\t    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      var tmpBuf = this.tmpBuf;\n\t      this.tintFn(src, srcOffset, tmpBuf, 0);\n\t      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n\t    },\n\t    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      var tintFn = this.tintFn;\n\t      var base = this.base;\n\t      var scale = 1 / ((1 << bits) - 1);\n\t      var baseNumComps = base.numComps;\n\t      var usesZeroToOneRange = base.usesZeroToOneRange;\n\t      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n\t      var pos = isPassthrough ? destOffset : 0;\n\t      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n\t      var numComps = this.numComps;\n\t      var scaled = new Float32Array(numComps);\n\t      var tinted = new Float32Array(baseNumComps);\n\t      var i, j;\n\t      for (i = 0; i < count; i++) {\n\t        for (j = 0; j < numComps; j++) {\n\t          scaled[j] = src[srcOffset++] * scale;\n\t        }\n\t        tintFn(scaled, 0, tinted, 0);\n\t        if (usesZeroToOneRange) {\n\t          for (j = 0; j < baseNumComps; j++) {\n\t            baseBuf[pos++] = tinted[j] * 255;\n\t          }\n\t        } else {\n\t          base.getRgbItem(tinted, 0, baseBuf, pos);\n\t          pos += baseNumComps;\n\t        }\n\t      }\n\t      if (!isPassthrough) {\n\t        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n\t      }\n\t    },\n\t    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n\t      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n\t    },\n\t    isPassthrough: ColorSpace.prototype.isPassthrough,\n\t    fillRgb: ColorSpace.prototype.fillRgb,\n\t    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n\t      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t    },\n\t    usesZeroToOneRange: true\n\t  };\n\t  return AlternateCS;\n\t}();\n\tvar PatternCS = function PatternCSClosure() {\n\t  function PatternCS(baseCS) {\n\t    this.name = 'Pattern';\n\t    this.base = baseCS;\n\t  }\n\t  PatternCS.prototype = {};\n\t  return PatternCS;\n\t}();\n\tvar IndexedCS = function IndexedCSClosure() {\n\t  function IndexedCS(base, highVal, lookup) {\n\t    this.name = 'Indexed';\n\t    this.numComps = 1;\n\t    this.defaultColor = new Uint8Array(this.numComps);\n\t    this.base = base;\n\t    this.highVal = highVal;\n\t    var baseNumComps = base.numComps;\n\t    var length = baseNumComps * highVal;\n\t    if ((0, _primitives.isStream)(lookup)) {\n\t      this.lookup = new Uint8Array(length);\n\t      var bytes = lookup.getBytes(length);\n\t      this.lookup.set(bytes);\n\t    } else if ((0, _util.isString)(lookup)) {\n\t      this.lookup = new Uint8Array(length);\n\t      for (var i = 0; i < length; ++i) {\n\t        this.lookup[i] = lookup.charCodeAt(i);\n\t      }\n\t    } else if (lookup instanceof Uint8Array || lookup instanceof Array) {\n\t      this.lookup = lookup;\n\t    } else {\n\t      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\n\t    }\n\t  }\n\t  IndexedCS.prototype = {\n\t    getRgb: ColorSpace.prototype.getRgb,\n\t    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      var numComps = this.base.numComps;\n\t      var start = src[srcOffset] * numComps;\n\t      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\n\t    },\n\t    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      var base = this.base;\n\t      var numComps = base.numComps;\n\t      var outputDelta = base.getOutputLength(numComps, alpha01);\n\t      var lookup = this.lookup;\n\t      for (var i = 0; i < count; ++i) {\n\t        var lookupPos = src[srcOffset++] * numComps;\n\t        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n\t        destOffset += outputDelta;\n\t      }\n\t    },\n\t    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n\t      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n\t    },\n\t    isPassthrough: ColorSpace.prototype.isPassthrough,\n\t    fillRgb: ColorSpace.prototype.fillRgb,\n\t    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n\t      return true;\n\t    },\n\t    usesZeroToOneRange: true\n\t  };\n\t  return IndexedCS;\n\t}();\n\tvar DeviceGrayCS = function DeviceGrayCSClosure() {\n\t  function DeviceGrayCS() {\n\t    this.name = 'DeviceGray';\n\t    this.numComps = 1;\n\t    this.defaultColor = new Float32Array(this.numComps);\n\t  }\n\t  DeviceGrayCS.prototype = {\n\t    getRgb: ColorSpace.prototype.getRgb,\n\t    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      var c = src[srcOffset] * 255 | 0;\n\t      c = c < 0 ? 0 : c > 255 ? 255 : c;\n\t      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n\t    },\n\t    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      var scale = 255 / ((1 << bits) - 1);\n\t      var j = srcOffset,\n\t          q = destOffset;\n\t      for (var i = 0; i < count; ++i) {\n\t        var c = scale * src[j++] | 0;\n\t        dest[q++] = c;\n\t        dest[q++] = c;\n\t        dest[q++] = c;\n\t        q += alpha01;\n\t      }\n\t    },\n\t    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n\t      return inputLength * (3 + alpha01);\n\t    },\n\t    isPassthrough: ColorSpace.prototype.isPassthrough,\n\t    fillRgb: ColorSpace.prototype.fillRgb,\n\t    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n\t      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t    },\n\t    usesZeroToOneRange: true\n\t  };\n\t  return DeviceGrayCS;\n\t}();\n\tvar DeviceRgbCS = function DeviceRgbCSClosure() {\n\t  function DeviceRgbCS() {\n\t    this.name = 'DeviceRGB';\n\t    this.numComps = 3;\n\t    this.defaultColor = new Float32Array(this.numComps);\n\t  }\n\t  DeviceRgbCS.prototype = {\n\t    getRgb: ColorSpace.prototype.getRgb,\n\t    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      var r = src[srcOffset] * 255 | 0;\n\t      var g = src[srcOffset + 1] * 255 | 0;\n\t      var b = src[srcOffset + 2] * 255 | 0;\n\t      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n\t      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n\t      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n\t    },\n\t    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      if (bits === 8 && alpha01 === 0) {\n\t        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n\t        return;\n\t      }\n\t      var scale = 255 / ((1 << bits) - 1);\n\t      var j = srcOffset,\n\t          q = destOffset;\n\t      for (var i = 0; i < count; ++i) {\n\t        dest[q++] = scale * src[j++] | 0;\n\t        dest[q++] = scale * src[j++] | 0;\n\t        dest[q++] = scale * src[j++] | 0;\n\t        q += alpha01;\n\t      }\n\t    },\n\t    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n\t      return inputLength * (3 + alpha01) / 3 | 0;\n\t    },\n\t    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n\t      return bits === 8;\n\t    },\n\t    fillRgb: ColorSpace.prototype.fillRgb,\n\t    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n\t      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t    },\n\t    usesZeroToOneRange: true\n\t  };\n\t  return DeviceRgbCS;\n\t}();\n\tvar DeviceCmykCS = function DeviceCmykCSClosure() {\n\t  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n\t    var c = src[srcOffset + 0] * srcScale;\n\t    var m = src[srcOffset + 1] * srcScale;\n\t    var y = src[srcOffset + 2] * srcScale;\n\t    var k = src[srcOffset + 3] * srcScale;\n\t    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n\t    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n\t    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n\t    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n\t    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n\t    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n\t  }\n\t  function DeviceCmykCS() {\n\t    this.name = 'DeviceCMYK';\n\t    this.numComps = 4;\n\t    this.defaultColor = new Float32Array(this.numComps);\n\t    this.defaultColor[3] = 1;\n\t  }\n\t  DeviceCmykCS.prototype = {\n\t    getRgb: ColorSpace.prototype.getRgb,\n\t    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      convertToRgb(src, srcOffset, 1, dest, destOffset);\n\t    },\n\t    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      var scale = 1 / ((1 << bits) - 1);\n\t      for (var i = 0; i < count; i++) {\n\t        convertToRgb(src, srcOffset, scale, dest, destOffset);\n\t        srcOffset += 4;\n\t        destOffset += 3 + alpha01;\n\t      }\n\t    },\n\t    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n\t      return inputLength / 4 * (3 + alpha01) | 0;\n\t    },\n\t    isPassthrough: ColorSpace.prototype.isPassthrough,\n\t    fillRgb: ColorSpace.prototype.fillRgb,\n\t    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n\t      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t    },\n\t    usesZeroToOneRange: true\n\t  };\n\t  return DeviceCmykCS;\n\t}();\n\tvar CalGrayCS = function CalGrayCSClosure() {\n\t  function CalGrayCS(whitePoint, blackPoint, gamma) {\n\t    this.name = 'CalGray';\n\t    this.numComps = 1;\n\t    this.defaultColor = new Float32Array(this.numComps);\n\t    if (!whitePoint) {\n\t      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\n\t    }\n\t    blackPoint = blackPoint || [0, 0, 0];\n\t    gamma = gamma || 1;\n\t    this.XW = whitePoint[0];\n\t    this.YW = whitePoint[1];\n\t    this.ZW = whitePoint[2];\n\t    this.XB = blackPoint[0];\n\t    this.YB = blackPoint[1];\n\t    this.ZB = blackPoint[2];\n\t    this.G = gamma;\n\t    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n\t      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n\t    }\n\t    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n\t      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\n\t      this.XB = this.YB = this.ZB = 0;\n\t    }\n\t    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n\t      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n\t    }\n\t    if (this.G < 1) {\n\t      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n\t      this.G = 1;\n\t    }\n\t  }\n\t  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n\t    var A = src[srcOffset] * scale;\n\t    var AG = Math.pow(A, cs.G);\n\t    var L = cs.YW * AG;\n\t    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n\t    dest[destOffset] = val;\n\t    dest[destOffset + 1] = val;\n\t    dest[destOffset + 2] = val;\n\t  }\n\t  CalGrayCS.prototype = {\n\t    getRgb: ColorSpace.prototype.getRgb,\n\t    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n\t    },\n\t    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      var scale = 1 / ((1 << bits) - 1);\n\t      for (var i = 0; i < count; ++i) {\n\t        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n\t        srcOffset += 1;\n\t        destOffset += 3 + alpha01;\n\t      }\n\t    },\n\t    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n\t      return inputLength * (3 + alpha01);\n\t    },\n\t    isPassthrough: ColorSpace.prototype.isPassthrough,\n\t    fillRgb: ColorSpace.prototype.fillRgb,\n\t    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n\t      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t    },\n\t    usesZeroToOneRange: true\n\t  };\n\t  return CalGrayCS;\n\t}();\n\tvar CalRGBCS = function CalRGBCSClosure() {\n\t  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\n\t  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\n\t  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\n\t  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n\t  var tempNormalizeMatrix = new Float32Array(3);\n\t  var tempConvertMatrix1 = new Float32Array(3);\n\t  var tempConvertMatrix2 = new Float32Array(3);\n\t  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n\t  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n\t    this.name = 'CalRGB';\n\t    this.numComps = 3;\n\t    this.defaultColor = new Float32Array(this.numComps);\n\t    if (!whitePoint) {\n\t      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\n\t    }\n\t    blackPoint = blackPoint || new Float32Array(3);\n\t    gamma = gamma || new Float32Array([1, 1, 1]);\n\t    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n\t    var XW = whitePoint[0];\n\t    var YW = whitePoint[1];\n\t    var ZW = whitePoint[2];\n\t    this.whitePoint = whitePoint;\n\t    var XB = blackPoint[0];\n\t    var YB = blackPoint[1];\n\t    var ZB = blackPoint[2];\n\t    this.blackPoint = blackPoint;\n\t    this.GR = gamma[0];\n\t    this.GG = gamma[1];\n\t    this.GB = gamma[2];\n\t    this.MXA = matrix[0];\n\t    this.MYA = matrix[1];\n\t    this.MZA = matrix[2];\n\t    this.MXB = matrix[3];\n\t    this.MYB = matrix[4];\n\t    this.MZB = matrix[5];\n\t    this.MXC = matrix[6];\n\t    this.MYC = matrix[7];\n\t    this.MZC = matrix[8];\n\t    if (XW < 0 || ZW < 0 || YW !== 1) {\n\t      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n\t    }\n\t    if (XB < 0 || YB < 0 || ZB < 0) {\n\t      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n\t      this.blackPoint = new Float32Array(3);\n\t    }\n\t    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n\t      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n\t      this.GR = this.GG = this.GB = 1;\n\t    }\n\t    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n\t      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n\t      this.MXA = this.MYB = this.MZC = 1;\n\t      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n\t    }\n\t  }\n\t  function matrixProduct(a, b, result) {\n\t    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n\t    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n\t  }\n\t  function convertToFlat(sourceWhitePoint, LMS, result) {\n\t    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n\t    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n\t    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n\t  }\n\t  function convertToD65(sourceWhitePoint, LMS, result) {\n\t    var D65X = 0.95047;\n\t    var D65Y = 1;\n\t    var D65Z = 1.08883;\n\t    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n\t    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n\t    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n\t  }\n\t  function sRGBTransferFunction(color) {\n\t    if (color <= 0.0031308) {\n\t      return adjustToRange(0, 1, 12.92 * color);\n\t    }\n\t    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n\t  }\n\t  function adjustToRange(min, max, value) {\n\t    return Math.max(min, Math.min(max, value));\n\t  }\n\t  function decodeL(L) {\n\t    if (L < 0) {\n\t      return -decodeL(-L);\n\t    }\n\t    if (L > 8.0) {\n\t      return Math.pow((L + 16) / 116, 3);\n\t    }\n\t    return L * DECODE_L_CONSTANT;\n\t  }\n\t  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n\t    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n\t      result[0] = XYZ_Flat[0];\n\t      result[1] = XYZ_Flat[1];\n\t      result[2] = XYZ_Flat[2];\n\t      return;\n\t    }\n\t    var zeroDecodeL = decodeL(0);\n\t    var X_DST = zeroDecodeL;\n\t    var X_SRC = decodeL(sourceBlackPoint[0]);\n\t    var Y_DST = zeroDecodeL;\n\t    var Y_SRC = decodeL(sourceBlackPoint[1]);\n\t    var Z_DST = zeroDecodeL;\n\t    var Z_SRC = decodeL(sourceBlackPoint[2]);\n\t    var X_Scale = (1 - X_DST) / (1 - X_SRC);\n\t    var X_Offset = 1 - X_Scale;\n\t    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n\t    var Y_Offset = 1 - Y_Scale;\n\t    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n\t    var Z_Offset = 1 - Z_Scale;\n\t    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n\t    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n\t    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n\t  }\n\t  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n\t    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n\t      result[0] = XYZ_In[0];\n\t      result[1] = XYZ_In[1];\n\t      result[2] = XYZ_In[2];\n\t      return;\n\t    }\n\t    var LMS = result;\n\t    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n\t    var LMS_Flat = tempNormalizeMatrix;\n\t    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n\t    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n\t  }\n\t  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n\t    var LMS = result;\n\t    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n\t    var LMS_D65 = tempNormalizeMatrix;\n\t    convertToD65(sourceWhitePoint, LMS, LMS_D65);\n\t    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n\t  }\n\t  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n\t    var A = adjustToRange(0, 1, src[srcOffset] * scale);\n\t    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n\t    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n\t    var AGR = Math.pow(A, cs.GR);\n\t    var BGG = Math.pow(B, cs.GG);\n\t    var CGB = Math.pow(C, cs.GB);\n\t    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n\t    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n\t    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n\t    var XYZ = tempConvertMatrix1;\n\t    XYZ[0] = X;\n\t    XYZ[1] = Y;\n\t    XYZ[2] = Z;\n\t    var XYZ_Flat = tempConvertMatrix2;\n\t    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n\t    var XYZ_Black = tempConvertMatrix1;\n\t    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n\t    var XYZ_D65 = tempConvertMatrix2;\n\t    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n\t    var SRGB = tempConvertMatrix1;\n\t    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n\t    var sR = sRGBTransferFunction(SRGB[0]);\n\t    var sG = sRGBTransferFunction(SRGB[1]);\n\t    var sB = sRGBTransferFunction(SRGB[2]);\n\t    dest[destOffset] = Math.round(sR * 255);\n\t    dest[destOffset + 1] = Math.round(sG * 255);\n\t    dest[destOffset + 2] = Math.round(sB * 255);\n\t  }\n\t  CalRGBCS.prototype = {\n\t    getRgb: ColorSpace.prototype.getRgb,\n\t    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n\t    },\n\t    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      var scale = 1 / ((1 << bits) - 1);\n\t      for (var i = 0; i < count; ++i) {\n\t        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n\t        srcOffset += 3;\n\t        destOffset += 3 + alpha01;\n\t      }\n\t    },\n\t    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n\t      return inputLength * (3 + alpha01) / 3 | 0;\n\t    },\n\t    isPassthrough: ColorSpace.prototype.isPassthrough,\n\t    fillRgb: ColorSpace.prototype.fillRgb,\n\t    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n\t      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n\t    },\n\t    usesZeroToOneRange: true\n\t  };\n\t  return CalRGBCS;\n\t}();\n\tvar LabCS = function LabCSClosure() {\n\t  function LabCS(whitePoint, blackPoint, range) {\n\t    this.name = 'Lab';\n\t    this.numComps = 3;\n\t    this.defaultColor = new Float32Array(this.numComps);\n\t    if (!whitePoint) {\n\t      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\n\t    }\n\t    blackPoint = blackPoint || [0, 0, 0];\n\t    range = range || [-100, 100, -100, 100];\n\t    this.XW = whitePoint[0];\n\t    this.YW = whitePoint[1];\n\t    this.ZW = whitePoint[2];\n\t    this.amin = range[0];\n\t    this.amax = range[1];\n\t    this.bmin = range[2];\n\t    this.bmax = range[3];\n\t    this.XB = blackPoint[0];\n\t    this.YB = blackPoint[1];\n\t    this.ZB = blackPoint[2];\n\t    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n\t      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\n\t    }\n\t    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n\t      (0, _util.info)('Invalid BlackPoint, falling back to default');\n\t      this.XB = this.YB = this.ZB = 0;\n\t    }\n\t    if (this.amin > this.amax || this.bmin > this.bmax) {\n\t      (0, _util.info)('Invalid Range, falling back to defaults');\n\t      this.amin = -100;\n\t      this.amax = 100;\n\t      this.bmin = -100;\n\t      this.bmax = 100;\n\t    }\n\t  }\n\t  function fn_g(x) {\n\t    var result;\n\t    if (x >= 6 / 29) {\n\t      result = x * x * x;\n\t    } else {\n\t      result = 108 / 841 * (x - 4 / 29);\n\t    }\n\t    return result;\n\t  }\n\t  function decode(value, high1, low2, high2) {\n\t    return low2 + value * (high2 - low2) / high1;\n\t  }\n\t  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n\t    var Ls = src[srcOffset];\n\t    var as = src[srcOffset + 1];\n\t    var bs = src[srcOffset + 2];\n\t    if (maxVal !== false) {\n\t      Ls = decode(Ls, maxVal, 0, 100);\n\t      as = decode(as, maxVal, cs.amin, cs.amax);\n\t      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n\t    }\n\t    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n\t    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n\t    var M = (Ls + 16) / 116;\n\t    var L = M + as / 500;\n\t    var N = M - bs / 200;\n\t    var X = cs.XW * fn_g(L);\n\t    var Y = cs.YW * fn_g(M);\n\t    var Z = cs.ZW * fn_g(N);\n\t    var r, g, b;\n\t    if (cs.ZW < 1) {\n\t      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n\t      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n\t      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n\t    } else {\n\t      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n\t      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n\t      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n\t    }\n\t    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n\t    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n\t    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n\t  }\n\t  LabCS.prototype = {\n\t    getRgb: ColorSpace.prototype.getRgb,\n\t    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n\t      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n\t    },\n\t    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n\t      var maxVal = (1 << bits) - 1;\n\t      for (var i = 0; i < count; i++) {\n\t        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n\t        srcOffset += 3;\n\t        destOffset += 3 + alpha01;\n\t      }\n\t    },\n\t    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n\t      return inputLength * (3 + alpha01) / 3 | 0;\n\t    },\n\t    isPassthrough: ColorSpace.prototype.isPassthrough,\n\t    fillRgb: ColorSpace.prototype.fillRgb,\n\t    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n\t      return true;\n\t    },\n\t    usesZeroToOneRange: false\n\t  };\n\t  return LabCS;\n\t}();\n\texports.ColorSpace = ColorSpace;\n\t\n\t/***/ }),\n\t/* 28 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\tvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall'];\n\tvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\n\tvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls'];\n\tvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\n\tvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt'];\n\tvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191'];\n\tfunction getEncoding(encodingName) {\n\t  switch (encodingName) {\n\t    case 'WinAnsiEncoding':\n\t      return WinAnsiEncoding;\n\t    case 'StandardEncoding':\n\t      return StandardEncoding;\n\t    case 'MacRomanEncoding':\n\t      return MacRomanEncoding;\n\t    case 'SymbolSetEncoding':\n\t      return SymbolSetEncoding;\n\t    case 'ZapfDingbatsEncoding':\n\t      return ZapfDingbatsEncoding;\n\t    case 'ExpertEncoding':\n\t      return ExpertEncoding;\n\t    case 'MacExpertEncoding':\n\t      return MacExpertEncoding;\n\t    default:\n\t      return null;\n\t  }\n\t}\n\texports.WinAnsiEncoding = WinAnsiEncoding;\n\texports.StandardEncoding = StandardEncoding;\n\texports.MacRomanEncoding = MacRomanEncoding;\n\texports.SymbolSetEncoding = SymbolSetEncoding;\n\texports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\n\texports.ExpertEncoding = ExpertEncoding;\n\texports.getEncoding = getEncoding;\n\t\n\t/***/ }),\n\t/* 29 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tmodule.exports = function (bitmap, value) {\n\t  return {\n\t    enumerable: !(bitmap & 1),\n\t    configurable: !(bitmap & 2),\n\t    writable: !(bitmap & 4),\n\t    value: value\n\t  };\n\t};\n\t\n\t/***/ }),\n\t/* 30 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar IObject = __w_pdfjs_require__(37);\n\tvar defined = __w_pdfjs_require__(38);\n\tmodule.exports = function (it) {\n\t  return IObject(defined(it));\n\t};\n\t\n\t/***/ }),\n\t/* 31 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar toInteger = __w_pdfjs_require__(18);\n\tvar max = Math.max;\n\tvar min = Math.min;\n\tmodule.exports = function (index, length) {\n\t  index = toInteger(index);\n\t  return index < 0 ? max(index + length, 0) : min(index, length);\n\t};\n\t\n\t/***/ }),\n\t/* 32 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar cof = __w_pdfjs_require__(25);\n\tvar TAG = __w_pdfjs_require__(4)('toStringTag');\n\tvar ARG = cof(function () {\n\t  return arguments;\n\t}()) == 'Arguments';\n\tvar tryGet = function tryGet(it, key) {\n\t  try {\n\t    return it[key];\n\t  } catch (e) {}\n\t};\n\tmodule.exports = function (it) {\n\t  var O, T, B;\n\t  return it === undefined ? 'Undefined' : it === null ? 'Null' : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T : ARG ? cof(O) : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n\t};\n\t\n\t/***/ }),\n\t/* 33 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar ctx = __w_pdfjs_require__(13);\n\tvar call = __w_pdfjs_require__(107);\n\tvar isArrayIter = __w_pdfjs_require__(56);\n\tvar anObject = __w_pdfjs_require__(9);\n\tvar toLength = __w_pdfjs_require__(14);\n\tvar getIterFn = __w_pdfjs_require__(60);\n\tvar BREAK = {};\n\tvar RETURN = {};\n\tvar _exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n\t  var iterFn = ITERATOR ? function () {\n\t    return iterable;\n\t  } : getIterFn(iterable);\n\t  var f = ctx(fn, that, entries ? 2 : 1);\n\t  var index = 0;\n\t  var length, step, iterator, result;\n\t  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n\t  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n\t    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n\t    if (result === BREAK || result === RETURN) return result;\n\t  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n\t    result = call(iterator, f, step.value, entries);\n\t    if (result === BREAK || result === RETURN) return result;\n\t  }\n\t};\n\t_exports.BREAK = BREAK;\n\t_exports.RETURN = RETURN;\n\t\n\t/***/ }),\n\t/* 34 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Parser = exports.Linearization = exports.Lexer = undefined;\n\t\n\tvar _stream = __w_pdfjs_require__(5);\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar _ccitt_stream = __w_pdfjs_require__(130);\n\t\n\tvar _jbig2_stream = __w_pdfjs_require__(132);\n\t\n\tvar MAX_LENGTH_TO_CACHE = 1000;\n\tvar Parser = function ParserClosure() {\n\t  function Parser(lexer, allowStreams, xref, recoveryMode) {\n\t    this.lexer = lexer;\n\t    this.allowStreams = allowStreams;\n\t    this.xref = xref;\n\t    this.recoveryMode = recoveryMode || false;\n\t    this.imageCache = Object.create(null);\n\t    this.refill();\n\t  }\n\t  Parser.prototype = {\n\t    refill: function Parser_refill() {\n\t      this.buf1 = this.lexer.getObj();\n\t      this.buf2 = this.lexer.getObj();\n\t    },\n\t    shift: function Parser_shift() {\n\t      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\n\t        this.buf1 = this.buf2;\n\t        this.buf2 = null;\n\t      } else {\n\t        this.buf1 = this.buf2;\n\t        this.buf2 = this.lexer.getObj();\n\t      }\n\t    },\n\t    tryShift: function Parser_tryShift() {\n\t      try {\n\t        this.shift();\n\t        return true;\n\t      } catch (e) {\n\t        if (e instanceof _util.MissingDataException) {\n\t          throw e;\n\t        }\n\t        return false;\n\t      }\n\t    },\n\t    getObj: function Parser_getObj(cipherTransform) {\n\t      var buf1 = this.buf1;\n\t      this.shift();\n\t      if (buf1 instanceof _primitives.Cmd) {\n\t        switch (buf1.cmd) {\n\t          case 'BI':\n\t            return this.makeInlineImage(cipherTransform);\n\t          case '[':\n\t            var array = [];\n\t            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\n\t              array.push(this.getObj(cipherTransform));\n\t            }\n\t            if ((0, _primitives.isEOF)(this.buf1)) {\n\t              if (!this.recoveryMode) {\n\t                throw new _util.FormatError('End of file inside array');\n\t              }\n\t              return array;\n\t            }\n\t            this.shift();\n\t            return array;\n\t          case '<<':\n\t            var dict = new _primitives.Dict(this.xref);\n\t            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\n\t              if (!(0, _primitives.isName)(this.buf1)) {\n\t                (0, _util.info)('Malformed dictionary: key must be a name object');\n\t                this.shift();\n\t                continue;\n\t              }\n\t              var key = this.buf1.name;\n\t              this.shift();\n\t              if ((0, _primitives.isEOF)(this.buf1)) {\n\t                break;\n\t              }\n\t              dict.set(key, this.getObj(cipherTransform));\n\t            }\n\t            if ((0, _primitives.isEOF)(this.buf1)) {\n\t              if (!this.recoveryMode) {\n\t                throw new _util.FormatError('End of file inside dictionary');\n\t              }\n\t              return dict;\n\t            }\n\t            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\n\t              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n\t            }\n\t            this.shift();\n\t            return dict;\n\t          default:\n\t            return buf1;\n\t        }\n\t      }\n\t      if (Number.isInteger(buf1)) {\n\t        var num = buf1;\n\t        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\n\t          var ref = new _primitives.Ref(num, this.buf1);\n\t          this.shift();\n\t          this.shift();\n\t          return ref;\n\t        }\n\t        return num;\n\t      }\n\t      if ((0, _util.isString)(buf1)) {\n\t        var str = buf1;\n\t        if (cipherTransform) {\n\t          str = cipherTransform.decryptString(str);\n\t        }\n\t        return str;\n\t      }\n\t      return buf1;\n\t    },\n\t    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\n\t      var E = 0x45,\n\t          I = 0x49,\n\t          SPACE = 0x20,\n\t          LF = 0xA,\n\t          CR = 0xD;\n\t      var n = 10,\n\t          NUL = 0x0;\n\t      var startPos = stream.pos,\n\t          state = 0,\n\t          ch = void 0,\n\t          maybeEIPos = void 0;\n\t      while ((ch = stream.getByte()) !== -1) {\n\t        if (state === 0) {\n\t          state = ch === E ? 1 : 0;\n\t        } else if (state === 1) {\n\t          state = ch === I ? 2 : 0;\n\t        } else {\n\t          (0, _util.assert)(state === 2);\n\t          if (ch === SPACE || ch === LF || ch === CR) {\n\t            maybeEIPos = stream.pos;\n\t            var followingBytes = stream.peekBytes(n);\n\t            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n\t              ch = followingBytes[i];\n\t              if (ch === NUL && followingBytes[i + 1] !== NUL) {\n\t                continue;\n\t              }\n\t              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n\t                state = 0;\n\t                break;\n\t              }\n\t            }\n\t            if (state === 2) {\n\t              break;\n\t            }\n\t          } else {\n\t            state = 0;\n\t          }\n\t        }\n\t      }\n\t      if (ch === -1) {\n\t        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\n\t        if (maybeEIPos) {\n\t          (0, _util.warn)('... trying to recover by using the last \"EI\" occurrence.');\n\t          stream.skip(-(stream.pos - maybeEIPos));\n\t        }\n\t      }\n\t      return stream.pos - 4 - startPos;\n\t    },\n\t\n\t    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n\t      var startPos = stream.pos,\n\t          foundEOI = false,\n\t          b,\n\t          markerLength,\n\t          length;\n\t      while ((b = stream.getByte()) !== -1) {\n\t        if (b !== 0xFF) {\n\t          continue;\n\t        }\n\t        switch (stream.getByte()) {\n\t          case 0x00:\n\t            break;\n\t          case 0xFF:\n\t            stream.skip(-1);\n\t            break;\n\t          case 0xD9:\n\t            foundEOI = true;\n\t            break;\n\t          case 0xC0:\n\t          case 0xC1:\n\t          case 0xC2:\n\t          case 0xC3:\n\t          case 0xC5:\n\t          case 0xC6:\n\t          case 0xC7:\n\t          case 0xC9:\n\t          case 0xCA:\n\t          case 0xCB:\n\t          case 0xCD:\n\t          case 0xCE:\n\t          case 0xCF:\n\t          case 0xC4:\n\t          case 0xCC:\n\t          case 0xDA:\n\t          case 0xDB:\n\t          case 0xDC:\n\t          case 0xDD:\n\t          case 0xDE:\n\t          case 0xDF:\n\t          case 0xE0:\n\t          case 0xE1:\n\t          case 0xE2:\n\t          case 0xE3:\n\t          case 0xE4:\n\t          case 0xE5:\n\t          case 0xE6:\n\t          case 0xE7:\n\t          case 0xE8:\n\t          case 0xE9:\n\t          case 0xEA:\n\t          case 0xEB:\n\t          case 0xEC:\n\t          case 0xED:\n\t          case 0xEE:\n\t          case 0xEF:\n\t          case 0xFE:\n\t            markerLength = stream.getUint16();\n\t            if (markerLength > 2) {\n\t              stream.skip(markerLength - 2);\n\t            } else {\n\t              stream.skip(-2);\n\t            }\n\t            break;\n\t        }\n\t        if (foundEOI) {\n\t          break;\n\t        }\n\t      }\n\t      length = stream.pos - startPos;\n\t      if (b === -1) {\n\t        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n\t        stream.skip(-length);\n\t        return this.findDefaultInlineStreamEnd(stream);\n\t      }\n\t      this.inlineStreamSkipEI(stream);\n\t      return length;\n\t    },\n\t    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n\t      var TILDE = 0x7E,\n\t          GT = 0x3E;\n\t      var startPos = stream.pos,\n\t          ch,\n\t          length;\n\t      while ((ch = stream.getByte()) !== -1) {\n\t        if (ch === TILDE && stream.peekByte() === GT) {\n\t          stream.skip();\n\t          break;\n\t        }\n\t      }\n\t      length = stream.pos - startPos;\n\t      if (ch === -1) {\n\t        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n\t        stream.skip(-length);\n\t        return this.findDefaultInlineStreamEnd(stream);\n\t      }\n\t      this.inlineStreamSkipEI(stream);\n\t      return length;\n\t    },\n\t    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n\t      var GT = 0x3E;\n\t      var startPos = stream.pos,\n\t          ch,\n\t          length;\n\t      while ((ch = stream.getByte()) !== -1) {\n\t        if (ch === GT) {\n\t          break;\n\t        }\n\t      }\n\t      length = stream.pos - startPos;\n\t      if (ch === -1) {\n\t        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n\t        stream.skip(-length);\n\t        return this.findDefaultInlineStreamEnd(stream);\n\t      }\n\t      this.inlineStreamSkipEI(stream);\n\t      return length;\n\t    },\n\t    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n\t      var E = 0x45,\n\t          I = 0x49;\n\t      var state = 0,\n\t          ch;\n\t      while ((ch = stream.getByte()) !== -1) {\n\t        if (state === 0) {\n\t          state = ch === E ? 1 : 0;\n\t        } else if (state === 1) {\n\t          state = ch === I ? 2 : 0;\n\t        } else if (state === 2) {\n\t          break;\n\t        }\n\t      }\n\t    },\n\t    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n\t      var lexer = this.lexer;\n\t      var stream = lexer.stream;\n\t      var dict = new _primitives.Dict(this.xref);\n\t      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\n\t        if (!(0, _primitives.isName)(this.buf1)) {\n\t          throw new _util.FormatError('Dictionary key must be a name object');\n\t        }\n\t        var key = this.buf1.name;\n\t        this.shift();\n\t        if ((0, _primitives.isEOF)(this.buf1)) {\n\t          break;\n\t        }\n\t        dict.set(key, this.getObj(cipherTransform));\n\t      }\n\t      var filter = dict.get('Filter', 'F'),\n\t          filterName;\n\t      if ((0, _primitives.isName)(filter)) {\n\t        filterName = filter.name;\n\t      } else if (Array.isArray(filter)) {\n\t        var filterZero = this.xref.fetchIfRef(filter[0]);\n\t        if ((0, _primitives.isName)(filterZero)) {\n\t          filterName = filterZero.name;\n\t        }\n\t      }\n\t      var startPos = stream.pos,\n\t          length,\n\t          i,\n\t          ii;\n\t      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n\t        length = this.findDCTDecodeInlineStreamEnd(stream);\n\t      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\n\t        length = this.findASCII85DecodeInlineStreamEnd(stream);\n\t      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n\t        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n\t      } else {\n\t        length = this.findDefaultInlineStreamEnd(stream);\n\t      }\n\t      var imageStream = stream.makeSubStream(startPos, length, dict);\n\t      var adler32;\n\t      if (length < MAX_LENGTH_TO_CACHE) {\n\t        var imageBytes = imageStream.getBytes();\n\t        imageStream.reset();\n\t        var a = 1;\n\t        var b = 0;\n\t        for (i = 0, ii = imageBytes.length; i < ii; ++i) {\n\t          a += imageBytes[i] & 0xff;\n\t          b += a;\n\t        }\n\t        adler32 = b % 65521 << 16 | a % 65521;\n\t        var cacheEntry = this.imageCache[adler32];\n\t        if (cacheEntry !== undefined) {\n\t          this.buf2 = _primitives.Cmd.get('EI');\n\t          this.shift();\n\t          cacheEntry.reset();\n\t          return cacheEntry;\n\t        }\n\t      }\n\t      if (cipherTransform) {\n\t        imageStream = cipherTransform.createStream(imageStream, length);\n\t      }\n\t      imageStream = this.filter(imageStream, dict, length);\n\t      imageStream.dict = dict;\n\t      if (adler32 !== undefined) {\n\t        imageStream.cacheKey = 'inline_' + length + '_' + adler32;\n\t        this.imageCache[adler32] = imageStream;\n\t      }\n\t      this.buf2 = _primitives.Cmd.get('EI');\n\t      this.shift();\n\t      return imageStream;\n\t    },\n\t    makeStream: function Parser_makeStream(dict, cipherTransform) {\n\t      var lexer = this.lexer;\n\t      var stream = lexer.stream;\n\t      lexer.skipToNextLine();\n\t      var pos = stream.pos - 1;\n\t      var length = dict.get('Length');\n\t      if (!Number.isInteger(length)) {\n\t        (0, _util.info)('Bad ' + length + ' attribute in stream');\n\t        length = 0;\n\t      }\n\t      stream.pos = pos + length;\n\t      lexer.nextChar();\n\t      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\n\t        this.shift();\n\t      } else {\n\t        stream.pos = pos;\n\t        var SCAN_BLOCK_SIZE = 2048;\n\t        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n\t        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\n\t        var skipped = 0,\n\t            found = false,\n\t            i,\n\t            j;\n\t        while (stream.pos < stream.end) {\n\t          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n\t          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n\t          if (scanLength <= 0) {\n\t            break;\n\t          }\n\t          found = false;\n\t          i = 0;\n\t          while (i < scanLength) {\n\t            j = 0;\n\t            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n\t              j++;\n\t            }\n\t            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n\t              found = true;\n\t              break;\n\t            }\n\t            i++;\n\t          }\n\t          if (found) {\n\t            skipped += i;\n\t            stream.pos += i;\n\t            break;\n\t          }\n\t          skipped += scanLength;\n\t          stream.pos += scanLength;\n\t        }\n\t        if (!found) {\n\t          throw new _util.FormatError('Missing endstream');\n\t        }\n\t        length = skipped;\n\t        lexer.nextChar();\n\t        this.shift();\n\t        this.shift();\n\t      }\n\t      this.shift();\n\t      stream = stream.makeSubStream(pos, length, dict);\n\t      if (cipherTransform) {\n\t        stream = cipherTransform.createStream(stream, length);\n\t      }\n\t      stream = this.filter(stream, dict, length);\n\t      stream.dict = dict;\n\t      return stream;\n\t    },\n\t    filter: function Parser_filter(stream, dict, length) {\n\t      var filter = dict.get('Filter', 'F');\n\t      var params = dict.get('DecodeParms', 'DP');\n\t      if ((0, _primitives.isName)(filter)) {\n\t        if (Array.isArray(params)) {\n\t          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\n\t        }\n\t        return this.makeFilter(stream, filter.name, length, params);\n\t      }\n\t      var maybeLength = length;\n\t      if (Array.isArray(filter)) {\n\t        var filterArray = filter;\n\t        var paramsArray = params;\n\t        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n\t          filter = this.xref.fetchIfRef(filterArray[i]);\n\t          if (!(0, _primitives.isName)(filter)) {\n\t            throw new _util.FormatError('Bad filter name: ' + filter);\n\t          }\n\t          params = null;\n\t          if (Array.isArray(paramsArray) && i in paramsArray) {\n\t            params = this.xref.fetchIfRef(paramsArray[i]);\n\t          }\n\t          stream = this.makeFilter(stream, filter.name, maybeLength, params);\n\t          maybeLength = null;\n\t        }\n\t      }\n\t      return stream;\n\t    },\n\t    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n\t      if (maybeLength === 0) {\n\t        (0, _util.warn)('Empty \"' + name + '\" stream.');\n\t        return new _stream.NullStream(stream);\n\t      }\n\t      try {\n\t        var xrefStreamStats = this.xref.stats.streamTypes;\n\t        if (name === 'FlateDecode' || name === 'Fl') {\n\t          xrefStreamStats[_util.StreamType.FLATE] = true;\n\t          if (params) {\n\t            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\n\t          }\n\t          return new _stream.FlateStream(stream, maybeLength);\n\t        }\n\t        if (name === 'LZWDecode' || name === 'LZW') {\n\t          xrefStreamStats[_util.StreamType.LZW] = true;\n\t          var earlyChange = 1;\n\t          if (params) {\n\t            if (params.has('EarlyChange')) {\n\t              earlyChange = params.get('EarlyChange');\n\t            }\n\t            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n\t          }\n\t          return new _stream.LZWStream(stream, maybeLength, earlyChange);\n\t        }\n\t        if (name === 'DCTDecode' || name === 'DCT') {\n\t          xrefStreamStats[_util.StreamType.DCT] = true;\n\t          return new _stream.JpegStream(stream, maybeLength, stream.dict, params);\n\t        }\n\t        if (name === 'JPXDecode' || name === 'JPX') {\n\t          xrefStreamStats[_util.StreamType.JPX] = true;\n\t          return new _stream.JpxStream(stream, maybeLength, stream.dict, params);\n\t        }\n\t        if (name === 'ASCII85Decode' || name === 'A85') {\n\t          xrefStreamStats[_util.StreamType.A85] = true;\n\t          return new _stream.Ascii85Stream(stream, maybeLength);\n\t        }\n\t        if (name === 'ASCIIHexDecode' || name === 'AHx') {\n\t          xrefStreamStats[_util.StreamType.AHX] = true;\n\t          return new _stream.AsciiHexStream(stream, maybeLength);\n\t        }\n\t        if (name === 'CCITTFaxDecode' || name === 'CCF') {\n\t          xrefStreamStats[_util.StreamType.CCF] = true;\n\t          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\n\t        }\n\t        if (name === 'RunLengthDecode' || name === 'RL') {\n\t          xrefStreamStats[_util.StreamType.RL] = true;\n\t          return new _stream.RunLengthStream(stream, maybeLength);\n\t        }\n\t        if (name === 'JBIG2Decode') {\n\t          xrefStreamStats[_util.StreamType.JBIG] = true;\n\t          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\n\t        }\n\t        (0, _util.warn)('filter \"' + name + '\" not supported yet');\n\t        return stream;\n\t      } catch (ex) {\n\t        if (ex instanceof _util.MissingDataException) {\n\t          throw ex;\n\t        }\n\t        (0, _util.warn)('Invalid stream: \\\"' + ex + '\\\"');\n\t        return new _stream.NullStream(stream);\n\t      }\n\t    }\n\t  };\n\t  return Parser;\n\t}();\n\tvar Lexer = function LexerClosure() {\n\t  function Lexer(stream, knownCommands) {\n\t    this.stream = stream;\n\t    this.nextChar();\n\t    this.strBuf = [];\n\t    this.knownCommands = knownCommands;\n\t  }\n\t  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\t  function toHexDigit(ch) {\n\t    if (ch >= 0x30 && ch <= 0x39) {\n\t      return ch & 0x0F;\n\t    }\n\t    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n\t      return (ch & 0x0F) + 9;\n\t    }\n\t    return -1;\n\t  }\n\t  Lexer.prototype = {\n\t    nextChar: function Lexer_nextChar() {\n\t      return this.currentChar = this.stream.getByte();\n\t    },\n\t    peekChar: function Lexer_peekChar() {\n\t      return this.stream.peekByte();\n\t    },\n\t    getNumber: function Lexer_getNumber() {\n\t      var ch = this.currentChar;\n\t      var eNotation = false;\n\t      var divideBy = 0;\n\t      var sign = 1;\n\t      if (ch === 0x2D) {\n\t        sign = -1;\n\t        ch = this.nextChar();\n\t        if (ch === 0x2D) {\n\t          ch = this.nextChar();\n\t        }\n\t      } else if (ch === 0x2B) {\n\t        ch = this.nextChar();\n\t      }\n\t      if (ch === 0x2E) {\n\t        divideBy = 10;\n\t        ch = this.nextChar();\n\t      }\n\t      if (ch === 0x0A || ch === 0x0D) {\n\t        do {\n\t          ch = this.nextChar();\n\t        } while (ch === 0x0A || ch === 0x0D);\n\t      }\n\t      if (ch < 0x30 || ch > 0x39) {\n\t        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\n\t      }\n\t      var baseValue = ch - 0x30;\n\t      var powerValue = 0;\n\t      var powerValueSign = 1;\n\t      while ((ch = this.nextChar()) >= 0) {\n\t        if (0x30 <= ch && ch <= 0x39) {\n\t          var currentDigit = ch - 0x30;\n\t          if (eNotation) {\n\t            powerValue = powerValue * 10 + currentDigit;\n\t          } else {\n\t            if (divideBy !== 0) {\n\t              divideBy *= 10;\n\t            }\n\t            baseValue = baseValue * 10 + currentDigit;\n\t          }\n\t        } else if (ch === 0x2E) {\n\t          if (divideBy === 0) {\n\t            divideBy = 1;\n\t          } else {\n\t            break;\n\t          }\n\t        } else if (ch === 0x2D) {\n\t          (0, _util.warn)('Badly formatted number');\n\t        } else if (ch === 0x45 || ch === 0x65) {\n\t          ch = this.peekChar();\n\t          if (ch === 0x2B || ch === 0x2D) {\n\t            powerValueSign = ch === 0x2D ? -1 : 1;\n\t            this.nextChar();\n\t          } else if (ch < 0x30 || ch > 0x39) {\n\t            break;\n\t          }\n\t          eNotation = true;\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t      if (divideBy !== 0) {\n\t        baseValue /= divideBy;\n\t      }\n\t      if (eNotation) {\n\t        baseValue *= Math.pow(10, powerValueSign * powerValue);\n\t      }\n\t      return sign * baseValue;\n\t    },\n\t    getString: function Lexer_getString() {\n\t      var numParen = 1;\n\t      var done = false;\n\t      var strBuf = this.strBuf;\n\t      strBuf.length = 0;\n\t      var ch = this.nextChar();\n\t      while (true) {\n\t        var charBuffered = false;\n\t        switch (ch | 0) {\n\t          case -1:\n\t            (0, _util.warn)('Unterminated string');\n\t            done = true;\n\t            break;\n\t          case 0x28:\n\t            ++numParen;\n\t            strBuf.push('(');\n\t            break;\n\t          case 0x29:\n\t            if (--numParen === 0) {\n\t              this.nextChar();\n\t              done = true;\n\t            } else {\n\t              strBuf.push(')');\n\t            }\n\t            break;\n\t          case 0x5C:\n\t            ch = this.nextChar();\n\t            switch (ch) {\n\t              case -1:\n\t                (0, _util.warn)('Unterminated string');\n\t                done = true;\n\t                break;\n\t              case 0x6E:\n\t                strBuf.push('\\n');\n\t                break;\n\t              case 0x72:\n\t                strBuf.push('\\r');\n\t                break;\n\t              case 0x74:\n\t                strBuf.push('\\t');\n\t                break;\n\t              case 0x62:\n\t                strBuf.push('\\b');\n\t                break;\n\t              case 0x66:\n\t                strBuf.push('\\f');\n\t                break;\n\t              case 0x5C:\n\t              case 0x28:\n\t              case 0x29:\n\t                strBuf.push(String.fromCharCode(ch));\n\t                break;\n\t              case 0x30:\n\t              case 0x31:\n\t              case 0x32:\n\t              case 0x33:\n\t              case 0x34:\n\t              case 0x35:\n\t              case 0x36:\n\t              case 0x37:\n\t                var x = ch & 0x0F;\n\t                ch = this.nextChar();\n\t                charBuffered = true;\n\t                if (ch >= 0x30 && ch <= 0x37) {\n\t                  x = (x << 3) + (ch & 0x0F);\n\t                  ch = this.nextChar();\n\t                  if (ch >= 0x30 && ch <= 0x37) {\n\t                    charBuffered = false;\n\t                    x = (x << 3) + (ch & 0x0F);\n\t                  }\n\t                }\n\t                strBuf.push(String.fromCharCode(x));\n\t                break;\n\t              case 0x0D:\n\t                if (this.peekChar() === 0x0A) {\n\t                  this.nextChar();\n\t                }\n\t                break;\n\t              case 0x0A:\n\t                break;\n\t              default:\n\t                strBuf.push(String.fromCharCode(ch));\n\t                break;\n\t            }\n\t            break;\n\t          default:\n\t            strBuf.push(String.fromCharCode(ch));\n\t            break;\n\t        }\n\t        if (done) {\n\t          break;\n\t        }\n\t        if (!charBuffered) {\n\t          ch = this.nextChar();\n\t        }\n\t      }\n\t      return strBuf.join('');\n\t    },\n\t    getName: function Lexer_getName() {\n\t      var ch, previousCh;\n\t      var strBuf = this.strBuf;\n\t      strBuf.length = 0;\n\t      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n\t        if (ch === 0x23) {\n\t          ch = this.nextChar();\n\t          if (specialChars[ch]) {\n\t            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n\t            strBuf.push('#');\n\t            break;\n\t          }\n\t          var x = toHexDigit(ch);\n\t          if (x !== -1) {\n\t            previousCh = ch;\n\t            ch = this.nextChar();\n\t            var x2 = toHexDigit(ch);\n\t            if (x2 === -1) {\n\t              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n\t              strBuf.push('#', String.fromCharCode(previousCh));\n\t              if (specialChars[ch]) {\n\t                break;\n\t              }\n\t              strBuf.push(String.fromCharCode(ch));\n\t              continue;\n\t            }\n\t            strBuf.push(String.fromCharCode(x << 4 | x2));\n\t          } else {\n\t            strBuf.push('#', String.fromCharCode(ch));\n\t          }\n\t        } else {\n\t          strBuf.push(String.fromCharCode(ch));\n\t        }\n\t      }\n\t      if (strBuf.length > 127) {\n\t        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\n\t      }\n\t      return _primitives.Name.get(strBuf.join(''));\n\t    },\n\t    getHexString: function Lexer_getHexString() {\n\t      var strBuf = this.strBuf;\n\t      strBuf.length = 0;\n\t      var ch = this.currentChar;\n\t      var isFirstHex = true;\n\t      var firstDigit;\n\t      var secondDigit;\n\t      while (true) {\n\t        if (ch < 0) {\n\t          (0, _util.warn)('Unterminated hex string');\n\t          break;\n\t        } else if (ch === 0x3E) {\n\t          this.nextChar();\n\t          break;\n\t        } else if (specialChars[ch] === 1) {\n\t          ch = this.nextChar();\n\t          continue;\n\t        } else {\n\t          if (isFirstHex) {\n\t            firstDigit = toHexDigit(ch);\n\t            if (firstDigit === -1) {\n\t              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n\t              ch = this.nextChar();\n\t              continue;\n\t            }\n\t          } else {\n\t            secondDigit = toHexDigit(ch);\n\t            if (secondDigit === -1) {\n\t              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n\t              ch = this.nextChar();\n\t              continue;\n\t            }\n\t            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n\t          }\n\t          isFirstHex = !isFirstHex;\n\t          ch = this.nextChar();\n\t        }\n\t      }\n\t      return strBuf.join('');\n\t    },\n\t    getObj: function Lexer_getObj() {\n\t      var comment = false;\n\t      var ch = this.currentChar;\n\t      while (true) {\n\t        if (ch < 0) {\n\t          return _primitives.EOF;\n\t        }\n\t        if (comment) {\n\t          if (ch === 0x0A || ch === 0x0D) {\n\t            comment = false;\n\t          }\n\t        } else if (ch === 0x25) {\n\t          comment = true;\n\t        } else if (specialChars[ch] !== 1) {\n\t          break;\n\t        }\n\t        ch = this.nextChar();\n\t      }\n\t      switch (ch | 0) {\n\t        case 0x30:\n\t        case 0x31:\n\t        case 0x32:\n\t        case 0x33:\n\t        case 0x34:\n\t        case 0x35:\n\t        case 0x36:\n\t        case 0x37:\n\t        case 0x38:\n\t        case 0x39:\n\t        case 0x2B:\n\t        case 0x2D:\n\t        case 0x2E:\n\t          return this.getNumber();\n\t        case 0x28:\n\t          return this.getString();\n\t        case 0x2F:\n\t          return this.getName();\n\t        case 0x5B:\n\t          this.nextChar();\n\t          return _primitives.Cmd.get('[');\n\t        case 0x5D:\n\t          this.nextChar();\n\t          return _primitives.Cmd.get(']');\n\t        case 0x3C:\n\t          ch = this.nextChar();\n\t          if (ch === 0x3C) {\n\t            this.nextChar();\n\t            return _primitives.Cmd.get('<<');\n\t          }\n\t          return this.getHexString();\n\t        case 0x3E:\n\t          ch = this.nextChar();\n\t          if (ch === 0x3E) {\n\t            this.nextChar();\n\t            return _primitives.Cmd.get('>>');\n\t          }\n\t          return _primitives.Cmd.get('>');\n\t        case 0x7B:\n\t          this.nextChar();\n\t          return _primitives.Cmd.get('{');\n\t        case 0x7D:\n\t          this.nextChar();\n\t          return _primitives.Cmd.get('}');\n\t        case 0x29:\n\t          this.nextChar();\n\t          throw new _util.FormatError('Illegal character: ' + ch);\n\t      }\n\t      var str = String.fromCharCode(ch);\n\t      var knownCommands = this.knownCommands;\n\t      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n\t      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n\t        var possibleCommand = str + String.fromCharCode(ch);\n\t        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n\t          break;\n\t        }\n\t        if (str.length === 128) {\n\t          throw new _util.FormatError('Command token too long: ' + str.length);\n\t        }\n\t        str = possibleCommand;\n\t        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n\t      }\n\t      if (str === 'true') {\n\t        return true;\n\t      }\n\t      if (str === 'false') {\n\t        return false;\n\t      }\n\t      if (str === 'null') {\n\t        return null;\n\t      }\n\t      return _primitives.Cmd.get(str);\n\t    },\n\t    skipToNextLine: function Lexer_skipToNextLine() {\n\t      var ch = this.currentChar;\n\t      while (ch >= 0) {\n\t        if (ch === 0x0D) {\n\t          ch = this.nextChar();\n\t          if (ch === 0x0A) {\n\t            this.nextChar();\n\t          }\n\t          break;\n\t        } else if (ch === 0x0A) {\n\t          this.nextChar();\n\t          break;\n\t        }\n\t        ch = this.nextChar();\n\t      }\n\t    }\n\t  };\n\t  return Lexer;\n\t}();\n\tvar Linearization = {\n\t  create: function LinearizationCreate(stream) {\n\t    function getInt(name, allowZeroValue) {\n\t      var obj = linDict.get(name);\n\t      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n\t        return obj;\n\t      }\n\t      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n\t    }\n\t    function getHints() {\n\t      var hints = linDict.get('H'),\n\t          hintsLength,\n\t          item;\n\t      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n\t        for (var index = 0; index < hintsLength; index++) {\n\t          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\n\t            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n\t          }\n\t        }\n\t        return hints;\n\t      }\n\t      throw new Error('Hint array in the linearization dictionary is invalid.');\n\t    }\n\t    var parser = new Parser(new Lexer(stream), false, null);\n\t    var obj1 = parser.getObj();\n\t    var obj2 = parser.getObj();\n\t    var obj3 = parser.getObj();\n\t    var linDict = parser.getObj();\n\t    var obj, length;\n\t    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\n\t      return null;\n\t    } else if ((length = getInt('L')) !== stream.length) {\n\t      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n\t    }\n\t    return {\n\t      length: length,\n\t      hints: getHints(),\n\t      objectNumberFirst: getInt('O'),\n\t      endFirst: getInt('E'),\n\t      numPages: getInt('N'),\n\t      mainXRefEntriesOffset: getInt('T'),\n\t      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n\t    };\n\t  }\n\t};\n\texports.Lexer = Lexer;\n\texports.Linearization = Linearization;\n\texports.Parser = Parser;\n\t\n\t/***/ }),\n\t/* 35 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar isObject = __w_pdfjs_require__(3);\n\tvar document = __w_pdfjs_require__(1).document;\n\tvar is = isObject(document) && isObject(document.createElement);\n\tmodule.exports = function (it) {\n\t  return is ? document.createElement(it) : {};\n\t};\n\t\n\t/***/ }),\n\t/* 36 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar isObject = __w_pdfjs_require__(3);\n\tmodule.exports = function (it, S) {\n\t  if (!isObject(it)) return it;\n\t  var fn, val;\n\t  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n\t  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n\t  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n\t  throw TypeError(\"Can't convert object to primitive value\");\n\t};\n\t\n\t/***/ }),\n\t/* 37 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar cof = __w_pdfjs_require__(25);\n\tmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n\t  return cof(it) == 'String' ? it.split('') : Object(it);\n\t};\n\t\n\t/***/ }),\n\t/* 38 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tmodule.exports = function (it) {\n\t  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n\t  return it;\n\t};\n\t\n\t/***/ }),\n\t/* 39 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar shared = __w_pdfjs_require__(54)('keys');\n\tvar uid = __w_pdfjs_require__(17);\n\tmodule.exports = function (key) {\n\t  return shared[key] || (shared[key] = uid(key));\n\t};\n\t\n\t/***/ }),\n\t/* 40 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tmodule.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');\n\t\n\t/***/ }),\n\t/* 41 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar $keys = __w_pdfjs_require__(52);\n\tvar enumBugKeys = __w_pdfjs_require__(40);\n\tmodule.exports = Object.keys || function keys(O) {\n\t  return $keys(O, enumBugKeys);\n\t};\n\t\n\t/***/ }),\n\t/* 42 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar ctx = __w_pdfjs_require__(13);\n\tvar IObject = __w_pdfjs_require__(37);\n\tvar toObject = __w_pdfjs_require__(19);\n\tvar toLength = __w_pdfjs_require__(14);\n\tvar asc = __w_pdfjs_require__(91);\n\tmodule.exports = function (TYPE, $create) {\n\t  var IS_MAP = TYPE == 1;\n\t  var IS_FILTER = TYPE == 2;\n\t  var IS_SOME = TYPE == 3;\n\t  var IS_EVERY = TYPE == 4;\n\t  var IS_FIND_INDEX = TYPE == 6;\n\t  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n\t  var create = $create || asc;\n\t  return function ($this, callbackfn, that) {\n\t    var O = toObject($this);\n\t    var self = IObject(O);\n\t    var f = ctx(callbackfn, that, 3);\n\t    var length = toLength(self.length);\n\t    var index = 0;\n\t    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n\t    var val, res;\n\t    for (; length > index; index++) {\n\t      if (NO_HOLES || index in self) {\n\t        val = self[index];\n\t        res = f(val, index, O);\n\t        if (TYPE) {\n\t          if (IS_MAP) result[index] = res;else if (res) switch (TYPE) {\n\t            case 3:\n\t              return true;\n\t            case 5:\n\t              return val;\n\t            case 6:\n\t              return index;\n\t            case 2:\n\t              result.push(val);\n\t          } else if (IS_EVERY) return false;\n\t        }\n\t      }\n\t    }return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n\t  };\n\t};\n\t\n\t/***/ }),\n\t/* 43 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar anObject = __w_pdfjs_require__(9);\n\tvar aFunction = __w_pdfjs_require__(22);\n\tvar SPECIES = __w_pdfjs_require__(4)('species');\n\tmodule.exports = function (O, D) {\n\t  var C = anObject(O).constructor;\n\t  var S;\n\t  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n\t};\n\t\n\t/***/ }),\n\t/* 44 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar ITERATOR = __w_pdfjs_require__(4)('iterator');\n\tvar SAFE_CLOSING = false;\n\ttry {\n\t  var riter = [7][ITERATOR]();\n\t  riter['return'] = function () {\n\t    SAFE_CLOSING = true;\n\t  };\n\t  Array.from(riter, function () {\n\t    throw 2;\n\t  });\n\t} catch (e) {}\n\tmodule.exports = function (exec, skipClosing) {\n\t  if (!skipClosing && !SAFE_CLOSING) return false;\n\t  var safe = false;\n\t  try {\n\t    var arr = [7];\n\t    var iter = arr[ITERATOR]();\n\t    iter.next = function () {\n\t      return { done: safe = true };\n\t    };\n\t    arr[ITERATOR] = function () {\n\t      return iter;\n\t    };\n\t    exec(arr);\n\t  } catch (e) {}\n\t  return safe;\n\t};\n\t\n\t/***/ }),\n\t/* 45 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar aFunction = __w_pdfjs_require__(22);\n\tfunction PromiseCapability(C) {\n\t  var resolve, reject;\n\t  this.promise = new C(function ($$resolve, $$reject) {\n\t    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n\t    resolve = $$resolve;\n\t    reject = $$reject;\n\t  });\n\t  this.resolve = aFunction(resolve);\n\t  this.reject = aFunction(reject);\n\t}\n\tmodule.exports.f = function (C) {\n\t  return new PromiseCapability(C);\n\t};\n\t\n\t/***/ }),\n\t/* 46 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar META = __w_pdfjs_require__(17)('meta');\n\tvar isObject = __w_pdfjs_require__(3);\n\tvar has = __w_pdfjs_require__(12);\n\tvar setDesc = __w_pdfjs_require__(15).f;\n\tvar id = 0;\n\tvar isExtensible = Object.isExtensible || function () {\n\t  return true;\n\t};\n\tvar FREEZE = !__w_pdfjs_require__(11)(function () {\n\t  return isExtensible(Object.preventExtensions({}));\n\t});\n\tvar setMeta = function setMeta(it) {\n\t  setDesc(it, META, {\n\t    value: {\n\t      i: 'O' + ++id,\n\t      w: {}\n\t    }\n\t  });\n\t};\n\tvar fastKey = function fastKey(it, create) {\n\t  if (!isObject(it)) return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n\t  if (!has(it, META)) {\n\t    if (!isExtensible(it)) return 'F';\n\t    if (!create) return 'E';\n\t    setMeta(it);\n\t  }\n\t  return it[META].i;\n\t};\n\tvar getWeak = function getWeak(it, create) {\n\t  if (!has(it, META)) {\n\t    if (!isExtensible(it)) return true;\n\t    if (!create) return false;\n\t    setMeta(it);\n\t  }\n\t  return it[META].w;\n\t};\n\tvar onFreeze = function onFreeze(it) {\n\t  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n\t  return it;\n\t};\n\tvar meta = module.exports = {\n\t  KEY: META,\n\t  NEED: false,\n\t  fastKey: fastKey,\n\t  getWeak: getWeak,\n\t  onFreeze: onFreeze\n\t};\n\t\n\t/***/ }),\n\t/* 47 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\tvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\n\tvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n\t t['A'] = 0x0041;\n\t t['AE'] = 0x00C6;\n\t t['AEacute'] = 0x01FC;\n\t t['AEmacron'] = 0x01E2;\n\t t['AEsmall'] = 0xF7E6;\n\t t['Aacute'] = 0x00C1;\n\t t['Aacutesmall'] = 0xF7E1;\n\t t['Abreve'] = 0x0102;\n\t t['Abreveacute'] = 0x1EAE;\n\t t['Abrevecyrillic'] = 0x04D0;\n\t t['Abrevedotbelow'] = 0x1EB6;\n\t t['Abrevegrave'] = 0x1EB0;\n\t t['Abrevehookabove'] = 0x1EB2;\n\t t['Abrevetilde'] = 0x1EB4;\n\t t['Acaron'] = 0x01CD;\n\t t['Acircle'] = 0x24B6;\n\t t['Acircumflex'] = 0x00C2;\n\t t['Acircumflexacute'] = 0x1EA4;\n\t t['Acircumflexdotbelow'] = 0x1EAC;\n\t t['Acircumflexgrave'] = 0x1EA6;\n\t t['Acircumflexhookabove'] = 0x1EA8;\n\t t['Acircumflexsmall'] = 0xF7E2;\n\t t['Acircumflextilde'] = 0x1EAA;\n\t t['Acute'] = 0xF6C9;\n\t t['Acutesmall'] = 0xF7B4;\n\t t['Acyrillic'] = 0x0410;\n\t t['Adblgrave'] = 0x0200;\n\t t['Adieresis'] = 0x00C4;\n\t t['Adieresiscyrillic'] = 0x04D2;\n\t t['Adieresismacron'] = 0x01DE;\n\t t['Adieresissmall'] = 0xF7E4;\n\t t['Adotbelow'] = 0x1EA0;\n\t t['Adotmacron'] = 0x01E0;\n\t t['Agrave'] = 0x00C0;\n\t t['Agravesmall'] = 0xF7E0;\n\t t['Ahookabove'] = 0x1EA2;\n\t t['Aiecyrillic'] = 0x04D4;\n\t t['Ainvertedbreve'] = 0x0202;\n\t t['Alpha'] = 0x0391;\n\t t['Alphatonos'] = 0x0386;\n\t t['Amacron'] = 0x0100;\n\t t['Amonospace'] = 0xFF21;\n\t t['Aogonek'] = 0x0104;\n\t t['Aring'] = 0x00C5;\n\t t['Aringacute'] = 0x01FA;\n\t t['Aringbelow'] = 0x1E00;\n\t t['Aringsmall'] = 0xF7E5;\n\t t['Asmall'] = 0xF761;\n\t t['Atilde'] = 0x00C3;\n\t t['Atildesmall'] = 0xF7E3;\n\t t['Aybarmenian'] = 0x0531;\n\t t['B'] = 0x0042;\n\t t['Bcircle'] = 0x24B7;\n\t t['Bdotaccent'] = 0x1E02;\n\t t['Bdotbelow'] = 0x1E04;\n\t t['Becyrillic'] = 0x0411;\n\t t['Benarmenian'] = 0x0532;\n\t t['Beta'] = 0x0392;\n\t t['Bhook'] = 0x0181;\n\t t['Blinebelow'] = 0x1E06;\n\t t['Bmonospace'] = 0xFF22;\n\t t['Brevesmall'] = 0xF6F4;\n\t t['Bsmall'] = 0xF762;\n\t t['Btopbar'] = 0x0182;\n\t t['C'] = 0x0043;\n\t t['Caarmenian'] = 0x053E;\n\t t['Cacute'] = 0x0106;\n\t t['Caron'] = 0xF6CA;\n\t t['Caronsmall'] = 0xF6F5;\n\t t['Ccaron'] = 0x010C;\n\t t['Ccedilla'] = 0x00C7;\n\t t['Ccedillaacute'] = 0x1E08;\n\t t['Ccedillasmall'] = 0xF7E7;\n\t t['Ccircle'] = 0x24B8;\n\t t['Ccircumflex'] = 0x0108;\n\t t['Cdot'] = 0x010A;\n\t t['Cdotaccent'] = 0x010A;\n\t t['Cedillasmall'] = 0xF7B8;\n\t t['Chaarmenian'] = 0x0549;\n\t t['Cheabkhasiancyrillic'] = 0x04BC;\n\t t['Checyrillic'] = 0x0427;\n\t t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n\t t['Chedescendercyrillic'] = 0x04B6;\n\t t['Chedieresiscyrillic'] = 0x04F4;\n\t t['Cheharmenian'] = 0x0543;\n\t t['Chekhakassiancyrillic'] = 0x04CB;\n\t t['Cheverticalstrokecyrillic'] = 0x04B8;\n\t t['Chi'] = 0x03A7;\n\t t['Chook'] = 0x0187;\n\t t['Circumflexsmall'] = 0xF6F6;\n\t t['Cmonospace'] = 0xFF23;\n\t t['Coarmenian'] = 0x0551;\n\t t['Csmall'] = 0xF763;\n\t t['D'] = 0x0044;\n\t t['DZ'] = 0x01F1;\n\t t['DZcaron'] = 0x01C4;\n\t t['Daarmenian'] = 0x0534;\n\t t['Dafrican'] = 0x0189;\n\t t['Dcaron'] = 0x010E;\n\t t['Dcedilla'] = 0x1E10;\n\t t['Dcircle'] = 0x24B9;\n\t t['Dcircumflexbelow'] = 0x1E12;\n\t t['Dcroat'] = 0x0110;\n\t t['Ddotaccent'] = 0x1E0A;\n\t t['Ddotbelow'] = 0x1E0C;\n\t t['Decyrillic'] = 0x0414;\n\t t['Deicoptic'] = 0x03EE;\n\t t['Delta'] = 0x2206;\n\t t['Deltagreek'] = 0x0394;\n\t t['Dhook'] = 0x018A;\n\t t['Dieresis'] = 0xF6CB;\n\t t['DieresisAcute'] = 0xF6CC;\n\t t['DieresisGrave'] = 0xF6CD;\n\t t['Dieresissmall'] = 0xF7A8;\n\t t['Digammagreek'] = 0x03DC;\n\t t['Djecyrillic'] = 0x0402;\n\t t['Dlinebelow'] = 0x1E0E;\n\t t['Dmonospace'] = 0xFF24;\n\t t['Dotaccentsmall'] = 0xF6F7;\n\t t['Dslash'] = 0x0110;\n\t t['Dsmall'] = 0xF764;\n\t t['Dtopbar'] = 0x018B;\n\t t['Dz'] = 0x01F2;\n\t t['Dzcaron'] = 0x01C5;\n\t t['Dzeabkhasiancyrillic'] = 0x04E0;\n\t t['Dzecyrillic'] = 0x0405;\n\t t['Dzhecyrillic'] = 0x040F;\n\t t['E'] = 0x0045;\n\t t['Eacute'] = 0x00C9;\n\t t['Eacutesmall'] = 0xF7E9;\n\t t['Ebreve'] = 0x0114;\n\t t['Ecaron'] = 0x011A;\n\t t['Ecedillabreve'] = 0x1E1C;\n\t t['Echarmenian'] = 0x0535;\n\t t['Ecircle'] = 0x24BA;\n\t t['Ecircumflex'] = 0x00CA;\n\t t['Ecircumflexacute'] = 0x1EBE;\n\t t['Ecircumflexbelow'] = 0x1E18;\n\t t['Ecircumflexdotbelow'] = 0x1EC6;\n\t t['Ecircumflexgrave'] = 0x1EC0;\n\t t['Ecircumflexhookabove'] = 0x1EC2;\n\t t['Ecircumflexsmall'] = 0xF7EA;\n\t t['Ecircumflextilde'] = 0x1EC4;\n\t t['Ecyrillic'] = 0x0404;\n\t t['Edblgrave'] = 0x0204;\n\t t['Edieresis'] = 0x00CB;\n\t t['Edieresissmall'] = 0xF7EB;\n\t t['Edot'] = 0x0116;\n\t t['Edotaccent'] = 0x0116;\n\t t['Edotbelow'] = 0x1EB8;\n\t t['Efcyrillic'] = 0x0424;\n\t t['Egrave'] = 0x00C8;\n\t t['Egravesmall'] = 0xF7E8;\n\t t['Eharmenian'] = 0x0537;\n\t t['Ehookabove'] = 0x1EBA;\n\t t['Eightroman'] = 0x2167;\n\t t['Einvertedbreve'] = 0x0206;\n\t t['Eiotifiedcyrillic'] = 0x0464;\n\t t['Elcyrillic'] = 0x041B;\n\t t['Elevenroman'] = 0x216A;\n\t t['Emacron'] = 0x0112;\n\t t['Emacronacute'] = 0x1E16;\n\t t['Emacrongrave'] = 0x1E14;\n\t t['Emcyrillic'] = 0x041C;\n\t t['Emonospace'] = 0xFF25;\n\t t['Encyrillic'] = 0x041D;\n\t t['Endescendercyrillic'] = 0x04A2;\n\t t['Eng'] = 0x014A;\n\t t['Enghecyrillic'] = 0x04A4;\n\t t['Enhookcyrillic'] = 0x04C7;\n\t t['Eogonek'] = 0x0118;\n\t t['Eopen'] = 0x0190;\n\t t['Epsilon'] = 0x0395;\n\t t['Epsilontonos'] = 0x0388;\n\t t['Ercyrillic'] = 0x0420;\n\t t['Ereversed'] = 0x018E;\n\t t['Ereversedcyrillic'] = 0x042D;\n\t t['Escyrillic'] = 0x0421;\n\t t['Esdescendercyrillic'] = 0x04AA;\n\t t['Esh'] = 0x01A9;\n\t t['Esmall'] = 0xF765;\n\t t['Eta'] = 0x0397;\n\t t['Etarmenian'] = 0x0538;\n\t t['Etatonos'] = 0x0389;\n\t t['Eth'] = 0x00D0;\n\t t['Ethsmall'] = 0xF7F0;\n\t t['Etilde'] = 0x1EBC;\n\t t['Etildebelow'] = 0x1E1A;\n\t t['Euro'] = 0x20AC;\n\t t['Ezh'] = 0x01B7;\n\t t['Ezhcaron'] = 0x01EE;\n\t t['Ezhreversed'] = 0x01B8;\n\t t['F'] = 0x0046;\n\t t['Fcircle'] = 0x24BB;\n\t t['Fdotaccent'] = 0x1E1E;\n\t t['Feharmenian'] = 0x0556;\n\t t['Feicoptic'] = 0x03E4;\n\t t['Fhook'] = 0x0191;\n\t t['Fitacyrillic'] = 0x0472;\n\t t['Fiveroman'] = 0x2164;\n\t t['Fmonospace'] = 0xFF26;\n\t t['Fourroman'] = 0x2163;\n\t t['Fsmall'] = 0xF766;\n\t t['G'] = 0x0047;\n\t t['GBsquare'] = 0x3387;\n\t t['Gacute'] = 0x01F4;\n\t t['Gamma'] = 0x0393;\n\t t['Gammaafrican'] = 0x0194;\n\t t['Gangiacoptic'] = 0x03EA;\n\t t['Gbreve'] = 0x011E;\n\t t['Gcaron'] = 0x01E6;\n\t t['Gcedilla'] = 0x0122;\n\t t['Gcircle'] = 0x24BC;\n\t t['Gcircumflex'] = 0x011C;\n\t t['Gcommaaccent'] = 0x0122;\n\t t['Gdot'] = 0x0120;\n\t t['Gdotaccent'] = 0x0120;\n\t t['Gecyrillic'] = 0x0413;\n\t t['Ghadarmenian'] = 0x0542;\n\t t['Ghemiddlehookcyrillic'] = 0x0494;\n\t t['Ghestrokecyrillic'] = 0x0492;\n\t t['Gheupturncyrillic'] = 0x0490;\n\t t['Ghook'] = 0x0193;\n\t t['Gimarmenian'] = 0x0533;\n\t t['Gjecyrillic'] = 0x0403;\n\t t['Gmacron'] = 0x1E20;\n\t t['Gmonospace'] = 0xFF27;\n\t t['Grave'] = 0xF6CE;\n\t t['Gravesmall'] = 0xF760;\n\t t['Gsmall'] = 0xF767;\n\t t['Gsmallhook'] = 0x029B;\n\t t['Gstroke'] = 0x01E4;\n\t t['H'] = 0x0048;\n\t t['H18533'] = 0x25CF;\n\t t['H18543'] = 0x25AA;\n\t t['H18551'] = 0x25AB;\n\t t['H22073'] = 0x25A1;\n\t t['HPsquare'] = 0x33CB;\n\t t['Haabkhasiancyrillic'] = 0x04A8;\n\t t['Hadescendercyrillic'] = 0x04B2;\n\t t['Hardsigncyrillic'] = 0x042A;\n\t t['Hbar'] = 0x0126;\n\t t['Hbrevebelow'] = 0x1E2A;\n\t t['Hcedilla'] = 0x1E28;\n\t t['Hcircle'] = 0x24BD;\n\t t['Hcircumflex'] = 0x0124;\n\t t['Hdieresis'] = 0x1E26;\n\t t['Hdotaccent'] = 0x1E22;\n\t t['Hdotbelow'] = 0x1E24;\n\t t['Hmonospace'] = 0xFF28;\n\t t['Hoarmenian'] = 0x0540;\n\t t['Horicoptic'] = 0x03E8;\n\t t['Hsmall'] = 0xF768;\n\t t['Hungarumlaut'] = 0xF6CF;\n\t t['Hungarumlautsmall'] = 0xF6F8;\n\t t['Hzsquare'] = 0x3390;\n\t t['I'] = 0x0049;\n\t t['IAcyrillic'] = 0x042F;\n\t t['IJ'] = 0x0132;\n\t t['IUcyrillic'] = 0x042E;\n\t t['Iacute'] = 0x00CD;\n\t t['Iacutesmall'] = 0xF7ED;\n\t t['Ibreve'] = 0x012C;\n\t t['Icaron'] = 0x01CF;\n\t t['Icircle'] = 0x24BE;\n\t t['Icircumflex'] = 0x00CE;\n\t t['Icircumflexsmall'] = 0xF7EE;\n\t t['Icyrillic'] = 0x0406;\n\t t['Idblgrave'] = 0x0208;\n\t t['Idieresis'] = 0x00CF;\n\t t['Idieresisacute'] = 0x1E2E;\n\t t['Idieresiscyrillic'] = 0x04E4;\n\t t['Idieresissmall'] = 0xF7EF;\n\t t['Idot'] = 0x0130;\n\t t['Idotaccent'] = 0x0130;\n\t t['Idotbelow'] = 0x1ECA;\n\t t['Iebrevecyrillic'] = 0x04D6;\n\t t['Iecyrillic'] = 0x0415;\n\t t['Ifraktur'] = 0x2111;\n\t t['Igrave'] = 0x00CC;\n\t t['Igravesmall'] = 0xF7EC;\n\t t['Ihookabove'] = 0x1EC8;\n\t t['Iicyrillic'] = 0x0418;\n\t t['Iinvertedbreve'] = 0x020A;\n\t t['Iishortcyrillic'] = 0x0419;\n\t t['Imacron'] = 0x012A;\n\t t['Imacroncyrillic'] = 0x04E2;\n\t t['Imonospace'] = 0xFF29;\n\t t['Iniarmenian'] = 0x053B;\n\t t['Iocyrillic'] = 0x0401;\n\t t['Iogonek'] = 0x012E;\n\t t['Iota'] = 0x0399;\n\t t['Iotaafrican'] = 0x0196;\n\t t['Iotadieresis'] = 0x03AA;\n\t t['Iotatonos'] = 0x038A;\n\t t['Ismall'] = 0xF769;\n\t t['Istroke'] = 0x0197;\n\t t['Itilde'] = 0x0128;\n\t t['Itildebelow'] = 0x1E2C;\n\t t['Izhitsacyrillic'] = 0x0474;\n\t t['Izhitsadblgravecyrillic'] = 0x0476;\n\t t['J'] = 0x004A;\n\t t['Jaarmenian'] = 0x0541;\n\t t['Jcircle'] = 0x24BF;\n\t t['Jcircumflex'] = 0x0134;\n\t t['Jecyrillic'] = 0x0408;\n\t t['Jheharmenian'] = 0x054B;\n\t t['Jmonospace'] = 0xFF2A;\n\t t['Jsmall'] = 0xF76A;\n\t t['K'] = 0x004B;\n\t t['KBsquare'] = 0x3385;\n\t t['KKsquare'] = 0x33CD;\n\t t['Kabashkircyrillic'] = 0x04A0;\n\t t['Kacute'] = 0x1E30;\n\t t['Kacyrillic'] = 0x041A;\n\t t['Kadescendercyrillic'] = 0x049A;\n\t t['Kahookcyrillic'] = 0x04C3;\n\t t['Kappa'] = 0x039A;\n\t t['Kastrokecyrillic'] = 0x049E;\n\t t['Kaverticalstrokecyrillic'] = 0x049C;\n\t t['Kcaron'] = 0x01E8;\n\t t['Kcedilla'] = 0x0136;\n\t t['Kcircle'] = 0x24C0;\n\t t['Kcommaaccent'] = 0x0136;\n\t t['Kdotbelow'] = 0x1E32;\n\t t['Keharmenian'] = 0x0554;\n\t t['Kenarmenian'] = 0x053F;\n\t t['Khacyrillic'] = 0x0425;\n\t t['Kheicoptic'] = 0x03E6;\n\t t['Khook'] = 0x0198;\n\t t['Kjecyrillic'] = 0x040C;\n\t t['Klinebelow'] = 0x1E34;\n\t t['Kmonospace'] = 0xFF2B;\n\t t['Koppacyrillic'] = 0x0480;\n\t t['Koppagreek'] = 0x03DE;\n\t t['Ksicyrillic'] = 0x046E;\n\t t['Ksmall'] = 0xF76B;\n\t t['L'] = 0x004C;\n\t t['LJ'] = 0x01C7;\n\t t['LL'] = 0xF6BF;\n\t t['Lacute'] = 0x0139;\n\t t['Lambda'] = 0x039B;\n\t t['Lcaron'] = 0x013D;\n\t t['Lcedilla'] = 0x013B;\n\t t['Lcircle'] = 0x24C1;\n\t t['Lcircumflexbelow'] = 0x1E3C;\n\t t['Lcommaaccent'] = 0x013B;\n\t t['Ldot'] = 0x013F;\n\t t['Ldotaccent'] = 0x013F;\n\t t['Ldotbelow'] = 0x1E36;\n\t t['Ldotbelowmacron'] = 0x1E38;\n\t t['Liwnarmenian'] = 0x053C;\n\t t['Lj'] = 0x01C8;\n\t t['Ljecyrillic'] = 0x0409;\n\t t['Llinebelow'] = 0x1E3A;\n\t t['Lmonospace'] = 0xFF2C;\n\t t['Lslash'] = 0x0141;\n\t t['Lslashsmall'] = 0xF6F9;\n\t t['Lsmall'] = 0xF76C;\n\t t['M'] = 0x004D;\n\t t['MBsquare'] = 0x3386;\n\t t['Macron'] = 0xF6D0;\n\t t['Macronsmall'] = 0xF7AF;\n\t t['Macute'] = 0x1E3E;\n\t t['Mcircle'] = 0x24C2;\n\t t['Mdotaccent'] = 0x1E40;\n\t t['Mdotbelow'] = 0x1E42;\n\t t['Menarmenian'] = 0x0544;\n\t t['Mmonospace'] = 0xFF2D;\n\t t['Msmall'] = 0xF76D;\n\t t['Mturned'] = 0x019C;\n\t t['Mu'] = 0x039C;\n\t t['N'] = 0x004E;\n\t t['NJ'] = 0x01CA;\n\t t['Nacute'] = 0x0143;\n\t t['Ncaron'] = 0x0147;\n\t t['Ncedilla'] = 0x0145;\n\t t['Ncircle'] = 0x24C3;\n\t t['Ncircumflexbelow'] = 0x1E4A;\n\t t['Ncommaaccent'] = 0x0145;\n\t t['Ndotaccent'] = 0x1E44;\n\t t['Ndotbelow'] = 0x1E46;\n\t t['Nhookleft'] = 0x019D;\n\t t['Nineroman'] = 0x2168;\n\t t['Nj'] = 0x01CB;\n\t t['Njecyrillic'] = 0x040A;\n\t t['Nlinebelow'] = 0x1E48;\n\t t['Nmonospace'] = 0xFF2E;\n\t t['Nowarmenian'] = 0x0546;\n\t t['Nsmall'] = 0xF76E;\n\t t['Ntilde'] = 0x00D1;\n\t t['Ntildesmall'] = 0xF7F1;\n\t t['Nu'] = 0x039D;\n\t t['O'] = 0x004F;\n\t t['OE'] = 0x0152;\n\t t['OEsmall'] = 0xF6FA;\n\t t['Oacute'] = 0x00D3;\n\t t['Oacutesmall'] = 0xF7F3;\n\t t['Obarredcyrillic'] = 0x04E8;\n\t t['Obarreddieresiscyrillic'] = 0x04EA;\n\t t['Obreve'] = 0x014E;\n\t t['Ocaron'] = 0x01D1;\n\t t['Ocenteredtilde'] = 0x019F;\n\t t['Ocircle'] = 0x24C4;\n\t t['Ocircumflex'] = 0x00D4;\n\t t['Ocircumflexacute'] = 0x1ED0;\n\t t['Ocircumflexdotbelow'] = 0x1ED8;\n\t t['Ocircumflexgrave'] = 0x1ED2;\n\t t['Ocircumflexhookabove'] = 0x1ED4;\n\t t['Ocircumflexsmall'] = 0xF7F4;\n\t t['Ocircumflextilde'] = 0x1ED6;\n\t t['Ocyrillic'] = 0x041E;\n\t t['Odblacute'] = 0x0150;\n\t t['Odblgrave'] = 0x020C;\n\t t['Odieresis'] = 0x00D6;\n\t t['Odieresiscyrillic'] = 0x04E6;\n\t t['Odieresissmall'] = 0xF7F6;\n\t t['Odotbelow'] = 0x1ECC;\n\t t['Ogoneksmall'] = 0xF6FB;\n\t t['Ograve'] = 0x00D2;\n\t t['Ogravesmall'] = 0xF7F2;\n\t t['Oharmenian'] = 0x0555;\n\t t['Ohm'] = 0x2126;\n\t t['Ohookabove'] = 0x1ECE;\n\t t['Ohorn'] = 0x01A0;\n\t t['Ohornacute'] = 0x1EDA;\n\t t['Ohorndotbelow'] = 0x1EE2;\n\t t['Ohorngrave'] = 0x1EDC;\n\t t['Ohornhookabove'] = 0x1EDE;\n\t t['Ohorntilde'] = 0x1EE0;\n\t t['Ohungarumlaut'] = 0x0150;\n\t t['Oi'] = 0x01A2;\n\t t['Oinvertedbreve'] = 0x020E;\n\t t['Omacron'] = 0x014C;\n\t t['Omacronacute'] = 0x1E52;\n\t t['Omacrongrave'] = 0x1E50;\n\t t['Omega'] = 0x2126;\n\t t['Omegacyrillic'] = 0x0460;\n\t t['Omegagreek'] = 0x03A9;\n\t t['Omegaroundcyrillic'] = 0x047A;\n\t t['Omegatitlocyrillic'] = 0x047C;\n\t t['Omegatonos'] = 0x038F;\n\t t['Omicron'] = 0x039F;\n\t t['Omicrontonos'] = 0x038C;\n\t t['Omonospace'] = 0xFF2F;\n\t t['Oneroman'] = 0x2160;\n\t t['Oogonek'] = 0x01EA;\n\t t['Oogonekmacron'] = 0x01EC;\n\t t['Oopen'] = 0x0186;\n\t t['Oslash'] = 0x00D8;\n\t t['Oslashacute'] = 0x01FE;\n\t t['Oslashsmall'] = 0xF7F8;\n\t t['Osmall'] = 0xF76F;\n\t t['Ostrokeacute'] = 0x01FE;\n\t t['Otcyrillic'] = 0x047E;\n\t t['Otilde'] = 0x00D5;\n\t t['Otildeacute'] = 0x1E4C;\n\t t['Otildedieresis'] = 0x1E4E;\n\t t['Otildesmall'] = 0xF7F5;\n\t t['P'] = 0x0050;\n\t t['Pacute'] = 0x1E54;\n\t t['Pcircle'] = 0x24C5;\n\t t['Pdotaccent'] = 0x1E56;\n\t t['Pecyrillic'] = 0x041F;\n\t t['Peharmenian'] = 0x054A;\n\t t['Pemiddlehookcyrillic'] = 0x04A6;\n\t t['Phi'] = 0x03A6;\n\t t['Phook'] = 0x01A4;\n\t t['Pi'] = 0x03A0;\n\t t['Piwrarmenian'] = 0x0553;\n\t t['Pmonospace'] = 0xFF30;\n\t t['Psi'] = 0x03A8;\n\t t['Psicyrillic'] = 0x0470;\n\t t['Psmall'] = 0xF770;\n\t t['Q'] = 0x0051;\n\t t['Qcircle'] = 0x24C6;\n\t t['Qmonospace'] = 0xFF31;\n\t t['Qsmall'] = 0xF771;\n\t t['R'] = 0x0052;\n\t t['Raarmenian'] = 0x054C;\n\t t['Racute'] = 0x0154;\n\t t['Rcaron'] = 0x0158;\n\t t['Rcedilla'] = 0x0156;\n\t t['Rcircle'] = 0x24C7;\n\t t['Rcommaaccent'] = 0x0156;\n\t t['Rdblgrave'] = 0x0210;\n\t t['Rdotaccent'] = 0x1E58;\n\t t['Rdotbelow'] = 0x1E5A;\n\t t['Rdotbelowmacron'] = 0x1E5C;\n\t t['Reharmenian'] = 0x0550;\n\t t['Rfraktur'] = 0x211C;\n\t t['Rho'] = 0x03A1;\n\t t['Ringsmall'] = 0xF6FC;\n\t t['Rinvertedbreve'] = 0x0212;\n\t t['Rlinebelow'] = 0x1E5E;\n\t t['Rmonospace'] = 0xFF32;\n\t t['Rsmall'] = 0xF772;\n\t t['Rsmallinverted'] = 0x0281;\n\t t['Rsmallinvertedsuperior'] = 0x02B6;\n\t t['S'] = 0x0053;\n\t t['SF010000'] = 0x250C;\n\t t['SF020000'] = 0x2514;\n\t t['SF030000'] = 0x2510;\n\t t['SF040000'] = 0x2518;\n\t t['SF050000'] = 0x253C;\n\t t['SF060000'] = 0x252C;\n\t t['SF070000'] = 0x2534;\n\t t['SF080000'] = 0x251C;\n\t t['SF090000'] = 0x2524;\n\t t['SF100000'] = 0x2500;\n\t t['SF110000'] = 0x2502;\n\t t['SF190000'] = 0x2561;\n\t t['SF200000'] = 0x2562;\n\t t['SF210000'] = 0x2556;\n\t t['SF220000'] = 0x2555;\n\t t['SF230000'] = 0x2563;\n\t t['SF240000'] = 0x2551;\n\t t['SF250000'] = 0x2557;\n\t t['SF260000'] = 0x255D;\n\t t['SF270000'] = 0x255C;\n\t t['SF280000'] = 0x255B;\n\t t['SF360000'] = 0x255E;\n\t t['SF370000'] = 0x255F;\n\t t['SF380000'] = 0x255A;\n\t t['SF390000'] = 0x2554;\n\t t['SF400000'] = 0x2569;\n\t t['SF410000'] = 0x2566;\n\t t['SF420000'] = 0x2560;\n\t t['SF430000'] = 0x2550;\n\t t['SF440000'] = 0x256C;\n\t t['SF450000'] = 0x2567;\n\t t['SF460000'] = 0x2568;\n\t t['SF470000'] = 0x2564;\n\t t['SF480000'] = 0x2565;\n\t t['SF490000'] = 0x2559;\n\t t['SF500000'] = 0x2558;\n\t t['SF510000'] = 0x2552;\n\t t['SF520000'] = 0x2553;\n\t t['SF530000'] = 0x256B;\n\t t['SF540000'] = 0x256A;\n\t t['Sacute'] = 0x015A;\n\t t['Sacutedotaccent'] = 0x1E64;\n\t t['Sampigreek'] = 0x03E0;\n\t t['Scaron'] = 0x0160;\n\t t['Scarondotaccent'] = 0x1E66;\n\t t['Scaronsmall'] = 0xF6FD;\n\t t['Scedilla'] = 0x015E;\n\t t['Schwa'] = 0x018F;\n\t t['Schwacyrillic'] = 0x04D8;\n\t t['Schwadieresiscyrillic'] = 0x04DA;\n\t t['Scircle'] = 0x24C8;\n\t t['Scircumflex'] = 0x015C;\n\t t['Scommaaccent'] = 0x0218;\n\t t['Sdotaccent'] = 0x1E60;\n\t t['Sdotbelow'] = 0x1E62;\n\t t['Sdotbelowdotaccent'] = 0x1E68;\n\t t['Seharmenian'] = 0x054D;\n\t t['Sevenroman'] = 0x2166;\n\t t['Shaarmenian'] = 0x0547;\n\t t['Shacyrillic'] = 0x0428;\n\t t['Shchacyrillic'] = 0x0429;\n\t t['Sheicoptic'] = 0x03E2;\n\t t['Shhacyrillic'] = 0x04BA;\n\t t['Shimacoptic'] = 0x03EC;\n\t t['Sigma'] = 0x03A3;\n\t t['Sixroman'] = 0x2165;\n\t t['Smonospace'] = 0xFF33;\n\t t['Softsigncyrillic'] = 0x042C;\n\t t['Ssmall'] = 0xF773;\n\t t['Stigmagreek'] = 0x03DA;\n\t t['T'] = 0x0054;\n\t t['Tau'] = 0x03A4;\n\t t['Tbar'] = 0x0166;\n\t t['Tcaron'] = 0x0164;\n\t t['Tcedilla'] = 0x0162;\n\t t['Tcircle'] = 0x24C9;\n\t t['Tcircumflexbelow'] = 0x1E70;\n\t t['Tcommaaccent'] = 0x0162;\n\t t['Tdotaccent'] = 0x1E6A;\n\t t['Tdotbelow'] = 0x1E6C;\n\t t['Tecyrillic'] = 0x0422;\n\t t['Tedescendercyrillic'] = 0x04AC;\n\t t['Tenroman'] = 0x2169;\n\t t['Tetsecyrillic'] = 0x04B4;\n\t t['Theta'] = 0x0398;\n\t t['Thook'] = 0x01AC;\n\t t['Thorn'] = 0x00DE;\n\t t['Thornsmall'] = 0xF7FE;\n\t t['Threeroman'] = 0x2162;\n\t t['Tildesmall'] = 0xF6FE;\n\t t['Tiwnarmenian'] = 0x054F;\n\t t['Tlinebelow'] = 0x1E6E;\n\t t['Tmonospace'] = 0xFF34;\n\t t['Toarmenian'] = 0x0539;\n\t t['Tonefive'] = 0x01BC;\n\t t['Tonesix'] = 0x0184;\n\t t['Tonetwo'] = 0x01A7;\n\t t['Tretroflexhook'] = 0x01AE;\n\t t['Tsecyrillic'] = 0x0426;\n\t t['Tshecyrillic'] = 0x040B;\n\t t['Tsmall'] = 0xF774;\n\t t['Twelveroman'] = 0x216B;\n\t t['Tworoman'] = 0x2161;\n\t t['U'] = 0x0055;\n\t t['Uacute'] = 0x00DA;\n\t t['Uacutesmall'] = 0xF7FA;\n\t t['Ubreve'] = 0x016C;\n\t t['Ucaron'] = 0x01D3;\n\t t['Ucircle'] = 0x24CA;\n\t t['Ucircumflex'] = 0x00DB;\n\t t['Ucircumflexbelow'] = 0x1E76;\n\t t['Ucircumflexsmall'] = 0xF7FB;\n\t t['Ucyrillic'] = 0x0423;\n\t t['Udblacute'] = 0x0170;\n\t t['Udblgrave'] = 0x0214;\n\t t['Udieresis'] = 0x00DC;\n\t t['Udieresisacute'] = 0x01D7;\n\t t['Udieresisbelow'] = 0x1E72;\n\t t['Udieresiscaron'] = 0x01D9;\n\t t['Udieresiscyrillic'] = 0x04F0;\n\t t['Udieresisgrave'] = 0x01DB;\n\t t['Udieresismacron'] = 0x01D5;\n\t t['Udieresissmall'] = 0xF7FC;\n\t t['Udotbelow'] = 0x1EE4;\n\t t['Ugrave'] = 0x00D9;\n\t t['Ugravesmall'] = 0xF7F9;\n\t t['Uhookabove'] = 0x1EE6;\n\t t['Uhorn'] = 0x01AF;\n\t t['Uhornacute'] = 0x1EE8;\n\t t['Uhorndotbelow'] = 0x1EF0;\n\t t['Uhorngrave'] = 0x1EEA;\n\t t['Uhornhookabove'] = 0x1EEC;\n\t t['Uhorntilde'] = 0x1EEE;\n\t t['Uhungarumlaut'] = 0x0170;\n\t t['Uhungarumlautcyrillic'] = 0x04F2;\n\t t['Uinvertedbreve'] = 0x0216;\n\t t['Ukcyrillic'] = 0x0478;\n\t t['Umacron'] = 0x016A;\n\t t['Umacroncyrillic'] = 0x04EE;\n\t t['Umacrondieresis'] = 0x1E7A;\n\t t['Umonospace'] = 0xFF35;\n\t t['Uogonek'] = 0x0172;\n\t t['Upsilon'] = 0x03A5;\n\t t['Upsilon1'] = 0x03D2;\n\t t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n\t t['Upsilonafrican'] = 0x01B1;\n\t t['Upsilondieresis'] = 0x03AB;\n\t t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n\t t['Upsilonhooksymbol'] = 0x03D2;\n\t t['Upsilontonos'] = 0x038E;\n\t t['Uring'] = 0x016E;\n\t t['Ushortcyrillic'] = 0x040E;\n\t t['Usmall'] = 0xF775;\n\t t['Ustraightcyrillic'] = 0x04AE;\n\t t['Ustraightstrokecyrillic'] = 0x04B0;\n\t t['Utilde'] = 0x0168;\n\t t['Utildeacute'] = 0x1E78;\n\t t['Utildebelow'] = 0x1E74;\n\t t['V'] = 0x0056;\n\t t['Vcircle'] = 0x24CB;\n\t t['Vdotbelow'] = 0x1E7E;\n\t t['Vecyrillic'] = 0x0412;\n\t t['Vewarmenian'] = 0x054E;\n\t t['Vhook'] = 0x01B2;\n\t t['Vmonospace'] = 0xFF36;\n\t t['Voarmenian'] = 0x0548;\n\t t['Vsmall'] = 0xF776;\n\t t['Vtilde'] = 0x1E7C;\n\t t['W'] = 0x0057;\n\t t['Wacute'] = 0x1E82;\n\t t['Wcircle'] = 0x24CC;\n\t t['Wcircumflex'] = 0x0174;\n\t t['Wdieresis'] = 0x1E84;\n\t t['Wdotaccent'] = 0x1E86;\n\t t['Wdotbelow'] = 0x1E88;\n\t t['Wgrave'] = 0x1E80;\n\t t['Wmonospace'] = 0xFF37;\n\t t['Wsmall'] = 0xF777;\n\t t['X'] = 0x0058;\n\t t['Xcircle'] = 0x24CD;\n\t t['Xdieresis'] = 0x1E8C;\n\t t['Xdotaccent'] = 0x1E8A;\n\t t['Xeharmenian'] = 0x053D;\n\t t['Xi'] = 0x039E;\n\t t['Xmonospace'] = 0xFF38;\n\t t['Xsmall'] = 0xF778;\n\t t['Y'] = 0x0059;\n\t t['Yacute'] = 0x00DD;\n\t t['Yacutesmall'] = 0xF7FD;\n\t t['Yatcyrillic'] = 0x0462;\n\t t['Ycircle'] = 0x24CE;\n\t t['Ycircumflex'] = 0x0176;\n\t t['Ydieresis'] = 0x0178;\n\t t['Ydieresissmall'] = 0xF7FF;\n\t t['Ydotaccent'] = 0x1E8E;\n\t t['Ydotbelow'] = 0x1EF4;\n\t t['Yericyrillic'] = 0x042B;\n\t t['Yerudieresiscyrillic'] = 0x04F8;\n\t t['Ygrave'] = 0x1EF2;\n\t t['Yhook'] = 0x01B3;\n\t t['Yhookabove'] = 0x1EF6;\n\t t['Yiarmenian'] = 0x0545;\n\t t['Yicyrillic'] = 0x0407;\n\t t['Yiwnarmenian'] = 0x0552;\n\t t['Ymonospace'] = 0xFF39;\n\t t['Ysmall'] = 0xF779;\n\t t['Ytilde'] = 0x1EF8;\n\t t['Yusbigcyrillic'] = 0x046A;\n\t t['Yusbigiotifiedcyrillic'] = 0x046C;\n\t t['Yuslittlecyrillic'] = 0x0466;\n\t t['Yuslittleiotifiedcyrillic'] = 0x0468;\n\t t['Z'] = 0x005A;\n\t t['Zaarmenian'] = 0x0536;\n\t t['Zacute'] = 0x0179;\n\t t['Zcaron'] = 0x017D;\n\t t['Zcaronsmall'] = 0xF6FF;\n\t t['Zcircle'] = 0x24CF;\n\t t['Zcircumflex'] = 0x1E90;\n\t t['Zdot'] = 0x017B;\n\t t['Zdotaccent'] = 0x017B;\n\t t['Zdotbelow'] = 0x1E92;\n\t t['Zecyrillic'] = 0x0417;\n\t t['Zedescendercyrillic'] = 0x0498;\n\t t['Zedieresiscyrillic'] = 0x04DE;\n\t t['Zeta'] = 0x0396;\n\t t['Zhearmenian'] = 0x053A;\n\t t['Zhebrevecyrillic'] = 0x04C1;\n\t t['Zhecyrillic'] = 0x0416;\n\t t['Zhedescendercyrillic'] = 0x0496;\n\t t['Zhedieresiscyrillic'] = 0x04DC;\n\t t['Zlinebelow'] = 0x1E94;\n\t t['Zmonospace'] = 0xFF3A;\n\t t['Zsmall'] = 0xF77A;\n\t t['Zstroke'] = 0x01B5;\n\t t['a'] = 0x0061;\n\t t['aabengali'] = 0x0986;\n\t t['aacute'] = 0x00E1;\n\t t['aadeva'] = 0x0906;\n\t t['aagujarati'] = 0x0A86;\n\t t['aagurmukhi'] = 0x0A06;\n\t t['aamatragurmukhi'] = 0x0A3E;\n\t t['aarusquare'] = 0x3303;\n\t t['aavowelsignbengali'] = 0x09BE;\n\t t['aavowelsigndeva'] = 0x093E;\n\t t['aavowelsigngujarati'] = 0x0ABE;\n\t t['abbreviationmarkarmenian'] = 0x055F;\n\t t['abbreviationsigndeva'] = 0x0970;\n\t t['abengali'] = 0x0985;\n\t t['abopomofo'] = 0x311A;\n\t t['abreve'] = 0x0103;\n\t t['abreveacute'] = 0x1EAF;\n\t t['abrevecyrillic'] = 0x04D1;\n\t t['abrevedotbelow'] = 0x1EB7;\n\t t['abrevegrave'] = 0x1EB1;\n\t t['abrevehookabove'] = 0x1EB3;\n\t t['abrevetilde'] = 0x1EB5;\n\t t['acaron'] = 0x01CE;\n\t t['acircle'] = 0x24D0;\n\t t['acircumflex'] = 0x00E2;\n\t t['acircumflexacute'] = 0x1EA5;\n\t t['acircumflexdotbelow'] = 0x1EAD;\n\t t['acircumflexgrave'] = 0x1EA7;\n\t t['acircumflexhookabove'] = 0x1EA9;\n\t t['acircumflextilde'] = 0x1EAB;\n\t t['acute'] = 0x00B4;\n\t t['acutebelowcmb'] = 0x0317;\n\t t['acutecmb'] = 0x0301;\n\t t['acutecomb'] = 0x0301;\n\t t['acutedeva'] = 0x0954;\n\t t['acutelowmod'] = 0x02CF;\n\t t['acutetonecmb'] = 0x0341;\n\t t['acyrillic'] = 0x0430;\n\t t['adblgrave'] = 0x0201;\n\t t['addakgurmukhi'] = 0x0A71;\n\t t['adeva'] = 0x0905;\n\t t['adieresis'] = 0x00E4;\n\t t['adieresiscyrillic'] = 0x04D3;\n\t t['adieresismacron'] = 0x01DF;\n\t t['adotbelow'] = 0x1EA1;\n\t t['adotmacron'] = 0x01E1;\n\t t['ae'] = 0x00E6;\n\t t['aeacute'] = 0x01FD;\n\t t['aekorean'] = 0x3150;\n\t t['aemacron'] = 0x01E3;\n\t t['afii00208'] = 0x2015;\n\t t['afii08941'] = 0x20A4;\n\t t['afii10017'] = 0x0410;\n\t t['afii10018'] = 0x0411;\n\t t['afii10019'] = 0x0412;\n\t t['afii10020'] = 0x0413;\n\t t['afii10021'] = 0x0414;\n\t t['afii10022'] = 0x0415;\n\t t['afii10023'] = 0x0401;\n\t t['afii10024'] = 0x0416;\n\t t['afii10025'] = 0x0417;\n\t t['afii10026'] = 0x0418;\n\t t['afii10027'] = 0x0419;\n\t t['afii10028'] = 0x041A;\n\t t['afii10029'] = 0x041B;\n\t t['afii10030'] = 0x041C;\n\t t['afii10031'] = 0x041D;\n\t t['afii10032'] = 0x041E;\n\t t['afii10033'] = 0x041F;\n\t t['afii10034'] = 0x0420;\n\t t['afii10035'] = 0x0421;\n\t t['afii10036'] = 0x0422;\n\t t['afii10037'] = 0x0423;\n\t t['afii10038'] = 0x0424;\n\t t['afii10039'] = 0x0425;\n\t t['afii10040'] = 0x0426;\n\t t['afii10041'] = 0x0427;\n\t t['afii10042'] = 0x0428;\n\t t['afii10043'] = 0x0429;\n\t t['afii10044'] = 0x042A;\n\t t['afii10045'] = 0x042B;\n\t t['afii10046'] = 0x042C;\n\t t['afii10047'] = 0x042D;\n\t t['afii10048'] = 0x042E;\n\t t['afii10049'] = 0x042F;\n\t t['afii10050'] = 0x0490;\n\t t['afii10051'] = 0x0402;\n\t t['afii10052'] = 0x0403;\n\t t['afii10053'] = 0x0404;\n\t t['afii10054'] = 0x0405;\n\t t['afii10055'] = 0x0406;\n\t t['afii10056'] = 0x0407;\n\t t['afii10057'] = 0x0408;\n\t t['afii10058'] = 0x0409;\n\t t['afii10059'] = 0x040A;\n\t t['afii10060'] = 0x040B;\n\t t['afii10061'] = 0x040C;\n\t t['afii10062'] = 0x040E;\n\t t['afii10063'] = 0xF6C4;\n\t t['afii10064'] = 0xF6C5;\n\t t['afii10065'] = 0x0430;\n\t t['afii10066'] = 0x0431;\n\t t['afii10067'] = 0x0432;\n\t t['afii10068'] = 0x0433;\n\t t['afii10069'] = 0x0434;\n\t t['afii10070'] = 0x0435;\n\t t['afii10071'] = 0x0451;\n\t t['afii10072'] = 0x0436;\n\t t['afii10073'] = 0x0437;\n\t t['afii10074'] = 0x0438;\n\t t['afii10075'] = 0x0439;\n\t t['afii10076'] = 0x043A;\n\t t['afii10077'] = 0x043B;\n\t t['afii10078'] = 0x043C;\n\t t['afii10079'] = 0x043D;\n\t t['afii10080'] = 0x043E;\n\t t['afii10081'] = 0x043F;\n\t t['afii10082'] = 0x0440;\n\t t['afii10083'] = 0x0441;\n\t t['afii10084'] = 0x0442;\n\t t['afii10085'] = 0x0443;\n\t t['afii10086'] = 0x0444;\n\t t['afii10087'] = 0x0445;\n\t t['afii10088'] = 0x0446;\n\t t['afii10089'] = 0x0447;\n\t t['afii10090'] = 0x0448;\n\t t['afii10091'] = 0x0449;\n\t t['afii10092'] = 0x044A;\n\t t['afii10093'] = 0x044B;\n\t t['afii10094'] = 0x044C;\n\t t['afii10095'] = 0x044D;\n\t t['afii10096'] = 0x044E;\n\t t['afii10097'] = 0x044F;\n\t t['afii10098'] = 0x0491;\n\t t['afii10099'] = 0x0452;\n\t t['afii10100'] = 0x0453;\n\t t['afii10101'] = 0x0454;\n\t t['afii10102'] = 0x0455;\n\t t['afii10103'] = 0x0456;\n\t t['afii10104'] = 0x0457;\n\t t['afii10105'] = 0x0458;\n\t t['afii10106'] = 0x0459;\n\t t['afii10107'] = 0x045A;\n\t t['afii10108'] = 0x045B;\n\t t['afii10109'] = 0x045C;\n\t t['afii10110'] = 0x045E;\n\t t['afii10145'] = 0x040F;\n\t t['afii10146'] = 0x0462;\n\t t['afii10147'] = 0x0472;\n\t t['afii10148'] = 0x0474;\n\t t['afii10192'] = 0xF6C6;\n\t t['afii10193'] = 0x045F;\n\t t['afii10194'] = 0x0463;\n\t t['afii10195'] = 0x0473;\n\t t['afii10196'] = 0x0475;\n\t t['afii10831'] = 0xF6C7;\n\t t['afii10832'] = 0xF6C8;\n\t t['afii10846'] = 0x04D9;\n\t t['afii299'] = 0x200E;\n\t t['afii300'] = 0x200F;\n\t t['afii301'] = 0x200D;\n\t t['afii57381'] = 0x066A;\n\t t['afii57388'] = 0x060C;\n\t t['afii57392'] = 0x0660;\n\t t['afii57393'] = 0x0661;\n\t t['afii57394'] = 0x0662;\n\t t['afii57395'] = 0x0663;\n\t t['afii57396'] = 0x0664;\n\t t['afii57397'] = 0x0665;\n\t t['afii57398'] = 0x0666;\n\t t['afii57399'] = 0x0667;\n\t t['afii57400'] = 0x0668;\n\t t['afii57401'] = 0x0669;\n\t t['afii57403'] = 0x061B;\n\t t['afii57407'] = 0x061F;\n\t t['afii57409'] = 0x0621;\n\t t['afii57410'] = 0x0622;\n\t t['afii57411'] = 0x0623;\n\t t['afii57412'] = 0x0624;\n\t t['afii57413'] = 0x0625;\n\t t['afii57414'] = 0x0626;\n\t t['afii57415'] = 0x0627;\n\t t['afii57416'] = 0x0628;\n\t t['afii57417'] = 0x0629;\n\t t['afii57418'] = 0x062A;\n\t t['afii57419'] = 0x062B;\n\t t['afii57420'] = 0x062C;\n\t t['afii57421'] = 0x062D;\n\t t['afii57422'] = 0x062E;\n\t t['afii57423'] = 0x062F;\n\t t['afii57424'] = 0x0630;\n\t t['afii57425'] = 0x0631;\n\t t['afii57426'] = 0x0632;\n\t t['afii57427'] = 0x0633;\n\t t['afii57428'] = 0x0634;\n\t t['afii57429'] = 0x0635;\n\t t['afii57430'] = 0x0636;\n\t t['afii57431'] = 0x0637;\n\t t['afii57432'] = 0x0638;\n\t t['afii57433'] = 0x0639;\n\t t['afii57434'] = 0x063A;\n\t t['afii57440'] = 0x0640;\n\t t['afii57441'] = 0x0641;\n\t t['afii57442'] = 0x0642;\n\t t['afii57443'] = 0x0643;\n\t t['afii57444'] = 0x0644;\n\t t['afii57445'] = 0x0645;\n\t t['afii57446'] = 0x0646;\n\t t['afii57448'] = 0x0648;\n\t t['afii57449'] = 0x0649;\n\t t['afii57450'] = 0x064A;\n\t t['afii57451'] = 0x064B;\n\t t['afii57452'] = 0x064C;\n\t t['afii57453'] = 0x064D;\n\t t['afii57454'] = 0x064E;\n\t t['afii57455'] = 0x064F;\n\t t['afii57456'] = 0x0650;\n\t t['afii57457'] = 0x0651;\n\t t['afii57458'] = 0x0652;\n\t t['afii57470'] = 0x0647;\n\t t['afii57505'] = 0x06A4;\n\t t['afii57506'] = 0x067E;\n\t t['afii57507'] = 0x0686;\n\t t['afii57508'] = 0x0698;\n\t t['afii57509'] = 0x06AF;\n\t t['afii57511'] = 0x0679;\n\t t['afii57512'] = 0x0688;\n\t t['afii57513'] = 0x0691;\n\t t['afii57514'] = 0x06BA;\n\t t['afii57519'] = 0x06D2;\n\t t['afii57534'] = 0x06D5;\n\t t['afii57636'] = 0x20AA;\n\t t['afii57645'] = 0x05BE;\n\t t['afii57658'] = 0x05C3;\n\t t['afii57664'] = 0x05D0;\n\t t['afii57665'] = 0x05D1;\n\t t['afii57666'] = 0x05D2;\n\t t['afii57667'] = 0x05D3;\n\t t['afii57668'] = 0x05D4;\n\t t['afii57669'] = 0x05D5;\n\t t['afii57670'] = 0x05D6;\n\t t['afii57671'] = 0x05D7;\n\t t['afii57672'] = 0x05D8;\n\t t['afii57673'] = 0x05D9;\n\t t['afii57674'] = 0x05DA;\n\t t['afii57675'] = 0x05DB;\n\t t['afii57676'] = 0x05DC;\n\t t['afii57677'] = 0x05DD;\n\t t['afii57678'] = 0x05DE;\n\t t['afii57679'] = 0x05DF;\n\t t['afii57680'] = 0x05E0;\n\t t['afii57681'] = 0x05E1;\n\t t['afii57682'] = 0x05E2;\n\t t['afii57683'] = 0x05E3;\n\t t['afii57684'] = 0x05E4;\n\t t['afii57685'] = 0x05E5;\n\t t['afii57686'] = 0x05E6;\n\t t['afii57687'] = 0x05E7;\n\t t['afii57688'] = 0x05E8;\n\t t['afii57689'] = 0x05E9;\n\t t['afii57690'] = 0x05EA;\n\t t['afii57694'] = 0xFB2A;\n\t t['afii57695'] = 0xFB2B;\n\t t['afii57700'] = 0xFB4B;\n\t t['afii57705'] = 0xFB1F;\n\t t['afii57716'] = 0x05F0;\n\t t['afii57717'] = 0x05F1;\n\t t['afii57718'] = 0x05F2;\n\t t['afii57723'] = 0xFB35;\n\t t['afii57793'] = 0x05B4;\n\t t['afii57794'] = 0x05B5;\n\t t['afii57795'] = 0x05B6;\n\t t['afii57796'] = 0x05BB;\n\t t['afii57797'] = 0x05B8;\n\t t['afii57798'] = 0x05B7;\n\t t['afii57799'] = 0x05B0;\n\t t['afii57800'] = 0x05B2;\n\t t['afii57801'] = 0x05B1;\n\t t['afii57802'] = 0x05B3;\n\t t['afii57803'] = 0x05C2;\n\t t['afii57804'] = 0x05C1;\n\t t['afii57806'] = 0x05B9;\n\t t['afii57807'] = 0x05BC;\n\t t['afii57839'] = 0x05BD;\n\t t['afii57841'] = 0x05BF;\n\t t['afii57842'] = 0x05C0;\n\t t['afii57929'] = 0x02BC;\n\t t['afii61248'] = 0x2105;\n\t t['afii61289'] = 0x2113;\n\t t['afii61352'] = 0x2116;\n\t t['afii61573'] = 0x202C;\n\t t['afii61574'] = 0x202D;\n\t t['afii61575'] = 0x202E;\n\t t['afii61664'] = 0x200C;\n\t t['afii63167'] = 0x066D;\n\t t['afii64937'] = 0x02BD;\n\t t['agrave'] = 0x00E0;\n\t t['agujarati'] = 0x0A85;\n\t t['agurmukhi'] = 0x0A05;\n\t t['ahiragana'] = 0x3042;\n\t t['ahookabove'] = 0x1EA3;\n\t t['aibengali'] = 0x0990;\n\t t['aibopomofo'] = 0x311E;\n\t t['aideva'] = 0x0910;\n\t t['aiecyrillic'] = 0x04D5;\n\t t['aigujarati'] = 0x0A90;\n\t t['aigurmukhi'] = 0x0A10;\n\t t['aimatragurmukhi'] = 0x0A48;\n\t t['ainarabic'] = 0x0639;\n\t t['ainfinalarabic'] = 0xFECA;\n\t t['aininitialarabic'] = 0xFECB;\n\t t['ainmedialarabic'] = 0xFECC;\n\t t['ainvertedbreve'] = 0x0203;\n\t t['aivowelsignbengali'] = 0x09C8;\n\t t['aivowelsigndeva'] = 0x0948;\n\t t['aivowelsigngujarati'] = 0x0AC8;\n\t t['akatakana'] = 0x30A2;\n\t t['akatakanahalfwidth'] = 0xFF71;\n\t t['akorean'] = 0x314F;\n\t t['alef'] = 0x05D0;\n\t t['alefarabic'] = 0x0627;\n\t t['alefdageshhebrew'] = 0xFB30;\n\t t['aleffinalarabic'] = 0xFE8E;\n\t t['alefhamzaabovearabic'] = 0x0623;\n\t t['alefhamzaabovefinalarabic'] = 0xFE84;\n\t t['alefhamzabelowarabic'] = 0x0625;\n\t t['alefhamzabelowfinalarabic'] = 0xFE88;\n\t t['alefhebrew'] = 0x05D0;\n\t t['aleflamedhebrew'] = 0xFB4F;\n\t t['alefmaddaabovearabic'] = 0x0622;\n\t t['alefmaddaabovefinalarabic'] = 0xFE82;\n\t t['alefmaksuraarabic'] = 0x0649;\n\t t['alefmaksurafinalarabic'] = 0xFEF0;\n\t t['alefmaksurainitialarabic'] = 0xFEF3;\n\t t['alefmaksuramedialarabic'] = 0xFEF4;\n\t t['alefpatahhebrew'] = 0xFB2E;\n\t t['alefqamatshebrew'] = 0xFB2F;\n\t t['aleph'] = 0x2135;\n\t t['allequal'] = 0x224C;\n\t t['alpha'] = 0x03B1;\n\t t['alphatonos'] = 0x03AC;\n\t t['amacron'] = 0x0101;\n\t t['amonospace'] = 0xFF41;\n\t t['ampersand'] = 0x0026;\n\t t['ampersandmonospace'] = 0xFF06;\n\t t['ampersandsmall'] = 0xF726;\n\t t['amsquare'] = 0x33C2;\n\t t['anbopomofo'] = 0x3122;\n\t t['angbopomofo'] = 0x3124;\n\t t['angbracketleft'] = 0x3008;\n\t t['angbracketright'] = 0x3009;\n\t t['angkhankhuthai'] = 0x0E5A;\n\t t['angle'] = 0x2220;\n\t t['anglebracketleft'] = 0x3008;\n\t t['anglebracketleftvertical'] = 0xFE3F;\n\t t['anglebracketright'] = 0x3009;\n\t t['anglebracketrightvertical'] = 0xFE40;\n\t t['angleleft'] = 0x2329;\n\t t['angleright'] = 0x232A;\n\t t['angstrom'] = 0x212B;\n\t t['anoteleia'] = 0x0387;\n\t t['anudattadeva'] = 0x0952;\n\t t['anusvarabengali'] = 0x0982;\n\t t['anusvaradeva'] = 0x0902;\n\t t['anusvaragujarati'] = 0x0A82;\n\t t['aogonek'] = 0x0105;\n\t t['apaatosquare'] = 0x3300;\n\t t['aparen'] = 0x249C;\n\t t['apostrophearmenian'] = 0x055A;\n\t t['apostrophemod'] = 0x02BC;\n\t t['apple'] = 0xF8FF;\n\t t['approaches'] = 0x2250;\n\t t['approxequal'] = 0x2248;\n\t t['approxequalorimage'] = 0x2252;\n\t t['approximatelyequal'] = 0x2245;\n\t t['araeaekorean'] = 0x318E;\n\t t['araeakorean'] = 0x318D;\n\t t['arc'] = 0x2312;\n\t t['arighthalfring'] = 0x1E9A;\n\t t['aring'] = 0x00E5;\n\t t['aringacute'] = 0x01FB;\n\t t['aringbelow'] = 0x1E01;\n\t t['arrowboth'] = 0x2194;\n\t t['arrowdashdown'] = 0x21E3;\n\t t['arrowdashleft'] = 0x21E0;\n\t t['arrowdashright'] = 0x21E2;\n\t t['arrowdashup'] = 0x21E1;\n\t t['arrowdblboth'] = 0x21D4;\n\t t['arrowdbldown'] = 0x21D3;\n\t t['arrowdblleft'] = 0x21D0;\n\t t['arrowdblright'] = 0x21D2;\n\t t['arrowdblup'] = 0x21D1;\n\t t['arrowdown'] = 0x2193;\n\t t['arrowdownleft'] = 0x2199;\n\t t['arrowdownright'] = 0x2198;\n\t t['arrowdownwhite'] = 0x21E9;\n\t t['arrowheaddownmod'] = 0x02C5;\n\t t['arrowheadleftmod'] = 0x02C2;\n\t t['arrowheadrightmod'] = 0x02C3;\n\t t['arrowheadupmod'] = 0x02C4;\n\t t['arrowhorizex'] = 0xF8E7;\n\t t['arrowleft'] = 0x2190;\n\t t['arrowleftdbl'] = 0x21D0;\n\t t['arrowleftdblstroke'] = 0x21CD;\n\t t['arrowleftoverright'] = 0x21C6;\n\t t['arrowleftwhite'] = 0x21E6;\n\t t['arrowright'] = 0x2192;\n\t t['arrowrightdblstroke'] = 0x21CF;\n\t t['arrowrightheavy'] = 0x279E;\n\t t['arrowrightoverleft'] = 0x21C4;\n\t t['arrowrightwhite'] = 0x21E8;\n\t t['arrowtableft'] = 0x21E4;\n\t t['arrowtabright'] = 0x21E5;\n\t t['arrowup'] = 0x2191;\n\t t['arrowupdn'] = 0x2195;\n\t t['arrowupdnbse'] = 0x21A8;\n\t t['arrowupdownbase'] = 0x21A8;\n\t t['arrowupleft'] = 0x2196;\n\t t['arrowupleftofdown'] = 0x21C5;\n\t t['arrowupright'] = 0x2197;\n\t t['arrowupwhite'] = 0x21E7;\n\t t['arrowvertex'] = 0xF8E6;\n\t t['asciicircum'] = 0x005E;\n\t t['asciicircummonospace'] = 0xFF3E;\n\t t['asciitilde'] = 0x007E;\n\t t['asciitildemonospace'] = 0xFF5E;\n\t t['ascript'] = 0x0251;\n\t t['ascriptturned'] = 0x0252;\n\t t['asmallhiragana'] = 0x3041;\n\t t['asmallkatakana'] = 0x30A1;\n\t t['asmallkatakanahalfwidth'] = 0xFF67;\n\t t['asterisk'] = 0x002A;\n\t t['asteriskaltonearabic'] = 0x066D;\n\t t['asteriskarabic'] = 0x066D;\n\t t['asteriskmath'] = 0x2217;\n\t t['asteriskmonospace'] = 0xFF0A;\n\t t['asterisksmall'] = 0xFE61;\n\t t['asterism'] = 0x2042;\n\t t['asuperior'] = 0xF6E9;\n\t t['asymptoticallyequal'] = 0x2243;\n\t t['at'] = 0x0040;\n\t t['atilde'] = 0x00E3;\n\t t['atmonospace'] = 0xFF20;\n\t t['atsmall'] = 0xFE6B;\n\t t['aturned'] = 0x0250;\n\t t['aubengali'] = 0x0994;\n\t t['aubopomofo'] = 0x3120;\n\t t['audeva'] = 0x0914;\n\t t['augujarati'] = 0x0A94;\n\t t['augurmukhi'] = 0x0A14;\n\t t['aulengthmarkbengali'] = 0x09D7;\n\t t['aumatragurmukhi'] = 0x0A4C;\n\t t['auvowelsignbengali'] = 0x09CC;\n\t t['auvowelsigndeva'] = 0x094C;\n\t t['auvowelsigngujarati'] = 0x0ACC;\n\t t['avagrahadeva'] = 0x093D;\n\t t['aybarmenian'] = 0x0561;\n\t t['ayin'] = 0x05E2;\n\t t['ayinaltonehebrew'] = 0xFB20;\n\t t['ayinhebrew'] = 0x05E2;\n\t t['b'] = 0x0062;\n\t t['babengali'] = 0x09AC;\n\t t['backslash'] = 0x005C;\n\t t['backslashmonospace'] = 0xFF3C;\n\t t['badeva'] = 0x092C;\n\t t['bagujarati'] = 0x0AAC;\n\t t['bagurmukhi'] = 0x0A2C;\n\t t['bahiragana'] = 0x3070;\n\t t['bahtthai'] = 0x0E3F;\n\t t['bakatakana'] = 0x30D0;\n\t t['bar'] = 0x007C;\n\t t['barmonospace'] = 0xFF5C;\n\t t['bbopomofo'] = 0x3105;\n\t t['bcircle'] = 0x24D1;\n\t t['bdotaccent'] = 0x1E03;\n\t t['bdotbelow'] = 0x1E05;\n\t t['beamedsixteenthnotes'] = 0x266C;\n\t t['because'] = 0x2235;\n\t t['becyrillic'] = 0x0431;\n\t t['beharabic'] = 0x0628;\n\t t['behfinalarabic'] = 0xFE90;\n\t t['behinitialarabic'] = 0xFE91;\n\t t['behiragana'] = 0x3079;\n\t t['behmedialarabic'] = 0xFE92;\n\t t['behmeeminitialarabic'] = 0xFC9F;\n\t t['behmeemisolatedarabic'] = 0xFC08;\n\t t['behnoonfinalarabic'] = 0xFC6D;\n\t t['bekatakana'] = 0x30D9;\n\t t['benarmenian'] = 0x0562;\n\t t['bet'] = 0x05D1;\n\t t['beta'] = 0x03B2;\n\t t['betasymbolgreek'] = 0x03D0;\n\t t['betdagesh'] = 0xFB31;\n\t t['betdageshhebrew'] = 0xFB31;\n\t t['bethebrew'] = 0x05D1;\n\t t['betrafehebrew'] = 0xFB4C;\n\t t['bhabengali'] = 0x09AD;\n\t t['bhadeva'] = 0x092D;\n\t t['bhagujarati'] = 0x0AAD;\n\t t['bhagurmukhi'] = 0x0A2D;\n\t t['bhook'] = 0x0253;\n\t t['bihiragana'] = 0x3073;\n\t t['bikatakana'] = 0x30D3;\n\t t['bilabialclick'] = 0x0298;\n\t t['bindigurmukhi'] = 0x0A02;\n\t t['birusquare'] = 0x3331;\n\t t['blackcircle'] = 0x25CF;\n\t t['blackdiamond'] = 0x25C6;\n\t t['blackdownpointingtriangle'] = 0x25BC;\n\t t['blackleftpointingpointer'] = 0x25C4;\n\t t['blackleftpointingtriangle'] = 0x25C0;\n\t t['blacklenticularbracketleft'] = 0x3010;\n\t t['blacklenticularbracketleftvertical'] = 0xFE3B;\n\t t['blacklenticularbracketright'] = 0x3011;\n\t t['blacklenticularbracketrightvertical'] = 0xFE3C;\n\t t['blacklowerlefttriangle'] = 0x25E3;\n\t t['blacklowerrighttriangle'] = 0x25E2;\n\t t['blackrectangle'] = 0x25AC;\n\t t['blackrightpointingpointer'] = 0x25BA;\n\t t['blackrightpointingtriangle'] = 0x25B6;\n\t t['blacksmallsquare'] = 0x25AA;\n\t t['blacksmilingface'] = 0x263B;\n\t t['blacksquare'] = 0x25A0;\n\t t['blackstar'] = 0x2605;\n\t t['blackupperlefttriangle'] = 0x25E4;\n\t t['blackupperrighttriangle'] = 0x25E5;\n\t t['blackuppointingsmalltriangle'] = 0x25B4;\n\t t['blackuppointingtriangle'] = 0x25B2;\n\t t['blank'] = 0x2423;\n\t t['blinebelow'] = 0x1E07;\n\t t['block'] = 0x2588;\n\t t['bmonospace'] = 0xFF42;\n\t t['bobaimaithai'] = 0x0E1A;\n\t t['bohiragana'] = 0x307C;\n\t t['bokatakana'] = 0x30DC;\n\t t['bparen'] = 0x249D;\n\t t['bqsquare'] = 0x33C3;\n\t t['braceex'] = 0xF8F4;\n\t t['braceleft'] = 0x007B;\n\t t['braceleftbt'] = 0xF8F3;\n\t t['braceleftmid'] = 0xF8F2;\n\t t['braceleftmonospace'] = 0xFF5B;\n\t t['braceleftsmall'] = 0xFE5B;\n\t t['bracelefttp'] = 0xF8F1;\n\t t['braceleftvertical'] = 0xFE37;\n\t t['braceright'] = 0x007D;\n\t t['bracerightbt'] = 0xF8FE;\n\t t['bracerightmid'] = 0xF8FD;\n\t t['bracerightmonospace'] = 0xFF5D;\n\t t['bracerightsmall'] = 0xFE5C;\n\t t['bracerighttp'] = 0xF8FC;\n\t t['bracerightvertical'] = 0xFE38;\n\t t['bracketleft'] = 0x005B;\n\t t['bracketleftbt'] = 0xF8F0;\n\t t['bracketleftex'] = 0xF8EF;\n\t t['bracketleftmonospace'] = 0xFF3B;\n\t t['bracketlefttp'] = 0xF8EE;\n\t t['bracketright'] = 0x005D;\n\t t['bracketrightbt'] = 0xF8FB;\n\t t['bracketrightex'] = 0xF8FA;\n\t t['bracketrightmonospace'] = 0xFF3D;\n\t t['bracketrighttp'] = 0xF8F9;\n\t t['breve'] = 0x02D8;\n\t t['brevebelowcmb'] = 0x032E;\n\t t['brevecmb'] = 0x0306;\n\t t['breveinvertedbelowcmb'] = 0x032F;\n\t t['breveinvertedcmb'] = 0x0311;\n\t t['breveinverteddoublecmb'] = 0x0361;\n\t t['bridgebelowcmb'] = 0x032A;\n\t t['bridgeinvertedbelowcmb'] = 0x033A;\n\t t['brokenbar'] = 0x00A6;\n\t t['bstroke'] = 0x0180;\n\t t['bsuperior'] = 0xF6EA;\n\t t['btopbar'] = 0x0183;\n\t t['buhiragana'] = 0x3076;\n\t t['bukatakana'] = 0x30D6;\n\t t['bullet'] = 0x2022;\n\t t['bulletinverse'] = 0x25D8;\n\t t['bulletoperator'] = 0x2219;\n\t t['bullseye'] = 0x25CE;\n\t t['c'] = 0x0063;\n\t t['caarmenian'] = 0x056E;\n\t t['cabengali'] = 0x099A;\n\t t['cacute'] = 0x0107;\n\t t['cadeva'] = 0x091A;\n\t t['cagujarati'] = 0x0A9A;\n\t t['cagurmukhi'] = 0x0A1A;\n\t t['calsquare'] = 0x3388;\n\t t['candrabindubengali'] = 0x0981;\n\t t['candrabinducmb'] = 0x0310;\n\t t['candrabindudeva'] = 0x0901;\n\t t['candrabindugujarati'] = 0x0A81;\n\t t['capslock'] = 0x21EA;\n\t t['careof'] = 0x2105;\n\t t['caron'] = 0x02C7;\n\t t['caronbelowcmb'] = 0x032C;\n\t t['caroncmb'] = 0x030C;\n\t t['carriagereturn'] = 0x21B5;\n\t t['cbopomofo'] = 0x3118;\n\t t['ccaron'] = 0x010D;\n\t t['ccedilla'] = 0x00E7;\n\t t['ccedillaacute'] = 0x1E09;\n\t t['ccircle'] = 0x24D2;\n\t t['ccircumflex'] = 0x0109;\n\t t['ccurl'] = 0x0255;\n\t t['cdot'] = 0x010B;\n\t t['cdotaccent'] = 0x010B;\n\t t['cdsquare'] = 0x33C5;\n\t t['cedilla'] = 0x00B8;\n\t t['cedillacmb'] = 0x0327;\n\t t['cent'] = 0x00A2;\n\t t['centigrade'] = 0x2103;\n\t t['centinferior'] = 0xF6DF;\n\t t['centmonospace'] = 0xFFE0;\n\t t['centoldstyle'] = 0xF7A2;\n\t t['centsuperior'] = 0xF6E0;\n\t t['chaarmenian'] = 0x0579;\n\t t['chabengali'] = 0x099B;\n\t t['chadeva'] = 0x091B;\n\t t['chagujarati'] = 0x0A9B;\n\t t['chagurmukhi'] = 0x0A1B;\n\t t['chbopomofo'] = 0x3114;\n\t t['cheabkhasiancyrillic'] = 0x04BD;\n\t t['checkmark'] = 0x2713;\n\t t['checyrillic'] = 0x0447;\n\t t['chedescenderabkhasiancyrillic'] = 0x04BF;\n\t t['chedescendercyrillic'] = 0x04B7;\n\t t['chedieresiscyrillic'] = 0x04F5;\n\t t['cheharmenian'] = 0x0573;\n\t t['chekhakassiancyrillic'] = 0x04CC;\n\t t['cheverticalstrokecyrillic'] = 0x04B9;\n\t t['chi'] = 0x03C7;\n\t t['chieuchacirclekorean'] = 0x3277;\n\t t['chieuchaparenkorean'] = 0x3217;\n\t t['chieuchcirclekorean'] = 0x3269;\n\t t['chieuchkorean'] = 0x314A;\n\t t['chieuchparenkorean'] = 0x3209;\n\t t['chochangthai'] = 0x0E0A;\n\t t['chochanthai'] = 0x0E08;\n\t t['chochingthai'] = 0x0E09;\n\t t['chochoethai'] = 0x0E0C;\n\t t['chook'] = 0x0188;\n\t t['cieucacirclekorean'] = 0x3276;\n\t t['cieucaparenkorean'] = 0x3216;\n\t t['cieuccirclekorean'] = 0x3268;\n\t t['cieuckorean'] = 0x3148;\n\t t['cieucparenkorean'] = 0x3208;\n\t t['cieucuparenkorean'] = 0x321C;\n\t t['circle'] = 0x25CB;\n\t t['circlecopyrt'] = 0x00A9;\n\t t['circlemultiply'] = 0x2297;\n\t t['circleot'] = 0x2299;\n\t t['circleplus'] = 0x2295;\n\t t['circlepostalmark'] = 0x3036;\n\t t['circlewithlefthalfblack'] = 0x25D0;\n\t t['circlewithrighthalfblack'] = 0x25D1;\n\t t['circumflex'] = 0x02C6;\n\t t['circumflexbelowcmb'] = 0x032D;\n\t t['circumflexcmb'] = 0x0302;\n\t t['clear'] = 0x2327;\n\t t['clickalveolar'] = 0x01C2;\n\t t['clickdental'] = 0x01C0;\n\t t['clicklateral'] = 0x01C1;\n\t t['clickretroflex'] = 0x01C3;\n\t t['club'] = 0x2663;\n\t t['clubsuitblack'] = 0x2663;\n\t t['clubsuitwhite'] = 0x2667;\n\t t['cmcubedsquare'] = 0x33A4;\n\t t['cmonospace'] = 0xFF43;\n\t t['cmsquaredsquare'] = 0x33A0;\n\t t['coarmenian'] = 0x0581;\n\t t['colon'] = 0x003A;\n\t t['colonmonetary'] = 0x20A1;\n\t t['colonmonospace'] = 0xFF1A;\n\t t['colonsign'] = 0x20A1;\n\t t['colonsmall'] = 0xFE55;\n\t t['colontriangularhalfmod'] = 0x02D1;\n\t t['colontriangularmod'] = 0x02D0;\n\t t['comma'] = 0x002C;\n\t t['commaabovecmb'] = 0x0313;\n\t t['commaaboverightcmb'] = 0x0315;\n\t t['commaaccent'] = 0xF6C3;\n\t t['commaarabic'] = 0x060C;\n\t t['commaarmenian'] = 0x055D;\n\t t['commainferior'] = 0xF6E1;\n\t t['commamonospace'] = 0xFF0C;\n\t t['commareversedabovecmb'] = 0x0314;\n\t t['commareversedmod'] = 0x02BD;\n\t t['commasmall'] = 0xFE50;\n\t t['commasuperior'] = 0xF6E2;\n\t t['commaturnedabovecmb'] = 0x0312;\n\t t['commaturnedmod'] = 0x02BB;\n\t t['compass'] = 0x263C;\n\t t['congruent'] = 0x2245;\n\t t['contourintegral'] = 0x222E;\n\t t['control'] = 0x2303;\n\t t['controlACK'] = 0x0006;\n\t t['controlBEL'] = 0x0007;\n\t t['controlBS'] = 0x0008;\n\t t['controlCAN'] = 0x0018;\n\t t['controlCR'] = 0x000D;\n\t t['controlDC1'] = 0x0011;\n\t t['controlDC2'] = 0x0012;\n\t t['controlDC3'] = 0x0013;\n\t t['controlDC4'] = 0x0014;\n\t t['controlDEL'] = 0x007F;\n\t t['controlDLE'] = 0x0010;\n\t t['controlEM'] = 0x0019;\n\t t['controlENQ'] = 0x0005;\n\t t['controlEOT'] = 0x0004;\n\t t['controlESC'] = 0x001B;\n\t t['controlETB'] = 0x0017;\n\t t['controlETX'] = 0x0003;\n\t t['controlFF'] = 0x000C;\n\t t['controlFS'] = 0x001C;\n\t t['controlGS'] = 0x001D;\n\t t['controlHT'] = 0x0009;\n\t t['controlLF'] = 0x000A;\n\t t['controlNAK'] = 0x0015;\n\t t['controlNULL'] = 0x0000;\n\t t['controlRS'] = 0x001E;\n\t t['controlSI'] = 0x000F;\n\t t['controlSO'] = 0x000E;\n\t t['controlSOT'] = 0x0002;\n\t t['controlSTX'] = 0x0001;\n\t t['controlSUB'] = 0x001A;\n\t t['controlSYN'] = 0x0016;\n\t t['controlUS'] = 0x001F;\n\t t['controlVT'] = 0x000B;\n\t t['copyright'] = 0x00A9;\n\t t['copyrightsans'] = 0xF8E9;\n\t t['copyrightserif'] = 0xF6D9;\n\t t['cornerbracketleft'] = 0x300C;\n\t t['cornerbracketlefthalfwidth'] = 0xFF62;\n\t t['cornerbracketleftvertical'] = 0xFE41;\n\t t['cornerbracketright'] = 0x300D;\n\t t['cornerbracketrighthalfwidth'] = 0xFF63;\n\t t['cornerbracketrightvertical'] = 0xFE42;\n\t t['corporationsquare'] = 0x337F;\n\t t['cosquare'] = 0x33C7;\n\t t['coverkgsquare'] = 0x33C6;\n\t t['cparen'] = 0x249E;\n\t t['cruzeiro'] = 0x20A2;\n\t t['cstretched'] = 0x0297;\n\t t['curlyand'] = 0x22CF;\n\t t['curlyor'] = 0x22CE;\n\t t['currency'] = 0x00A4;\n\t t['cyrBreve'] = 0xF6D1;\n\t t['cyrFlex'] = 0xF6D2;\n\t t['cyrbreve'] = 0xF6D4;\n\t t['cyrflex'] = 0xF6D5;\n\t t['d'] = 0x0064;\n\t t['daarmenian'] = 0x0564;\n\t t['dabengali'] = 0x09A6;\n\t t['dadarabic'] = 0x0636;\n\t t['dadeva'] = 0x0926;\n\t t['dadfinalarabic'] = 0xFEBE;\n\t t['dadinitialarabic'] = 0xFEBF;\n\t t['dadmedialarabic'] = 0xFEC0;\n\t t['dagesh'] = 0x05BC;\n\t t['dageshhebrew'] = 0x05BC;\n\t t['dagger'] = 0x2020;\n\t t['daggerdbl'] = 0x2021;\n\t t['dagujarati'] = 0x0AA6;\n\t t['dagurmukhi'] = 0x0A26;\n\t t['dahiragana'] = 0x3060;\n\t t['dakatakana'] = 0x30C0;\n\t t['dalarabic'] = 0x062F;\n\t t['dalet'] = 0x05D3;\n\t t['daletdagesh'] = 0xFB33;\n\t t['daletdageshhebrew'] = 0xFB33;\n\t t['dalethebrew'] = 0x05D3;\n\t t['dalfinalarabic'] = 0xFEAA;\n\t t['dammaarabic'] = 0x064F;\n\t t['dammalowarabic'] = 0x064F;\n\t t['dammatanaltonearabic'] = 0x064C;\n\t t['dammatanarabic'] = 0x064C;\n\t t['danda'] = 0x0964;\n\t t['dargahebrew'] = 0x05A7;\n\t t['dargalefthebrew'] = 0x05A7;\n\t t['dasiapneumatacyrilliccmb'] = 0x0485;\n\t t['dblGrave'] = 0xF6D3;\n\t t['dblanglebracketleft'] = 0x300A;\n\t t['dblanglebracketleftvertical'] = 0xFE3D;\n\t t['dblanglebracketright'] = 0x300B;\n\t t['dblanglebracketrightvertical'] = 0xFE3E;\n\t t['dblarchinvertedbelowcmb'] = 0x032B;\n\t t['dblarrowleft'] = 0x21D4;\n\t t['dblarrowright'] = 0x21D2;\n\t t['dbldanda'] = 0x0965;\n\t t['dblgrave'] = 0xF6D6;\n\t t['dblgravecmb'] = 0x030F;\n\t t['dblintegral'] = 0x222C;\n\t t['dbllowline'] = 0x2017;\n\t t['dbllowlinecmb'] = 0x0333;\n\t t['dbloverlinecmb'] = 0x033F;\n\t t['dblprimemod'] = 0x02BA;\n\t t['dblverticalbar'] = 0x2016;\n\t t['dblverticallineabovecmb'] = 0x030E;\n\t t['dbopomofo'] = 0x3109;\n\t t['dbsquare'] = 0x33C8;\n\t t['dcaron'] = 0x010F;\n\t t['dcedilla'] = 0x1E11;\n\t t['dcircle'] = 0x24D3;\n\t t['dcircumflexbelow'] = 0x1E13;\n\t t['dcroat'] = 0x0111;\n\t t['ddabengali'] = 0x09A1;\n\t t['ddadeva'] = 0x0921;\n\t t['ddagujarati'] = 0x0AA1;\n\t t['ddagurmukhi'] = 0x0A21;\n\t t['ddalarabic'] = 0x0688;\n\t t['ddalfinalarabic'] = 0xFB89;\n\t t['dddhadeva'] = 0x095C;\n\t t['ddhabengali'] = 0x09A2;\n\t t['ddhadeva'] = 0x0922;\n\t t['ddhagujarati'] = 0x0AA2;\n\t t['ddhagurmukhi'] = 0x0A22;\n\t t['ddotaccent'] = 0x1E0B;\n\t t['ddotbelow'] = 0x1E0D;\n\t t['decimalseparatorarabic'] = 0x066B;\n\t t['decimalseparatorpersian'] = 0x066B;\n\t t['decyrillic'] = 0x0434;\n\t t['degree'] = 0x00B0;\n\t t['dehihebrew'] = 0x05AD;\n\t t['dehiragana'] = 0x3067;\n\t t['deicoptic'] = 0x03EF;\n\t t['dekatakana'] = 0x30C7;\n\t t['deleteleft'] = 0x232B;\n\t t['deleteright'] = 0x2326;\n\t t['delta'] = 0x03B4;\n\t t['deltaturned'] = 0x018D;\n\t t['denominatorminusonenumeratorbengali'] = 0x09F8;\n\t t['dezh'] = 0x02A4;\n\t t['dhabengali'] = 0x09A7;\n\t t['dhadeva'] = 0x0927;\n\t t['dhagujarati'] = 0x0AA7;\n\t t['dhagurmukhi'] = 0x0A27;\n\t t['dhook'] = 0x0257;\n\t t['dialytikatonos'] = 0x0385;\n\t t['dialytikatonoscmb'] = 0x0344;\n\t t['diamond'] = 0x2666;\n\t t['diamondsuitwhite'] = 0x2662;\n\t t['dieresis'] = 0x00A8;\n\t t['dieresisacute'] = 0xF6D7;\n\t t['dieresisbelowcmb'] = 0x0324;\n\t t['dieresiscmb'] = 0x0308;\n\t t['dieresisgrave'] = 0xF6D8;\n\t t['dieresistonos'] = 0x0385;\n\t t['dihiragana'] = 0x3062;\n\t t['dikatakana'] = 0x30C2;\n\t t['dittomark'] = 0x3003;\n\t t['divide'] = 0x00F7;\n\t t['divides'] = 0x2223;\n\t t['divisionslash'] = 0x2215;\n\t t['djecyrillic'] = 0x0452;\n\t t['dkshade'] = 0x2593;\n\t t['dlinebelow'] = 0x1E0F;\n\t t['dlsquare'] = 0x3397;\n\t t['dmacron'] = 0x0111;\n\t t['dmonospace'] = 0xFF44;\n\t t['dnblock'] = 0x2584;\n\t t['dochadathai'] = 0x0E0E;\n\t t['dodekthai'] = 0x0E14;\n\t t['dohiragana'] = 0x3069;\n\t t['dokatakana'] = 0x30C9;\n\t t['dollar'] = 0x0024;\n\t t['dollarinferior'] = 0xF6E3;\n\t t['dollarmonospace'] = 0xFF04;\n\t t['dollaroldstyle'] = 0xF724;\n\t t['dollarsmall'] = 0xFE69;\n\t t['dollarsuperior'] = 0xF6E4;\n\t t['dong'] = 0x20AB;\n\t t['dorusquare'] = 0x3326;\n\t t['dotaccent'] = 0x02D9;\n\t t['dotaccentcmb'] = 0x0307;\n\t t['dotbelowcmb'] = 0x0323;\n\t t['dotbelowcomb'] = 0x0323;\n\t t['dotkatakana'] = 0x30FB;\n\t t['dotlessi'] = 0x0131;\n\t t['dotlessj'] = 0xF6BE;\n\t t['dotlessjstrokehook'] = 0x0284;\n\t t['dotmath'] = 0x22C5;\n\t t['dottedcircle'] = 0x25CC;\n\t t['doubleyodpatah'] = 0xFB1F;\n\t t['doubleyodpatahhebrew'] = 0xFB1F;\n\t t['downtackbelowcmb'] = 0x031E;\n\t t['downtackmod'] = 0x02D5;\n\t t['dparen'] = 0x249F;\n\t t['dsuperior'] = 0xF6EB;\n\t t['dtail'] = 0x0256;\n\t t['dtopbar'] = 0x018C;\n\t t['duhiragana'] = 0x3065;\n\t t['dukatakana'] = 0x30C5;\n\t t['dz'] = 0x01F3;\n\t t['dzaltone'] = 0x02A3;\n\t t['dzcaron'] = 0x01C6;\n\t t['dzcurl'] = 0x02A5;\n\t t['dzeabkhasiancyrillic'] = 0x04E1;\n\t t['dzecyrillic'] = 0x0455;\n\t t['dzhecyrillic'] = 0x045F;\n\t t['e'] = 0x0065;\n\t t['eacute'] = 0x00E9;\n\t t['earth'] = 0x2641;\n\t t['ebengali'] = 0x098F;\n\t t['ebopomofo'] = 0x311C;\n\t t['ebreve'] = 0x0115;\n\t t['ecandradeva'] = 0x090D;\n\t t['ecandragujarati'] = 0x0A8D;\n\t t['ecandravowelsigndeva'] = 0x0945;\n\t t['ecandravowelsigngujarati'] = 0x0AC5;\n\t t['ecaron'] = 0x011B;\n\t t['ecedillabreve'] = 0x1E1D;\n\t t['echarmenian'] = 0x0565;\n\t t['echyiwnarmenian'] = 0x0587;\n\t t['ecircle'] = 0x24D4;\n\t t['ecircumflex'] = 0x00EA;\n\t t['ecircumflexacute'] = 0x1EBF;\n\t t['ecircumflexbelow'] = 0x1E19;\n\t t['ecircumflexdotbelow'] = 0x1EC7;\n\t t['ecircumflexgrave'] = 0x1EC1;\n\t t['ecircumflexhookabove'] = 0x1EC3;\n\t t['ecircumflextilde'] = 0x1EC5;\n\t t['ecyrillic'] = 0x0454;\n\t t['edblgrave'] = 0x0205;\n\t t['edeva'] = 0x090F;\n\t t['edieresis'] = 0x00EB;\n\t t['edot'] = 0x0117;\n\t t['edotaccent'] = 0x0117;\n\t t['edotbelow'] = 0x1EB9;\n\t t['eegurmukhi'] = 0x0A0F;\n\t t['eematragurmukhi'] = 0x0A47;\n\t t['efcyrillic'] = 0x0444;\n\t t['egrave'] = 0x00E8;\n\t t['egujarati'] = 0x0A8F;\n\t t['eharmenian'] = 0x0567;\n\t t['ehbopomofo'] = 0x311D;\n\t t['ehiragana'] = 0x3048;\n\t t['ehookabove'] = 0x1EBB;\n\t t['eibopomofo'] = 0x311F;\n\t t['eight'] = 0x0038;\n\t t['eightarabic'] = 0x0668;\n\t t['eightbengali'] = 0x09EE;\n\t t['eightcircle'] = 0x2467;\n\t t['eightcircleinversesansserif'] = 0x2791;\n\t t['eightdeva'] = 0x096E;\n\t t['eighteencircle'] = 0x2471;\n\t t['eighteenparen'] = 0x2485;\n\t t['eighteenperiod'] = 0x2499;\n\t t['eightgujarati'] = 0x0AEE;\n\t t['eightgurmukhi'] = 0x0A6E;\n\t t['eighthackarabic'] = 0x0668;\n\t t['eighthangzhou'] = 0x3028;\n\t t['eighthnotebeamed'] = 0x266B;\n\t t['eightideographicparen'] = 0x3227;\n\t t['eightinferior'] = 0x2088;\n\t t['eightmonospace'] = 0xFF18;\n\t t['eightoldstyle'] = 0xF738;\n\t t['eightparen'] = 0x247B;\n\t t['eightperiod'] = 0x248F;\n\t t['eightpersian'] = 0x06F8;\n\t t['eightroman'] = 0x2177;\n\t t['eightsuperior'] = 0x2078;\n\t t['eightthai'] = 0x0E58;\n\t t['einvertedbreve'] = 0x0207;\n\t t['eiotifiedcyrillic'] = 0x0465;\n\t t['ekatakana'] = 0x30A8;\n\t t['ekatakanahalfwidth'] = 0xFF74;\n\t t['ekonkargurmukhi'] = 0x0A74;\n\t t['ekorean'] = 0x3154;\n\t t['elcyrillic'] = 0x043B;\n\t t['element'] = 0x2208;\n\t t['elevencircle'] = 0x246A;\n\t t['elevenparen'] = 0x247E;\n\t t['elevenperiod'] = 0x2492;\n\t t['elevenroman'] = 0x217A;\n\t t['ellipsis'] = 0x2026;\n\t t['ellipsisvertical'] = 0x22EE;\n\t t['emacron'] = 0x0113;\n\t t['emacronacute'] = 0x1E17;\n\t t['emacrongrave'] = 0x1E15;\n\t t['emcyrillic'] = 0x043C;\n\t t['emdash'] = 0x2014;\n\t t['emdashvertical'] = 0xFE31;\n\t t['emonospace'] = 0xFF45;\n\t t['emphasismarkarmenian'] = 0x055B;\n\t t['emptyset'] = 0x2205;\n\t t['enbopomofo'] = 0x3123;\n\t t['encyrillic'] = 0x043D;\n\t t['endash'] = 0x2013;\n\t t['endashvertical'] = 0xFE32;\n\t t['endescendercyrillic'] = 0x04A3;\n\t t['eng'] = 0x014B;\n\t t['engbopomofo'] = 0x3125;\n\t t['enghecyrillic'] = 0x04A5;\n\t t['enhookcyrillic'] = 0x04C8;\n\t t['enspace'] = 0x2002;\n\t t['eogonek'] = 0x0119;\n\t t['eokorean'] = 0x3153;\n\t t['eopen'] = 0x025B;\n\t t['eopenclosed'] = 0x029A;\n\t t['eopenreversed'] = 0x025C;\n\t t['eopenreversedclosed'] = 0x025E;\n\t t['eopenreversedhook'] = 0x025D;\n\t t['eparen'] = 0x24A0;\n\t t['epsilon'] = 0x03B5;\n\t t['epsilontonos'] = 0x03AD;\n\t t['equal'] = 0x003D;\n\t t['equalmonospace'] = 0xFF1D;\n\t t['equalsmall'] = 0xFE66;\n\t t['equalsuperior'] = 0x207C;\n\t t['equivalence'] = 0x2261;\n\t t['erbopomofo'] = 0x3126;\n\t t['ercyrillic'] = 0x0440;\n\t t['ereversed'] = 0x0258;\n\t t['ereversedcyrillic'] = 0x044D;\n\t t['escyrillic'] = 0x0441;\n\t t['esdescendercyrillic'] = 0x04AB;\n\t t['esh'] = 0x0283;\n\t t['eshcurl'] = 0x0286;\n\t t['eshortdeva'] = 0x090E;\n\t t['eshortvowelsigndeva'] = 0x0946;\n\t t['eshreversedloop'] = 0x01AA;\n\t t['eshsquatreversed'] = 0x0285;\n\t t['esmallhiragana'] = 0x3047;\n\t t['esmallkatakana'] = 0x30A7;\n\t t['esmallkatakanahalfwidth'] = 0xFF6A;\n\t t['estimated'] = 0x212E;\n\t t['esuperior'] = 0xF6EC;\n\t t['eta'] = 0x03B7;\n\t t['etarmenian'] = 0x0568;\n\t t['etatonos'] = 0x03AE;\n\t t['eth'] = 0x00F0;\n\t t['etilde'] = 0x1EBD;\n\t t['etildebelow'] = 0x1E1B;\n\t t['etnahtafoukhhebrew'] = 0x0591;\n\t t['etnahtafoukhlefthebrew'] = 0x0591;\n\t t['etnahtahebrew'] = 0x0591;\n\t t['etnahtalefthebrew'] = 0x0591;\n\t t['eturned'] = 0x01DD;\n\t t['eukorean'] = 0x3161;\n\t t['euro'] = 0x20AC;\n\t t['evowelsignbengali'] = 0x09C7;\n\t t['evowelsigndeva'] = 0x0947;\n\t t['evowelsigngujarati'] = 0x0AC7;\n\t t['exclam'] = 0x0021;\n\t t['exclamarmenian'] = 0x055C;\n\t t['exclamdbl'] = 0x203C;\n\t t['exclamdown'] = 0x00A1;\n\t t['exclamdownsmall'] = 0xF7A1;\n\t t['exclammonospace'] = 0xFF01;\n\t t['exclamsmall'] = 0xF721;\n\t t['existential'] = 0x2203;\n\t t['ezh'] = 0x0292;\n\t t['ezhcaron'] = 0x01EF;\n\t t['ezhcurl'] = 0x0293;\n\t t['ezhreversed'] = 0x01B9;\n\t t['ezhtail'] = 0x01BA;\n\t t['f'] = 0x0066;\n\t t['fadeva'] = 0x095E;\n\t t['fagurmukhi'] = 0x0A5E;\n\t t['fahrenheit'] = 0x2109;\n\t t['fathaarabic'] = 0x064E;\n\t t['fathalowarabic'] = 0x064E;\n\t t['fathatanarabic'] = 0x064B;\n\t t['fbopomofo'] = 0x3108;\n\t t['fcircle'] = 0x24D5;\n\t t['fdotaccent'] = 0x1E1F;\n\t t['feharabic'] = 0x0641;\n\t t['feharmenian'] = 0x0586;\n\t t['fehfinalarabic'] = 0xFED2;\n\t t['fehinitialarabic'] = 0xFED3;\n\t t['fehmedialarabic'] = 0xFED4;\n\t t['feicoptic'] = 0x03E5;\n\t t['female'] = 0x2640;\n\t t['ff'] = 0xFB00;\n\t t['ffi'] = 0xFB03;\n\t t['ffl'] = 0xFB04;\n\t t['fi'] = 0xFB01;\n\t t['fifteencircle'] = 0x246E;\n\t t['fifteenparen'] = 0x2482;\n\t t['fifteenperiod'] = 0x2496;\n\t t['figuredash'] = 0x2012;\n\t t['filledbox'] = 0x25A0;\n\t t['filledrect'] = 0x25AC;\n\t t['finalkaf'] = 0x05DA;\n\t t['finalkafdagesh'] = 0xFB3A;\n\t t['finalkafdageshhebrew'] = 0xFB3A;\n\t t['finalkafhebrew'] = 0x05DA;\n\t t['finalmem'] = 0x05DD;\n\t t['finalmemhebrew'] = 0x05DD;\n\t t['finalnun'] = 0x05DF;\n\t t['finalnunhebrew'] = 0x05DF;\n\t t['finalpe'] = 0x05E3;\n\t t['finalpehebrew'] = 0x05E3;\n\t t['finaltsadi'] = 0x05E5;\n\t t['finaltsadihebrew'] = 0x05E5;\n\t t['firsttonechinese'] = 0x02C9;\n\t t['fisheye'] = 0x25C9;\n\t t['fitacyrillic'] = 0x0473;\n\t t['five'] = 0x0035;\n\t t['fivearabic'] = 0x0665;\n\t t['fivebengali'] = 0x09EB;\n\t t['fivecircle'] = 0x2464;\n\t t['fivecircleinversesansserif'] = 0x278E;\n\t t['fivedeva'] = 0x096B;\n\t t['fiveeighths'] = 0x215D;\n\t t['fivegujarati'] = 0x0AEB;\n\t t['fivegurmukhi'] = 0x0A6B;\n\t t['fivehackarabic'] = 0x0665;\n\t t['fivehangzhou'] = 0x3025;\n\t t['fiveideographicparen'] = 0x3224;\n\t t['fiveinferior'] = 0x2085;\n\t t['fivemonospace'] = 0xFF15;\n\t t['fiveoldstyle'] = 0xF735;\n\t t['fiveparen'] = 0x2478;\n\t t['fiveperiod'] = 0x248C;\n\t t['fivepersian'] = 0x06F5;\n\t t['fiveroman'] = 0x2174;\n\t t['fivesuperior'] = 0x2075;\n\t t['fivethai'] = 0x0E55;\n\t t['fl'] = 0xFB02;\n\t t['florin'] = 0x0192;\n\t t['fmonospace'] = 0xFF46;\n\t t['fmsquare'] = 0x3399;\n\t t['fofanthai'] = 0x0E1F;\n\t t['fofathai'] = 0x0E1D;\n\t t['fongmanthai'] = 0x0E4F;\n\t t['forall'] = 0x2200;\n\t t['four'] = 0x0034;\n\t t['fourarabic'] = 0x0664;\n\t t['fourbengali'] = 0x09EA;\n\t t['fourcircle'] = 0x2463;\n\t t['fourcircleinversesansserif'] = 0x278D;\n\t t['fourdeva'] = 0x096A;\n\t t['fourgujarati'] = 0x0AEA;\n\t t['fourgurmukhi'] = 0x0A6A;\n\t t['fourhackarabic'] = 0x0664;\n\t t['fourhangzhou'] = 0x3024;\n\t t['fourideographicparen'] = 0x3223;\n\t t['fourinferior'] = 0x2084;\n\t t['fourmonospace'] = 0xFF14;\n\t t['fournumeratorbengali'] = 0x09F7;\n\t t['fouroldstyle'] = 0xF734;\n\t t['fourparen'] = 0x2477;\n\t t['fourperiod'] = 0x248B;\n\t t['fourpersian'] = 0x06F4;\n\t t['fourroman'] = 0x2173;\n\t t['foursuperior'] = 0x2074;\n\t t['fourteencircle'] = 0x246D;\n\t t['fourteenparen'] = 0x2481;\n\t t['fourteenperiod'] = 0x2495;\n\t t['fourthai'] = 0x0E54;\n\t t['fourthtonechinese'] = 0x02CB;\n\t t['fparen'] = 0x24A1;\n\t t['fraction'] = 0x2044;\n\t t['franc'] = 0x20A3;\n\t t['g'] = 0x0067;\n\t t['gabengali'] = 0x0997;\n\t t['gacute'] = 0x01F5;\n\t t['gadeva'] = 0x0917;\n\t t['gafarabic'] = 0x06AF;\n\t t['gaffinalarabic'] = 0xFB93;\n\t t['gafinitialarabic'] = 0xFB94;\n\t t['gafmedialarabic'] = 0xFB95;\n\t t['gagujarati'] = 0x0A97;\n\t t['gagurmukhi'] = 0x0A17;\n\t t['gahiragana'] = 0x304C;\n\t t['gakatakana'] = 0x30AC;\n\t t['gamma'] = 0x03B3;\n\t t['gammalatinsmall'] = 0x0263;\n\t t['gammasuperior'] = 0x02E0;\n\t t['gangiacoptic'] = 0x03EB;\n\t t['gbopomofo'] = 0x310D;\n\t t['gbreve'] = 0x011F;\n\t t['gcaron'] = 0x01E7;\n\t t['gcedilla'] = 0x0123;\n\t t['gcircle'] = 0x24D6;\n\t t['gcircumflex'] = 0x011D;\n\t t['gcommaaccent'] = 0x0123;\n\t t['gdot'] = 0x0121;\n\t t['gdotaccent'] = 0x0121;\n\t t['gecyrillic'] = 0x0433;\n\t t['gehiragana'] = 0x3052;\n\t t['gekatakana'] = 0x30B2;\n\t t['geometricallyequal'] = 0x2251;\n\t t['gereshaccenthebrew'] = 0x059C;\n\t t['gereshhebrew'] = 0x05F3;\n\t t['gereshmuqdamhebrew'] = 0x059D;\n\t t['germandbls'] = 0x00DF;\n\t t['gershayimaccenthebrew'] = 0x059E;\n\t t['gershayimhebrew'] = 0x05F4;\n\t t['getamark'] = 0x3013;\n\t t['ghabengali'] = 0x0998;\n\t t['ghadarmenian'] = 0x0572;\n\t t['ghadeva'] = 0x0918;\n\t t['ghagujarati'] = 0x0A98;\n\t t['ghagurmukhi'] = 0x0A18;\n\t t['ghainarabic'] = 0x063A;\n\t t['ghainfinalarabic'] = 0xFECE;\n\t t['ghaininitialarabic'] = 0xFECF;\n\t t['ghainmedialarabic'] = 0xFED0;\n\t t['ghemiddlehookcyrillic'] = 0x0495;\n\t t['ghestrokecyrillic'] = 0x0493;\n\t t['gheupturncyrillic'] = 0x0491;\n\t t['ghhadeva'] = 0x095A;\n\t t['ghhagurmukhi'] = 0x0A5A;\n\t t['ghook'] = 0x0260;\n\t t['ghzsquare'] = 0x3393;\n\t t['gihiragana'] = 0x304E;\n\t t['gikatakana'] = 0x30AE;\n\t t['gimarmenian'] = 0x0563;\n\t t['gimel'] = 0x05D2;\n\t t['gimeldagesh'] = 0xFB32;\n\t t['gimeldageshhebrew'] = 0xFB32;\n\t t['gimelhebrew'] = 0x05D2;\n\t t['gjecyrillic'] = 0x0453;\n\t t['glottalinvertedstroke'] = 0x01BE;\n\t t['glottalstop'] = 0x0294;\n\t t['glottalstopinverted'] = 0x0296;\n\t t['glottalstopmod'] = 0x02C0;\n\t t['glottalstopreversed'] = 0x0295;\n\t t['glottalstopreversedmod'] = 0x02C1;\n\t t['glottalstopreversedsuperior'] = 0x02E4;\n\t t['glottalstopstroke'] = 0x02A1;\n\t t['glottalstopstrokereversed'] = 0x02A2;\n\t t['gmacron'] = 0x1E21;\n\t t['gmonospace'] = 0xFF47;\n\t t['gohiragana'] = 0x3054;\n\t t['gokatakana'] = 0x30B4;\n\t t['gparen'] = 0x24A2;\n\t t['gpasquare'] = 0x33AC;\n\t t['gradient'] = 0x2207;\n\t t['grave'] = 0x0060;\n\t t['gravebelowcmb'] = 0x0316;\n\t t['gravecmb'] = 0x0300;\n\t t['gravecomb'] = 0x0300;\n\t t['gravedeva'] = 0x0953;\n\t t['gravelowmod'] = 0x02CE;\n\t t['gravemonospace'] = 0xFF40;\n\t t['gravetonecmb'] = 0x0340;\n\t t['greater'] = 0x003E;\n\t t['greaterequal'] = 0x2265;\n\t t['greaterequalorless'] = 0x22DB;\n\t t['greatermonospace'] = 0xFF1E;\n\t t['greaterorequivalent'] = 0x2273;\n\t t['greaterorless'] = 0x2277;\n\t t['greateroverequal'] = 0x2267;\n\t t['greatersmall'] = 0xFE65;\n\t t['gscript'] = 0x0261;\n\t t['gstroke'] = 0x01E5;\n\t t['guhiragana'] = 0x3050;\n\t t['guillemotleft'] = 0x00AB;\n\t t['guillemotright'] = 0x00BB;\n\t t['guilsinglleft'] = 0x2039;\n\t t['guilsinglright'] = 0x203A;\n\t t['gukatakana'] = 0x30B0;\n\t t['guramusquare'] = 0x3318;\n\t t['gysquare'] = 0x33C9;\n\t t['h'] = 0x0068;\n\t t['haabkhasiancyrillic'] = 0x04A9;\n\t t['haaltonearabic'] = 0x06C1;\n\t t['habengali'] = 0x09B9;\n\t t['hadescendercyrillic'] = 0x04B3;\n\t t['hadeva'] = 0x0939;\n\t t['hagujarati'] = 0x0AB9;\n\t t['hagurmukhi'] = 0x0A39;\n\t t['haharabic'] = 0x062D;\n\t t['hahfinalarabic'] = 0xFEA2;\n\t t['hahinitialarabic'] = 0xFEA3;\n\t t['hahiragana'] = 0x306F;\n\t t['hahmedialarabic'] = 0xFEA4;\n\t t['haitusquare'] = 0x332A;\n\t t['hakatakana'] = 0x30CF;\n\t t['hakatakanahalfwidth'] = 0xFF8A;\n\t t['halantgurmukhi'] = 0x0A4D;\n\t t['hamzaarabic'] = 0x0621;\n\t t['hamzalowarabic'] = 0x0621;\n\t t['hangulfiller'] = 0x3164;\n\t t['hardsigncyrillic'] = 0x044A;\n\t t['harpoonleftbarbup'] = 0x21BC;\n\t t['harpoonrightbarbup'] = 0x21C0;\n\t t['hasquare'] = 0x33CA;\n\t t['hatafpatah'] = 0x05B2;\n\t t['hatafpatah16'] = 0x05B2;\n\t t['hatafpatah23'] = 0x05B2;\n\t t['hatafpatah2f'] = 0x05B2;\n\t t['hatafpatahhebrew'] = 0x05B2;\n\t t['hatafpatahnarrowhebrew'] = 0x05B2;\n\t t['hatafpatahquarterhebrew'] = 0x05B2;\n\t t['hatafpatahwidehebrew'] = 0x05B2;\n\t t['hatafqamats'] = 0x05B3;\n\t t['hatafqamats1b'] = 0x05B3;\n\t t['hatafqamats28'] = 0x05B3;\n\t t['hatafqamats34'] = 0x05B3;\n\t t['hatafqamatshebrew'] = 0x05B3;\n\t t['hatafqamatsnarrowhebrew'] = 0x05B3;\n\t t['hatafqamatsquarterhebrew'] = 0x05B3;\n\t t['hatafqamatswidehebrew'] = 0x05B3;\n\t t['hatafsegol'] = 0x05B1;\n\t t['hatafsegol17'] = 0x05B1;\n\t t['hatafsegol24'] = 0x05B1;\n\t t['hatafsegol30'] = 0x05B1;\n\t t['hatafsegolhebrew'] = 0x05B1;\n\t t['hatafsegolnarrowhebrew'] = 0x05B1;\n\t t['hatafsegolquarterhebrew'] = 0x05B1;\n\t t['hatafsegolwidehebrew'] = 0x05B1;\n\t t['hbar'] = 0x0127;\n\t t['hbopomofo'] = 0x310F;\n\t t['hbrevebelow'] = 0x1E2B;\n\t t['hcedilla'] = 0x1E29;\n\t t['hcircle'] = 0x24D7;\n\t t['hcircumflex'] = 0x0125;\n\t t['hdieresis'] = 0x1E27;\n\t t['hdotaccent'] = 0x1E23;\n\t t['hdotbelow'] = 0x1E25;\n\t t['he'] = 0x05D4;\n\t t['heart'] = 0x2665;\n\t t['heartsuitblack'] = 0x2665;\n\t t['heartsuitwhite'] = 0x2661;\n\t t['hedagesh'] = 0xFB34;\n\t t['hedageshhebrew'] = 0xFB34;\n\t t['hehaltonearabic'] = 0x06C1;\n\t t['heharabic'] = 0x0647;\n\t t['hehebrew'] = 0x05D4;\n\t t['hehfinalaltonearabic'] = 0xFBA7;\n\t t['hehfinalalttwoarabic'] = 0xFEEA;\n\t t['hehfinalarabic'] = 0xFEEA;\n\t t['hehhamzaabovefinalarabic'] = 0xFBA5;\n\t t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n\t t['hehinitialaltonearabic'] = 0xFBA8;\n\t t['hehinitialarabic'] = 0xFEEB;\n\t t['hehiragana'] = 0x3078;\n\t t['hehmedialaltonearabic'] = 0xFBA9;\n\t t['hehmedialarabic'] = 0xFEEC;\n\t t['heiseierasquare'] = 0x337B;\n\t t['hekatakana'] = 0x30D8;\n\t t['hekatakanahalfwidth'] = 0xFF8D;\n\t t['hekutaarusquare'] = 0x3336;\n\t t['henghook'] = 0x0267;\n\t t['herutusquare'] = 0x3339;\n\t t['het'] = 0x05D7;\n\t t['hethebrew'] = 0x05D7;\n\t t['hhook'] = 0x0266;\n\t t['hhooksuperior'] = 0x02B1;\n\t t['hieuhacirclekorean'] = 0x327B;\n\t t['hieuhaparenkorean'] = 0x321B;\n\t t['hieuhcirclekorean'] = 0x326D;\n\t t['hieuhkorean'] = 0x314E;\n\t t['hieuhparenkorean'] = 0x320D;\n\t t['hihiragana'] = 0x3072;\n\t t['hikatakana'] = 0x30D2;\n\t t['hikatakanahalfwidth'] = 0xFF8B;\n\t t['hiriq'] = 0x05B4;\n\t t['hiriq14'] = 0x05B4;\n\t t['hiriq21'] = 0x05B4;\n\t t['hiriq2d'] = 0x05B4;\n\t t['hiriqhebrew'] = 0x05B4;\n\t t['hiriqnarrowhebrew'] = 0x05B4;\n\t t['hiriqquarterhebrew'] = 0x05B4;\n\t t['hiriqwidehebrew'] = 0x05B4;\n\t t['hlinebelow'] = 0x1E96;\n\t t['hmonospace'] = 0xFF48;\n\t t['hoarmenian'] = 0x0570;\n\t t['hohipthai'] = 0x0E2B;\n\t t['hohiragana'] = 0x307B;\n\t t['hokatakana'] = 0x30DB;\n\t t['hokatakanahalfwidth'] = 0xFF8E;\n\t t['holam'] = 0x05B9;\n\t t['holam19'] = 0x05B9;\n\t t['holam26'] = 0x05B9;\n\t t['holam32'] = 0x05B9;\n\t t['holamhebrew'] = 0x05B9;\n\t t['holamnarrowhebrew'] = 0x05B9;\n\t t['holamquarterhebrew'] = 0x05B9;\n\t t['holamwidehebrew'] = 0x05B9;\n\t t['honokhukthai'] = 0x0E2E;\n\t t['hookabovecomb'] = 0x0309;\n\t t['hookcmb'] = 0x0309;\n\t t['hookpalatalizedbelowcmb'] = 0x0321;\n\t t['hookretroflexbelowcmb'] = 0x0322;\n\t t['hoonsquare'] = 0x3342;\n\t t['horicoptic'] = 0x03E9;\n\t t['horizontalbar'] = 0x2015;\n\t t['horncmb'] = 0x031B;\n\t t['hotsprings'] = 0x2668;\n\t t['house'] = 0x2302;\n\t t['hparen'] = 0x24A3;\n\t t['hsuperior'] = 0x02B0;\n\t t['hturned'] = 0x0265;\n\t t['huhiragana'] = 0x3075;\n\t t['huiitosquare'] = 0x3333;\n\t t['hukatakana'] = 0x30D5;\n\t t['hukatakanahalfwidth'] = 0xFF8C;\n\t t['hungarumlaut'] = 0x02DD;\n\t t['hungarumlautcmb'] = 0x030B;\n\t t['hv'] = 0x0195;\n\t t['hyphen'] = 0x002D;\n\t t['hypheninferior'] = 0xF6E5;\n\t t['hyphenmonospace'] = 0xFF0D;\n\t t['hyphensmall'] = 0xFE63;\n\t t['hyphensuperior'] = 0xF6E6;\n\t t['hyphentwo'] = 0x2010;\n\t t['i'] = 0x0069;\n\t t['iacute'] = 0x00ED;\n\t t['iacyrillic'] = 0x044F;\n\t t['ibengali'] = 0x0987;\n\t t['ibopomofo'] = 0x3127;\n\t t['ibreve'] = 0x012D;\n\t t['icaron'] = 0x01D0;\n\t t['icircle'] = 0x24D8;\n\t t['icircumflex'] = 0x00EE;\n\t t['icyrillic'] = 0x0456;\n\t t['idblgrave'] = 0x0209;\n\t t['ideographearthcircle'] = 0x328F;\n\t t['ideographfirecircle'] = 0x328B;\n\t t['ideographicallianceparen'] = 0x323F;\n\t t['ideographiccallparen'] = 0x323A;\n\t t['ideographiccentrecircle'] = 0x32A5;\n\t t['ideographicclose'] = 0x3006;\n\t t['ideographiccomma'] = 0x3001;\n\t t['ideographiccommaleft'] = 0xFF64;\n\t t['ideographiccongratulationparen'] = 0x3237;\n\t t['ideographiccorrectcircle'] = 0x32A3;\n\t t['ideographicearthparen'] = 0x322F;\n\t t['ideographicenterpriseparen'] = 0x323D;\n\t t['ideographicexcellentcircle'] = 0x329D;\n\t t['ideographicfestivalparen'] = 0x3240;\n\t t['ideographicfinancialcircle'] = 0x3296;\n\t t['ideographicfinancialparen'] = 0x3236;\n\t t['ideographicfireparen'] = 0x322B;\n\t t['ideographichaveparen'] = 0x3232;\n\t t['ideographichighcircle'] = 0x32A4;\n\t t['ideographiciterationmark'] = 0x3005;\n\t t['ideographiclaborcircle'] = 0x3298;\n\t t['ideographiclaborparen'] = 0x3238;\n\t t['ideographicleftcircle'] = 0x32A7;\n\t t['ideographiclowcircle'] = 0x32A6;\n\t t['ideographicmedicinecircle'] = 0x32A9;\n\t t['ideographicmetalparen'] = 0x322E;\n\t t['ideographicmoonparen'] = 0x322A;\n\t t['ideographicnameparen'] = 0x3234;\n\t t['ideographicperiod'] = 0x3002;\n\t t['ideographicprintcircle'] = 0x329E;\n\t t['ideographicreachparen'] = 0x3243;\n\t t['ideographicrepresentparen'] = 0x3239;\n\t t['ideographicresourceparen'] = 0x323E;\n\t t['ideographicrightcircle'] = 0x32A8;\n\t t['ideographicsecretcircle'] = 0x3299;\n\t t['ideographicselfparen'] = 0x3242;\n\t t['ideographicsocietyparen'] = 0x3233;\n\t t['ideographicspace'] = 0x3000;\n\t t['ideographicspecialparen'] = 0x3235;\n\t t['ideographicstockparen'] = 0x3231;\n\t t['ideographicstudyparen'] = 0x323B;\n\t t['ideographicsunparen'] = 0x3230;\n\t t['ideographicsuperviseparen'] = 0x323C;\n\t t['ideographicwaterparen'] = 0x322C;\n\t t['ideographicwoodparen'] = 0x322D;\n\t t['ideographiczero'] = 0x3007;\n\t t['ideographmetalcircle'] = 0x328E;\n\t t['ideographmooncircle'] = 0x328A;\n\t t['ideographnamecircle'] = 0x3294;\n\t t['ideographsuncircle'] = 0x3290;\n\t t['ideographwatercircle'] = 0x328C;\n\t t['ideographwoodcircle'] = 0x328D;\n\t t['ideva'] = 0x0907;\n\t t['idieresis'] = 0x00EF;\n\t t['idieresisacute'] = 0x1E2F;\n\t t['idieresiscyrillic'] = 0x04E5;\n\t t['idotbelow'] = 0x1ECB;\n\t t['iebrevecyrillic'] = 0x04D7;\n\t t['iecyrillic'] = 0x0435;\n\t t['ieungacirclekorean'] = 0x3275;\n\t t['ieungaparenkorean'] = 0x3215;\n\t t['ieungcirclekorean'] = 0x3267;\n\t t['ieungkorean'] = 0x3147;\n\t t['ieungparenkorean'] = 0x3207;\n\t t['igrave'] = 0x00EC;\n\t t['igujarati'] = 0x0A87;\n\t t['igurmukhi'] = 0x0A07;\n\t t['ihiragana'] = 0x3044;\n\t t['ihookabove'] = 0x1EC9;\n\t t['iibengali'] = 0x0988;\n\t t['iicyrillic'] = 0x0438;\n\t t['iideva'] = 0x0908;\n\t t['iigujarati'] = 0x0A88;\n\t t['iigurmukhi'] = 0x0A08;\n\t t['iimatragurmukhi'] = 0x0A40;\n\t t['iinvertedbreve'] = 0x020B;\n\t t['iishortcyrillic'] = 0x0439;\n\t t['iivowelsignbengali'] = 0x09C0;\n\t t['iivowelsigndeva'] = 0x0940;\n\t t['iivowelsigngujarati'] = 0x0AC0;\n\t t['ij'] = 0x0133;\n\t t['ikatakana'] = 0x30A4;\n\t t['ikatakanahalfwidth'] = 0xFF72;\n\t t['ikorean'] = 0x3163;\n\t t['ilde'] = 0x02DC;\n\t t['iluyhebrew'] = 0x05AC;\n\t t['imacron'] = 0x012B;\n\t t['imacroncyrillic'] = 0x04E3;\n\t t['imageorapproximatelyequal'] = 0x2253;\n\t t['imatragurmukhi'] = 0x0A3F;\n\t t['imonospace'] = 0xFF49;\n\t t['increment'] = 0x2206;\n\t t['infinity'] = 0x221E;\n\t t['iniarmenian'] = 0x056B;\n\t t['integral'] = 0x222B;\n\t t['integralbottom'] = 0x2321;\n\t t['integralbt'] = 0x2321;\n\t t['integralex'] = 0xF8F5;\n\t t['integraltop'] = 0x2320;\n\t t['integraltp'] = 0x2320;\n\t t['intersection'] = 0x2229;\n\t t['intisquare'] = 0x3305;\n\t t['invbullet'] = 0x25D8;\n\t t['invcircle'] = 0x25D9;\n\t t['invsmileface'] = 0x263B;\n\t t['iocyrillic'] = 0x0451;\n\t t['iogonek'] = 0x012F;\n\t t['iota'] = 0x03B9;\n\t t['iotadieresis'] = 0x03CA;\n\t t['iotadieresistonos'] = 0x0390;\n\t t['iotalatin'] = 0x0269;\n\t t['iotatonos'] = 0x03AF;\n\t t['iparen'] = 0x24A4;\n\t t['irigurmukhi'] = 0x0A72;\n\t t['ismallhiragana'] = 0x3043;\n\t t['ismallkatakana'] = 0x30A3;\n\t t['ismallkatakanahalfwidth'] = 0xFF68;\n\t t['issharbengali'] = 0x09FA;\n\t t['istroke'] = 0x0268;\n\t t['isuperior'] = 0xF6ED;\n\t t['iterationhiragana'] = 0x309D;\n\t t['iterationkatakana'] = 0x30FD;\n\t t['itilde'] = 0x0129;\n\t t['itildebelow'] = 0x1E2D;\n\t t['iubopomofo'] = 0x3129;\n\t t['iucyrillic'] = 0x044E;\n\t t['ivowelsignbengali'] = 0x09BF;\n\t t['ivowelsigndeva'] = 0x093F;\n\t t['ivowelsigngujarati'] = 0x0ABF;\n\t t['izhitsacyrillic'] = 0x0475;\n\t t['izhitsadblgravecyrillic'] = 0x0477;\n\t t['j'] = 0x006A;\n\t t['jaarmenian'] = 0x0571;\n\t t['jabengali'] = 0x099C;\n\t t['jadeva'] = 0x091C;\n\t t['jagujarati'] = 0x0A9C;\n\t t['jagurmukhi'] = 0x0A1C;\n\t t['jbopomofo'] = 0x3110;\n\t t['jcaron'] = 0x01F0;\n\t t['jcircle'] = 0x24D9;\n\t t['jcircumflex'] = 0x0135;\n\t t['jcrossedtail'] = 0x029D;\n\t t['jdotlessstroke'] = 0x025F;\n\t t['jecyrillic'] = 0x0458;\n\t t['jeemarabic'] = 0x062C;\n\t t['jeemfinalarabic'] = 0xFE9E;\n\t t['jeeminitialarabic'] = 0xFE9F;\n\t t['jeemmedialarabic'] = 0xFEA0;\n\t t['jeharabic'] = 0x0698;\n\t t['jehfinalarabic'] = 0xFB8B;\n\t t['jhabengali'] = 0x099D;\n\t t['jhadeva'] = 0x091D;\n\t t['jhagujarati'] = 0x0A9D;\n\t t['jhagurmukhi'] = 0x0A1D;\n\t t['jheharmenian'] = 0x057B;\n\t t['jis'] = 0x3004;\n\t t['jmonospace'] = 0xFF4A;\n\t t['jparen'] = 0x24A5;\n\t t['jsuperior'] = 0x02B2;\n\t t['k'] = 0x006B;\n\t t['kabashkircyrillic'] = 0x04A1;\n\t t['kabengali'] = 0x0995;\n\t t['kacute'] = 0x1E31;\n\t t['kacyrillic'] = 0x043A;\n\t t['kadescendercyrillic'] = 0x049B;\n\t t['kadeva'] = 0x0915;\n\t t['kaf'] = 0x05DB;\n\t t['kafarabic'] = 0x0643;\n\t t['kafdagesh'] = 0xFB3B;\n\t t['kafdageshhebrew'] = 0xFB3B;\n\t t['kaffinalarabic'] = 0xFEDA;\n\t t['kafhebrew'] = 0x05DB;\n\t t['kafinitialarabic'] = 0xFEDB;\n\t t['kafmedialarabic'] = 0xFEDC;\n\t t['kafrafehebrew'] = 0xFB4D;\n\t t['kagujarati'] = 0x0A95;\n\t t['kagurmukhi'] = 0x0A15;\n\t t['kahiragana'] = 0x304B;\n\t t['kahookcyrillic'] = 0x04C4;\n\t t['kakatakana'] = 0x30AB;\n\t t['kakatakanahalfwidth'] = 0xFF76;\n\t t['kappa'] = 0x03BA;\n\t t['kappasymbolgreek'] = 0x03F0;\n\t t['kapyeounmieumkorean'] = 0x3171;\n\t t['kapyeounphieuphkorean'] = 0x3184;\n\t t['kapyeounpieupkorean'] = 0x3178;\n\t t['kapyeounssangpieupkorean'] = 0x3179;\n\t t['karoriisquare'] = 0x330D;\n\t t['kashidaautoarabic'] = 0x0640;\n\t t['kashidaautonosidebearingarabic'] = 0x0640;\n\t t['kasmallkatakana'] = 0x30F5;\n\t t['kasquare'] = 0x3384;\n\t t['kasraarabic'] = 0x0650;\n\t t['kasratanarabic'] = 0x064D;\n\t t['kastrokecyrillic'] = 0x049F;\n\t t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n\t t['kaverticalstrokecyrillic'] = 0x049D;\n\t t['kbopomofo'] = 0x310E;\n\t t['kcalsquare'] = 0x3389;\n\t t['kcaron'] = 0x01E9;\n\t t['kcedilla'] = 0x0137;\n\t t['kcircle'] = 0x24DA;\n\t t['kcommaaccent'] = 0x0137;\n\t t['kdotbelow'] = 0x1E33;\n\t t['keharmenian'] = 0x0584;\n\t t['kehiragana'] = 0x3051;\n\t t['kekatakana'] = 0x30B1;\n\t t['kekatakanahalfwidth'] = 0xFF79;\n\t t['kenarmenian'] = 0x056F;\n\t t['kesmallkatakana'] = 0x30F6;\n\t t['kgreenlandic'] = 0x0138;\n\t t['khabengali'] = 0x0996;\n\t t['khacyrillic'] = 0x0445;\n\t t['khadeva'] = 0x0916;\n\t t['khagujarati'] = 0x0A96;\n\t t['khagurmukhi'] = 0x0A16;\n\t t['khaharabic'] = 0x062E;\n\t t['khahfinalarabic'] = 0xFEA6;\n\t t['khahinitialarabic'] = 0xFEA7;\n\t t['khahmedialarabic'] = 0xFEA8;\n\t t['kheicoptic'] = 0x03E7;\n\t t['khhadeva'] = 0x0959;\n\t t['khhagurmukhi'] = 0x0A59;\n\t t['khieukhacirclekorean'] = 0x3278;\n\t t['khieukhaparenkorean'] = 0x3218;\n\t t['khieukhcirclekorean'] = 0x326A;\n\t t['khieukhkorean'] = 0x314B;\n\t t['khieukhparenkorean'] = 0x320A;\n\t t['khokhaithai'] = 0x0E02;\n\t t['khokhonthai'] = 0x0E05;\n\t t['khokhuatthai'] = 0x0E03;\n\t t['khokhwaithai'] = 0x0E04;\n\t t['khomutthai'] = 0x0E5B;\n\t t['khook'] = 0x0199;\n\t t['khorakhangthai'] = 0x0E06;\n\t t['khzsquare'] = 0x3391;\n\t t['kihiragana'] = 0x304D;\n\t t['kikatakana'] = 0x30AD;\n\t t['kikatakanahalfwidth'] = 0xFF77;\n\t t['kiroguramusquare'] = 0x3315;\n\t t['kiromeetorusquare'] = 0x3316;\n\t t['kirosquare'] = 0x3314;\n\t t['kiyeokacirclekorean'] = 0x326E;\n\t t['kiyeokaparenkorean'] = 0x320E;\n\t t['kiyeokcirclekorean'] = 0x3260;\n\t t['kiyeokkorean'] = 0x3131;\n\t t['kiyeokparenkorean'] = 0x3200;\n\t t['kiyeoksioskorean'] = 0x3133;\n\t t['kjecyrillic'] = 0x045C;\n\t t['klinebelow'] = 0x1E35;\n\t t['klsquare'] = 0x3398;\n\t t['kmcubedsquare'] = 0x33A6;\n\t t['kmonospace'] = 0xFF4B;\n\t t['kmsquaredsquare'] = 0x33A2;\n\t t['kohiragana'] = 0x3053;\n\t t['kohmsquare'] = 0x33C0;\n\t t['kokaithai'] = 0x0E01;\n\t t['kokatakana'] = 0x30B3;\n\t t['kokatakanahalfwidth'] = 0xFF7A;\n\t t['kooposquare'] = 0x331E;\n\t t['koppacyrillic'] = 0x0481;\n\t t['koreanstandardsymbol'] = 0x327F;\n\t t['koroniscmb'] = 0x0343;\n\t t['kparen'] = 0x24A6;\n\t t['kpasquare'] = 0x33AA;\n\t t['ksicyrillic'] = 0x046F;\n\t t['ktsquare'] = 0x33CF;\n\t t['kturned'] = 0x029E;\n\t t['kuhiragana'] = 0x304F;\n\t t['kukatakana'] = 0x30AF;\n\t t['kukatakanahalfwidth'] = 0xFF78;\n\t t['kvsquare'] = 0x33B8;\n\t t['kwsquare'] = 0x33BE;\n\t t['l'] = 0x006C;\n\t t['labengali'] = 0x09B2;\n\t t['lacute'] = 0x013A;\n\t t['ladeva'] = 0x0932;\n\t t['lagujarati'] = 0x0AB2;\n\t t['lagurmukhi'] = 0x0A32;\n\t t['lakkhangyaothai'] = 0x0E45;\n\t t['lamaleffinalarabic'] = 0xFEFC;\n\t t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n\t t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n\t t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n\t t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n\t t['lamalefisolatedarabic'] = 0xFEFB;\n\t t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n\t t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n\t t['lamarabic'] = 0x0644;\n\t t['lambda'] = 0x03BB;\n\t t['lambdastroke'] = 0x019B;\n\t t['lamed'] = 0x05DC;\n\t t['lameddagesh'] = 0xFB3C;\n\t t['lameddageshhebrew'] = 0xFB3C;\n\t t['lamedhebrew'] = 0x05DC;\n\t t['lamfinalarabic'] = 0xFEDE;\n\t t['lamhahinitialarabic'] = 0xFCCA;\n\t t['laminitialarabic'] = 0xFEDF;\n\t t['lamjeeminitialarabic'] = 0xFCC9;\n\t t['lamkhahinitialarabic'] = 0xFCCB;\n\t t['lamlamhehisolatedarabic'] = 0xFDF2;\n\t t['lammedialarabic'] = 0xFEE0;\n\t t['lammeemhahinitialarabic'] = 0xFD88;\n\t t['lammeeminitialarabic'] = 0xFCCC;\n\t t['largecircle'] = 0x25EF;\n\t t['lbar'] = 0x019A;\n\t t['lbelt'] = 0x026C;\n\t t['lbopomofo'] = 0x310C;\n\t t['lcaron'] = 0x013E;\n\t t['lcedilla'] = 0x013C;\n\t t['lcircle'] = 0x24DB;\n\t t['lcircumflexbelow'] = 0x1E3D;\n\t t['lcommaaccent'] = 0x013C;\n\t t['ldot'] = 0x0140;\n\t t['ldotaccent'] = 0x0140;\n\t t['ldotbelow'] = 0x1E37;\n\t t['ldotbelowmacron'] = 0x1E39;\n\t t['leftangleabovecmb'] = 0x031A;\n\t t['lefttackbelowcmb'] = 0x0318;\n\t t['less'] = 0x003C;\n\t t['lessequal'] = 0x2264;\n\t t['lessequalorgreater'] = 0x22DA;\n\t t['lessmonospace'] = 0xFF1C;\n\t t['lessorequivalent'] = 0x2272;\n\t t['lessorgreater'] = 0x2276;\n\t t['lessoverequal'] = 0x2266;\n\t t['lesssmall'] = 0xFE64;\n\t t['lezh'] = 0x026E;\n\t t['lfblock'] = 0x258C;\n\t t['lhookretroflex'] = 0x026D;\n\t t['lira'] = 0x20A4;\n\t t['liwnarmenian'] = 0x056C;\n\t t['lj'] = 0x01C9;\n\t t['ljecyrillic'] = 0x0459;\n\t t['ll'] = 0xF6C0;\n\t t['lladeva'] = 0x0933;\n\t t['llagujarati'] = 0x0AB3;\n\t t['llinebelow'] = 0x1E3B;\n\t t['llladeva'] = 0x0934;\n\t t['llvocalicbengali'] = 0x09E1;\n\t t['llvocalicdeva'] = 0x0961;\n\t t['llvocalicvowelsignbengali'] = 0x09E3;\n\t t['llvocalicvowelsigndeva'] = 0x0963;\n\t t['lmiddletilde'] = 0x026B;\n\t t['lmonospace'] = 0xFF4C;\n\t t['lmsquare'] = 0x33D0;\n\t t['lochulathai'] = 0x0E2C;\n\t t['logicaland'] = 0x2227;\n\t t['logicalnot'] = 0x00AC;\n\t t['logicalnotreversed'] = 0x2310;\n\t t['logicalor'] = 0x2228;\n\t t['lolingthai'] = 0x0E25;\n\t t['longs'] = 0x017F;\n\t t['lowlinecenterline'] = 0xFE4E;\n\t t['lowlinecmb'] = 0x0332;\n\t t['lowlinedashed'] = 0xFE4D;\n\t t['lozenge'] = 0x25CA;\n\t t['lparen'] = 0x24A7;\n\t t['lslash'] = 0x0142;\n\t t['lsquare'] = 0x2113;\n\t t['lsuperior'] = 0xF6EE;\n\t t['ltshade'] = 0x2591;\n\t t['luthai'] = 0x0E26;\n\t t['lvocalicbengali'] = 0x098C;\n\t t['lvocalicdeva'] = 0x090C;\n\t t['lvocalicvowelsignbengali'] = 0x09E2;\n\t t['lvocalicvowelsigndeva'] = 0x0962;\n\t t['lxsquare'] = 0x33D3;\n\t t['m'] = 0x006D;\n\t t['mabengali'] = 0x09AE;\n\t t['macron'] = 0x00AF;\n\t t['macronbelowcmb'] = 0x0331;\n\t t['macroncmb'] = 0x0304;\n\t t['macronlowmod'] = 0x02CD;\n\t t['macronmonospace'] = 0xFFE3;\n\t t['macute'] = 0x1E3F;\n\t t['madeva'] = 0x092E;\n\t t['magujarati'] = 0x0AAE;\n\t t['magurmukhi'] = 0x0A2E;\n\t t['mahapakhhebrew'] = 0x05A4;\n\t t['mahapakhlefthebrew'] = 0x05A4;\n\t t['mahiragana'] = 0x307E;\n\t t['maichattawalowleftthai'] = 0xF895;\n\t t['maichattawalowrightthai'] = 0xF894;\n\t t['maichattawathai'] = 0x0E4B;\n\t t['maichattawaupperleftthai'] = 0xF893;\n\t t['maieklowleftthai'] = 0xF88C;\n\t t['maieklowrightthai'] = 0xF88B;\n\t t['maiekthai'] = 0x0E48;\n\t t['maiekupperleftthai'] = 0xF88A;\n\t t['maihanakatleftthai'] = 0xF884;\n\t t['maihanakatthai'] = 0x0E31;\n\t t['maitaikhuleftthai'] = 0xF889;\n\t t['maitaikhuthai'] = 0x0E47;\n\t t['maitholowleftthai'] = 0xF88F;\n\t t['maitholowrightthai'] = 0xF88E;\n\t t['maithothai'] = 0x0E49;\n\t t['maithoupperleftthai'] = 0xF88D;\n\t t['maitrilowleftthai'] = 0xF892;\n\t t['maitrilowrightthai'] = 0xF891;\n\t t['maitrithai'] = 0x0E4A;\n\t t['maitriupperleftthai'] = 0xF890;\n\t t['maiyamokthai'] = 0x0E46;\n\t t['makatakana'] = 0x30DE;\n\t t['makatakanahalfwidth'] = 0xFF8F;\n\t t['male'] = 0x2642;\n\t t['mansyonsquare'] = 0x3347;\n\t t['maqafhebrew'] = 0x05BE;\n\t t['mars'] = 0x2642;\n\t t['masoracirclehebrew'] = 0x05AF;\n\t t['masquare'] = 0x3383;\n\t t['mbopomofo'] = 0x3107;\n\t t['mbsquare'] = 0x33D4;\n\t t['mcircle'] = 0x24DC;\n\t t['mcubedsquare'] = 0x33A5;\n\t t['mdotaccent'] = 0x1E41;\n\t t['mdotbelow'] = 0x1E43;\n\t t['meemarabic'] = 0x0645;\n\t t['meemfinalarabic'] = 0xFEE2;\n\t t['meeminitialarabic'] = 0xFEE3;\n\t t['meemmedialarabic'] = 0xFEE4;\n\t t['meemmeeminitialarabic'] = 0xFCD1;\n\t t['meemmeemisolatedarabic'] = 0xFC48;\n\t t['meetorusquare'] = 0x334D;\n\t t['mehiragana'] = 0x3081;\n\t t['meizierasquare'] = 0x337E;\n\t t['mekatakana'] = 0x30E1;\n\t t['mekatakanahalfwidth'] = 0xFF92;\n\t t['mem'] = 0x05DE;\n\t t['memdagesh'] = 0xFB3E;\n\t t['memdageshhebrew'] = 0xFB3E;\n\t t['memhebrew'] = 0x05DE;\n\t t['menarmenian'] = 0x0574;\n\t t['merkhahebrew'] = 0x05A5;\n\t t['merkhakefulahebrew'] = 0x05A6;\n\t t['merkhakefulalefthebrew'] = 0x05A6;\n\t t['merkhalefthebrew'] = 0x05A5;\n\t t['mhook'] = 0x0271;\n\t t['mhzsquare'] = 0x3392;\n\t t['middledotkatakanahalfwidth'] = 0xFF65;\n\t t['middot'] = 0x00B7;\n\t t['mieumacirclekorean'] = 0x3272;\n\t t['mieumaparenkorean'] = 0x3212;\n\t t['mieumcirclekorean'] = 0x3264;\n\t t['mieumkorean'] = 0x3141;\n\t t['mieumpansioskorean'] = 0x3170;\n\t t['mieumparenkorean'] = 0x3204;\n\t t['mieumpieupkorean'] = 0x316E;\n\t t['mieumsioskorean'] = 0x316F;\n\t t['mihiragana'] = 0x307F;\n\t t['mikatakana'] = 0x30DF;\n\t t['mikatakanahalfwidth'] = 0xFF90;\n\t t['minus'] = 0x2212;\n\t t['minusbelowcmb'] = 0x0320;\n\t t['minuscircle'] = 0x2296;\n\t t['minusmod'] = 0x02D7;\n\t t['minusplus'] = 0x2213;\n\t t['minute'] = 0x2032;\n\t t['miribaarusquare'] = 0x334A;\n\t t['mirisquare'] = 0x3349;\n\t t['mlonglegturned'] = 0x0270;\n\t t['mlsquare'] = 0x3396;\n\t t['mmcubedsquare'] = 0x33A3;\n\t t['mmonospace'] = 0xFF4D;\n\t t['mmsquaredsquare'] = 0x339F;\n\t t['mohiragana'] = 0x3082;\n\t t['mohmsquare'] = 0x33C1;\n\t t['mokatakana'] = 0x30E2;\n\t t['mokatakanahalfwidth'] = 0xFF93;\n\t t['molsquare'] = 0x33D6;\n\t t['momathai'] = 0x0E21;\n\t t['moverssquare'] = 0x33A7;\n\t t['moverssquaredsquare'] = 0x33A8;\n\t t['mparen'] = 0x24A8;\n\t t['mpasquare'] = 0x33AB;\n\t t['mssquare'] = 0x33B3;\n\t t['msuperior'] = 0xF6EF;\n\t t['mturned'] = 0x026F;\n\t t['mu'] = 0x00B5;\n\t t['mu1'] = 0x00B5;\n\t t['muasquare'] = 0x3382;\n\t t['muchgreater'] = 0x226B;\n\t t['muchless'] = 0x226A;\n\t t['mufsquare'] = 0x338C;\n\t t['mugreek'] = 0x03BC;\n\t t['mugsquare'] = 0x338D;\n\t t['muhiragana'] = 0x3080;\n\t t['mukatakana'] = 0x30E0;\n\t t['mukatakanahalfwidth'] = 0xFF91;\n\t t['mulsquare'] = 0x3395;\n\t t['multiply'] = 0x00D7;\n\t t['mumsquare'] = 0x339B;\n\t t['munahhebrew'] = 0x05A3;\n\t t['munahlefthebrew'] = 0x05A3;\n\t t['musicalnote'] = 0x266A;\n\t t['musicalnotedbl'] = 0x266B;\n\t t['musicflatsign'] = 0x266D;\n\t t['musicsharpsign'] = 0x266F;\n\t t['mussquare'] = 0x33B2;\n\t t['muvsquare'] = 0x33B6;\n\t t['muwsquare'] = 0x33BC;\n\t t['mvmegasquare'] = 0x33B9;\n\t t['mvsquare'] = 0x33B7;\n\t t['mwmegasquare'] = 0x33BF;\n\t t['mwsquare'] = 0x33BD;\n\t t['n'] = 0x006E;\n\t t['nabengali'] = 0x09A8;\n\t t['nabla'] = 0x2207;\n\t t['nacute'] = 0x0144;\n\t t['nadeva'] = 0x0928;\n\t t['nagujarati'] = 0x0AA8;\n\t t['nagurmukhi'] = 0x0A28;\n\t t['nahiragana'] = 0x306A;\n\t t['nakatakana'] = 0x30CA;\n\t t['nakatakanahalfwidth'] = 0xFF85;\n\t t['napostrophe'] = 0x0149;\n\t t['nasquare'] = 0x3381;\n\t t['nbopomofo'] = 0x310B;\n\t t['nbspace'] = 0x00A0;\n\t t['ncaron'] = 0x0148;\n\t t['ncedilla'] = 0x0146;\n\t t['ncircle'] = 0x24DD;\n\t t['ncircumflexbelow'] = 0x1E4B;\n\t t['ncommaaccent'] = 0x0146;\n\t t['ndotaccent'] = 0x1E45;\n\t t['ndotbelow'] = 0x1E47;\n\t t['nehiragana'] = 0x306D;\n\t t['nekatakana'] = 0x30CD;\n\t t['nekatakanahalfwidth'] = 0xFF88;\n\t t['newsheqelsign'] = 0x20AA;\n\t t['nfsquare'] = 0x338B;\n\t t['ngabengali'] = 0x0999;\n\t t['ngadeva'] = 0x0919;\n\t t['ngagujarati'] = 0x0A99;\n\t t['ngagurmukhi'] = 0x0A19;\n\t t['ngonguthai'] = 0x0E07;\n\t t['nhiragana'] = 0x3093;\n\t t['nhookleft'] = 0x0272;\n\t t['nhookretroflex'] = 0x0273;\n\t t['nieunacirclekorean'] = 0x326F;\n\t t['nieunaparenkorean'] = 0x320F;\n\t t['nieuncieuckorean'] = 0x3135;\n\t t['nieuncirclekorean'] = 0x3261;\n\t t['nieunhieuhkorean'] = 0x3136;\n\t t['nieunkorean'] = 0x3134;\n\t t['nieunpansioskorean'] = 0x3168;\n\t t['nieunparenkorean'] = 0x3201;\n\t t['nieunsioskorean'] = 0x3167;\n\t t['nieuntikeutkorean'] = 0x3166;\n\t t['nihiragana'] = 0x306B;\n\t t['nikatakana'] = 0x30CB;\n\t t['nikatakanahalfwidth'] = 0xFF86;\n\t t['nikhahitleftthai'] = 0xF899;\n\t t['nikhahitthai'] = 0x0E4D;\n\t t['nine'] = 0x0039;\n\t t['ninearabic'] = 0x0669;\n\t t['ninebengali'] = 0x09EF;\n\t t['ninecircle'] = 0x2468;\n\t t['ninecircleinversesansserif'] = 0x2792;\n\t t['ninedeva'] = 0x096F;\n\t t['ninegujarati'] = 0x0AEF;\n\t t['ninegurmukhi'] = 0x0A6F;\n\t t['ninehackarabic'] = 0x0669;\n\t t['ninehangzhou'] = 0x3029;\n\t t['nineideographicparen'] = 0x3228;\n\t t['nineinferior'] = 0x2089;\n\t t['ninemonospace'] = 0xFF19;\n\t t['nineoldstyle'] = 0xF739;\n\t t['nineparen'] = 0x247C;\n\t t['nineperiod'] = 0x2490;\n\t t['ninepersian'] = 0x06F9;\n\t t['nineroman'] = 0x2178;\n\t t['ninesuperior'] = 0x2079;\n\t t['nineteencircle'] = 0x2472;\n\t t['nineteenparen'] = 0x2486;\n\t t['nineteenperiod'] = 0x249A;\n\t t['ninethai'] = 0x0E59;\n\t t['nj'] = 0x01CC;\n\t t['njecyrillic'] = 0x045A;\n\t t['nkatakana'] = 0x30F3;\n\t t['nkatakanahalfwidth'] = 0xFF9D;\n\t t['nlegrightlong'] = 0x019E;\n\t t['nlinebelow'] = 0x1E49;\n\t t['nmonospace'] = 0xFF4E;\n\t t['nmsquare'] = 0x339A;\n\t t['nnabengali'] = 0x09A3;\n\t t['nnadeva'] = 0x0923;\n\t t['nnagujarati'] = 0x0AA3;\n\t t['nnagurmukhi'] = 0x0A23;\n\t t['nnnadeva'] = 0x0929;\n\t t['nohiragana'] = 0x306E;\n\t t['nokatakana'] = 0x30CE;\n\t t['nokatakanahalfwidth'] = 0xFF89;\n\t t['nonbreakingspace'] = 0x00A0;\n\t t['nonenthai'] = 0x0E13;\n\t t['nonuthai'] = 0x0E19;\n\t t['noonarabic'] = 0x0646;\n\t t['noonfinalarabic'] = 0xFEE6;\n\t t['noonghunnaarabic'] = 0x06BA;\n\t t['noonghunnafinalarabic'] = 0xFB9F;\n\t t['nooninitialarabic'] = 0xFEE7;\n\t t['noonjeeminitialarabic'] = 0xFCD2;\n\t t['noonjeemisolatedarabic'] = 0xFC4B;\n\t t['noonmedialarabic'] = 0xFEE8;\n\t t['noonmeeminitialarabic'] = 0xFCD5;\n\t t['noonmeemisolatedarabic'] = 0xFC4E;\n\t t['noonnoonfinalarabic'] = 0xFC8D;\n\t t['notcontains'] = 0x220C;\n\t t['notelement'] = 0x2209;\n\t t['notelementof'] = 0x2209;\n\t t['notequal'] = 0x2260;\n\t t['notgreater'] = 0x226F;\n\t t['notgreaternorequal'] = 0x2271;\n\t t['notgreaternorless'] = 0x2279;\n\t t['notidentical'] = 0x2262;\n\t t['notless'] = 0x226E;\n\t t['notlessnorequal'] = 0x2270;\n\t t['notparallel'] = 0x2226;\n\t t['notprecedes'] = 0x2280;\n\t t['notsubset'] = 0x2284;\n\t t['notsucceeds'] = 0x2281;\n\t t['notsuperset'] = 0x2285;\n\t t['nowarmenian'] = 0x0576;\n\t t['nparen'] = 0x24A9;\n\t t['nssquare'] = 0x33B1;\n\t t['nsuperior'] = 0x207F;\n\t t['ntilde'] = 0x00F1;\n\t t['nu'] = 0x03BD;\n\t t['nuhiragana'] = 0x306C;\n\t t['nukatakana'] = 0x30CC;\n\t t['nukatakanahalfwidth'] = 0xFF87;\n\t t['nuktabengali'] = 0x09BC;\n\t t['nuktadeva'] = 0x093C;\n\t t['nuktagujarati'] = 0x0ABC;\n\t t['nuktagurmukhi'] = 0x0A3C;\n\t t['numbersign'] = 0x0023;\n\t t['numbersignmonospace'] = 0xFF03;\n\t t['numbersignsmall'] = 0xFE5F;\n\t t['numeralsigngreek'] = 0x0374;\n\t t['numeralsignlowergreek'] = 0x0375;\n\t t['numero'] = 0x2116;\n\t t['nun'] = 0x05E0;\n\t t['nundagesh'] = 0xFB40;\n\t t['nundageshhebrew'] = 0xFB40;\n\t t['nunhebrew'] = 0x05E0;\n\t t['nvsquare'] = 0x33B5;\n\t t['nwsquare'] = 0x33BB;\n\t t['nyabengali'] = 0x099E;\n\t t['nyadeva'] = 0x091E;\n\t t['nyagujarati'] = 0x0A9E;\n\t t['nyagurmukhi'] = 0x0A1E;\n\t t['o'] = 0x006F;\n\t t['oacute'] = 0x00F3;\n\t t['oangthai'] = 0x0E2D;\n\t t['obarred'] = 0x0275;\n\t t['obarredcyrillic'] = 0x04E9;\n\t t['obarreddieresiscyrillic'] = 0x04EB;\n\t t['obengali'] = 0x0993;\n\t t['obopomofo'] = 0x311B;\n\t t['obreve'] = 0x014F;\n\t t['ocandradeva'] = 0x0911;\n\t t['ocandragujarati'] = 0x0A91;\n\t t['ocandravowelsigndeva'] = 0x0949;\n\t t['ocandravowelsigngujarati'] = 0x0AC9;\n\t t['ocaron'] = 0x01D2;\n\t t['ocircle'] = 0x24DE;\n\t t['ocircumflex'] = 0x00F4;\n\t t['ocircumflexacute'] = 0x1ED1;\n\t t['ocircumflexdotbelow'] = 0x1ED9;\n\t t['ocircumflexgrave'] = 0x1ED3;\n\t t['ocircumflexhookabove'] = 0x1ED5;\n\t t['ocircumflextilde'] = 0x1ED7;\n\t t['ocyrillic'] = 0x043E;\n\t t['odblacute'] = 0x0151;\n\t t['odblgrave'] = 0x020D;\n\t t['odeva'] = 0x0913;\n\t t['odieresis'] = 0x00F6;\n\t t['odieresiscyrillic'] = 0x04E7;\n\t t['odotbelow'] = 0x1ECD;\n\t t['oe'] = 0x0153;\n\t t['oekorean'] = 0x315A;\n\t t['ogonek'] = 0x02DB;\n\t t['ogonekcmb'] = 0x0328;\n\t t['ograve'] = 0x00F2;\n\t t['ogujarati'] = 0x0A93;\n\t t['oharmenian'] = 0x0585;\n\t t['ohiragana'] = 0x304A;\n\t t['ohookabove'] = 0x1ECF;\n\t t['ohorn'] = 0x01A1;\n\t t['ohornacute'] = 0x1EDB;\n\t t['ohorndotbelow'] = 0x1EE3;\n\t t['ohorngrave'] = 0x1EDD;\n\t t['ohornhookabove'] = 0x1EDF;\n\t t['ohorntilde'] = 0x1EE1;\n\t t['ohungarumlaut'] = 0x0151;\n\t t['oi'] = 0x01A3;\n\t t['oinvertedbreve'] = 0x020F;\n\t t['okatakana'] = 0x30AA;\n\t t['okatakanahalfwidth'] = 0xFF75;\n\t t['okorean'] = 0x3157;\n\t t['olehebrew'] = 0x05AB;\n\t t['omacron'] = 0x014D;\n\t t['omacronacute'] = 0x1E53;\n\t t['omacrongrave'] = 0x1E51;\n\t t['omdeva'] = 0x0950;\n\t t['omega'] = 0x03C9;\n\t t['omega1'] = 0x03D6;\n\t t['omegacyrillic'] = 0x0461;\n\t t['omegalatinclosed'] = 0x0277;\n\t t['omegaroundcyrillic'] = 0x047B;\n\t t['omegatitlocyrillic'] = 0x047D;\n\t t['omegatonos'] = 0x03CE;\n\t t['omgujarati'] = 0x0AD0;\n\t t['omicron'] = 0x03BF;\n\t t['omicrontonos'] = 0x03CC;\n\t t['omonospace'] = 0xFF4F;\n\t t['one'] = 0x0031;\n\t t['onearabic'] = 0x0661;\n\t t['onebengali'] = 0x09E7;\n\t t['onecircle'] = 0x2460;\n\t t['onecircleinversesansserif'] = 0x278A;\n\t t['onedeva'] = 0x0967;\n\t t['onedotenleader'] = 0x2024;\n\t t['oneeighth'] = 0x215B;\n\t t['onefitted'] = 0xF6DC;\n\t t['onegujarati'] = 0x0AE7;\n\t t['onegurmukhi'] = 0x0A67;\n\t t['onehackarabic'] = 0x0661;\n\t t['onehalf'] = 0x00BD;\n\t t['onehangzhou'] = 0x3021;\n\t t['oneideographicparen'] = 0x3220;\n\t t['oneinferior'] = 0x2081;\n\t t['onemonospace'] = 0xFF11;\n\t t['onenumeratorbengali'] = 0x09F4;\n\t t['oneoldstyle'] = 0xF731;\n\t t['oneparen'] = 0x2474;\n\t t['oneperiod'] = 0x2488;\n\t t['onepersian'] = 0x06F1;\n\t t['onequarter'] = 0x00BC;\n\t t['oneroman'] = 0x2170;\n\t t['onesuperior'] = 0x00B9;\n\t t['onethai'] = 0x0E51;\n\t t['onethird'] = 0x2153;\n\t t['oogonek'] = 0x01EB;\n\t t['oogonekmacron'] = 0x01ED;\n\t t['oogurmukhi'] = 0x0A13;\n\t t['oomatragurmukhi'] = 0x0A4B;\n\t t['oopen'] = 0x0254;\n\t t['oparen'] = 0x24AA;\n\t t['openbullet'] = 0x25E6;\n\t t['option'] = 0x2325;\n\t t['ordfeminine'] = 0x00AA;\n\t t['ordmasculine'] = 0x00BA;\n\t t['orthogonal'] = 0x221F;\n\t t['oshortdeva'] = 0x0912;\n\t t['oshortvowelsigndeva'] = 0x094A;\n\t t['oslash'] = 0x00F8;\n\t t['oslashacute'] = 0x01FF;\n\t t['osmallhiragana'] = 0x3049;\n\t t['osmallkatakana'] = 0x30A9;\n\t t['osmallkatakanahalfwidth'] = 0xFF6B;\n\t t['ostrokeacute'] = 0x01FF;\n\t t['osuperior'] = 0xF6F0;\n\t t['otcyrillic'] = 0x047F;\n\t t['otilde'] = 0x00F5;\n\t t['otildeacute'] = 0x1E4D;\n\t t['otildedieresis'] = 0x1E4F;\n\t t['oubopomofo'] = 0x3121;\n\t t['overline'] = 0x203E;\n\t t['overlinecenterline'] = 0xFE4A;\n\t t['overlinecmb'] = 0x0305;\n\t t['overlinedashed'] = 0xFE49;\n\t t['overlinedblwavy'] = 0xFE4C;\n\t t['overlinewavy'] = 0xFE4B;\n\t t['overscore'] = 0x00AF;\n\t t['ovowelsignbengali'] = 0x09CB;\n\t t['ovowelsigndeva'] = 0x094B;\n\t t['ovowelsigngujarati'] = 0x0ACB;\n\t t['p'] = 0x0070;\n\t t['paampssquare'] = 0x3380;\n\t t['paasentosquare'] = 0x332B;\n\t t['pabengali'] = 0x09AA;\n\t t['pacute'] = 0x1E55;\n\t t['padeva'] = 0x092A;\n\t t['pagedown'] = 0x21DF;\n\t t['pageup'] = 0x21DE;\n\t t['pagujarati'] = 0x0AAA;\n\t t['pagurmukhi'] = 0x0A2A;\n\t t['pahiragana'] = 0x3071;\n\t t['paiyannoithai'] = 0x0E2F;\n\t t['pakatakana'] = 0x30D1;\n\t t['palatalizationcyrilliccmb'] = 0x0484;\n\t t['palochkacyrillic'] = 0x04C0;\n\t t['pansioskorean'] = 0x317F;\n\t t['paragraph'] = 0x00B6;\n\t t['parallel'] = 0x2225;\n\t t['parenleft'] = 0x0028;\n\t t['parenleftaltonearabic'] = 0xFD3E;\n\t t['parenleftbt'] = 0xF8ED;\n\t t['parenleftex'] = 0xF8EC;\n\t t['parenleftinferior'] = 0x208D;\n\t t['parenleftmonospace'] = 0xFF08;\n\t t['parenleftsmall'] = 0xFE59;\n\t t['parenleftsuperior'] = 0x207D;\n\t t['parenlefttp'] = 0xF8EB;\n\t t['parenleftvertical'] = 0xFE35;\n\t t['parenright'] = 0x0029;\n\t t['parenrightaltonearabic'] = 0xFD3F;\n\t t['parenrightbt'] = 0xF8F8;\n\t t['parenrightex'] = 0xF8F7;\n\t t['parenrightinferior'] = 0x208E;\n\t t['parenrightmonospace'] = 0xFF09;\n\t t['parenrightsmall'] = 0xFE5A;\n\t t['parenrightsuperior'] = 0x207E;\n\t t['parenrighttp'] = 0xF8F6;\n\t t['parenrightvertical'] = 0xFE36;\n\t t['partialdiff'] = 0x2202;\n\t t['paseqhebrew'] = 0x05C0;\n\t t['pashtahebrew'] = 0x0599;\n\t t['pasquare'] = 0x33A9;\n\t t['patah'] = 0x05B7;\n\t t['patah11'] = 0x05B7;\n\t t['patah1d'] = 0x05B7;\n\t t['patah2a'] = 0x05B7;\n\t t['patahhebrew'] = 0x05B7;\n\t t['patahnarrowhebrew'] = 0x05B7;\n\t t['patahquarterhebrew'] = 0x05B7;\n\t t['patahwidehebrew'] = 0x05B7;\n\t t['pazerhebrew'] = 0x05A1;\n\t t['pbopomofo'] = 0x3106;\n\t t['pcircle'] = 0x24DF;\n\t t['pdotaccent'] = 0x1E57;\n\t t['pe'] = 0x05E4;\n\t t['pecyrillic'] = 0x043F;\n\t t['pedagesh'] = 0xFB44;\n\t t['pedageshhebrew'] = 0xFB44;\n\t t['peezisquare'] = 0x333B;\n\t t['pefinaldageshhebrew'] = 0xFB43;\n\t t['peharabic'] = 0x067E;\n\t t['peharmenian'] = 0x057A;\n\t t['pehebrew'] = 0x05E4;\n\t t['pehfinalarabic'] = 0xFB57;\n\t t['pehinitialarabic'] = 0xFB58;\n\t t['pehiragana'] = 0x307A;\n\t t['pehmedialarabic'] = 0xFB59;\n\t t['pekatakana'] = 0x30DA;\n\t t['pemiddlehookcyrillic'] = 0x04A7;\n\t t['perafehebrew'] = 0xFB4E;\n\t t['percent'] = 0x0025;\n\t t['percentarabic'] = 0x066A;\n\t t['percentmonospace'] = 0xFF05;\n\t t['percentsmall'] = 0xFE6A;\n\t t['period'] = 0x002E;\n\t t['periodarmenian'] = 0x0589;\n\t t['periodcentered'] = 0x00B7;\n\t t['periodhalfwidth'] = 0xFF61;\n\t t['periodinferior'] = 0xF6E7;\n\t t['periodmonospace'] = 0xFF0E;\n\t t['periodsmall'] = 0xFE52;\n\t t['periodsuperior'] = 0xF6E8;\n\t t['perispomenigreekcmb'] = 0x0342;\n\t t['perpendicular'] = 0x22A5;\n\t t['perthousand'] = 0x2030;\n\t t['peseta'] = 0x20A7;\n\t t['pfsquare'] = 0x338A;\n\t t['phabengali'] = 0x09AB;\n\t t['phadeva'] = 0x092B;\n\t t['phagujarati'] = 0x0AAB;\n\t t['phagurmukhi'] = 0x0A2B;\n\t t['phi'] = 0x03C6;\n\t t['phi1'] = 0x03D5;\n\t t['phieuphacirclekorean'] = 0x327A;\n\t t['phieuphaparenkorean'] = 0x321A;\n\t t['phieuphcirclekorean'] = 0x326C;\n\t t['phieuphkorean'] = 0x314D;\n\t t['phieuphparenkorean'] = 0x320C;\n\t t['philatin'] = 0x0278;\n\t t['phinthuthai'] = 0x0E3A;\n\t t['phisymbolgreek'] = 0x03D5;\n\t t['phook'] = 0x01A5;\n\t t['phophanthai'] = 0x0E1E;\n\t t['phophungthai'] = 0x0E1C;\n\t t['phosamphaothai'] = 0x0E20;\n\t t['pi'] = 0x03C0;\n\t t['pieupacirclekorean'] = 0x3273;\n\t t['pieupaparenkorean'] = 0x3213;\n\t t['pieupcieuckorean'] = 0x3176;\n\t t['pieupcirclekorean'] = 0x3265;\n\t t['pieupkiyeokkorean'] = 0x3172;\n\t t['pieupkorean'] = 0x3142;\n\t t['pieupparenkorean'] = 0x3205;\n\t t['pieupsioskiyeokkorean'] = 0x3174;\n\t t['pieupsioskorean'] = 0x3144;\n\t t['pieupsiostikeutkorean'] = 0x3175;\n\t t['pieupthieuthkorean'] = 0x3177;\n\t t['pieuptikeutkorean'] = 0x3173;\n\t t['pihiragana'] = 0x3074;\n\t t['pikatakana'] = 0x30D4;\n\t t['pisymbolgreek'] = 0x03D6;\n\t t['piwrarmenian'] = 0x0583;\n\t t['plus'] = 0x002B;\n\t t['plusbelowcmb'] = 0x031F;\n\t t['pluscircle'] = 0x2295;\n\t t['plusminus'] = 0x00B1;\n\t t['plusmod'] = 0x02D6;\n\t t['plusmonospace'] = 0xFF0B;\n\t t['plussmall'] = 0xFE62;\n\t t['plussuperior'] = 0x207A;\n\t t['pmonospace'] = 0xFF50;\n\t t['pmsquare'] = 0x33D8;\n\t t['pohiragana'] = 0x307D;\n\t t['pointingindexdownwhite'] = 0x261F;\n\t t['pointingindexleftwhite'] = 0x261C;\n\t t['pointingindexrightwhite'] = 0x261E;\n\t t['pointingindexupwhite'] = 0x261D;\n\t t['pokatakana'] = 0x30DD;\n\t t['poplathai'] = 0x0E1B;\n\t t['postalmark'] = 0x3012;\n\t t['postalmarkface'] = 0x3020;\n\t t['pparen'] = 0x24AB;\n\t t['precedes'] = 0x227A;\n\t t['prescription'] = 0x211E;\n\t t['primemod'] = 0x02B9;\n\t t['primereversed'] = 0x2035;\n\t t['product'] = 0x220F;\n\t t['projective'] = 0x2305;\n\t t['prolongedkana'] = 0x30FC;\n\t t['propellor'] = 0x2318;\n\t t['propersubset'] = 0x2282;\n\t t['propersuperset'] = 0x2283;\n\t t['proportion'] = 0x2237;\n\t t['proportional'] = 0x221D;\n\t t['psi'] = 0x03C8;\n\t t['psicyrillic'] = 0x0471;\n\t t['psilipneumatacyrilliccmb'] = 0x0486;\n\t t['pssquare'] = 0x33B0;\n\t t['puhiragana'] = 0x3077;\n\t t['pukatakana'] = 0x30D7;\n\t t['pvsquare'] = 0x33B4;\n\t t['pwsquare'] = 0x33BA;\n\t t['q'] = 0x0071;\n\t t['qadeva'] = 0x0958;\n\t t['qadmahebrew'] = 0x05A8;\n\t t['qafarabic'] = 0x0642;\n\t t['qaffinalarabic'] = 0xFED6;\n\t t['qafinitialarabic'] = 0xFED7;\n\t t['qafmedialarabic'] = 0xFED8;\n\t t['qamats'] = 0x05B8;\n\t t['qamats10'] = 0x05B8;\n\t t['qamats1a'] = 0x05B8;\n\t t['qamats1c'] = 0x05B8;\n\t t['qamats27'] = 0x05B8;\n\t t['qamats29'] = 0x05B8;\n\t t['qamats33'] = 0x05B8;\n\t t['qamatsde'] = 0x05B8;\n\t t['qamatshebrew'] = 0x05B8;\n\t t['qamatsnarrowhebrew'] = 0x05B8;\n\t t['qamatsqatanhebrew'] = 0x05B8;\n\t t['qamatsqatannarrowhebrew'] = 0x05B8;\n\t t['qamatsqatanquarterhebrew'] = 0x05B8;\n\t t['qamatsqatanwidehebrew'] = 0x05B8;\n\t t['qamatsquarterhebrew'] = 0x05B8;\n\t t['qamatswidehebrew'] = 0x05B8;\n\t t['qarneyparahebrew'] = 0x059F;\n\t t['qbopomofo'] = 0x3111;\n\t t['qcircle'] = 0x24E0;\n\t t['qhook'] = 0x02A0;\n\t t['qmonospace'] = 0xFF51;\n\t t['qof'] = 0x05E7;\n\t t['qofdagesh'] = 0xFB47;\n\t t['qofdageshhebrew'] = 0xFB47;\n\t t['qofhebrew'] = 0x05E7;\n\t t['qparen'] = 0x24AC;\n\t t['quarternote'] = 0x2669;\n\t t['qubuts'] = 0x05BB;\n\t t['qubuts18'] = 0x05BB;\n\t t['qubuts25'] = 0x05BB;\n\t t['qubuts31'] = 0x05BB;\n\t t['qubutshebrew'] = 0x05BB;\n\t t['qubutsnarrowhebrew'] = 0x05BB;\n\t t['qubutsquarterhebrew'] = 0x05BB;\n\t t['qubutswidehebrew'] = 0x05BB;\n\t t['question'] = 0x003F;\n\t t['questionarabic'] = 0x061F;\n\t t['questionarmenian'] = 0x055E;\n\t t['questiondown'] = 0x00BF;\n\t t['questiondownsmall'] = 0xF7BF;\n\t t['questiongreek'] = 0x037E;\n\t t['questionmonospace'] = 0xFF1F;\n\t t['questionsmall'] = 0xF73F;\n\t t['quotedbl'] = 0x0022;\n\t t['quotedblbase'] = 0x201E;\n\t t['quotedblleft'] = 0x201C;\n\t t['quotedblmonospace'] = 0xFF02;\n\t t['quotedblprime'] = 0x301E;\n\t t['quotedblprimereversed'] = 0x301D;\n\t t['quotedblright'] = 0x201D;\n\t t['quoteleft'] = 0x2018;\n\t t['quoteleftreversed'] = 0x201B;\n\t t['quotereversed'] = 0x201B;\n\t t['quoteright'] = 0x2019;\n\t t['quoterightn'] = 0x0149;\n\t t['quotesinglbase'] = 0x201A;\n\t t['quotesingle'] = 0x0027;\n\t t['quotesinglemonospace'] = 0xFF07;\n\t t['r'] = 0x0072;\n\t t['raarmenian'] = 0x057C;\n\t t['rabengali'] = 0x09B0;\n\t t['racute'] = 0x0155;\n\t t['radeva'] = 0x0930;\n\t t['radical'] = 0x221A;\n\t t['radicalex'] = 0xF8E5;\n\t t['radoverssquare'] = 0x33AE;\n\t t['radoverssquaredsquare'] = 0x33AF;\n\t t['radsquare'] = 0x33AD;\n\t t['rafe'] = 0x05BF;\n\t t['rafehebrew'] = 0x05BF;\n\t t['ragujarati'] = 0x0AB0;\n\t t['ragurmukhi'] = 0x0A30;\n\t t['rahiragana'] = 0x3089;\n\t t['rakatakana'] = 0x30E9;\n\t t['rakatakanahalfwidth'] = 0xFF97;\n\t t['ralowerdiagonalbengali'] = 0x09F1;\n\t t['ramiddlediagonalbengali'] = 0x09F0;\n\t t['ramshorn'] = 0x0264;\n\t t['ratio'] = 0x2236;\n\t t['rbopomofo'] = 0x3116;\n\t t['rcaron'] = 0x0159;\n\t t['rcedilla'] = 0x0157;\n\t t['rcircle'] = 0x24E1;\n\t t['rcommaaccent'] = 0x0157;\n\t t['rdblgrave'] = 0x0211;\n\t t['rdotaccent'] = 0x1E59;\n\t t['rdotbelow'] = 0x1E5B;\n\t t['rdotbelowmacron'] = 0x1E5D;\n\t t['referencemark'] = 0x203B;\n\t t['reflexsubset'] = 0x2286;\n\t t['reflexsuperset'] = 0x2287;\n\t t['registered'] = 0x00AE;\n\t t['registersans'] = 0xF8E8;\n\t t['registerserif'] = 0xF6DA;\n\t t['reharabic'] = 0x0631;\n\t t['reharmenian'] = 0x0580;\n\t t['rehfinalarabic'] = 0xFEAE;\n\t t['rehiragana'] = 0x308C;\n\t t['rekatakana'] = 0x30EC;\n\t t['rekatakanahalfwidth'] = 0xFF9A;\n\t t['resh'] = 0x05E8;\n\t t['reshdageshhebrew'] = 0xFB48;\n\t t['reshhebrew'] = 0x05E8;\n\t t['reversedtilde'] = 0x223D;\n\t t['reviahebrew'] = 0x0597;\n\t t['reviamugrashhebrew'] = 0x0597;\n\t t['revlogicalnot'] = 0x2310;\n\t t['rfishhook'] = 0x027E;\n\t t['rfishhookreversed'] = 0x027F;\n\t t['rhabengali'] = 0x09DD;\n\t t['rhadeva'] = 0x095D;\n\t t['rho'] = 0x03C1;\n\t t['rhook'] = 0x027D;\n\t t['rhookturned'] = 0x027B;\n\t t['rhookturnedsuperior'] = 0x02B5;\n\t t['rhosymbolgreek'] = 0x03F1;\n\t t['rhotichookmod'] = 0x02DE;\n\t t['rieulacirclekorean'] = 0x3271;\n\t t['rieulaparenkorean'] = 0x3211;\n\t t['rieulcirclekorean'] = 0x3263;\n\t t['rieulhieuhkorean'] = 0x3140;\n\t t['rieulkiyeokkorean'] = 0x313A;\n\t t['rieulkiyeoksioskorean'] = 0x3169;\n\t t['rieulkorean'] = 0x3139;\n\t t['rieulmieumkorean'] = 0x313B;\n\t t['rieulpansioskorean'] = 0x316C;\n\t t['rieulparenkorean'] = 0x3203;\n\t t['rieulphieuphkorean'] = 0x313F;\n\t t['rieulpieupkorean'] = 0x313C;\n\t t['rieulpieupsioskorean'] = 0x316B;\n\t t['rieulsioskorean'] = 0x313D;\n\t t['rieulthieuthkorean'] = 0x313E;\n\t t['rieultikeutkorean'] = 0x316A;\n\t t['rieulyeorinhieuhkorean'] = 0x316D;\n\t t['rightangle'] = 0x221F;\n\t t['righttackbelowcmb'] = 0x0319;\n\t t['righttriangle'] = 0x22BF;\n\t t['rihiragana'] = 0x308A;\n\t t['rikatakana'] = 0x30EA;\n\t t['rikatakanahalfwidth'] = 0xFF98;\n\t t['ring'] = 0x02DA;\n\t t['ringbelowcmb'] = 0x0325;\n\t t['ringcmb'] = 0x030A;\n\t t['ringhalfleft'] = 0x02BF;\n\t t['ringhalfleftarmenian'] = 0x0559;\n\t t['ringhalfleftbelowcmb'] = 0x031C;\n\t t['ringhalfleftcentered'] = 0x02D3;\n\t t['ringhalfright'] = 0x02BE;\n\t t['ringhalfrightbelowcmb'] = 0x0339;\n\t t['ringhalfrightcentered'] = 0x02D2;\n\t t['rinvertedbreve'] = 0x0213;\n\t t['rittorusquare'] = 0x3351;\n\t t['rlinebelow'] = 0x1E5F;\n\t t['rlongleg'] = 0x027C;\n\t t['rlonglegturned'] = 0x027A;\n\t t['rmonospace'] = 0xFF52;\n\t t['rohiragana'] = 0x308D;\n\t t['rokatakana'] = 0x30ED;\n\t t['rokatakanahalfwidth'] = 0xFF9B;\n\t t['roruathai'] = 0x0E23;\n\t t['rparen'] = 0x24AD;\n\t t['rrabengali'] = 0x09DC;\n\t t['rradeva'] = 0x0931;\n\t t['rragurmukhi'] = 0x0A5C;\n\t t['rreharabic'] = 0x0691;\n\t t['rrehfinalarabic'] = 0xFB8D;\n\t t['rrvocalicbengali'] = 0x09E0;\n\t t['rrvocalicdeva'] = 0x0960;\n\t t['rrvocalicgujarati'] = 0x0AE0;\n\t t['rrvocalicvowelsignbengali'] = 0x09C4;\n\t t['rrvocalicvowelsigndeva'] = 0x0944;\n\t t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n\t t['rsuperior'] = 0xF6F1;\n\t t['rtblock'] = 0x2590;\n\t t['rturned'] = 0x0279;\n\t t['rturnedsuperior'] = 0x02B4;\n\t t['ruhiragana'] = 0x308B;\n\t t['rukatakana'] = 0x30EB;\n\t t['rukatakanahalfwidth'] = 0xFF99;\n\t t['rupeemarkbengali'] = 0x09F2;\n\t t['rupeesignbengali'] = 0x09F3;\n\t t['rupiah'] = 0xF6DD;\n\t t['ruthai'] = 0x0E24;\n\t t['rvocalicbengali'] = 0x098B;\n\t t['rvocalicdeva'] = 0x090B;\n\t t['rvocalicgujarati'] = 0x0A8B;\n\t t['rvocalicvowelsignbengali'] = 0x09C3;\n\t t['rvocalicvowelsigndeva'] = 0x0943;\n\t t['rvocalicvowelsigngujarati'] = 0x0AC3;\n\t t['s'] = 0x0073;\n\t t['sabengali'] = 0x09B8;\n\t t['sacute'] = 0x015B;\n\t t['sacutedotaccent'] = 0x1E65;\n\t t['sadarabic'] = 0x0635;\n\t t['sadeva'] = 0x0938;\n\t t['sadfinalarabic'] = 0xFEBA;\n\t t['sadinitialarabic'] = 0xFEBB;\n\t t['sadmedialarabic'] = 0xFEBC;\n\t t['sagujarati'] = 0x0AB8;\n\t t['sagurmukhi'] = 0x0A38;\n\t t['sahiragana'] = 0x3055;\n\t t['sakatakana'] = 0x30B5;\n\t t['sakatakanahalfwidth'] = 0xFF7B;\n\t t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n\t t['samekh'] = 0x05E1;\n\t t['samekhdagesh'] = 0xFB41;\n\t t['samekhdageshhebrew'] = 0xFB41;\n\t t['samekhhebrew'] = 0x05E1;\n\t t['saraaathai'] = 0x0E32;\n\t t['saraaethai'] = 0x0E41;\n\t t['saraaimaimalaithai'] = 0x0E44;\n\t t['saraaimaimuanthai'] = 0x0E43;\n\t t['saraamthai'] = 0x0E33;\n\t t['saraathai'] = 0x0E30;\n\t t['saraethai'] = 0x0E40;\n\t t['saraiileftthai'] = 0xF886;\n\t t['saraiithai'] = 0x0E35;\n\t t['saraileftthai'] = 0xF885;\n\t t['saraithai'] = 0x0E34;\n\t t['saraothai'] = 0x0E42;\n\t t['saraueeleftthai'] = 0xF888;\n\t t['saraueethai'] = 0x0E37;\n\t t['saraueleftthai'] = 0xF887;\n\t t['sarauethai'] = 0x0E36;\n\t t['sarauthai'] = 0x0E38;\n\t t['sarauuthai'] = 0x0E39;\n\t t['sbopomofo'] = 0x3119;\n\t t['scaron'] = 0x0161;\n\t t['scarondotaccent'] = 0x1E67;\n\t t['scedilla'] = 0x015F;\n\t t['schwa'] = 0x0259;\n\t t['schwacyrillic'] = 0x04D9;\n\t t['schwadieresiscyrillic'] = 0x04DB;\n\t t['schwahook'] = 0x025A;\n\t t['scircle'] = 0x24E2;\n\t t['scircumflex'] = 0x015D;\n\t t['scommaaccent'] = 0x0219;\n\t t['sdotaccent'] = 0x1E61;\n\t t['sdotbelow'] = 0x1E63;\n\t t['sdotbelowdotaccent'] = 0x1E69;\n\t t['seagullbelowcmb'] = 0x033C;\n\t t['second'] = 0x2033;\n\t t['secondtonechinese'] = 0x02CA;\n\t t['section'] = 0x00A7;\n\t t['seenarabic'] = 0x0633;\n\t t['seenfinalarabic'] = 0xFEB2;\n\t t['seeninitialarabic'] = 0xFEB3;\n\t t['seenmedialarabic'] = 0xFEB4;\n\t t['segol'] = 0x05B6;\n\t t['segol13'] = 0x05B6;\n\t t['segol1f'] = 0x05B6;\n\t t['segol2c'] = 0x05B6;\n\t t['segolhebrew'] = 0x05B6;\n\t t['segolnarrowhebrew'] = 0x05B6;\n\t t['segolquarterhebrew'] = 0x05B6;\n\t t['segoltahebrew'] = 0x0592;\n\t t['segolwidehebrew'] = 0x05B6;\n\t t['seharmenian'] = 0x057D;\n\t t['sehiragana'] = 0x305B;\n\t t['sekatakana'] = 0x30BB;\n\t t['sekatakanahalfwidth'] = 0xFF7E;\n\t t['semicolon'] = 0x003B;\n\t t['semicolonarabic'] = 0x061B;\n\t t['semicolonmonospace'] = 0xFF1B;\n\t t['semicolonsmall'] = 0xFE54;\n\t t['semivoicedmarkkana'] = 0x309C;\n\t t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n\t t['sentisquare'] = 0x3322;\n\t t['sentosquare'] = 0x3323;\n\t t['seven'] = 0x0037;\n\t t['sevenarabic'] = 0x0667;\n\t t['sevenbengali'] = 0x09ED;\n\t t['sevencircle'] = 0x2466;\n\t t['sevencircleinversesansserif'] = 0x2790;\n\t t['sevendeva'] = 0x096D;\n\t t['seveneighths'] = 0x215E;\n\t t['sevengujarati'] = 0x0AED;\n\t t['sevengurmukhi'] = 0x0A6D;\n\t t['sevenhackarabic'] = 0x0667;\n\t t['sevenhangzhou'] = 0x3027;\n\t t['sevenideographicparen'] = 0x3226;\n\t t['seveninferior'] = 0x2087;\n\t t['sevenmonospace'] = 0xFF17;\n\t t['sevenoldstyle'] = 0xF737;\n\t t['sevenparen'] = 0x247A;\n\t t['sevenperiod'] = 0x248E;\n\t t['sevenpersian'] = 0x06F7;\n\t t['sevenroman'] = 0x2176;\n\t t['sevensuperior'] = 0x2077;\n\t t['seventeencircle'] = 0x2470;\n\t t['seventeenparen'] = 0x2484;\n\t t['seventeenperiod'] = 0x2498;\n\t t['seventhai'] = 0x0E57;\n\t t['sfthyphen'] = 0x00AD;\n\t t['shaarmenian'] = 0x0577;\n\t t['shabengali'] = 0x09B6;\n\t t['shacyrillic'] = 0x0448;\n\t t['shaddaarabic'] = 0x0651;\n\t t['shaddadammaarabic'] = 0xFC61;\n\t t['shaddadammatanarabic'] = 0xFC5E;\n\t t['shaddafathaarabic'] = 0xFC60;\n\t t['shaddakasraarabic'] = 0xFC62;\n\t t['shaddakasratanarabic'] = 0xFC5F;\n\t t['shade'] = 0x2592;\n\t t['shadedark'] = 0x2593;\n\t t['shadelight'] = 0x2591;\n\t t['shademedium'] = 0x2592;\n\t t['shadeva'] = 0x0936;\n\t t['shagujarati'] = 0x0AB6;\n\t t['shagurmukhi'] = 0x0A36;\n\t t['shalshelethebrew'] = 0x0593;\n\t t['shbopomofo'] = 0x3115;\n\t t['shchacyrillic'] = 0x0449;\n\t t['sheenarabic'] = 0x0634;\n\t t['sheenfinalarabic'] = 0xFEB6;\n\t t['sheeninitialarabic'] = 0xFEB7;\n\t t['sheenmedialarabic'] = 0xFEB8;\n\t t['sheicoptic'] = 0x03E3;\n\t t['sheqel'] = 0x20AA;\n\t t['sheqelhebrew'] = 0x20AA;\n\t t['sheva'] = 0x05B0;\n\t t['sheva115'] = 0x05B0;\n\t t['sheva15'] = 0x05B0;\n\t t['sheva22'] = 0x05B0;\n\t t['sheva2e'] = 0x05B0;\n\t t['shevahebrew'] = 0x05B0;\n\t t['shevanarrowhebrew'] = 0x05B0;\n\t t['shevaquarterhebrew'] = 0x05B0;\n\t t['shevawidehebrew'] = 0x05B0;\n\t t['shhacyrillic'] = 0x04BB;\n\t t['shimacoptic'] = 0x03ED;\n\t t['shin'] = 0x05E9;\n\t t['shindagesh'] = 0xFB49;\n\t t['shindageshhebrew'] = 0xFB49;\n\t t['shindageshshindot'] = 0xFB2C;\n\t t['shindageshshindothebrew'] = 0xFB2C;\n\t t['shindageshsindot'] = 0xFB2D;\n\t t['shindageshsindothebrew'] = 0xFB2D;\n\t t['shindothebrew'] = 0x05C1;\n\t t['shinhebrew'] = 0x05E9;\n\t t['shinshindot'] = 0xFB2A;\n\t t['shinshindothebrew'] = 0xFB2A;\n\t t['shinsindot'] = 0xFB2B;\n\t t['shinsindothebrew'] = 0xFB2B;\n\t t['shook'] = 0x0282;\n\t t['sigma'] = 0x03C3;\n\t t['sigma1'] = 0x03C2;\n\t t['sigmafinal'] = 0x03C2;\n\t t['sigmalunatesymbolgreek'] = 0x03F2;\n\t t['sihiragana'] = 0x3057;\n\t t['sikatakana'] = 0x30B7;\n\t t['sikatakanahalfwidth'] = 0xFF7C;\n\t t['siluqhebrew'] = 0x05BD;\n\t t['siluqlefthebrew'] = 0x05BD;\n\t t['similar'] = 0x223C;\n\t t['sindothebrew'] = 0x05C2;\n\t t['siosacirclekorean'] = 0x3274;\n\t t['siosaparenkorean'] = 0x3214;\n\t t['sioscieuckorean'] = 0x317E;\n\t t['sioscirclekorean'] = 0x3266;\n\t t['sioskiyeokkorean'] = 0x317A;\n\t t['sioskorean'] = 0x3145;\n\t t['siosnieunkorean'] = 0x317B;\n\t t['siosparenkorean'] = 0x3206;\n\t t['siospieupkorean'] = 0x317D;\n\t t['siostikeutkorean'] = 0x317C;\n\t t['six'] = 0x0036;\n\t t['sixarabic'] = 0x0666;\n\t t['sixbengali'] = 0x09EC;\n\t t['sixcircle'] = 0x2465;\n\t t['sixcircleinversesansserif'] = 0x278F;\n\t t['sixdeva'] = 0x096C;\n\t t['sixgujarati'] = 0x0AEC;\n\t t['sixgurmukhi'] = 0x0A6C;\n\t t['sixhackarabic'] = 0x0666;\n\t t['sixhangzhou'] = 0x3026;\n\t t['sixideographicparen'] = 0x3225;\n\t t['sixinferior'] = 0x2086;\n\t t['sixmonospace'] = 0xFF16;\n\t t['sixoldstyle'] = 0xF736;\n\t t['sixparen'] = 0x2479;\n\t t['sixperiod'] = 0x248D;\n\t t['sixpersian'] = 0x06F6;\n\t t['sixroman'] = 0x2175;\n\t t['sixsuperior'] = 0x2076;\n\t t['sixteencircle'] = 0x246F;\n\t t['sixteencurrencydenominatorbengali'] = 0x09F9;\n\t t['sixteenparen'] = 0x2483;\n\t t['sixteenperiod'] = 0x2497;\n\t t['sixthai'] = 0x0E56;\n\t t['slash'] = 0x002F;\n\t t['slashmonospace'] = 0xFF0F;\n\t t['slong'] = 0x017F;\n\t t['slongdotaccent'] = 0x1E9B;\n\t t['smileface'] = 0x263A;\n\t t['smonospace'] = 0xFF53;\n\t t['sofpasuqhebrew'] = 0x05C3;\n\t t['softhyphen'] = 0x00AD;\n\t t['softsigncyrillic'] = 0x044C;\n\t t['sohiragana'] = 0x305D;\n\t t['sokatakana'] = 0x30BD;\n\t t['sokatakanahalfwidth'] = 0xFF7F;\n\t t['soliduslongoverlaycmb'] = 0x0338;\n\t t['solidusshortoverlaycmb'] = 0x0337;\n\t t['sorusithai'] = 0x0E29;\n\t t['sosalathai'] = 0x0E28;\n\t t['sosothai'] = 0x0E0B;\n\t t['sosuathai'] = 0x0E2A;\n\t t['space'] = 0x0020;\n\t t['spacehackarabic'] = 0x0020;\n\t t['spade'] = 0x2660;\n\t t['spadesuitblack'] = 0x2660;\n\t t['spadesuitwhite'] = 0x2664;\n\t t['sparen'] = 0x24AE;\n\t t['squarebelowcmb'] = 0x033B;\n\t t['squarecc'] = 0x33C4;\n\t t['squarecm'] = 0x339D;\n\t t['squarediagonalcrosshatchfill'] = 0x25A9;\n\t t['squarehorizontalfill'] = 0x25A4;\n\t t['squarekg'] = 0x338F;\n\t t['squarekm'] = 0x339E;\n\t t['squarekmcapital'] = 0x33CE;\n\t t['squareln'] = 0x33D1;\n\t t['squarelog'] = 0x33D2;\n\t t['squaremg'] = 0x338E;\n\t t['squaremil'] = 0x33D5;\n\t t['squaremm'] = 0x339C;\n\t t['squaremsquared'] = 0x33A1;\n\t t['squareorthogonalcrosshatchfill'] = 0x25A6;\n\t t['squareupperlefttolowerrightfill'] = 0x25A7;\n\t t['squareupperrighttolowerleftfill'] = 0x25A8;\n\t t['squareverticalfill'] = 0x25A5;\n\t t['squarewhitewithsmallblack'] = 0x25A3;\n\t t['srsquare'] = 0x33DB;\n\t t['ssabengali'] = 0x09B7;\n\t t['ssadeva'] = 0x0937;\n\t t['ssagujarati'] = 0x0AB7;\n\t t['ssangcieuckorean'] = 0x3149;\n\t t['ssanghieuhkorean'] = 0x3185;\n\t t['ssangieungkorean'] = 0x3180;\n\t t['ssangkiyeokkorean'] = 0x3132;\n\t t['ssangnieunkorean'] = 0x3165;\n\t t['ssangpieupkorean'] = 0x3143;\n\t t['ssangsioskorean'] = 0x3146;\n\t t['ssangtikeutkorean'] = 0x3138;\n\t t['ssuperior'] = 0xF6F2;\n\t t['sterling'] = 0x00A3;\n\t t['sterlingmonospace'] = 0xFFE1;\n\t t['strokelongoverlaycmb'] = 0x0336;\n\t t['strokeshortoverlaycmb'] = 0x0335;\n\t t['subset'] = 0x2282;\n\t t['subsetnotequal'] = 0x228A;\n\t t['subsetorequal'] = 0x2286;\n\t t['succeeds'] = 0x227B;\n\t t['suchthat'] = 0x220B;\n\t t['suhiragana'] = 0x3059;\n\t t['sukatakana'] = 0x30B9;\n\t t['sukatakanahalfwidth'] = 0xFF7D;\n\t t['sukunarabic'] = 0x0652;\n\t t['summation'] = 0x2211;\n\t t['sun'] = 0x263C;\n\t t['superset'] = 0x2283;\n\t t['supersetnotequal'] = 0x228B;\n\t t['supersetorequal'] = 0x2287;\n\t t['svsquare'] = 0x33DC;\n\t t['syouwaerasquare'] = 0x337C;\n\t t['t'] = 0x0074;\n\t t['tabengali'] = 0x09A4;\n\t t['tackdown'] = 0x22A4;\n\t t['tackleft'] = 0x22A3;\n\t t['tadeva'] = 0x0924;\n\t t['tagujarati'] = 0x0AA4;\n\t t['tagurmukhi'] = 0x0A24;\n\t t['taharabic'] = 0x0637;\n\t t['tahfinalarabic'] = 0xFEC2;\n\t t['tahinitialarabic'] = 0xFEC3;\n\t t['tahiragana'] = 0x305F;\n\t t['tahmedialarabic'] = 0xFEC4;\n\t t['taisyouerasquare'] = 0x337D;\n\t t['takatakana'] = 0x30BF;\n\t t['takatakanahalfwidth'] = 0xFF80;\n\t t['tatweelarabic'] = 0x0640;\n\t t['tau'] = 0x03C4;\n\t t['tav'] = 0x05EA;\n\t t['tavdages'] = 0xFB4A;\n\t t['tavdagesh'] = 0xFB4A;\n\t t['tavdageshhebrew'] = 0xFB4A;\n\t t['tavhebrew'] = 0x05EA;\n\t t['tbar'] = 0x0167;\n\t t['tbopomofo'] = 0x310A;\n\t t['tcaron'] = 0x0165;\n\t t['tccurl'] = 0x02A8;\n\t t['tcedilla'] = 0x0163;\n\t t['tcheharabic'] = 0x0686;\n\t t['tchehfinalarabic'] = 0xFB7B;\n\t t['tchehinitialarabic'] = 0xFB7C;\n\t t['tchehmedialarabic'] = 0xFB7D;\n\t t['tcircle'] = 0x24E3;\n\t t['tcircumflexbelow'] = 0x1E71;\n\t t['tcommaaccent'] = 0x0163;\n\t t['tdieresis'] = 0x1E97;\n\t t['tdotaccent'] = 0x1E6B;\n\t t['tdotbelow'] = 0x1E6D;\n\t t['tecyrillic'] = 0x0442;\n\t t['tedescendercyrillic'] = 0x04AD;\n\t t['teharabic'] = 0x062A;\n\t t['tehfinalarabic'] = 0xFE96;\n\t t['tehhahinitialarabic'] = 0xFCA2;\n\t t['tehhahisolatedarabic'] = 0xFC0C;\n\t t['tehinitialarabic'] = 0xFE97;\n\t t['tehiragana'] = 0x3066;\n\t t['tehjeeminitialarabic'] = 0xFCA1;\n\t t['tehjeemisolatedarabic'] = 0xFC0B;\n\t t['tehmarbutaarabic'] = 0x0629;\n\t t['tehmarbutafinalarabic'] = 0xFE94;\n\t t['tehmedialarabic'] = 0xFE98;\n\t t['tehmeeminitialarabic'] = 0xFCA4;\n\t t['tehmeemisolatedarabic'] = 0xFC0E;\n\t t['tehnoonfinalarabic'] = 0xFC73;\n\t t['tekatakana'] = 0x30C6;\n\t t['tekatakanahalfwidth'] = 0xFF83;\n\t t['telephone'] = 0x2121;\n\t t['telephoneblack'] = 0x260E;\n\t t['telishagedolahebrew'] = 0x05A0;\n\t t['telishaqetanahebrew'] = 0x05A9;\n\t t['tencircle'] = 0x2469;\n\t t['tenideographicparen'] = 0x3229;\n\t t['tenparen'] = 0x247D;\n\t t['tenperiod'] = 0x2491;\n\t t['tenroman'] = 0x2179;\n\t t['tesh'] = 0x02A7;\n\t t['tet'] = 0x05D8;\n\t t['tetdagesh'] = 0xFB38;\n\t t['tetdageshhebrew'] = 0xFB38;\n\t t['tethebrew'] = 0x05D8;\n\t t['tetsecyrillic'] = 0x04B5;\n\t t['tevirhebrew'] = 0x059B;\n\t t['tevirlefthebrew'] = 0x059B;\n\t t['thabengali'] = 0x09A5;\n\t t['thadeva'] = 0x0925;\n\t t['thagujarati'] = 0x0AA5;\n\t t['thagurmukhi'] = 0x0A25;\n\t t['thalarabic'] = 0x0630;\n\t t['thalfinalarabic'] = 0xFEAC;\n\t t['thanthakhatlowleftthai'] = 0xF898;\n\t t['thanthakhatlowrightthai'] = 0xF897;\n\t t['thanthakhatthai'] = 0x0E4C;\n\t t['thanthakhatupperleftthai'] = 0xF896;\n\t t['theharabic'] = 0x062B;\n\t t['thehfinalarabic'] = 0xFE9A;\n\t t['thehinitialarabic'] = 0xFE9B;\n\t t['thehmedialarabic'] = 0xFE9C;\n\t t['thereexists'] = 0x2203;\n\t t['therefore'] = 0x2234;\n\t t['theta'] = 0x03B8;\n\t t['theta1'] = 0x03D1;\n\t t['thetasymbolgreek'] = 0x03D1;\n\t t['thieuthacirclekorean'] = 0x3279;\n\t t['thieuthaparenkorean'] = 0x3219;\n\t t['thieuthcirclekorean'] = 0x326B;\n\t t['thieuthkorean'] = 0x314C;\n\t t['thieuthparenkorean'] = 0x320B;\n\t t['thirteencircle'] = 0x246C;\n\t t['thirteenparen'] = 0x2480;\n\t t['thirteenperiod'] = 0x2494;\n\t t['thonangmonthothai'] = 0x0E11;\n\t t['thook'] = 0x01AD;\n\t t['thophuthaothai'] = 0x0E12;\n\t t['thorn'] = 0x00FE;\n\t t['thothahanthai'] = 0x0E17;\n\t t['thothanthai'] = 0x0E10;\n\t t['thothongthai'] = 0x0E18;\n\t t['thothungthai'] = 0x0E16;\n\t t['thousandcyrillic'] = 0x0482;\n\t t['thousandsseparatorarabic'] = 0x066C;\n\t t['thousandsseparatorpersian'] = 0x066C;\n\t t['three'] = 0x0033;\n\t t['threearabic'] = 0x0663;\n\t t['threebengali'] = 0x09E9;\n\t t['threecircle'] = 0x2462;\n\t t['threecircleinversesansserif'] = 0x278C;\n\t t['threedeva'] = 0x0969;\n\t t['threeeighths'] = 0x215C;\n\t t['threegujarati'] = 0x0AE9;\n\t t['threegurmukhi'] = 0x0A69;\n\t t['threehackarabic'] = 0x0663;\n\t t['threehangzhou'] = 0x3023;\n\t t['threeideographicparen'] = 0x3222;\n\t t['threeinferior'] = 0x2083;\n\t t['threemonospace'] = 0xFF13;\n\t t['threenumeratorbengali'] = 0x09F6;\n\t t['threeoldstyle'] = 0xF733;\n\t t['threeparen'] = 0x2476;\n\t t['threeperiod'] = 0x248A;\n\t t['threepersian'] = 0x06F3;\n\t t['threequarters'] = 0x00BE;\n\t t['threequartersemdash'] = 0xF6DE;\n\t t['threeroman'] = 0x2172;\n\t t['threesuperior'] = 0x00B3;\n\t t['threethai'] = 0x0E53;\n\t t['thzsquare'] = 0x3394;\n\t t['tihiragana'] = 0x3061;\n\t t['tikatakana'] = 0x30C1;\n\t t['tikatakanahalfwidth'] = 0xFF81;\n\t t['tikeutacirclekorean'] = 0x3270;\n\t t['tikeutaparenkorean'] = 0x3210;\n\t t['tikeutcirclekorean'] = 0x3262;\n\t t['tikeutkorean'] = 0x3137;\n\t t['tikeutparenkorean'] = 0x3202;\n\t t['tilde'] = 0x02DC;\n\t t['tildebelowcmb'] = 0x0330;\n\t t['tildecmb'] = 0x0303;\n\t t['tildecomb'] = 0x0303;\n\t t['tildedoublecmb'] = 0x0360;\n\t t['tildeoperator'] = 0x223C;\n\t t['tildeoverlaycmb'] = 0x0334;\n\t t['tildeverticalcmb'] = 0x033E;\n\t t['timescircle'] = 0x2297;\n\t t['tipehahebrew'] = 0x0596;\n\t t['tipehalefthebrew'] = 0x0596;\n\t t['tippigurmukhi'] = 0x0A70;\n\t t['titlocyrilliccmb'] = 0x0483;\n\t t['tiwnarmenian'] = 0x057F;\n\t t['tlinebelow'] = 0x1E6F;\n\t t['tmonospace'] = 0xFF54;\n\t t['toarmenian'] = 0x0569;\n\t t['tohiragana'] = 0x3068;\n\t t['tokatakana'] = 0x30C8;\n\t t['tokatakanahalfwidth'] = 0xFF84;\n\t t['tonebarextrahighmod'] = 0x02E5;\n\t t['tonebarextralowmod'] = 0x02E9;\n\t t['tonebarhighmod'] = 0x02E6;\n\t t['tonebarlowmod'] = 0x02E8;\n\t t['tonebarmidmod'] = 0x02E7;\n\t t['tonefive'] = 0x01BD;\n\t t['tonesix'] = 0x0185;\n\t t['tonetwo'] = 0x01A8;\n\t t['tonos'] = 0x0384;\n\t t['tonsquare'] = 0x3327;\n\t t['topatakthai'] = 0x0E0F;\n\t t['tortoiseshellbracketleft'] = 0x3014;\n\t t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n\t t['tortoiseshellbracketleftvertical'] = 0xFE39;\n\t t['tortoiseshellbracketright'] = 0x3015;\n\t t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n\t t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n\t t['totaothai'] = 0x0E15;\n\t t['tpalatalhook'] = 0x01AB;\n\t t['tparen'] = 0x24AF;\n\t t['trademark'] = 0x2122;\n\t t['trademarksans'] = 0xF8EA;\n\t t['trademarkserif'] = 0xF6DB;\n\t t['tretroflexhook'] = 0x0288;\n\t t['triagdn'] = 0x25BC;\n\t t['triaglf'] = 0x25C4;\n\t t['triagrt'] = 0x25BA;\n\t t['triagup'] = 0x25B2;\n\t t['ts'] = 0x02A6;\n\t t['tsadi'] = 0x05E6;\n\t t['tsadidagesh'] = 0xFB46;\n\t t['tsadidageshhebrew'] = 0xFB46;\n\t t['tsadihebrew'] = 0x05E6;\n\t t['tsecyrillic'] = 0x0446;\n\t t['tsere'] = 0x05B5;\n\t t['tsere12'] = 0x05B5;\n\t t['tsere1e'] = 0x05B5;\n\t t['tsere2b'] = 0x05B5;\n\t t['tserehebrew'] = 0x05B5;\n\t t['tserenarrowhebrew'] = 0x05B5;\n\t t['tserequarterhebrew'] = 0x05B5;\n\t t['tserewidehebrew'] = 0x05B5;\n\t t['tshecyrillic'] = 0x045B;\n\t t['tsuperior'] = 0xF6F3;\n\t t['ttabengali'] = 0x099F;\n\t t['ttadeva'] = 0x091F;\n\t t['ttagujarati'] = 0x0A9F;\n\t t['ttagurmukhi'] = 0x0A1F;\n\t t['tteharabic'] = 0x0679;\n\t t['ttehfinalarabic'] = 0xFB67;\n\t t['ttehinitialarabic'] = 0xFB68;\n\t t['ttehmedialarabic'] = 0xFB69;\n\t t['tthabengali'] = 0x09A0;\n\t t['tthadeva'] = 0x0920;\n\t t['tthagujarati'] = 0x0AA0;\n\t t['tthagurmukhi'] = 0x0A20;\n\t t['tturned'] = 0x0287;\n\t t['tuhiragana'] = 0x3064;\n\t t['tukatakana'] = 0x30C4;\n\t t['tukatakanahalfwidth'] = 0xFF82;\n\t t['tusmallhiragana'] = 0x3063;\n\t t['tusmallkatakana'] = 0x30C3;\n\t t['tusmallkatakanahalfwidth'] = 0xFF6F;\n\t t['twelvecircle'] = 0x246B;\n\t t['twelveparen'] = 0x247F;\n\t t['twelveperiod'] = 0x2493;\n\t t['twelveroman'] = 0x217B;\n\t t['twentycircle'] = 0x2473;\n\t t['twentyhangzhou'] = 0x5344;\n\t t['twentyparen'] = 0x2487;\n\t t['twentyperiod'] = 0x249B;\n\t t['two'] = 0x0032;\n\t t['twoarabic'] = 0x0662;\n\t t['twobengali'] = 0x09E8;\n\t t['twocircle'] = 0x2461;\n\t t['twocircleinversesansserif'] = 0x278B;\n\t t['twodeva'] = 0x0968;\n\t t['twodotenleader'] = 0x2025;\n\t t['twodotleader'] = 0x2025;\n\t t['twodotleadervertical'] = 0xFE30;\n\t t['twogujarati'] = 0x0AE8;\n\t t['twogurmukhi'] = 0x0A68;\n\t t['twohackarabic'] = 0x0662;\n\t t['twohangzhou'] = 0x3022;\n\t t['twoideographicparen'] = 0x3221;\n\t t['twoinferior'] = 0x2082;\n\t t['twomonospace'] = 0xFF12;\n\t t['twonumeratorbengali'] = 0x09F5;\n\t t['twooldstyle'] = 0xF732;\n\t t['twoparen'] = 0x2475;\n\t t['twoperiod'] = 0x2489;\n\t t['twopersian'] = 0x06F2;\n\t t['tworoman'] = 0x2171;\n\t t['twostroke'] = 0x01BB;\n\t t['twosuperior'] = 0x00B2;\n\t t['twothai'] = 0x0E52;\n\t t['twothirds'] = 0x2154;\n\t t['u'] = 0x0075;\n\t t['uacute'] = 0x00FA;\n\t t['ubar'] = 0x0289;\n\t t['ubengali'] = 0x0989;\n\t t['ubopomofo'] = 0x3128;\n\t t['ubreve'] = 0x016D;\n\t t['ucaron'] = 0x01D4;\n\t t['ucircle'] = 0x24E4;\n\t t['ucircumflex'] = 0x00FB;\n\t t['ucircumflexbelow'] = 0x1E77;\n\t t['ucyrillic'] = 0x0443;\n\t t['udattadeva'] = 0x0951;\n\t t['udblacute'] = 0x0171;\n\t t['udblgrave'] = 0x0215;\n\t t['udeva'] = 0x0909;\n\t t['udieresis'] = 0x00FC;\n\t t['udieresisacute'] = 0x01D8;\n\t t['udieresisbelow'] = 0x1E73;\n\t t['udieresiscaron'] = 0x01DA;\n\t t['udieresiscyrillic'] = 0x04F1;\n\t t['udieresisgrave'] = 0x01DC;\n\t t['udieresismacron'] = 0x01D6;\n\t t['udotbelow'] = 0x1EE5;\n\t t['ugrave'] = 0x00F9;\n\t t['ugujarati'] = 0x0A89;\n\t t['ugurmukhi'] = 0x0A09;\n\t t['uhiragana'] = 0x3046;\n\t t['uhookabove'] = 0x1EE7;\n\t t['uhorn'] = 0x01B0;\n\t t['uhornacute'] = 0x1EE9;\n\t t['uhorndotbelow'] = 0x1EF1;\n\t t['uhorngrave'] = 0x1EEB;\n\t t['uhornhookabove'] = 0x1EED;\n\t t['uhorntilde'] = 0x1EEF;\n\t t['uhungarumlaut'] = 0x0171;\n\t t['uhungarumlautcyrillic'] = 0x04F3;\n\t t['uinvertedbreve'] = 0x0217;\n\t t['ukatakana'] = 0x30A6;\n\t t['ukatakanahalfwidth'] = 0xFF73;\n\t t['ukcyrillic'] = 0x0479;\n\t t['ukorean'] = 0x315C;\n\t t['umacron'] = 0x016B;\n\t t['umacroncyrillic'] = 0x04EF;\n\t t['umacrondieresis'] = 0x1E7B;\n\t t['umatragurmukhi'] = 0x0A41;\n\t t['umonospace'] = 0xFF55;\n\t t['underscore'] = 0x005F;\n\t t['underscoredbl'] = 0x2017;\n\t t['underscoremonospace'] = 0xFF3F;\n\t t['underscorevertical'] = 0xFE33;\n\t t['underscorewavy'] = 0xFE4F;\n\t t['union'] = 0x222A;\n\t t['universal'] = 0x2200;\n\t t['uogonek'] = 0x0173;\n\t t['uparen'] = 0x24B0;\n\t t['upblock'] = 0x2580;\n\t t['upperdothebrew'] = 0x05C4;\n\t t['upsilon'] = 0x03C5;\n\t t['upsilondieresis'] = 0x03CB;\n\t t['upsilondieresistonos'] = 0x03B0;\n\t t['upsilonlatin'] = 0x028A;\n\t t['upsilontonos'] = 0x03CD;\n\t t['uptackbelowcmb'] = 0x031D;\n\t t['uptackmod'] = 0x02D4;\n\t t['uragurmukhi'] = 0x0A73;\n\t t['uring'] = 0x016F;\n\t t['ushortcyrillic'] = 0x045E;\n\t t['usmallhiragana'] = 0x3045;\n\t t['usmallkatakana'] = 0x30A5;\n\t t['usmallkatakanahalfwidth'] = 0xFF69;\n\t t['ustraightcyrillic'] = 0x04AF;\n\t t['ustraightstrokecyrillic'] = 0x04B1;\n\t t['utilde'] = 0x0169;\n\t t['utildeacute'] = 0x1E79;\n\t t['utildebelow'] = 0x1E75;\n\t t['uubengali'] = 0x098A;\n\t t['uudeva'] = 0x090A;\n\t t['uugujarati'] = 0x0A8A;\n\t t['uugurmukhi'] = 0x0A0A;\n\t t['uumatragurmukhi'] = 0x0A42;\n\t t['uuvowelsignbengali'] = 0x09C2;\n\t t['uuvowelsigndeva'] = 0x0942;\n\t t['uuvowelsigngujarati'] = 0x0AC2;\n\t t['uvowelsignbengali'] = 0x09C1;\n\t t['uvowelsigndeva'] = 0x0941;\n\t t['uvowelsigngujarati'] = 0x0AC1;\n\t t['v'] = 0x0076;\n\t t['vadeva'] = 0x0935;\n\t t['vagujarati'] = 0x0AB5;\n\t t['vagurmukhi'] = 0x0A35;\n\t t['vakatakana'] = 0x30F7;\n\t t['vav'] = 0x05D5;\n\t t['vavdagesh'] = 0xFB35;\n\t t['vavdagesh65'] = 0xFB35;\n\t t['vavdageshhebrew'] = 0xFB35;\n\t t['vavhebrew'] = 0x05D5;\n\t t['vavholam'] = 0xFB4B;\n\t t['vavholamhebrew'] = 0xFB4B;\n\t t['vavvavhebrew'] = 0x05F0;\n\t t['vavyodhebrew'] = 0x05F1;\n\t t['vcircle'] = 0x24E5;\n\t t['vdotbelow'] = 0x1E7F;\n\t t['vecyrillic'] = 0x0432;\n\t t['veharabic'] = 0x06A4;\n\t t['vehfinalarabic'] = 0xFB6B;\n\t t['vehinitialarabic'] = 0xFB6C;\n\t t['vehmedialarabic'] = 0xFB6D;\n\t t['vekatakana'] = 0x30F9;\n\t t['venus'] = 0x2640;\n\t t['verticalbar'] = 0x007C;\n\t t['verticallineabovecmb'] = 0x030D;\n\t t['verticallinebelowcmb'] = 0x0329;\n\t t['verticallinelowmod'] = 0x02CC;\n\t t['verticallinemod'] = 0x02C8;\n\t t['vewarmenian'] = 0x057E;\n\t t['vhook'] = 0x028B;\n\t t['vikatakana'] = 0x30F8;\n\t t['viramabengali'] = 0x09CD;\n\t t['viramadeva'] = 0x094D;\n\t t['viramagujarati'] = 0x0ACD;\n\t t['visargabengali'] = 0x0983;\n\t t['visargadeva'] = 0x0903;\n\t t['visargagujarati'] = 0x0A83;\n\t t['vmonospace'] = 0xFF56;\n\t t['voarmenian'] = 0x0578;\n\t t['voicediterationhiragana'] = 0x309E;\n\t t['voicediterationkatakana'] = 0x30FE;\n\t t['voicedmarkkana'] = 0x309B;\n\t t['voicedmarkkanahalfwidth'] = 0xFF9E;\n\t t['vokatakana'] = 0x30FA;\n\t t['vparen'] = 0x24B1;\n\t t['vtilde'] = 0x1E7D;\n\t t['vturned'] = 0x028C;\n\t t['vuhiragana'] = 0x3094;\n\t t['vukatakana'] = 0x30F4;\n\t t['w'] = 0x0077;\n\t t['wacute'] = 0x1E83;\n\t t['waekorean'] = 0x3159;\n\t t['wahiragana'] = 0x308F;\n\t t['wakatakana'] = 0x30EF;\n\t t['wakatakanahalfwidth'] = 0xFF9C;\n\t t['wakorean'] = 0x3158;\n\t t['wasmallhiragana'] = 0x308E;\n\t t['wasmallkatakana'] = 0x30EE;\n\t t['wattosquare'] = 0x3357;\n\t t['wavedash'] = 0x301C;\n\t t['wavyunderscorevertical'] = 0xFE34;\n\t t['wawarabic'] = 0x0648;\n\t t['wawfinalarabic'] = 0xFEEE;\n\t t['wawhamzaabovearabic'] = 0x0624;\n\t t['wawhamzaabovefinalarabic'] = 0xFE86;\n\t t['wbsquare'] = 0x33DD;\n\t t['wcircle'] = 0x24E6;\n\t t['wcircumflex'] = 0x0175;\n\t t['wdieresis'] = 0x1E85;\n\t t['wdotaccent'] = 0x1E87;\n\t t['wdotbelow'] = 0x1E89;\n\t t['wehiragana'] = 0x3091;\n\t t['weierstrass'] = 0x2118;\n\t t['wekatakana'] = 0x30F1;\n\t t['wekorean'] = 0x315E;\n\t t['weokorean'] = 0x315D;\n\t t['wgrave'] = 0x1E81;\n\t t['whitebullet'] = 0x25E6;\n\t t['whitecircle'] = 0x25CB;\n\t t['whitecircleinverse'] = 0x25D9;\n\t t['whitecornerbracketleft'] = 0x300E;\n\t t['whitecornerbracketleftvertical'] = 0xFE43;\n\t t['whitecornerbracketright'] = 0x300F;\n\t t['whitecornerbracketrightvertical'] = 0xFE44;\n\t t['whitediamond'] = 0x25C7;\n\t t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n\t t['whitedownpointingsmalltriangle'] = 0x25BF;\n\t t['whitedownpointingtriangle'] = 0x25BD;\n\t t['whiteleftpointingsmalltriangle'] = 0x25C3;\n\t t['whiteleftpointingtriangle'] = 0x25C1;\n\t t['whitelenticularbracketleft'] = 0x3016;\n\t t['whitelenticularbracketright'] = 0x3017;\n\t t['whiterightpointingsmalltriangle'] = 0x25B9;\n\t t['whiterightpointingtriangle'] = 0x25B7;\n\t t['whitesmallsquare'] = 0x25AB;\n\t t['whitesmilingface'] = 0x263A;\n\t t['whitesquare'] = 0x25A1;\n\t t['whitestar'] = 0x2606;\n\t t['whitetelephone'] = 0x260F;\n\t t['whitetortoiseshellbracketleft'] = 0x3018;\n\t t['whitetortoiseshellbracketright'] = 0x3019;\n\t t['whiteuppointingsmalltriangle'] = 0x25B5;\n\t t['whiteuppointingtriangle'] = 0x25B3;\n\t t['wihiragana'] = 0x3090;\n\t t['wikatakana'] = 0x30F0;\n\t t['wikorean'] = 0x315F;\n\t t['wmonospace'] = 0xFF57;\n\t t['wohiragana'] = 0x3092;\n\t t['wokatakana'] = 0x30F2;\n\t t['wokatakanahalfwidth'] = 0xFF66;\n\t t['won'] = 0x20A9;\n\t t['wonmonospace'] = 0xFFE6;\n\t t['wowaenthai'] = 0x0E27;\n\t t['wparen'] = 0x24B2;\n\t t['wring'] = 0x1E98;\n\t t['wsuperior'] = 0x02B7;\n\t t['wturned'] = 0x028D;\n\t t['wynn'] = 0x01BF;\n\t t['x'] = 0x0078;\n\t t['xabovecmb'] = 0x033D;\n\t t['xbopomofo'] = 0x3112;\n\t t['xcircle'] = 0x24E7;\n\t t['xdieresis'] = 0x1E8D;\n\t t['xdotaccent'] = 0x1E8B;\n\t t['xeharmenian'] = 0x056D;\n\t t['xi'] = 0x03BE;\n\t t['xmonospace'] = 0xFF58;\n\t t['xparen'] = 0x24B3;\n\t t['xsuperior'] = 0x02E3;\n\t t['y'] = 0x0079;\n\t t['yaadosquare'] = 0x334E;\n\t t['yabengali'] = 0x09AF;\n\t t['yacute'] = 0x00FD;\n\t t['yadeva'] = 0x092F;\n\t t['yaekorean'] = 0x3152;\n\t t['yagujarati'] = 0x0AAF;\n\t t['yagurmukhi'] = 0x0A2F;\n\t t['yahiragana'] = 0x3084;\n\t t['yakatakana'] = 0x30E4;\n\t t['yakatakanahalfwidth'] = 0xFF94;\n\t t['yakorean'] = 0x3151;\n\t t['yamakkanthai'] = 0x0E4E;\n\t t['yasmallhiragana'] = 0x3083;\n\t t['yasmallkatakana'] = 0x30E3;\n\t t['yasmallkatakanahalfwidth'] = 0xFF6C;\n\t t['yatcyrillic'] = 0x0463;\n\t t['ycircle'] = 0x24E8;\n\t t['ycircumflex'] = 0x0177;\n\t t['ydieresis'] = 0x00FF;\n\t t['ydotaccent'] = 0x1E8F;\n\t t['ydotbelow'] = 0x1EF5;\n\t t['yeharabic'] = 0x064A;\n\t t['yehbarreearabic'] = 0x06D2;\n\t t['yehbarreefinalarabic'] = 0xFBAF;\n\t t['yehfinalarabic'] = 0xFEF2;\n\t t['yehhamzaabovearabic'] = 0x0626;\n\t t['yehhamzaabovefinalarabic'] = 0xFE8A;\n\t t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n\t t['yehhamzaabovemedialarabic'] = 0xFE8C;\n\t t['yehinitialarabic'] = 0xFEF3;\n\t t['yehmedialarabic'] = 0xFEF4;\n\t t['yehmeeminitialarabic'] = 0xFCDD;\n\t t['yehmeemisolatedarabic'] = 0xFC58;\n\t t['yehnoonfinalarabic'] = 0xFC94;\n\t t['yehthreedotsbelowarabic'] = 0x06D1;\n\t t['yekorean'] = 0x3156;\n\t t['yen'] = 0x00A5;\n\t t['yenmonospace'] = 0xFFE5;\n\t t['yeokorean'] = 0x3155;\n\t t['yeorinhieuhkorean'] = 0x3186;\n\t t['yerahbenyomohebrew'] = 0x05AA;\n\t t['yerahbenyomolefthebrew'] = 0x05AA;\n\t t['yericyrillic'] = 0x044B;\n\t t['yerudieresiscyrillic'] = 0x04F9;\n\t t['yesieungkorean'] = 0x3181;\n\t t['yesieungpansioskorean'] = 0x3183;\n\t t['yesieungsioskorean'] = 0x3182;\n\t t['yetivhebrew'] = 0x059A;\n\t t['ygrave'] = 0x1EF3;\n\t t['yhook'] = 0x01B4;\n\t t['yhookabove'] = 0x1EF7;\n\t t['yiarmenian'] = 0x0575;\n\t t['yicyrillic'] = 0x0457;\n\t t['yikorean'] = 0x3162;\n\t t['yinyang'] = 0x262F;\n\t t['yiwnarmenian'] = 0x0582;\n\t t['ymonospace'] = 0xFF59;\n\t t['yod'] = 0x05D9;\n\t t['yoddagesh'] = 0xFB39;\n\t t['yoddageshhebrew'] = 0xFB39;\n\t t['yodhebrew'] = 0x05D9;\n\t t['yodyodhebrew'] = 0x05F2;\n\t t['yodyodpatahhebrew'] = 0xFB1F;\n\t t['yohiragana'] = 0x3088;\n\t t['yoikorean'] = 0x3189;\n\t t['yokatakana'] = 0x30E8;\n\t t['yokatakanahalfwidth'] = 0xFF96;\n\t t['yokorean'] = 0x315B;\n\t t['yosmallhiragana'] = 0x3087;\n\t t['yosmallkatakana'] = 0x30E7;\n\t t['yosmallkatakanahalfwidth'] = 0xFF6E;\n\t t['yotgreek'] = 0x03F3;\n\t t['yoyaekorean'] = 0x3188;\n\t t['yoyakorean'] = 0x3187;\n\t t['yoyakthai'] = 0x0E22;\n\t t['yoyingthai'] = 0x0E0D;\n\t t['yparen'] = 0x24B4;\n\t t['ypogegrammeni'] = 0x037A;\n\t t['ypogegrammenigreekcmb'] = 0x0345;\n\t t['yr'] = 0x01A6;\n\t t['yring'] = 0x1E99;\n\t t['ysuperior'] = 0x02B8;\n\t t['ytilde'] = 0x1EF9;\n\t t['yturned'] = 0x028E;\n\t t['yuhiragana'] = 0x3086;\n\t t['yuikorean'] = 0x318C;\n\t t['yukatakana'] = 0x30E6;\n\t t['yukatakanahalfwidth'] = 0xFF95;\n\t t['yukorean'] = 0x3160;\n\t t['yusbigcyrillic'] = 0x046B;\n\t t['yusbigiotifiedcyrillic'] = 0x046D;\n\t t['yuslittlecyrillic'] = 0x0467;\n\t t['yuslittleiotifiedcyrillic'] = 0x0469;\n\t t['yusmallhiragana'] = 0x3085;\n\t t['yusmallkatakana'] = 0x30E5;\n\t t['yusmallkatakanahalfwidth'] = 0xFF6D;\n\t t['yuyekorean'] = 0x318B;\n\t t['yuyeokorean'] = 0x318A;\n\t t['yyabengali'] = 0x09DF;\n\t t['yyadeva'] = 0x095F;\n\t t['z'] = 0x007A;\n\t t['zaarmenian'] = 0x0566;\n\t t['zacute'] = 0x017A;\n\t t['zadeva'] = 0x095B;\n\t t['zagurmukhi'] = 0x0A5B;\n\t t['zaharabic'] = 0x0638;\n\t t['zahfinalarabic'] = 0xFEC6;\n\t t['zahinitialarabic'] = 0xFEC7;\n\t t['zahiragana'] = 0x3056;\n\t t['zahmedialarabic'] = 0xFEC8;\n\t t['zainarabic'] = 0x0632;\n\t t['zainfinalarabic'] = 0xFEB0;\n\t t['zakatakana'] = 0x30B6;\n\t t['zaqefgadolhebrew'] = 0x0595;\n\t t['zaqefqatanhebrew'] = 0x0594;\n\t t['zarqahebrew'] = 0x0598;\n\t t['zayin'] = 0x05D6;\n\t t['zayindagesh'] = 0xFB36;\n\t t['zayindageshhebrew'] = 0xFB36;\n\t t['zayinhebrew'] = 0x05D6;\n\t t['zbopomofo'] = 0x3117;\n\t t['zcaron'] = 0x017E;\n\t t['zcircle'] = 0x24E9;\n\t t['zcircumflex'] = 0x1E91;\n\t t['zcurl'] = 0x0291;\n\t t['zdot'] = 0x017C;\n\t t['zdotaccent'] = 0x017C;\n\t t['zdotbelow'] = 0x1E93;\n\t t['zecyrillic'] = 0x0437;\n\t t['zedescendercyrillic'] = 0x0499;\n\t t['zedieresiscyrillic'] = 0x04DF;\n\t t['zehiragana'] = 0x305C;\n\t t['zekatakana'] = 0x30BC;\n\t t['zero'] = 0x0030;\n\t t['zeroarabic'] = 0x0660;\n\t t['zerobengali'] = 0x09E6;\n\t t['zerodeva'] = 0x0966;\n\t t['zerogujarati'] = 0x0AE6;\n\t t['zerogurmukhi'] = 0x0A66;\n\t t['zerohackarabic'] = 0x0660;\n\t t['zeroinferior'] = 0x2080;\n\t t['zeromonospace'] = 0xFF10;\n\t t['zerooldstyle'] = 0xF730;\n\t t['zeropersian'] = 0x06F0;\n\t t['zerosuperior'] = 0x2070;\n\t t['zerothai'] = 0x0E50;\n\t t['zerowidthjoiner'] = 0xFEFF;\n\t t['zerowidthnonjoiner'] = 0x200C;\n\t t['zerowidthspace'] = 0x200B;\n\t t['zeta'] = 0x03B6;\n\t t['zhbopomofo'] = 0x3113;\n\t t['zhearmenian'] = 0x056A;\n\t t['zhebrevecyrillic'] = 0x04C2;\n\t t['zhecyrillic'] = 0x0436;\n\t t['zhedescendercyrillic'] = 0x0497;\n\t t['zhedieresiscyrillic'] = 0x04DD;\n\t t['zihiragana'] = 0x3058;\n\t t['zikatakana'] = 0x30B8;\n\t t['zinorhebrew'] = 0x05AE;\n\t t['zlinebelow'] = 0x1E95;\n\t t['zmonospace'] = 0xFF5A;\n\t t['zohiragana'] = 0x305E;\n\t t['zokatakana'] = 0x30BE;\n\t t['zparen'] = 0x24B5;\n\t t['zretroflexhook'] = 0x0290;\n\t t['zstroke'] = 0x01B6;\n\t t['zuhiragana'] = 0x305A;\n\t t['zukatakana'] = 0x30BA;\n\t t['.notdef'] = 0x0000;\n\t t['angbracketleftbig'] = 0x2329;\n\t t['angbracketleftBig'] = 0x2329;\n\t t['angbracketleftbigg'] = 0x2329;\n\t t['angbracketleftBigg'] = 0x2329;\n\t t['angbracketrightBig'] = 0x232A;\n\t t['angbracketrightbig'] = 0x232A;\n\t t['angbracketrightBigg'] = 0x232A;\n\t t['angbracketrightbigg'] = 0x232A;\n\t t['arrowhookleft'] = 0x21AA;\n\t t['arrowhookright'] = 0x21A9;\n\t t['arrowlefttophalf'] = 0x21BC;\n\t t['arrowleftbothalf'] = 0x21BD;\n\t t['arrownortheast'] = 0x2197;\n\t t['arrownorthwest'] = 0x2196;\n\t t['arrowrighttophalf'] = 0x21C0;\n\t t['arrowrightbothalf'] = 0x21C1;\n\t t['arrowsoutheast'] = 0x2198;\n\t t['arrowsouthwest'] = 0x2199;\n\t t['backslashbig'] = 0x2216;\n\t t['backslashBig'] = 0x2216;\n\t t['backslashBigg'] = 0x2216;\n\t t['backslashbigg'] = 0x2216;\n\t t['bardbl'] = 0x2016;\n\t t['bracehtipdownleft'] = 0xFE37;\n\t t['bracehtipdownright'] = 0xFE37;\n\t t['bracehtipupleft'] = 0xFE38;\n\t t['bracehtipupright'] = 0xFE38;\n\t t['braceleftBig'] = 0x007B;\n\t t['braceleftbig'] = 0x007B;\n\t t['braceleftbigg'] = 0x007B;\n\t t['braceleftBigg'] = 0x007B;\n\t t['bracerightBig'] = 0x007D;\n\t t['bracerightbig'] = 0x007D;\n\t t['bracerightbigg'] = 0x007D;\n\t t['bracerightBigg'] = 0x007D;\n\t t['bracketleftbig'] = 0x005B;\n\t t['bracketleftBig'] = 0x005B;\n\t t['bracketleftbigg'] = 0x005B;\n\t t['bracketleftBigg'] = 0x005B;\n\t t['bracketrightBig'] = 0x005D;\n\t t['bracketrightbig'] = 0x005D;\n\t t['bracketrightbigg'] = 0x005D;\n\t t['bracketrightBigg'] = 0x005D;\n\t t['ceilingleftbig'] = 0x2308;\n\t t['ceilingleftBig'] = 0x2308;\n\t t['ceilingleftBigg'] = 0x2308;\n\t t['ceilingleftbigg'] = 0x2308;\n\t t['ceilingrightbig'] = 0x2309;\n\t t['ceilingrightBig'] = 0x2309;\n\t t['ceilingrightbigg'] = 0x2309;\n\t t['ceilingrightBigg'] = 0x2309;\n\t t['circledotdisplay'] = 0x2299;\n\t t['circledottext'] = 0x2299;\n\t t['circlemultiplydisplay'] = 0x2297;\n\t t['circlemultiplytext'] = 0x2297;\n\t t['circleplusdisplay'] = 0x2295;\n\t t['circleplustext'] = 0x2295;\n\t t['contintegraldisplay'] = 0x222E;\n\t t['contintegraltext'] = 0x222E;\n\t t['coproductdisplay'] = 0x2210;\n\t t['coproducttext'] = 0x2210;\n\t t['floorleftBig'] = 0x230A;\n\t t['floorleftbig'] = 0x230A;\n\t t['floorleftbigg'] = 0x230A;\n\t t['floorleftBigg'] = 0x230A;\n\t t['floorrightbig'] = 0x230B;\n\t t['floorrightBig'] = 0x230B;\n\t t['floorrightBigg'] = 0x230B;\n\t t['floorrightbigg'] = 0x230B;\n\t t['hatwide'] = 0x0302;\n\t t['hatwider'] = 0x0302;\n\t t['hatwidest'] = 0x0302;\n\t t['intercal'] = 0x1D40;\n\t t['integraldisplay'] = 0x222B;\n\t t['integraltext'] = 0x222B;\n\t t['intersectiondisplay'] = 0x22C2;\n\t t['intersectiontext'] = 0x22C2;\n\t t['logicalanddisplay'] = 0x2227;\n\t t['logicalandtext'] = 0x2227;\n\t t['logicalordisplay'] = 0x2228;\n\t t['logicalortext'] = 0x2228;\n\t t['parenleftBig'] = 0x0028;\n\t t['parenleftbig'] = 0x0028;\n\t t['parenleftBigg'] = 0x0028;\n\t t['parenleftbigg'] = 0x0028;\n\t t['parenrightBig'] = 0x0029;\n\t t['parenrightbig'] = 0x0029;\n\t t['parenrightBigg'] = 0x0029;\n\t t['parenrightbigg'] = 0x0029;\n\t t['prime'] = 0x2032;\n\t t['productdisplay'] = 0x220F;\n\t t['producttext'] = 0x220F;\n\t t['radicalbig'] = 0x221A;\n\t t['radicalBig'] = 0x221A;\n\t t['radicalBigg'] = 0x221A;\n\t t['radicalbigg'] = 0x221A;\n\t t['radicalbt'] = 0x221A;\n\t t['radicaltp'] = 0x221A;\n\t t['radicalvertex'] = 0x221A;\n\t t['slashbig'] = 0x002F;\n\t t['slashBig'] = 0x002F;\n\t t['slashBigg'] = 0x002F;\n\t t['slashbigg'] = 0x002F;\n\t t['summationdisplay'] = 0x2211;\n\t t['summationtext'] = 0x2211;\n\t t['tildewide'] = 0x02DC;\n\t t['tildewider'] = 0x02DC;\n\t t['tildewidest'] = 0x02DC;\n\t t['uniondisplay'] = 0x22C3;\n\t t['unionmultidisplay'] = 0x228E;\n\t t['unionmultitext'] = 0x228E;\n\t t['unionsqdisplay'] = 0x2294;\n\t t['unionsqtext'] = 0x2294;\n\t t['uniontext'] = 0x22C3;\n\t t['vextenddouble'] = 0x2225;\n\t t['vextendsingle'] = 0x2223;\n\t});\n\tvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n\t t['space'] = 0x0020;\n\t t['a1'] = 0x2701;\n\t t['a2'] = 0x2702;\n\t t['a202'] = 0x2703;\n\t t['a3'] = 0x2704;\n\t t['a4'] = 0x260E;\n\t t['a5'] = 0x2706;\n\t t['a119'] = 0x2707;\n\t t['a118'] = 0x2708;\n\t t['a117'] = 0x2709;\n\t t['a11'] = 0x261B;\n\t t['a12'] = 0x261E;\n\t t['a13'] = 0x270C;\n\t t['a14'] = 0x270D;\n\t t['a15'] = 0x270E;\n\t t['a16'] = 0x270F;\n\t t['a105'] = 0x2710;\n\t t['a17'] = 0x2711;\n\t t['a18'] = 0x2712;\n\t t['a19'] = 0x2713;\n\t t['a20'] = 0x2714;\n\t t['a21'] = 0x2715;\n\t t['a22'] = 0x2716;\n\t t['a23'] = 0x2717;\n\t t['a24'] = 0x2718;\n\t t['a25'] = 0x2719;\n\t t['a26'] = 0x271A;\n\t t['a27'] = 0x271B;\n\t t['a28'] = 0x271C;\n\t t['a6'] = 0x271D;\n\t t['a7'] = 0x271E;\n\t t['a8'] = 0x271F;\n\t t['a9'] = 0x2720;\n\t t['a10'] = 0x2721;\n\t t['a29'] = 0x2722;\n\t t['a30'] = 0x2723;\n\t t['a31'] = 0x2724;\n\t t['a32'] = 0x2725;\n\t t['a33'] = 0x2726;\n\t t['a34'] = 0x2727;\n\t t['a35'] = 0x2605;\n\t t['a36'] = 0x2729;\n\t t['a37'] = 0x272A;\n\t t['a38'] = 0x272B;\n\t t['a39'] = 0x272C;\n\t t['a40'] = 0x272D;\n\t t['a41'] = 0x272E;\n\t t['a42'] = 0x272F;\n\t t['a43'] = 0x2730;\n\t t['a44'] = 0x2731;\n\t t['a45'] = 0x2732;\n\t t['a46'] = 0x2733;\n\t t['a47'] = 0x2734;\n\t t['a48'] = 0x2735;\n\t t['a49'] = 0x2736;\n\t t['a50'] = 0x2737;\n\t t['a51'] = 0x2738;\n\t t['a52'] = 0x2739;\n\t t['a53'] = 0x273A;\n\t t['a54'] = 0x273B;\n\t t['a55'] = 0x273C;\n\t t['a56'] = 0x273D;\n\t t['a57'] = 0x273E;\n\t t['a58'] = 0x273F;\n\t t['a59'] = 0x2740;\n\t t['a60'] = 0x2741;\n\t t['a61'] = 0x2742;\n\t t['a62'] = 0x2743;\n\t t['a63'] = 0x2744;\n\t t['a64'] = 0x2745;\n\t t['a65'] = 0x2746;\n\t t['a66'] = 0x2747;\n\t t['a67'] = 0x2748;\n\t t['a68'] = 0x2749;\n\t t['a69'] = 0x274A;\n\t t['a70'] = 0x274B;\n\t t['a71'] = 0x25CF;\n\t t['a72'] = 0x274D;\n\t t['a73'] = 0x25A0;\n\t t['a74'] = 0x274F;\n\t t['a203'] = 0x2750;\n\t t['a75'] = 0x2751;\n\t t['a204'] = 0x2752;\n\t t['a76'] = 0x25B2;\n\t t['a77'] = 0x25BC;\n\t t['a78'] = 0x25C6;\n\t t['a79'] = 0x2756;\n\t t['a81'] = 0x25D7;\n\t t['a82'] = 0x2758;\n\t t['a83'] = 0x2759;\n\t t['a84'] = 0x275A;\n\t t['a97'] = 0x275B;\n\t t['a98'] = 0x275C;\n\t t['a99'] = 0x275D;\n\t t['a100'] = 0x275E;\n\t t['a101'] = 0x2761;\n\t t['a102'] = 0x2762;\n\t t['a103'] = 0x2763;\n\t t['a104'] = 0x2764;\n\t t['a106'] = 0x2765;\n\t t['a107'] = 0x2766;\n\t t['a108'] = 0x2767;\n\t t['a112'] = 0x2663;\n\t t['a111'] = 0x2666;\n\t t['a110'] = 0x2665;\n\t t['a109'] = 0x2660;\n\t t['a120'] = 0x2460;\n\t t['a121'] = 0x2461;\n\t t['a122'] = 0x2462;\n\t t['a123'] = 0x2463;\n\t t['a124'] = 0x2464;\n\t t['a125'] = 0x2465;\n\t t['a126'] = 0x2466;\n\t t['a127'] = 0x2467;\n\t t['a128'] = 0x2468;\n\t t['a129'] = 0x2469;\n\t t['a130'] = 0x2776;\n\t t['a131'] = 0x2777;\n\t t['a132'] = 0x2778;\n\t t['a133'] = 0x2779;\n\t t['a134'] = 0x277A;\n\t t['a135'] = 0x277B;\n\t t['a136'] = 0x277C;\n\t t['a137'] = 0x277D;\n\t t['a138'] = 0x277E;\n\t t['a139'] = 0x277F;\n\t t['a140'] = 0x2780;\n\t t['a141'] = 0x2781;\n\t t['a142'] = 0x2782;\n\t t['a143'] = 0x2783;\n\t t['a144'] = 0x2784;\n\t t['a145'] = 0x2785;\n\t t['a146'] = 0x2786;\n\t t['a147'] = 0x2787;\n\t t['a148'] = 0x2788;\n\t t['a149'] = 0x2789;\n\t t['a150'] = 0x278A;\n\t t['a151'] = 0x278B;\n\t t['a152'] = 0x278C;\n\t t['a153'] = 0x278D;\n\t t['a154'] = 0x278E;\n\t t['a155'] = 0x278F;\n\t t['a156'] = 0x2790;\n\t t['a157'] = 0x2791;\n\t t['a158'] = 0x2792;\n\t t['a159'] = 0x2793;\n\t t['a160'] = 0x2794;\n\t t['a161'] = 0x2192;\n\t t['a163'] = 0x2194;\n\t t['a164'] = 0x2195;\n\t t['a196'] = 0x2798;\n\t t['a165'] = 0x2799;\n\t t['a192'] = 0x279A;\n\t t['a166'] = 0x279B;\n\t t['a167'] = 0x279C;\n\t t['a168'] = 0x279D;\n\t t['a169'] = 0x279E;\n\t t['a170'] = 0x279F;\n\t t['a171'] = 0x27A0;\n\t t['a172'] = 0x27A1;\n\t t['a173'] = 0x27A2;\n\t t['a162'] = 0x27A3;\n\t t['a174'] = 0x27A4;\n\t t['a175'] = 0x27A5;\n\t t['a176'] = 0x27A6;\n\t t['a177'] = 0x27A7;\n\t t['a178'] = 0x27A8;\n\t t['a179'] = 0x27A9;\n\t t['a193'] = 0x27AA;\n\t t['a180'] = 0x27AB;\n\t t['a199'] = 0x27AC;\n\t t['a181'] = 0x27AD;\n\t t['a200'] = 0x27AE;\n\t t['a182'] = 0x27AF;\n\t t['a201'] = 0x27B1;\n\t t['a183'] = 0x27B2;\n\t t['a184'] = 0x27B3;\n\t t['a197'] = 0x27B4;\n\t t['a185'] = 0x27B5;\n\t t['a194'] = 0x27B6;\n\t t['a198'] = 0x27B7;\n\t t['a186'] = 0x27B8;\n\t t['a195'] = 0x27B9;\n\t t['a187'] = 0x27BA;\n\t t['a188'] = 0x27BB;\n\t t['a189'] = 0x27BC;\n\t t['a190'] = 0x27BD;\n\t t['a191'] = 0x27BE;\n\t t['a89'] = 0x2768;\n\t t['a90'] = 0x2769;\n\t t['a93'] = 0x276A;\n\t t['a94'] = 0x276B;\n\t t['a91'] = 0x276C;\n\t t['a92'] = 0x276D;\n\t t['a205'] = 0x276E;\n\t t['a85'] = 0x276F;\n\t t['a206'] = 0x2770;\n\t t['a86'] = 0x2771;\n\t t['a87'] = 0x2772;\n\t t['a88'] = 0x2773;\n\t t['a95'] = 0x2774;\n\t t['a96'] = 0x2775;\n\t t['.notdef'] = 0x0000;\n\t});\n\texports.getGlyphsUnicode = getGlyphsUnicode;\n\texports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\n\t\n\t/***/ }),\n\t/* 48 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tmodule.exports = !__w_pdfjs_require__(10) && !__w_pdfjs_require__(11)(function () {\n\t  return Object.defineProperty(__w_pdfjs_require__(35)('div'), 'a', {\n\t    get: function get() {\n\t      return 7;\n\t    }\n\t  }).a != 7;\n\t});\n\t\n\t/***/ }),\n\t/* 49 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar global = __w_pdfjs_require__(1);\n\tvar hide = __w_pdfjs_require__(8);\n\tvar uid = __w_pdfjs_require__(17);\n\tvar TYPED = uid('typed_array');\n\tvar VIEW = uid('view');\n\tvar ABV = !!(global.ArrayBuffer && global.DataView);\n\tvar CONSTR = ABV;\n\tvar i = 0;\n\tvar l = 9;\n\tvar Typed;\n\tvar TypedArrayConstructors = 'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'.split(',');\n\twhile (i < l) {\n\t  if (Typed = global[TypedArrayConstructors[i++]]) {\n\t    hide(Typed.prototype, TYPED, true);\n\t    hide(Typed.prototype, VIEW, true);\n\t  } else CONSTR = false;\n\t}\n\tmodule.exports = {\n\t  ABV: ABV,\n\t  CONSTR: CONSTR,\n\t  TYPED: TYPED,\n\t  VIEW: VIEW\n\t};\n\t\n\t/***/ }),\n\t/* 50 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar toInteger = __w_pdfjs_require__(18);\n\tvar toLength = __w_pdfjs_require__(14);\n\tmodule.exports = function (it) {\n\t  if (it === undefined) return 0;\n\t  var number = toInteger(it);\n\t  var length = toLength(number);\n\t  if (number !== length) throw RangeError('Wrong length!');\n\t  return length;\n\t};\n\t\n\t/***/ }),\n\t/* 51 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar $keys = __w_pdfjs_require__(52);\n\tvar hiddenKeys = __w_pdfjs_require__(40).concat('length', 'prototype');\n\texports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n\t  return $keys(O, hiddenKeys);\n\t};\n\t\n\t/***/ }),\n\t/* 52 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar has = __w_pdfjs_require__(12);\n\tvar toIObject = __w_pdfjs_require__(30);\n\tvar arrayIndexOf = __w_pdfjs_require__(53)(false);\n\tvar IE_PROTO = __w_pdfjs_require__(39)('IE_PROTO');\n\tmodule.exports = function (object, names) {\n\t  var O = toIObject(object);\n\t  var i = 0;\n\t  var result = [];\n\t  var key;\n\t  for (key in O) {\n\t    if (key != IE_PROTO) has(O, key) && result.push(key);\n\t  }while (names.length > i) {\n\t    if (has(O, key = names[i++])) {\n\t      ~arrayIndexOf(result, key) || result.push(key);\n\t    }\n\t  }return result;\n\t};\n\t\n\t/***/ }),\n\t/* 53 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar toIObject = __w_pdfjs_require__(30);\n\tvar toLength = __w_pdfjs_require__(14);\n\tvar toAbsoluteIndex = __w_pdfjs_require__(31);\n\tmodule.exports = function (IS_INCLUDES) {\n\t  return function ($this, el, fromIndex) {\n\t    var O = toIObject($this);\n\t    var length = toLength(O.length);\n\t    var index = toAbsoluteIndex(fromIndex, length);\n\t    var value;\n\t    if (IS_INCLUDES && el != el) while (length > index) {\n\t      value = O[index++];\n\t      if (value != value) return true;\n\t    } else for (; length > index; index++) {\n\t      if (IS_INCLUDES || index in O) {\n\t        if (O[index] === el) return IS_INCLUDES || index || 0;\n\t      }\n\t    }return !IS_INCLUDES && -1;\n\t  };\n\t};\n\t\n\t/***/ }),\n\t/* 54 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar core = __w_pdfjs_require__(6);\n\tvar global = __w_pdfjs_require__(1);\n\tvar SHARED = '__core-js_shared__';\n\tvar store = global[SHARED] || (global[SHARED] = {});\n\t(module.exports = function (key, value) {\n\t  return store[key] || (store[key] = value !== undefined ? value : {});\n\t})('versions', []).push({\n\t  version: core.version,\n\t  mode: __w_pdfjs_require__(21) ? 'pure' : 'global',\n\t  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'\n\t});\n\t\n\t/***/ }),\n\t/* 55 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar toObject = __w_pdfjs_require__(19);\n\tvar toAbsoluteIndex = __w_pdfjs_require__(31);\n\tvar toLength = __w_pdfjs_require__(14);\n\tmodule.exports = function fill(value) {\n\t  var O = toObject(this);\n\t  var length = toLength(O.length);\n\t  var aLen = arguments.length;\n\t  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n\t  var end = aLen > 2 ? arguments[2] : undefined;\n\t  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n\t  while (endPos > index) {\n\t    O[index++] = value;\n\t  }return O;\n\t};\n\t\n\t/***/ }),\n\t/* 56 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar Iterators = __w_pdfjs_require__(20);\n\tvar ITERATOR = __w_pdfjs_require__(4)('iterator');\n\tvar ArrayProto = Array.prototype;\n\tmodule.exports = function (it) {\n\t  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n\t};\n\t\n\t/***/ }),\n\t/* 57 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar anObject = __w_pdfjs_require__(9);\n\tvar dPs = __w_pdfjs_require__(90);\n\tvar enumBugKeys = __w_pdfjs_require__(40);\n\tvar IE_PROTO = __w_pdfjs_require__(39)('IE_PROTO');\n\tvar Empty = function Empty() {};\n\tvar PROTOTYPE = 'prototype';\n\tvar _createDict = function createDict() {\n\t  var iframe = __w_pdfjs_require__(35)('iframe');\n\t  var i = enumBugKeys.length;\n\t  var lt = '<';\n\t  var gt = '>';\n\t  var iframeDocument;\n\t  iframe.style.display = 'none';\n\t  __w_pdfjs_require__(58).appendChild(iframe);\n\t  iframe.src = 'javascript:';\n\t  iframeDocument = iframe.contentWindow.document;\n\t  iframeDocument.open();\n\t  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n\t  iframeDocument.close();\n\t  _createDict = iframeDocument.F;\n\t  while (i--) {\n\t    delete _createDict[PROTOTYPE][enumBugKeys[i]];\n\t  }return _createDict();\n\t};\n\tmodule.exports = Object.create || function create(O, Properties) {\n\t  var result;\n\t  if (O !== null) {\n\t    Empty[PROTOTYPE] = anObject(O);\n\t    result = new Empty();\n\t    Empty[PROTOTYPE] = null;\n\t    result[IE_PROTO] = O;\n\t  } else result = _createDict();\n\t  return Properties === undefined ? result : dPs(result, Properties);\n\t};\n\t\n\t/***/ }),\n\t/* 58 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar document = __w_pdfjs_require__(1).document;\n\tmodule.exports = document && document.documentElement;\n\t\n\t/***/ }),\n\t/* 59 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar has = __w_pdfjs_require__(12);\n\tvar toObject = __w_pdfjs_require__(19);\n\tvar IE_PROTO = __w_pdfjs_require__(39)('IE_PROTO');\n\tvar ObjectProto = Object.prototype;\n\tmodule.exports = Object.getPrototypeOf || function (O) {\n\t  O = toObject(O);\n\t  if (has(O, IE_PROTO)) return O[IE_PROTO];\n\t  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n\t    return O.constructor.prototype;\n\t  }\n\t  return O instanceof Object ? ObjectProto : null;\n\t};\n\t\n\t/***/ }),\n\t/* 60 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar classof = __w_pdfjs_require__(32);\n\tvar ITERATOR = __w_pdfjs_require__(4)('iterator');\n\tvar Iterators = __w_pdfjs_require__(20);\n\tmodule.exports = __w_pdfjs_require__(6).getIteratorMethod = function (it) {\n\t  if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];\n\t};\n\t\n\t/***/ }),\n\t/* 61 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar addToUnscopables = __w_pdfjs_require__(94);\n\tvar step = __w_pdfjs_require__(95);\n\tvar Iterators = __w_pdfjs_require__(20);\n\tvar toIObject = __w_pdfjs_require__(30);\n\tmodule.exports = __w_pdfjs_require__(62)(Array, 'Array', function (iterated, kind) {\n\t  this._t = toIObject(iterated);\n\t  this._i = 0;\n\t  this._k = kind;\n\t}, function () {\n\t  var O = this._t;\n\t  var kind = this._k;\n\t  var index = this._i++;\n\t  if (!O || index >= O.length) {\n\t    this._t = undefined;\n\t    return step(1);\n\t  }\n\t  if (kind == 'keys') return step(0, index);\n\t  if (kind == 'values') return step(0, O[index]);\n\t  return step(0, [index, O[index]]);\n\t}, 'values');\n\tIterators.Arguments = Iterators.Array;\n\taddToUnscopables('keys');\n\taddToUnscopables('values');\n\taddToUnscopables('entries');\n\t\n\t/***/ }),\n\t/* 62 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar LIBRARY = __w_pdfjs_require__(21);\n\tvar $export = __w_pdfjs_require__(7);\n\tvar redefine = __w_pdfjs_require__(16);\n\tvar hide = __w_pdfjs_require__(8);\n\tvar Iterators = __w_pdfjs_require__(20);\n\tvar $iterCreate = __w_pdfjs_require__(96);\n\tvar setToStringTag = __w_pdfjs_require__(26);\n\tvar getPrototypeOf = __w_pdfjs_require__(59);\n\tvar ITERATOR = __w_pdfjs_require__(4)('iterator');\n\tvar BUGGY = !([].keys && 'next' in [].keys());\n\tvar FF_ITERATOR = '@@iterator';\n\tvar KEYS = 'keys';\n\tvar VALUES = 'values';\n\tvar returnThis = function returnThis() {\n\t  return this;\n\t};\n\tmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n\t  $iterCreate(Constructor, NAME, next);\n\t  var getMethod = function getMethod(kind) {\n\t    if (!BUGGY && kind in proto) return proto[kind];\n\t    switch (kind) {\n\t      case KEYS:\n\t        return function keys() {\n\t          return new Constructor(this, kind);\n\t        };\n\t      case VALUES:\n\t        return function values() {\n\t          return new Constructor(this, kind);\n\t        };\n\t    }\n\t    return function entries() {\n\t      return new Constructor(this, kind);\n\t    };\n\t  };\n\t  var TAG = NAME + ' Iterator';\n\t  var DEF_VALUES = DEFAULT == VALUES;\n\t  var VALUES_BUG = false;\n\t  var proto = Base.prototype;\n\t  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n\t  var $default = $native || getMethod(DEFAULT);\n\t  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n\t  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n\t  var methods, key, IteratorPrototype;\n\t  if ($anyNative) {\n\t    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n\t    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n\t      setToStringTag(IteratorPrototype, TAG, true);\n\t      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n\t    }\n\t  }\n\t  if (DEF_VALUES && $native && $native.name !== VALUES) {\n\t    VALUES_BUG = true;\n\t    $default = function values() {\n\t      return $native.call(this);\n\t    };\n\t  }\n\t  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n\t    hide(proto, ITERATOR, $default);\n\t  }\n\t  Iterators[NAME] = $default;\n\t  Iterators[TAG] = returnThis;\n\t  if (DEFAULT) {\n\t    methods = {\n\t      values: DEF_VALUES ? $default : getMethod(VALUES),\n\t      keys: IS_SET ? $default : getMethod(KEYS),\n\t      entries: $entries\n\t    };\n\t    if (FORCED) for (key in methods) {\n\t      if (!(key in proto)) redefine(proto, key, methods[key]);\n\t    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n\t  }\n\t  return methods;\n\t};\n\t\n\t/***/ }),\n\t/* 63 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar global = __w_pdfjs_require__(1);\n\tvar dP = __w_pdfjs_require__(15);\n\tvar DESCRIPTORS = __w_pdfjs_require__(10);\n\tvar SPECIES = __w_pdfjs_require__(4)('species');\n\tmodule.exports = function (KEY) {\n\t  var C = global[KEY];\n\t  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n\t    configurable: true,\n\t    get: function get() {\n\t      return this;\n\t    }\n\t  });\n\t};\n\t\n\t/***/ }),\n\t/* 64 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar pIE = __w_pdfjs_require__(65);\n\tvar createDesc = __w_pdfjs_require__(29);\n\tvar toIObject = __w_pdfjs_require__(30);\n\tvar toPrimitive = __w_pdfjs_require__(36);\n\tvar has = __w_pdfjs_require__(12);\n\tvar IE8_DOM_DEFINE = __w_pdfjs_require__(48);\n\tvar gOPD = Object.getOwnPropertyDescriptor;\n\texports.f = __w_pdfjs_require__(10) ? gOPD : function getOwnPropertyDescriptor(O, P) {\n\t  O = toIObject(O);\n\t  P = toPrimitive(P, true);\n\t  if (IE8_DOM_DEFINE) try {\n\t    return gOPD(O, P);\n\t  } catch (e) {}\n\t  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n\t};\n\t\n\t/***/ }),\n\t/* 65 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\texports.f = {}.propertyIsEnumerable;\n\t\n\t/***/ }),\n\t/* 66 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar classof = __w_pdfjs_require__(32);\n\tvar test = {};\n\ttest[__w_pdfjs_require__(4)('toStringTag')] = 'z';\n\tif (test + '' != '[object z]') {\n\t  __w_pdfjs_require__(16)(Object.prototype, 'toString', function toString() {\n\t    return '[object ' + classof(this) + ']';\n\t  }, true);\n\t}\n\t\n\t/***/ }),\n\t/* 67 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar $iterators = __w_pdfjs_require__(61);\n\tvar getKeys = __w_pdfjs_require__(41);\n\tvar redefine = __w_pdfjs_require__(16);\n\tvar global = __w_pdfjs_require__(1);\n\tvar hide = __w_pdfjs_require__(8);\n\tvar Iterators = __w_pdfjs_require__(20);\n\tvar wks = __w_pdfjs_require__(4);\n\tvar ITERATOR = wks('iterator');\n\tvar TO_STRING_TAG = wks('toStringTag');\n\tvar ArrayValues = Iterators.Array;\n\tvar DOMIterables = {\n\t  CSSRuleList: true,\n\t  CSSStyleDeclaration: false,\n\t  CSSValueList: false,\n\t  ClientRectList: false,\n\t  DOMRectList: false,\n\t  DOMStringList: false,\n\t  DOMTokenList: true,\n\t  DataTransferItemList: false,\n\t  FileList: false,\n\t  HTMLAllCollection: false,\n\t  HTMLCollection: false,\n\t  HTMLFormElement: false,\n\t  HTMLSelectElement: false,\n\t  MediaList: true,\n\t  MimeTypeArray: false,\n\t  NamedNodeMap: false,\n\t  NodeList: true,\n\t  PaintRequestList: false,\n\t  Plugin: false,\n\t  PluginArray: false,\n\t  SVGLengthList: false,\n\t  SVGNumberList: false,\n\t  SVGPathSegList: false,\n\t  SVGPointList: false,\n\t  SVGStringList: false,\n\t  SVGTransformList: false,\n\t  SourceBufferList: false,\n\t  StyleSheetList: true,\n\t  TextTrackCueList: false,\n\t  TextTrackList: false,\n\t  TouchList: false\n\t};\n\tfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n\t  var NAME = collections[i];\n\t  var explicit = DOMIterables[NAME];\n\t  var Collection = global[NAME];\n\t  var proto = Collection && Collection.prototype;\n\t  var key;\n\t  if (proto) {\n\t    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n\t    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n\t    Iterators[NAME] = ArrayValues;\n\t    if (explicit) for (key in $iterators) {\n\t      if (!proto[key]) redefine(proto, key, $iterators[key], true);\n\t    }\n\t  }\n\t}\n\t\n\t/***/ }),\n\t/* 68 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar ctx = __w_pdfjs_require__(13);\n\tvar invoke = __w_pdfjs_require__(108);\n\tvar html = __w_pdfjs_require__(58);\n\tvar cel = __w_pdfjs_require__(35);\n\tvar global = __w_pdfjs_require__(1);\n\tvar process = global.process;\n\tvar setTask = global.setImmediate;\n\tvar clearTask = global.clearImmediate;\n\tvar MessageChannel = global.MessageChannel;\n\tvar Dispatch = global.Dispatch;\n\tvar counter = 0;\n\tvar queue = {};\n\tvar ONREADYSTATECHANGE = 'onreadystatechange';\n\tvar defer, channel, port;\n\tvar run = function run() {\n\t  var id = +this;\n\t  if (queue.hasOwnProperty(id)) {\n\t    var fn = queue[id];\n\t    delete queue[id];\n\t    fn();\n\t  }\n\t};\n\tvar listener = function listener(event) {\n\t  run.call(event.data);\n\t};\n\tif (!setTask || !clearTask) {\n\t  setTask = function setImmediate(fn) {\n\t    var args = [];\n\t    var i = 1;\n\t    while (arguments.length > i) {\n\t      args.push(arguments[i++]);\n\t    }queue[++counter] = function () {\n\t      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n\t    };\n\t    defer(counter);\n\t    return counter;\n\t  };\n\t  clearTask = function clearImmediate(id) {\n\t    delete queue[id];\n\t  };\n\t  if (__w_pdfjs_require__(25)(process) == 'process') {\n\t    defer = function defer(id) {\n\t      process.nextTick(ctx(run, id, 1));\n\t    };\n\t  } else if (Dispatch && Dispatch.now) {\n\t    defer = function defer(id) {\n\t      Dispatch.now(ctx(run, id, 1));\n\t    };\n\t  } else if (MessageChannel) {\n\t    channel = new MessageChannel();\n\t    port = channel.port2;\n\t    channel.port1.onmessage = listener;\n\t    defer = ctx(port.postMessage, port, 1);\n\t  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n\t    defer = function defer(id) {\n\t      global.postMessage(id + '', '*');\n\t    };\n\t    global.addEventListener('message', listener, false);\n\t  } else if (ONREADYSTATECHANGE in cel('script')) {\n\t    defer = function defer(id) {\n\t      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n\t        html.removeChild(this);\n\t        run.call(id);\n\t      };\n\t    };\n\t  } else {\n\t    defer = function defer(id) {\n\t      setTimeout(ctx(run, id, 1), 0);\n\t    };\n\t  }\n\t}\n\tmodule.exports = {\n\t  set: setTask,\n\t  clear: clearTask\n\t};\n\t\n\t/***/ }),\n\t/* 69 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tmodule.exports = function (exec) {\n\t  try {\n\t    return {\n\t      e: false,\n\t      v: exec()\n\t    };\n\t  } catch (e) {\n\t    return {\n\t      e: true,\n\t      v: e\n\t    };\n\t  }\n\t};\n\t\n\t/***/ }),\n\t/* 70 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar anObject = __w_pdfjs_require__(9);\n\tvar isObject = __w_pdfjs_require__(3);\n\tvar newPromiseCapability = __w_pdfjs_require__(45);\n\tmodule.exports = function (C, x) {\n\t  anObject(C);\n\t  if (isObject(x) && x.constructor === C) return x;\n\t  var promiseCapability = newPromiseCapability.f(C);\n\t  var resolve = promiseCapability.resolve;\n\t  resolve(x);\n\t  return promiseCapability.promise;\n\t};\n\t\n\t/***/ }),\n\t/* 71 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar isObject = __w_pdfjs_require__(3);\n\tmodule.exports = function (it, TYPE) {\n\t  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n\t  return it;\n\t};\n\t\n\t/***/ }),\n\t/* 72 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.ChunkedStreamManager = exports.ChunkedStream = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar ChunkedStream = function ChunkedStreamClosure() {\n\t  function ChunkedStream(length, chunkSize, manager) {\n\t    this.bytes = new Uint8Array(length);\n\t    this.start = 0;\n\t    this.pos = 0;\n\t    this.end = length;\n\t    this.chunkSize = chunkSize;\n\t    this.loadedChunks = [];\n\t    this.numChunksLoaded = 0;\n\t    this.numChunks = Math.ceil(length / chunkSize);\n\t    this.manager = manager;\n\t    this.progressiveDataLength = 0;\n\t    this.lastSuccessfulEnsureByteChunk = -1;\n\t  }\n\t  ChunkedStream.prototype = {\n\t    getMissingChunks: function ChunkedStream_getMissingChunks() {\n\t      var chunks = [];\n\t      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n\t        if (!this.loadedChunks[chunk]) {\n\t          chunks.push(chunk);\n\t        }\n\t      }\n\t      return chunks;\n\t    },\n\t    getBaseStreams: function ChunkedStream_getBaseStreams() {\n\t      return [this];\n\t    },\n\t    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n\t      return this.numChunksLoaded === this.numChunks;\n\t    },\n\t    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n\t      var end = begin + chunk.byteLength;\n\t      if (begin % this.chunkSize !== 0) {\n\t        throw new Error('Bad begin offset: ' + begin);\n\t      }\n\t      var length = this.bytes.length;\n\t      if (end % this.chunkSize !== 0 && end !== length) {\n\t        throw new Error('Bad end offset: ' + end);\n\t      }\n\t      this.bytes.set(new Uint8Array(chunk), begin);\n\t      var chunkSize = this.chunkSize;\n\t      var beginChunk = Math.floor(begin / chunkSize);\n\t      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n\t      var curChunk;\n\t      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n\t        if (!this.loadedChunks[curChunk]) {\n\t          this.loadedChunks[curChunk] = true;\n\t          ++this.numChunksLoaded;\n\t        }\n\t      }\n\t    },\n\t    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n\t      var position = this.progressiveDataLength;\n\t      var beginChunk = Math.floor(position / this.chunkSize);\n\t      this.bytes.set(new Uint8Array(data), position);\n\t      position += data.byteLength;\n\t      this.progressiveDataLength = position;\n\t      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n\t      var curChunk;\n\t      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n\t        if (!this.loadedChunks[curChunk]) {\n\t          this.loadedChunks[curChunk] = true;\n\t          ++this.numChunksLoaded;\n\t        }\n\t      }\n\t    },\n\t    ensureByte: function ChunkedStream_ensureByte(pos) {\n\t      var chunk = Math.floor(pos / this.chunkSize);\n\t      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n\t        return;\n\t      }\n\t      if (!this.loadedChunks[chunk]) {\n\t        throw new _util.MissingDataException(pos, pos + 1);\n\t      }\n\t      this.lastSuccessfulEnsureByteChunk = chunk;\n\t    },\n\t    ensureRange: function ChunkedStream_ensureRange(begin, end) {\n\t      if (begin >= end) {\n\t        return;\n\t      }\n\t      if (end <= this.progressiveDataLength) {\n\t        return;\n\t      }\n\t      var chunkSize = this.chunkSize;\n\t      var beginChunk = Math.floor(begin / chunkSize);\n\t      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n\t      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n\t        if (!this.loadedChunks[chunk]) {\n\t          throw new _util.MissingDataException(begin, end);\n\t        }\n\t      }\n\t    },\n\t    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n\t      var chunk,\n\t          numChunks = this.numChunks;\n\t      for (var i = 0; i < numChunks; ++i) {\n\t        chunk = (beginChunk + i) % numChunks;\n\t        if (!this.loadedChunks[chunk]) {\n\t          return chunk;\n\t        }\n\t      }\n\t      return null;\n\t    },\n\t    hasChunk: function ChunkedStream_hasChunk(chunk) {\n\t      return !!this.loadedChunks[chunk];\n\t    },\n\t    get length() {\n\t      return this.end - this.start;\n\t    },\n\t    get isEmpty() {\n\t      return this.length === 0;\n\t    },\n\t    getByte: function ChunkedStream_getByte() {\n\t      var pos = this.pos;\n\t      if (pos >= this.end) {\n\t        return -1;\n\t      }\n\t      this.ensureByte(pos);\n\t      return this.bytes[this.pos++];\n\t    },\n\t    getUint16: function ChunkedStream_getUint16() {\n\t      var b0 = this.getByte();\n\t      var b1 = this.getByte();\n\t      if (b0 === -1 || b1 === -1) {\n\t        return -1;\n\t      }\n\t      return (b0 << 8) + b1;\n\t    },\n\t    getInt32: function ChunkedStream_getInt32() {\n\t      var b0 = this.getByte();\n\t      var b1 = this.getByte();\n\t      var b2 = this.getByte();\n\t      var b3 = this.getByte();\n\t      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n\t    },\n\t    getBytes: function ChunkedStream_getBytes(length) {\n\t      var bytes = this.bytes;\n\t      var pos = this.pos;\n\t      var strEnd = this.end;\n\t      if (!length) {\n\t        this.ensureRange(pos, strEnd);\n\t        return bytes.subarray(pos, strEnd);\n\t      }\n\t      var end = pos + length;\n\t      if (end > strEnd) {\n\t        end = strEnd;\n\t      }\n\t      this.ensureRange(pos, end);\n\t      this.pos = end;\n\t      return bytes.subarray(pos, end);\n\t    },\n\t    peekByte: function ChunkedStream_peekByte() {\n\t      var peekedByte = this.getByte();\n\t      this.pos--;\n\t      return peekedByte;\n\t    },\n\t    peekBytes: function ChunkedStream_peekBytes(length) {\n\t      var bytes = this.getBytes(length);\n\t      this.pos -= bytes.length;\n\t      return bytes;\n\t    },\n\t    getByteRange: function ChunkedStream_getBytes(begin, end) {\n\t      this.ensureRange(begin, end);\n\t      return this.bytes.subarray(begin, end);\n\t    },\n\t    skip: function ChunkedStream_skip(n) {\n\t      if (!n) {\n\t        n = 1;\n\t      }\n\t      this.pos += n;\n\t    },\n\t    reset: function ChunkedStream_reset() {\n\t      this.pos = this.start;\n\t    },\n\t    moveStart: function ChunkedStream_moveStart() {\n\t      this.start = this.pos;\n\t    },\n\t    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n\t      this.ensureRange(start, start + length);\n\t      function ChunkedStreamSubstream() {}\n\t      ChunkedStreamSubstream.prototype = Object.create(this);\n\t      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n\t        var chunkSize = this.chunkSize;\n\t        var beginChunk = Math.floor(this.start / chunkSize);\n\t        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n\t        var missingChunks = [];\n\t        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n\t          if (!this.loadedChunks[chunk]) {\n\t            missingChunks.push(chunk);\n\t          }\n\t        }\n\t        return missingChunks;\n\t      };\n\t      var subStream = new ChunkedStreamSubstream();\n\t      subStream.pos = subStream.start = start;\n\t      subStream.end = start + length || this.end;\n\t      subStream.dict = dict;\n\t      return subStream;\n\t    }\n\t  };\n\t  return ChunkedStream;\n\t}();\n\tvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n\t  function ChunkedStreamManager(pdfNetworkStream, args) {\n\t    var chunkSize = args.rangeChunkSize;\n\t    var length = args.length;\n\t    this.stream = new ChunkedStream(length, chunkSize, this);\n\t    this.length = length;\n\t    this.chunkSize = chunkSize;\n\t    this.pdfNetworkStream = pdfNetworkStream;\n\t    this.url = args.url;\n\t    this.disableAutoFetch = args.disableAutoFetch;\n\t    this.msgHandler = args.msgHandler;\n\t    this.currRequestId = 0;\n\t    this.chunksNeededByRequest = Object.create(null);\n\t    this.requestsByChunk = Object.create(null);\n\t    this.promisesByRequest = Object.create(null);\n\t    this.progressiveDataLength = 0;\n\t    this.aborted = false;\n\t    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n\t  }\n\t  ChunkedStreamManager.prototype = {\n\t    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n\t      return this._loadedStreamCapability.promise;\n\t    },\n\t    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n\t      var _this = this;\n\t\n\t      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n\t      if (!rangeReader.isStreamingSupported) {\n\t        rangeReader.onProgress = this.onProgress.bind(this);\n\t      }\n\t      var chunks = [],\n\t          loaded = 0;\n\t      var manager = this;\n\t      var promise = new Promise(function (resolve, reject) {\n\t        var readChunk = function readChunk(chunk) {\n\t          try {\n\t            if (!chunk.done) {\n\t              var data = chunk.value;\n\t              chunks.push(data);\n\t              loaded += (0, _util.arrayByteLength)(data);\n\t              if (rangeReader.isStreamingSupported) {\n\t                manager.onProgress({ loaded: loaded });\n\t              }\n\t              rangeReader.read().then(readChunk, reject);\n\t              return;\n\t            }\n\t            var chunkData = (0, _util.arraysToBytes)(chunks);\n\t            chunks = null;\n\t            resolve(chunkData);\n\t          } catch (e) {\n\t            reject(e);\n\t          }\n\t        };\n\t        rangeReader.read().then(readChunk, reject);\n\t      });\n\t      promise.then(function (data) {\n\t        if (_this.aborted) {\n\t          return;\n\t        }\n\t        _this.onReceiveData({\n\t          chunk: data,\n\t          begin: begin\n\t        });\n\t      });\n\t    },\n\t    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n\t      var missingChunks = this.stream.getMissingChunks();\n\t      this._requestChunks(missingChunks);\n\t      return this._loadedStreamCapability.promise;\n\t    },\n\t    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n\t      var requestId = this.currRequestId++;\n\t      var i, ii;\n\t      var chunksNeeded = Object.create(null);\n\t      this.chunksNeededByRequest[requestId] = chunksNeeded;\n\t      for (i = 0, ii = chunks.length; i < ii; i++) {\n\t        if (!this.stream.hasChunk(chunks[i])) {\n\t          chunksNeeded[chunks[i]] = true;\n\t        }\n\t      }\n\t      if ((0, _util.isEmptyObj)(chunksNeeded)) {\n\t        return Promise.resolve();\n\t      }\n\t      var capability = (0, _util.createPromiseCapability)();\n\t      this.promisesByRequest[requestId] = capability;\n\t      var chunksToRequest = [];\n\t      for (var chunk in chunksNeeded) {\n\t        chunk = chunk | 0;\n\t        if (!(chunk in this.requestsByChunk)) {\n\t          this.requestsByChunk[chunk] = [];\n\t          chunksToRequest.push(chunk);\n\t        }\n\t        this.requestsByChunk[chunk].push(requestId);\n\t      }\n\t      if (!chunksToRequest.length) {\n\t        return capability.promise;\n\t      }\n\t      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n\t      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n\t        var groupedChunk = groupedChunksToRequest[i];\n\t        var begin = groupedChunk.beginChunk * this.chunkSize;\n\t        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n\t        this.sendRequest(begin, end);\n\t      }\n\t      return capability.promise;\n\t    },\n\t    getStream: function ChunkedStreamManager_getStream() {\n\t      return this.stream;\n\t    },\n\t    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n\t      end = Math.min(end, this.length);\n\t      var beginChunk = this.getBeginChunk(begin);\n\t      var endChunk = this.getEndChunk(end);\n\t      var chunks = [];\n\t      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n\t        chunks.push(chunk);\n\t      }\n\t      return this._requestChunks(chunks);\n\t    },\n\t    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n\t      ranges = ranges || [];\n\t      var chunksToRequest = [];\n\t      for (var i = 0; i < ranges.length; i++) {\n\t        var beginChunk = this.getBeginChunk(ranges[i].begin);\n\t        var endChunk = this.getEndChunk(ranges[i].end);\n\t        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n\t          if (chunksToRequest.indexOf(chunk) < 0) {\n\t            chunksToRequest.push(chunk);\n\t          }\n\t        }\n\t      }\n\t      chunksToRequest.sort(function (a, b) {\n\t        return a - b;\n\t      });\n\t      return this._requestChunks(chunksToRequest);\n\t    },\n\t    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n\t      var groupedChunks = [];\n\t      var beginChunk = -1;\n\t      var prevChunk = -1;\n\t      for (var i = 0; i < chunks.length; ++i) {\n\t        var chunk = chunks[i];\n\t        if (beginChunk < 0) {\n\t          beginChunk = chunk;\n\t        }\n\t        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n\t          groupedChunks.push({\n\t            beginChunk: beginChunk,\n\t            endChunk: prevChunk + 1\n\t          });\n\t          beginChunk = chunk;\n\t        }\n\t        if (i + 1 === chunks.length) {\n\t          groupedChunks.push({\n\t            beginChunk: beginChunk,\n\t            endChunk: chunk + 1\n\t          });\n\t        }\n\t        prevChunk = chunk;\n\t      }\n\t      return groupedChunks;\n\t    },\n\t    onProgress: function ChunkedStreamManager_onProgress(args) {\n\t      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n\t      this.msgHandler.send('DocProgress', {\n\t        loaded: bytesLoaded,\n\t        total: this.length\n\t      });\n\t    },\n\t    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n\t      var chunk = args.chunk;\n\t      var isProgressive = args.begin === undefined;\n\t      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n\t      var end = begin + chunk.byteLength;\n\t      var beginChunk = Math.floor(begin / this.chunkSize);\n\t      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n\t      if (isProgressive) {\n\t        this.stream.onReceiveProgressiveData(chunk);\n\t        this.progressiveDataLength = end;\n\t      } else {\n\t        this.stream.onReceiveData(begin, chunk);\n\t      }\n\t      if (this.stream.allChunksLoaded()) {\n\t        this._loadedStreamCapability.resolve(this.stream);\n\t      }\n\t      var loadedRequests = [];\n\t      var i, requestId;\n\t      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n\t        var requestIds = this.requestsByChunk[chunk] || [];\n\t        delete this.requestsByChunk[chunk];\n\t        for (i = 0; i < requestIds.length; ++i) {\n\t          requestId = requestIds[i];\n\t          var chunksNeeded = this.chunksNeededByRequest[requestId];\n\t          if (chunk in chunksNeeded) {\n\t            delete chunksNeeded[chunk];\n\t          }\n\t          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\n\t            continue;\n\t          }\n\t          loadedRequests.push(requestId);\n\t        }\n\t      }\n\t      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\n\t        var nextEmptyChunk;\n\t        if (this.stream.numChunksLoaded === 1) {\n\t          var lastChunk = this.stream.numChunks - 1;\n\t          if (!this.stream.hasChunk(lastChunk)) {\n\t            nextEmptyChunk = lastChunk;\n\t          }\n\t        } else {\n\t          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n\t        }\n\t        if (Number.isInteger(nextEmptyChunk)) {\n\t          this._requestChunks([nextEmptyChunk]);\n\t        }\n\t      }\n\t      for (i = 0; i < loadedRequests.length; ++i) {\n\t        requestId = loadedRequests[i];\n\t        var capability = this.promisesByRequest[requestId];\n\t        delete this.promisesByRequest[requestId];\n\t        capability.resolve();\n\t      }\n\t      this.msgHandler.send('DocProgress', {\n\t        loaded: this.stream.numChunksLoaded * this.chunkSize,\n\t        total: this.length\n\t      });\n\t    },\n\t    onError: function ChunkedStreamManager_onError(err) {\n\t      this._loadedStreamCapability.reject(err);\n\t    },\n\t    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n\t      var chunk = Math.floor(begin / this.chunkSize);\n\t      return chunk;\n\t    },\n\t    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n\t      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n\t      return chunk;\n\t    },\n\t    abort: function ChunkedStreamManager_abort() {\n\t      this.aborted = true;\n\t      if (this.pdfNetworkStream) {\n\t        this.pdfNetworkStream.cancelAllRequests('abort');\n\t      }\n\t      for (var requestId in this.promisesByRequest) {\n\t        var capability = this.promisesByRequest[requestId];\n\t        capability.reject(new Error('Request was aborted'));\n\t      }\n\t    }\n\t  };\n\t  return ChunkedStreamManager;\n\t}();\n\texports.ChunkedStream = ChunkedStream;\n\texports.ChunkedStreamManager = ChunkedStreamManager;\n\t\n\t/***/ }),\n\t/* 73 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar _parser = __w_pdfjs_require__(34);\n\t\n\tvar _chunked_stream = __w_pdfjs_require__(72);\n\t\n\tvar _crypto = __w_pdfjs_require__(76);\n\t\n\tvar _colorspace = __w_pdfjs_require__(27);\n\t\n\tvar Catalog = function CatalogClosure() {\n\t  function Catalog(pdfManager, xref, pageFactory) {\n\t    this.pdfManager = pdfManager;\n\t    this.xref = xref;\n\t    this.catDict = xref.getCatalogObj();\n\t    if (!(0, _primitives.isDict)(this.catDict)) {\n\t      throw new _util.FormatError('catalog object is not a dictionary');\n\t    }\n\t    this.fontCache = new _primitives.RefSetCache();\n\t    this.builtInCMapCache = Object.create(null);\n\t    this.pageKidsCountCache = new _primitives.RefSetCache();\n\t    this.pageFactory = pageFactory;\n\t    this.pagePromises = [];\n\t  }\n\t  Catalog.prototype = {\n\t    get metadata() {\n\t      var streamRef = this.catDict.getRaw('Metadata');\n\t      if (!(0, _primitives.isRef)(streamRef)) {\n\t        return (0, _util.shadow)(this, 'metadata', null);\n\t      }\n\t      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n\t      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n\t      var metadata;\n\t      if (stream && (0, _primitives.isDict)(stream.dict)) {\n\t        var type = stream.dict.get('Type');\n\t        var subtype = stream.dict.get('Subtype');\n\t        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\n\t          try {\n\t            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\n\t          } catch (e) {\n\t            if (e instanceof _util.MissingDataException) {\n\t              throw e;\n\t            }\n\t            (0, _util.info)('Skipping invalid metadata.');\n\t          }\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'metadata', metadata);\n\t    },\n\t    get toplevelPagesDict() {\n\t      var pagesObj = this.catDict.get('Pages');\n\t      if (!(0, _primitives.isDict)(pagesObj)) {\n\t        throw new _util.FormatError('invalid top-level pages dictionary');\n\t      }\n\t      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\n\t    },\n\t    get documentOutline() {\n\t      var obj = null;\n\t      try {\n\t        obj = this.readDocumentOutline();\n\t      } catch (ex) {\n\t        if (ex instanceof _util.MissingDataException) {\n\t          throw ex;\n\t        }\n\t        (0, _util.warn)('Unable to read document outline');\n\t      }\n\t      return (0, _util.shadow)(this, 'documentOutline', obj);\n\t    },\n\t    readDocumentOutline: function Catalog_readDocumentOutline() {\n\t      var obj = this.catDict.get('Outlines');\n\t      if (!(0, _primitives.isDict)(obj)) {\n\t        return null;\n\t      }\n\t      obj = obj.getRaw('First');\n\t      if (!(0, _primitives.isRef)(obj)) {\n\t        return null;\n\t      }\n\t      var root = { items: [] };\n\t      var queue = [{\n\t        obj: obj,\n\t        parent: root\n\t      }];\n\t      var processed = new _primitives.RefSet();\n\t      processed.put(obj);\n\t      var xref = this.xref,\n\t          blackColor = new Uint8Array(3);\n\t      while (queue.length > 0) {\n\t        var i = queue.shift();\n\t        var outlineDict = xref.fetchIfRef(i.obj);\n\t        if (outlineDict === null) {\n\t          continue;\n\t        }\n\t        if (!outlineDict.has('Title')) {\n\t          throw new _util.FormatError('Invalid outline item');\n\t        }\n\t        var data = {\n\t          url: null,\n\t          dest: null\n\t        };\n\t        Catalog.parseDestDictionary({\n\t          destDict: outlineDict,\n\t          resultObj: data,\n\t          docBaseUrl: this.pdfManager.docBaseUrl\n\t        });\n\t        var title = outlineDict.get('Title');\n\t        var flags = outlineDict.get('F') || 0;\n\t        var color = outlineDict.getArray('C'),\n\t            rgbColor = blackColor;\n\t        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n\t          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\n\t        }\n\t        var outlineItem = {\n\t          dest: data.dest,\n\t          url: data.url,\n\t          unsafeUrl: data.unsafeUrl,\n\t          newWindow: data.newWindow,\n\t          title: (0, _util.stringToPDFString)(title),\n\t          color: rgbColor,\n\t          count: outlineDict.get('Count'),\n\t          bold: !!(flags & 2),\n\t          italic: !!(flags & 1),\n\t          items: []\n\t        };\n\t        i.parent.items.push(outlineItem);\n\t        obj = outlineDict.getRaw('First');\n\t        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n\t          queue.push({\n\t            obj: obj,\n\t            parent: outlineItem\n\t          });\n\t          processed.put(obj);\n\t        }\n\t        obj = outlineDict.getRaw('Next');\n\t        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n\t          queue.push({\n\t            obj: obj,\n\t            parent: i.parent\n\t          });\n\t          processed.put(obj);\n\t        }\n\t      }\n\t      return root.items.length > 0 ? root.items : null;\n\t    },\n\t    get numPages() {\n\t      var obj = this.toplevelPagesDict.get('Count');\n\t      if (!Number.isInteger(obj)) {\n\t        throw new _util.FormatError('page count in top level pages object is not an integer');\n\t      }\n\t      return (0, _util.shadow)(this, 'numPages', obj);\n\t    },\n\t    get destinations() {\n\t      function fetchDestination(dest) {\n\t        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n\t      }\n\t      var xref = this.xref;\n\t      var dests = {},\n\t          nameTreeRef,\n\t          nameDictionaryRef;\n\t      var obj = this.catDict.get('Names');\n\t      if (obj && obj.has('Dests')) {\n\t        nameTreeRef = obj.getRaw('Dests');\n\t      } else if (this.catDict.has('Dests')) {\n\t        nameDictionaryRef = this.catDict.get('Dests');\n\t      }\n\t      if (nameDictionaryRef) {\n\t        obj = nameDictionaryRef;\n\t        obj.forEach(function catalogForEach(key, value) {\n\t          if (!value) {\n\t            return;\n\t          }\n\t          dests[key] = fetchDestination(value);\n\t        });\n\t      }\n\t      if (nameTreeRef) {\n\t        var nameTree = new NameTree(nameTreeRef, xref);\n\t        var names = nameTree.getAll();\n\t        for (var name in names) {\n\t          dests[name] = fetchDestination(names[name]);\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'destinations', dests);\n\t    },\n\t    getDestination: function Catalog_getDestination(destinationId) {\n\t      function fetchDestination(dest) {\n\t        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n\t      }\n\t      var xref = this.xref;\n\t      var dest = null,\n\t          nameTreeRef,\n\t          nameDictionaryRef;\n\t      var obj = this.catDict.get('Names');\n\t      if (obj && obj.has('Dests')) {\n\t        nameTreeRef = obj.getRaw('Dests');\n\t      } else if (this.catDict.has('Dests')) {\n\t        nameDictionaryRef = this.catDict.get('Dests');\n\t      }\n\t      if (nameDictionaryRef) {\n\t        var value = nameDictionaryRef.get(destinationId);\n\t        if (value) {\n\t          dest = fetchDestination(value);\n\t        }\n\t      }\n\t      if (nameTreeRef) {\n\t        var nameTree = new NameTree(nameTreeRef, xref);\n\t        dest = fetchDestination(nameTree.get(destinationId));\n\t      }\n\t      return dest;\n\t    },\n\t    get pageLabels() {\n\t      var obj = null;\n\t      try {\n\t        obj = this.readPageLabels();\n\t      } catch (ex) {\n\t        if (ex instanceof _util.MissingDataException) {\n\t          throw ex;\n\t        }\n\t        (0, _util.warn)('Unable to read page labels.');\n\t      }\n\t      return (0, _util.shadow)(this, 'pageLabels', obj);\n\t    },\n\t    readPageLabels: function Catalog_readPageLabels() {\n\t      var obj = this.catDict.getRaw('PageLabels');\n\t      if (!obj) {\n\t        return null;\n\t      }\n\t      var pageLabels = new Array(this.numPages);\n\t      var style = null;\n\t      var prefix = '';\n\t      var numberTree = new NumberTree(obj, this.xref);\n\t      var nums = numberTree.getAll();\n\t      var currentLabel = '',\n\t          currentIndex = 1;\n\t      for (var i = 0, ii = this.numPages; i < ii; i++) {\n\t        if (i in nums) {\n\t          var labelDict = nums[i];\n\t          if (!(0, _primitives.isDict)(labelDict)) {\n\t            throw new _util.FormatError('The PageLabel is not a dictionary.');\n\t          }\n\t          var type = labelDict.get('Type');\n\t          if (type && !(0, _primitives.isName)(type, 'PageLabel')) {\n\t            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\n\t          }\n\t          var s = labelDict.get('S');\n\t          if (s && !(0, _primitives.isName)(s)) {\n\t            throw new _util.FormatError('Invalid style in PageLabel dictionary.');\n\t          }\n\t          style = s ? s.name : null;\n\t          var p = labelDict.get('P');\n\t          if (p && !(0, _util.isString)(p)) {\n\t            throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\n\t          }\n\t          prefix = p ? (0, _util.stringToPDFString)(p) : '';\n\t          var st = labelDict.get('St');\n\t          if (st && !(Number.isInteger(st) && st >= 1)) {\n\t            throw new _util.FormatError('Invalid start in PageLabel dictionary.');\n\t          }\n\t          currentIndex = st || 1;\n\t        }\n\t        switch (style) {\n\t          case 'D':\n\t            currentLabel = currentIndex;\n\t            break;\n\t          case 'R':\n\t          case 'r':\n\t            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\n\t            break;\n\t          case 'A':\n\t          case 'a':\n\t            var LIMIT = 26;\n\t            var A_UPPER_CASE = 0x41,\n\t                A_LOWER_CASE = 0x61;\n\t            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n\t            var letterIndex = currentIndex - 1;\n\t            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n\t            var charBuf = [];\n\t            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n\t              charBuf.push(character);\n\t            }\n\t            currentLabel = charBuf.join('');\n\t            break;\n\t          default:\n\t            if (style) {\n\t              throw new _util.FormatError('Invalid style \"' + style + '\" in PageLabel dictionary.');\n\t            }\n\t        }\n\t        pageLabels[i] = prefix + currentLabel;\n\t        currentLabel = '';\n\t        currentIndex++;\n\t      }\n\t      return pageLabels;\n\t    },\n\t    get pageMode() {\n\t      var obj = this.catDict.get('PageMode');\n\t      var pageMode = 'UseNone';\n\t      if ((0, _primitives.isName)(obj)) {\n\t        switch (obj.name) {\n\t          case 'UseNone':\n\t          case 'UseOutlines':\n\t          case 'UseThumbs':\n\t          case 'FullScreen':\n\t          case 'UseOC':\n\t          case 'UseAttachments':\n\t            pageMode = obj.name;\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'pageMode', pageMode);\n\t    },\n\t    get attachments() {\n\t      var xref = this.xref;\n\t      var attachments = null,\n\t          nameTreeRef;\n\t      var obj = this.catDict.get('Names');\n\t      if (obj) {\n\t        nameTreeRef = obj.getRaw('EmbeddedFiles');\n\t      }\n\t      if (nameTreeRef) {\n\t        var nameTree = new NameTree(nameTreeRef, xref);\n\t        var names = nameTree.getAll();\n\t        for (var name in names) {\n\t          var fs = new FileSpec(names[name], xref);\n\t          if (!attachments) {\n\t            attachments = Object.create(null);\n\t          }\n\t          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'attachments', attachments);\n\t    },\n\t    get javaScript() {\n\t      var xref = this.xref;\n\t      var obj = this.catDict.get('Names');\n\t      var javaScript = [];\n\t      function appendIfJavaScriptDict(jsDict) {\n\t        var type = jsDict.get('S');\n\t        if (!(0, _primitives.isName)(type, 'JavaScript')) {\n\t          return;\n\t        }\n\t        var js = jsDict.get('JS');\n\t        if ((0, _primitives.isStream)(js)) {\n\t          js = (0, _util.bytesToString)(js.getBytes());\n\t        } else if (!(0, _util.isString)(js)) {\n\t          return;\n\t        }\n\t        javaScript.push((0, _util.stringToPDFString)(js));\n\t      }\n\t      if (obj && obj.has('JavaScript')) {\n\t        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n\t        var names = nameTree.getAll();\n\t        for (var name in names) {\n\t          var jsDict = names[name];\n\t          if ((0, _primitives.isDict)(jsDict)) {\n\t            appendIfJavaScriptDict(jsDict);\n\t          }\n\t        }\n\t      }\n\t      var openactionDict = this.catDict.get('OpenAction');\n\t      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\n\t        var actionType = openactionDict.get('S');\n\t        if ((0, _primitives.isName)(actionType, 'Named')) {\n\t          var action = openactionDict.get('N');\n\t          if ((0, _primitives.isName)(action, 'Print')) {\n\t            javaScript.push('print({});');\n\t          }\n\t        } else {\n\t          appendIfJavaScriptDict(openactionDict);\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'javaScript', javaScript);\n\t    },\n\t    cleanup: function Catalog_cleanup() {\n\t      var _this = this;\n\t\n\t      this.pageKidsCountCache.clear();\n\t      var promises = [];\n\t      this.fontCache.forEach(function (promise) {\n\t        promises.push(promise);\n\t      });\n\t      return Promise.all(promises).then(function (translatedFonts) {\n\t        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n\t          var font = translatedFonts[i].dict;\n\t          delete font.translated;\n\t        }\n\t        _this.fontCache.clear();\n\t        _this.builtInCMapCache = Object.create(null);\n\t      });\n\t    },\n\t    getPage: function Catalog_getPage(pageIndex) {\n\t      var _this2 = this;\n\t\n\t      if (!(pageIndex in this.pagePromises)) {\n\t        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\n\t          var _ref2 = _slicedToArray(_ref, 2),\n\t              dict = _ref2[0],\n\t              ref = _ref2[1];\n\t\n\t          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\n\t        });\n\t      }\n\t      return this.pagePromises[pageIndex];\n\t    },\n\t    getPageDict: function Catalog_getPageDict(pageIndex) {\n\t      var capability = (0, _util.createPromiseCapability)();\n\t      var nodesToVisit = [this.catDict.getRaw('Pages')];\n\t      var count,\n\t          currentPageIndex = 0;\n\t      var xref = this.xref,\n\t          pageKidsCountCache = this.pageKidsCountCache;\n\t      function next() {\n\t        while (nodesToVisit.length) {\n\t          var currentNode = nodesToVisit.pop();\n\t          if ((0, _primitives.isRef)(currentNode)) {\n\t            count = pageKidsCountCache.get(currentNode);\n\t            if (count > 0 && currentPageIndex + count < pageIndex) {\n\t              currentPageIndex += count;\n\t              continue;\n\t            }\n\t            xref.fetchAsync(currentNode).then(function (obj) {\n\t              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\n\t                if (pageIndex === currentPageIndex) {\n\t                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\n\t                    pageKidsCountCache.put(currentNode, 1);\n\t                  }\n\t                  capability.resolve([obj, currentNode]);\n\t                } else {\n\t                  currentPageIndex++;\n\t                  next();\n\t                }\n\t                return;\n\t              }\n\t              nodesToVisit.push(obj);\n\t              next();\n\t            }, capability.reject);\n\t            return;\n\t          }\n\t          if (!(0, _primitives.isDict)(currentNode)) {\n\t            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\n\t            return;\n\t          }\n\t          count = currentNode.get('Count');\n\t          var objId = currentNode.objId;\n\t          if (objId && !pageKidsCountCache.has(objId)) {\n\t            pageKidsCountCache.put(objId, count);\n\t          }\n\t          if (currentPageIndex + count <= pageIndex) {\n\t            currentPageIndex += count;\n\t            continue;\n\t          }\n\t          var kids = currentNode.get('Kids');\n\t          if (!Array.isArray(kids)) {\n\t            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\n\t            return;\n\t          }\n\t          for (var last = kids.length - 1; last >= 0; last--) {\n\t            nodesToVisit.push(kids[last]);\n\t          }\n\t        }\n\t        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\n\t      }\n\t      next();\n\t      return capability.promise;\n\t    },\n\t    getPageIndex: function Catalog_getPageIndex(pageRef) {\n\t      var xref = this.xref;\n\t      function pagesBeforeRef(kidRef) {\n\t        var total = 0;\n\t        var parentRef;\n\t        return xref.fetchAsync(kidRef).then(function (node) {\n\t          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\n\t            throw new _util.FormatError('The reference does not point to a /Page Dict.');\n\t          }\n\t          if (!node) {\n\t            return null;\n\t          }\n\t          if (!(0, _primitives.isDict)(node)) {\n\t            throw new _util.FormatError('node must be a Dict.');\n\t          }\n\t          parentRef = node.getRaw('Parent');\n\t          return node.getAsync('Parent');\n\t        }).then(function (parent) {\n\t          if (!parent) {\n\t            return null;\n\t          }\n\t          if (!(0, _primitives.isDict)(parent)) {\n\t            throw new _util.FormatError('parent must be a Dict.');\n\t          }\n\t          return parent.getAsync('Kids');\n\t        }).then(function (kids) {\n\t          if (!kids) {\n\t            return null;\n\t          }\n\t          var kidPromises = [];\n\t          var found = false;\n\t          for (var i = 0; i < kids.length; i++) {\n\t            var kid = kids[i];\n\t            if (!(0, _primitives.isRef)(kid)) {\n\t              throw new _util.FormatError('kid must be a Ref.');\n\t            }\n\t            if (kid.num === kidRef.num) {\n\t              found = true;\n\t              break;\n\t            }\n\t            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n\t              if (kid.has('Count')) {\n\t                var count = kid.get('Count');\n\t                total += count;\n\t              } else {\n\t                total++;\n\t              }\n\t            }));\n\t          }\n\t          if (!found) {\n\t            throw new _util.FormatError('kid ref not found in parents kids');\n\t          }\n\t          return Promise.all(kidPromises).then(function () {\n\t            return [total, parentRef];\n\t          });\n\t        });\n\t      }\n\t      var total = 0;\n\t      function next(ref) {\n\t        return pagesBeforeRef(ref).then(function (args) {\n\t          if (!args) {\n\t            return total;\n\t          }\n\t          var count = args[0];\n\t          var parentRef = args[1];\n\t          total += count;\n\t          return next(parentRef);\n\t        });\n\t      }\n\t      return next(pageRef);\n\t    }\n\t  };\n\t  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n\t    function addDefaultProtocolToUrl(url) {\n\t      if (url.indexOf('www.') === 0) {\n\t        return 'http://' + url;\n\t      }\n\t      return url;\n\t    }\n\t    function tryConvertUrlEncoding(url) {\n\t      try {\n\t        return (0, _util.stringToUTF8String)(url);\n\t      } catch (e) {\n\t        return url;\n\t      }\n\t    }\n\t    var destDict = params.destDict;\n\t    if (!(0, _primitives.isDict)(destDict)) {\n\t      (0, _util.warn)('parseDestDictionary: \"destDict\" must be a dictionary.');\n\t      return;\n\t    }\n\t    var resultObj = params.resultObj;\n\t    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\n\t      (0, _util.warn)('parseDestDictionary: \"resultObj\" must be an object.');\n\t      return;\n\t    }\n\t    var docBaseUrl = params.docBaseUrl || null;\n\t    var action = destDict.get('A'),\n\t        url,\n\t        dest;\n\t    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\n\t      action = destDict.get('Dest');\n\t    }\n\t    if ((0, _primitives.isDict)(action)) {\n\t      var actionType = action.get('S');\n\t      if (!(0, _primitives.isName)(actionType)) {\n\t        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\n\t        return;\n\t      }\n\t      var actionName = actionType.name;\n\t      switch (actionName) {\n\t        case 'URI':\n\t          url = action.get('URI');\n\t          if ((0, _primitives.isName)(url)) {\n\t            url = '/' + url.name;\n\t          } else if ((0, _util.isString)(url)) {\n\t            url = addDefaultProtocolToUrl(url);\n\t          }\n\t          break;\n\t        case 'GoTo':\n\t          dest = action.get('D');\n\t          break;\n\t        case 'Launch':\n\t        case 'GoToR':\n\t          var urlDict = action.get('F');\n\t          if ((0, _primitives.isDict)(urlDict)) {\n\t            url = urlDict.get('F') || null;\n\t          } else if ((0, _util.isString)(urlDict)) {\n\t            url = urlDict;\n\t          }\n\t          var remoteDest = action.get('D');\n\t          if (remoteDest) {\n\t            if ((0, _primitives.isName)(remoteDest)) {\n\t              remoteDest = remoteDest.name;\n\t            }\n\t            if ((0, _util.isString)(url)) {\n\t              var baseUrl = url.split('#')[0];\n\t              if ((0, _util.isString)(remoteDest)) {\n\t                url = baseUrl + '#' + remoteDest;\n\t              } else if (Array.isArray(remoteDest)) {\n\t                url = baseUrl + '#' + JSON.stringify(remoteDest);\n\t              }\n\t            }\n\t          }\n\t          var newWindow = action.get('NewWindow');\n\t          if ((0, _util.isBool)(newWindow)) {\n\t            resultObj.newWindow = newWindow;\n\t          }\n\t          break;\n\t        case 'Named':\n\t          var namedAction = action.get('N');\n\t          if ((0, _primitives.isName)(namedAction)) {\n\t            resultObj.action = namedAction.name;\n\t          }\n\t          break;\n\t        case 'JavaScript':\n\t          var jsAction = action.get('JS'),\n\t              js;\n\t          if ((0, _primitives.isStream)(jsAction)) {\n\t            js = (0, _util.bytesToString)(jsAction.getBytes());\n\t          } else if ((0, _util.isString)(jsAction)) {\n\t            js = jsAction;\n\t          }\n\t          if (js) {\n\t            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\n\t            var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n\t            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\n\t            if (jsUrl && jsUrl[2]) {\n\t              url = jsUrl[2];\n\t              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n\t                resultObj.newWindow = true;\n\t              }\n\t              break;\n\t            }\n\t          }\n\t        default:\n\t          (0, _util.warn)('parseDestDictionary: Unsupported Action type \"' + actionName + '\".');\n\t          break;\n\t      }\n\t    } else if (destDict.has('Dest')) {\n\t      dest = destDict.get('Dest');\n\t    }\n\t    if ((0, _util.isString)(url)) {\n\t      url = tryConvertUrlEncoding(url);\n\t      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\n\t      if (absoluteUrl) {\n\t        resultObj.url = absoluteUrl.href;\n\t      }\n\t      resultObj.unsafeUrl = url;\n\t    }\n\t    if (dest) {\n\t      if ((0, _primitives.isName)(dest)) {\n\t        dest = dest.name;\n\t      }\n\t      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\n\t        resultObj.dest = dest;\n\t      }\n\t    }\n\t  };\n\t  return Catalog;\n\t}();\n\tvar XRef = function XRefClosure() {\n\t  function XRef(stream, pdfManager) {\n\t    this.stream = stream;\n\t    this.pdfManager = pdfManager;\n\t    this.entries = [];\n\t    this.xrefstms = Object.create(null);\n\t    this.cache = [];\n\t    this.stats = {\n\t      streamTypes: [],\n\t      fontTypes: []\n\t    };\n\t  }\n\t  XRef.prototype = {\n\t    setStartXRef: function XRef_setStartXRef(startXRef) {\n\t      this.startXRefQueue = [startXRef];\n\t    },\n\t    parse: function XRef_parse(recoveryMode) {\n\t      var trailerDict;\n\t      if (!recoveryMode) {\n\t        trailerDict = this.readXRef();\n\t      } else {\n\t        (0, _util.warn)('Indexing all PDF objects');\n\t        trailerDict = this.indexObjects();\n\t      }\n\t      trailerDict.assignXref(this);\n\t      this.trailer = trailerDict;\n\t      var encrypt = trailerDict.get('Encrypt');\n\t      if ((0, _primitives.isDict)(encrypt)) {\n\t        var ids = trailerDict.get('ID');\n\t        var fileId = ids && ids.length ? ids[0] : '';\n\t        encrypt.suppressEncryption = true;\n\t        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n\t      }\n\t      if (!(this.root = trailerDict.get('Root'))) {\n\t        throw new _util.FormatError('Invalid root reference');\n\t      }\n\t    },\n\t    processXRefTable: function XRef_processXRefTable(parser) {\n\t      if (!('tableState' in this)) {\n\t        this.tableState = {\n\t          entryNum: 0,\n\t          streamPos: parser.lexer.stream.pos,\n\t          parserBuf1: parser.buf1,\n\t          parserBuf2: parser.buf2\n\t        };\n\t      }\n\t      var obj = this.readXRefTable(parser);\n\t      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n\t        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\n\t      }\n\t      var dict = parser.getObj();\n\t      if (!(0, _primitives.isDict)(dict) && dict.dict) {\n\t        dict = dict.dict;\n\t      }\n\t      if (!(0, _primitives.isDict)(dict)) {\n\t        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\n\t      }\n\t      delete this.tableState;\n\t      return dict;\n\t    },\n\t    readXRefTable: function XRef_readXRefTable(parser) {\n\t      var stream = parser.lexer.stream;\n\t      var tableState = this.tableState;\n\t      stream.pos = tableState.streamPos;\n\t      parser.buf1 = tableState.parserBuf1;\n\t      parser.buf2 = tableState.parserBuf2;\n\t      var obj;\n\t      while (true) {\n\t        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n\t          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\n\t            break;\n\t          }\n\t          tableState.firstEntryNum = obj;\n\t          tableState.entryCount = parser.getObj();\n\t        }\n\t        var first = tableState.firstEntryNum;\n\t        var count = tableState.entryCount;\n\t        if (!Number.isInteger(first) || !Number.isInteger(count)) {\n\t          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\n\t        }\n\t        for (var i = tableState.entryNum; i < count; i++) {\n\t          tableState.streamPos = stream.pos;\n\t          tableState.entryNum = i;\n\t          tableState.parserBuf1 = parser.buf1;\n\t          tableState.parserBuf2 = parser.buf2;\n\t          var entry = {};\n\t          entry.offset = parser.getObj();\n\t          entry.gen = parser.getObj();\n\t          var type = parser.getObj();\n\t          if ((0, _primitives.isCmd)(type, 'f')) {\n\t            entry.free = true;\n\t          } else if ((0, _primitives.isCmd)(type, 'n')) {\n\t            entry.uncompressed = true;\n\t          }\n\t          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n\t            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\n\t          }\n\t          if (i === 0 && entry.free && first === 1) {\n\t            first = 0;\n\t          }\n\t          if (!this.entries[i + first]) {\n\t            this.entries[i + first] = entry;\n\t          }\n\t        }\n\t        tableState.entryNum = 0;\n\t        tableState.streamPos = stream.pos;\n\t        tableState.parserBuf1 = parser.buf1;\n\t        tableState.parserBuf2 = parser.buf2;\n\t        delete tableState.firstEntryNum;\n\t        delete tableState.entryCount;\n\t      }\n\t      if (this.entries[0] && !this.entries[0].free) {\n\t        throw new _util.FormatError('Invalid XRef table: unexpected first object');\n\t      }\n\t      return obj;\n\t    },\n\t    processXRefStream: function XRef_processXRefStream(stream) {\n\t      if (!('streamState' in this)) {\n\t        var streamParameters = stream.dict;\n\t        var byteWidths = streamParameters.get('W');\n\t        var range = streamParameters.get('Index');\n\t        if (!range) {\n\t          range = [0, streamParameters.get('Size')];\n\t        }\n\t        this.streamState = {\n\t          entryRanges: range,\n\t          byteWidths: byteWidths,\n\t          entryNum: 0,\n\t          streamPos: stream.pos\n\t        };\n\t      }\n\t      this.readXRefStream(stream);\n\t      delete this.streamState;\n\t      return stream.dict;\n\t    },\n\t    readXRefStream: function XRef_readXRefStream(stream) {\n\t      var i, j;\n\t      var streamState = this.streamState;\n\t      stream.pos = streamState.streamPos;\n\t      var byteWidths = streamState.byteWidths;\n\t      var typeFieldWidth = byteWidths[0];\n\t      var offsetFieldWidth = byteWidths[1];\n\t      var generationFieldWidth = byteWidths[2];\n\t      var entryRanges = streamState.entryRanges;\n\t      while (entryRanges.length > 0) {\n\t        var first = entryRanges[0];\n\t        var n = entryRanges[1];\n\t        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n\t          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\n\t        }\n\t        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n\t          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\n\t        }\n\t        for (i = streamState.entryNum; i < n; ++i) {\n\t          streamState.entryNum = i;\n\t          streamState.streamPos = stream.pos;\n\t          var type = 0,\n\t              offset = 0,\n\t              generation = 0;\n\t          for (j = 0; j < typeFieldWidth; ++j) {\n\t            type = type << 8 | stream.getByte();\n\t          }\n\t          if (typeFieldWidth === 0) {\n\t            type = 1;\n\t          }\n\t          for (j = 0; j < offsetFieldWidth; ++j) {\n\t            offset = offset << 8 | stream.getByte();\n\t          }\n\t          for (j = 0; j < generationFieldWidth; ++j) {\n\t            generation = generation << 8 | stream.getByte();\n\t          }\n\t          var entry = {};\n\t          entry.offset = offset;\n\t          entry.gen = generation;\n\t          switch (type) {\n\t            case 0:\n\t              entry.free = true;\n\t              break;\n\t            case 1:\n\t              entry.uncompressed = true;\n\t              break;\n\t            case 2:\n\t              break;\n\t            default:\n\t              throw new _util.FormatError('Invalid XRef entry type: ' + type);\n\t          }\n\t          if (!this.entries[first + i]) {\n\t            this.entries[first + i] = entry;\n\t          }\n\t        }\n\t        streamState.entryNum = 0;\n\t        streamState.streamPos = stream.pos;\n\t        entryRanges.splice(0, 2);\n\t      }\n\t    },\n\t    indexObjects: function XRef_indexObjects() {\n\t      var TAB = 0x9,\n\t          LF = 0xA,\n\t          CR = 0xD,\n\t          SPACE = 0x20;\n\t      var PERCENT = 0x25,\n\t          LT = 0x3C;\n\t      function readToken(data, offset) {\n\t        var token = '',\n\t            ch = data[offset];\n\t        while (ch !== LF && ch !== CR && ch !== LT) {\n\t          if (++offset >= data.length) {\n\t            break;\n\t          }\n\t          token += String.fromCharCode(ch);\n\t          ch = data[offset];\n\t        }\n\t        return token;\n\t      }\n\t      function skipUntil(data, offset, what) {\n\t        var length = what.length,\n\t            dataLength = data.length;\n\t        var skipped = 0;\n\t        while (offset < dataLength) {\n\t          var i = 0;\n\t          while (i < length && data[offset + i] === what[i]) {\n\t            ++i;\n\t          }\n\t          if (i >= length) {\n\t            break;\n\t          }\n\t          offset++;\n\t          skipped++;\n\t        }\n\t        return skipped;\n\t      }\n\t      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n\t      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n\t      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n\t      var endobjBytes = new Uint8Array([101, 110, 100, 111, 98, 106]);\n\t      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n\t      this.entries.length = 0;\n\t      var stream = this.stream;\n\t      stream.pos = 0;\n\t      var buffer = stream.getBytes();\n\t      var position = stream.start,\n\t          length = buffer.length;\n\t      var trailers = [],\n\t          xrefStms = [];\n\t      while (position < length) {\n\t        var ch = buffer[position];\n\t        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n\t          ++position;\n\t          continue;\n\t        }\n\t        if (ch === PERCENT) {\n\t          do {\n\t            ++position;\n\t            if (position >= length) {\n\t              break;\n\t            }\n\t            ch = buffer[position];\n\t          } while (ch !== LF && ch !== CR);\n\t          continue;\n\t        }\n\t        var token = readToken(buffer, position);\n\t        var m;\n\t        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n\t          position += skipUntil(buffer, position, trailerBytes);\n\t          trailers.push(position);\n\t          position += skipUntil(buffer, position, startxrefBytes);\n\t        } else if (m = objRegExp.exec(token)) {\n\t          if (typeof this.entries[m[1]] === 'undefined') {\n\t            this.entries[m[1]] = {\n\t              offset: position - stream.start,\n\t              gen: m[2] | 0,\n\t              uncompressed: true\n\t            };\n\t          }\n\t          var contentLength = skipUntil(buffer, position, endobjBytes) + 7;\n\t          var content = buffer.subarray(position, position + contentLength);\n\t          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n\t          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n\t            xrefStms.push(position - stream.start);\n\t            this.xrefstms[position - stream.start] = 1;\n\t          }\n\t          position += contentLength;\n\t        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n\t          trailers.push(position);\n\t          position += skipUntil(buffer, position, startxrefBytes);\n\t        } else {\n\t          position += token.length + 1;\n\t        }\n\t      }\n\t      var i, ii;\n\t      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n\t        this.startXRefQueue.push(xrefStms[i]);\n\t        this.readXRef(true);\n\t      }\n\t      var dict;\n\t      for (i = 0, ii = trailers.length; i < ii; ++i) {\n\t        stream.pos = trailers[i];\n\t        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\n\t        var obj = parser.getObj();\n\t        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n\t          continue;\n\t        }\n\t        dict = parser.getObj();\n\t        if (!(0, _primitives.isDict)(dict)) {\n\t          continue;\n\t        }\n\t        if (dict.has('ID')) {\n\t          return dict;\n\t        }\n\t      }\n\t      if (dict) {\n\t        return dict;\n\t      }\n\t      throw new _util.InvalidPDFException('Invalid PDF structure');\n\t    },\n\t    readXRef: function XRef_readXRef(recoveryMode) {\n\t      var stream = this.stream;\n\t      var startXRefParsedCache = Object.create(null);\n\t      try {\n\t        while (this.startXRefQueue.length) {\n\t          var startXRef = this.startXRefQueue[0];\n\t          if (startXRefParsedCache[startXRef]) {\n\t            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\n\t            this.startXRefQueue.shift();\n\t            continue;\n\t          }\n\t          startXRefParsedCache[startXRef] = true;\n\t          stream.pos = startXRef + stream.start;\n\t          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n\t          var obj = parser.getObj();\n\t          var dict;\n\t          if ((0, _primitives.isCmd)(obj, 'xref')) {\n\t            dict = this.processXRefTable(parser);\n\t            if (!this.topDict) {\n\t              this.topDict = dict;\n\t            }\n\t            obj = dict.get('XRefStm');\n\t            if (Number.isInteger(obj)) {\n\t              var pos = obj;\n\t              if (!(pos in this.xrefstms)) {\n\t                this.xrefstms[pos] = 1;\n\t                this.startXRefQueue.push(pos);\n\t              }\n\t            }\n\t          } else if (Number.isInteger(obj)) {\n\t            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\n\t              throw new _util.FormatError('Invalid XRef stream');\n\t            }\n\t            dict = this.processXRefStream(obj);\n\t            if (!this.topDict) {\n\t              this.topDict = dict;\n\t            }\n\t            if (!dict) {\n\t              throw new _util.FormatError('Failed to read XRef stream');\n\t            }\n\t          } else {\n\t            throw new _util.FormatError('Invalid XRef stream header');\n\t          }\n\t          obj = dict.get('Prev');\n\t          if (Number.isInteger(obj)) {\n\t            this.startXRefQueue.push(obj);\n\t          } else if ((0, _primitives.isRef)(obj)) {\n\t            this.startXRefQueue.push(obj.num);\n\t          }\n\t          this.startXRefQueue.shift();\n\t        }\n\t        return this.topDict;\n\t      } catch (e) {\n\t        if (e instanceof _util.MissingDataException) {\n\t          throw e;\n\t        }\n\t        (0, _util.info)('(while reading XRef): ' + e);\n\t      }\n\t      if (recoveryMode) {\n\t        return;\n\t      }\n\t      throw new _util.XRefParseException();\n\t    },\n\t    getEntry: function XRef_getEntry(i) {\n\t      var xrefEntry = this.entries[i];\n\t      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n\t        return xrefEntry;\n\t      }\n\t      return null;\n\t    },\n\t    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n\t      if (!(0, _primitives.isRef)(obj)) {\n\t        return obj;\n\t      }\n\t      return this.fetch(obj, suppressEncryption);\n\t    },\n\t    fetch: function XRef_fetch(ref, suppressEncryption) {\n\t      if (!(0, _primitives.isRef)(ref)) {\n\t        throw new Error('ref object is not a reference');\n\t      }\n\t      var num = ref.num;\n\t      if (num in this.cache) {\n\t        var cacheEntry = this.cache[num];\n\t        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\n\t          cacheEntry.objId = ref.toString();\n\t        }\n\t        return cacheEntry;\n\t      }\n\t      var xrefEntry = this.getEntry(num);\n\t      if (xrefEntry === null) {\n\t        return this.cache[num] = null;\n\t      }\n\t      if (xrefEntry.uncompressed) {\n\t        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n\t      } else {\n\t        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n\t      }\n\t      if ((0, _primitives.isDict)(xrefEntry)) {\n\t        xrefEntry.objId = ref.toString();\n\t      } else if ((0, _primitives.isStream)(xrefEntry)) {\n\t        xrefEntry.dict.objId = ref.toString();\n\t      }\n\t      return xrefEntry;\n\t    },\n\t    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n\t      var gen = ref.gen;\n\t      var num = ref.num;\n\t      if (xrefEntry.gen !== gen) {\n\t        throw new _util.FormatError('inconsistent generation in XRef');\n\t      }\n\t      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n\t      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n\t      var obj1 = parser.getObj();\n\t      var obj2 = parser.getObj();\n\t      var obj3 = parser.getObj();\n\t      if (!Number.isInteger(obj1)) {\n\t        obj1 = parseInt(obj1, 10);\n\t      }\n\t      if (!Number.isInteger(obj2)) {\n\t        obj2 = parseInt(obj2, 10);\n\t      }\n\t      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\n\t        throw new _util.FormatError('bad XRef entry');\n\t      }\n\t      if (obj3.cmd !== 'obj') {\n\t        if (obj3.cmd.indexOf('obj') === 0) {\n\t          num = parseInt(obj3.cmd.substring(3), 10);\n\t          if (!Number.isNaN(num)) {\n\t            return num;\n\t          }\n\t        }\n\t        throw new _util.FormatError('bad XRef entry');\n\t      }\n\t      if (this.encrypt && !suppressEncryption) {\n\t        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n\t      } else {\n\t        xrefEntry = parser.getObj();\n\t      }\n\t      if (!(0, _primitives.isStream)(xrefEntry)) {\n\t        this.cache[num] = xrefEntry;\n\t      }\n\t      return xrefEntry;\n\t    },\n\t    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n\t      var tableOffset = xrefEntry.offset;\n\t      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\n\t      if (!(0, _primitives.isStream)(stream)) {\n\t        throw new _util.FormatError('bad ObjStm stream');\n\t      }\n\t      var first = stream.dict.get('First');\n\t      var n = stream.dict.get('N');\n\t      if (!Number.isInteger(first) || !Number.isInteger(n)) {\n\t        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\n\t      }\n\t      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\n\t      parser.allowStreams = true;\n\t      var i,\n\t          entries = [],\n\t          num,\n\t          nums = [];\n\t      for (i = 0; i < n; ++i) {\n\t        num = parser.getObj();\n\t        if (!Number.isInteger(num)) {\n\t          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\n\t        }\n\t        nums.push(num);\n\t        var offset = parser.getObj();\n\t        if (!Number.isInteger(offset)) {\n\t          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\n\t        }\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        entries.push(parser.getObj());\n\t        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\n\t          parser.shift();\n\t        }\n\t        num = nums[i];\n\t        var entry = this.entries[num];\n\t        if (entry && entry.offset === tableOffset && entry.gen === i) {\n\t          this.cache[num] = entries[i];\n\t        }\n\t      }\n\t      xrefEntry = entries[xrefEntry.gen];\n\t      if (xrefEntry === undefined) {\n\t        throw new _util.FormatError('bad XRef entry for compressed object');\n\t      }\n\t      return xrefEntry;\n\t    },\n\t    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n\t      if (!(0, _primitives.isRef)(obj)) {\n\t        return Promise.resolve(obj);\n\t      }\n\t      return this.fetchAsync(obj, suppressEncryption);\n\t    },\n\t    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n\t      var streamManager = this.stream.manager;\n\t      var xref = this;\n\t      return new Promise(function tryFetch(resolve, reject) {\n\t        try {\n\t          resolve(xref.fetch(ref, suppressEncryption));\n\t        } catch (e) {\n\t          if (e instanceof _util.MissingDataException) {\n\t            streamManager.requestRange(e.begin, e.end).then(function () {\n\t              tryFetch(resolve, reject);\n\t            }, reject);\n\t            return;\n\t          }\n\t          reject(e);\n\t        }\n\t      });\n\t    },\n\t    getCatalogObj: function XRef_getCatalogObj() {\n\t      return this.root;\n\t    }\n\t  };\n\t  return XRef;\n\t}();\n\tvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n\t  function NameOrNumberTree(root, xref) {\n\t    throw new Error('Cannot initialize NameOrNumberTree.');\n\t  }\n\t  NameOrNumberTree.prototype = {\n\t    getAll: function NameOrNumberTree_getAll() {\n\t      var dict = Object.create(null);\n\t      if (!this.root) {\n\t        return dict;\n\t      }\n\t      var xref = this.xref;\n\t      var processed = new _primitives.RefSet();\n\t      processed.put(this.root);\n\t      var queue = [this.root];\n\t      while (queue.length > 0) {\n\t        var i, n;\n\t        var obj = xref.fetchIfRef(queue.shift());\n\t        if (!(0, _primitives.isDict)(obj)) {\n\t          continue;\n\t        }\n\t        if (obj.has('Kids')) {\n\t          var kids = obj.get('Kids');\n\t          for (i = 0, n = kids.length; i < n; i++) {\n\t            var kid = kids[i];\n\t            if (processed.has(kid)) {\n\t              throw new _util.FormatError('Duplicate entry in \"' + this._type + '\" tree.');\n\t            }\n\t            queue.push(kid);\n\t            processed.put(kid);\n\t          }\n\t          continue;\n\t        }\n\t        var entries = obj.get(this._type);\n\t        if (Array.isArray(entries)) {\n\t          for (i = 0, n = entries.length; i < n; i += 2) {\n\t            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n\t          }\n\t        }\n\t      }\n\t      return dict;\n\t    },\n\t    get: function NameOrNumberTree_get(key) {\n\t      if (!this.root) {\n\t        return null;\n\t      }\n\t      var xref = this.xref;\n\t      var kidsOrEntries = xref.fetchIfRef(this.root);\n\t      var loopCount = 0;\n\t      var MAX_LEVELS = 10;\n\t      var l, r, m;\n\t      while (kidsOrEntries.has('Kids')) {\n\t        if (++loopCount > MAX_LEVELS) {\n\t          (0, _util.warn)('Search depth limit reached for \"' + this._type + '\" tree.');\n\t          return null;\n\t        }\n\t        var kids = kidsOrEntries.get('Kids');\n\t        if (!Array.isArray(kids)) {\n\t          return null;\n\t        }\n\t        l = 0;\n\t        r = kids.length - 1;\n\t        while (l <= r) {\n\t          m = l + r >> 1;\n\t          var kid = xref.fetchIfRef(kids[m]);\n\t          var limits = kid.get('Limits');\n\t          if (key < xref.fetchIfRef(limits[0])) {\n\t            r = m - 1;\n\t          } else if (key > xref.fetchIfRef(limits[1])) {\n\t            l = m + 1;\n\t          } else {\n\t            kidsOrEntries = xref.fetchIfRef(kids[m]);\n\t            break;\n\t          }\n\t        }\n\t        if (l > r) {\n\t          return null;\n\t        }\n\t      }\n\t      var entries = kidsOrEntries.get(this._type);\n\t      if (Array.isArray(entries)) {\n\t        l = 0;\n\t        r = entries.length - 2;\n\t        while (l <= r) {\n\t          m = l + r & ~1;\n\t          var currentKey = xref.fetchIfRef(entries[m]);\n\t          if (key < currentKey) {\n\t            r = m - 2;\n\t          } else if (key > currentKey) {\n\t            l = m + 2;\n\t          } else {\n\t            return xref.fetchIfRef(entries[m + 1]);\n\t          }\n\t        }\n\t      }\n\t      return null;\n\t    }\n\t  };\n\t  return NameOrNumberTree;\n\t}();\n\tvar NameTree = function NameTreeClosure() {\n\t  function NameTree(root, xref) {\n\t    this.root = root;\n\t    this.xref = xref;\n\t    this._type = 'Names';\n\t  }\n\t  _util.Util.inherit(NameTree, NameOrNumberTree, {});\n\t  return NameTree;\n\t}();\n\tvar NumberTree = function NumberTreeClosure() {\n\t  function NumberTree(root, xref) {\n\t    this.root = root;\n\t    this.xref = xref;\n\t    this._type = 'Nums';\n\t  }\n\t  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\n\t  return NumberTree;\n\t}();\n\tvar FileSpec = function FileSpecClosure() {\n\t  function FileSpec(root, xref) {\n\t    if (!root || !(0, _primitives.isDict)(root)) {\n\t      return;\n\t    }\n\t    this.xref = xref;\n\t    this.root = root;\n\t    if (root.has('FS')) {\n\t      this.fs = root.get('FS');\n\t    }\n\t    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\n\t    if (root.has('RF')) {\n\t      (0, _util.warn)('Related file specifications are not supported');\n\t    }\n\t    this.contentAvailable = true;\n\t    if (!root.has('EF')) {\n\t      this.contentAvailable = false;\n\t      (0, _util.warn)('Non-embedded file specifications are not supported');\n\t    }\n\t  }\n\t  function pickPlatformItem(dict) {\n\t    if (dict.has('UF')) {\n\t      return dict.get('UF');\n\t    } else if (dict.has('F')) {\n\t      return dict.get('F');\n\t    } else if (dict.has('Unix')) {\n\t      return dict.get('Unix');\n\t    } else if (dict.has('Mac')) {\n\t      return dict.get('Mac');\n\t    } else if (dict.has('DOS')) {\n\t      return dict.get('DOS');\n\t    }\n\t    return null;\n\t  }\n\t  FileSpec.prototype = {\n\t    get filename() {\n\t      if (!this._filename && this.root) {\n\t        var filename = pickPlatformItem(this.root) || 'unnamed';\n\t        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n\t      }\n\t      return this._filename;\n\t    },\n\t    get content() {\n\t      if (!this.contentAvailable) {\n\t        return null;\n\t      }\n\t      if (!this.contentRef && this.root) {\n\t        this.contentRef = pickPlatformItem(this.root.get('EF'));\n\t      }\n\t      var content = null;\n\t      if (this.contentRef) {\n\t        var xref = this.xref;\n\t        var fileObj = xref.fetchIfRef(this.contentRef);\n\t        if (fileObj && (0, _primitives.isStream)(fileObj)) {\n\t          content = fileObj.getBytes();\n\t        } else {\n\t          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\n\t        }\n\t      } else {\n\t        (0, _util.warn)('Embedded file specification does not have a content');\n\t      }\n\t      return content;\n\t    },\n\t    get serializable() {\n\t      return {\n\t        filename: this.filename,\n\t        content: this.content\n\t      };\n\t    }\n\t  };\n\t  return FileSpec;\n\t}();\n\tvar ObjectLoader = function () {\n\t  function mayHaveChildren(value) {\n\t    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\n\t  }\n\t  function addChildren(node, nodesToVisit) {\n\t    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\n\t      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\n\t      var dictKeys = dict.getKeys();\n\t      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\n\t        var rawValue = dict.getRaw(dictKeys[i]);\n\t        if (mayHaveChildren(rawValue)) {\n\t          nodesToVisit.push(rawValue);\n\t        }\n\t      }\n\t    } else if (Array.isArray(node)) {\n\t      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\n\t        var value = node[_i];\n\t        if (mayHaveChildren(value)) {\n\t          nodesToVisit.push(value);\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function ObjectLoader(dict, keys, xref) {\n\t    this.dict = dict;\n\t    this.keys = keys;\n\t    this.xref = xref;\n\t    this.refSet = null;\n\t    this.capability = null;\n\t  }\n\t  ObjectLoader.prototype = {\n\t    load: function load() {\n\t      this.capability = (0, _util.createPromiseCapability)();\n\t      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n\t        this.capability.resolve();\n\t        return this.capability.promise;\n\t      }\n\t      var keys = this.keys,\n\t          dict = this.dict;\n\t\n\t      this.refSet = new _primitives.RefSet();\n\t      var nodesToVisit = [];\n\t      for (var i = 0, ii = keys.length; i < ii; i++) {\n\t        var rawValue = dict.getRaw(keys[i]);\n\t        if (rawValue !== undefined) {\n\t          nodesToVisit.push(rawValue);\n\t        }\n\t      }\n\t      this._walk(nodesToVisit);\n\t      return this.capability.promise;\n\t    },\n\t    _walk: function _walk(nodesToVisit) {\n\t      var _this3 = this;\n\t\n\t      var nodesToRevisit = [];\n\t      var pendingRequests = [];\n\t      while (nodesToVisit.length) {\n\t        var currentNode = nodesToVisit.pop();\n\t        if ((0, _primitives.isRef)(currentNode)) {\n\t          if (this.refSet.has(currentNode)) {\n\t            continue;\n\t          }\n\t          try {\n\t            this.refSet.put(currentNode);\n\t            currentNode = this.xref.fetch(currentNode);\n\t          } catch (ex) {\n\t            if (!(ex instanceof _util.MissingDataException)) {\n\t              throw ex;\n\t            }\n\t            nodesToRevisit.push(currentNode);\n\t            pendingRequests.push({\n\t              begin: ex.begin,\n\t              end: ex.end\n\t            });\n\t          }\n\t        }\n\t        if (currentNode && currentNode.getBaseStreams) {\n\t          var baseStreams = currentNode.getBaseStreams();\n\t          var foundMissingData = false;\n\t          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\n\t            var stream = baseStreams[i];\n\t            if (stream.getMissingChunks && stream.getMissingChunks().length) {\n\t              foundMissingData = true;\n\t              pendingRequests.push({\n\t                begin: stream.start,\n\t                end: stream.end\n\t              });\n\t            }\n\t          }\n\t          if (foundMissingData) {\n\t            nodesToRevisit.push(currentNode);\n\t          }\n\t        }\n\t        addChildren(currentNode, nodesToVisit);\n\t      }\n\t      if (pendingRequests.length) {\n\t        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\n\t          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\n\t            var node = nodesToRevisit[_i2];\n\t            if ((0, _primitives.isRef)(node)) {\n\t              _this3.refSet.remove(node);\n\t            }\n\t          }\n\t          _this3._walk(nodesToRevisit);\n\t        }, this.capability.reject);\n\t        return;\n\t      }\n\t      this.refSet = null;\n\t      this.capability.resolve();\n\t    }\n\t  };\n\t  return ObjectLoader;\n\t}();\n\texports.Catalog = Catalog;\n\texports.ObjectLoader = ObjectLoader;\n\texports.XRef = XRef;\n\texports.FileSpec = FileSpec;\n\t\n\t/***/ }),\n\t/* 74 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.JpxImage = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _arithmetic_decoder = __w_pdfjs_require__(75);\n\t\n\tvar JpxError = function JpxErrorClosure() {\n\t  function JpxError(msg) {\n\t    this.message = 'JPX error: ' + msg;\n\t  }\n\t  JpxError.prototype = new Error();\n\t  JpxError.prototype.name = 'JpxError';\n\t  JpxError.constructor = JpxError;\n\t  return JpxError;\n\t}();\n\tvar JpxImage = function JpxImageClosure() {\n\t  var SubbandsGainLog2 = {\n\t    'LL': 0,\n\t    'LH': 1,\n\t    'HL': 1,\n\t    'HH': 2\n\t  };\n\t  function JpxImage() {\n\t    this.failOnCorruptedImage = false;\n\t  }\n\t  JpxImage.prototype = {\n\t    parse: function JpxImage_parse(data) {\n\t      var head = (0, _util.readUint16)(data, 0);\n\t      if (head === 0xFF4F) {\n\t        this.parseCodestream(data, 0, data.length);\n\t        return;\n\t      }\n\t      var position = 0,\n\t          length = data.length;\n\t      while (position < length) {\n\t        var headerSize = 8;\n\t        var lbox = (0, _util.readUint32)(data, position);\n\t        var tbox = (0, _util.readUint32)(data, position + 4);\n\t        position += headerSize;\n\t        if (lbox === 1) {\n\t          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\n\t          position += 8;\n\t          headerSize += 8;\n\t        }\n\t        if (lbox === 0) {\n\t          lbox = length - position + headerSize;\n\t        }\n\t        if (lbox < headerSize) {\n\t          throw new JpxError('Invalid box field size');\n\t        }\n\t        var dataLength = lbox - headerSize;\n\t        var jumpDataLength = true;\n\t        switch (tbox) {\n\t          case 0x6A703268:\n\t            jumpDataLength = false;\n\t            break;\n\t          case 0x636F6C72:\n\t            var method = data[position];\n\t            if (method === 1) {\n\t              var colorspace = (0, _util.readUint32)(data, position + 3);\n\t              switch (colorspace) {\n\t                case 16:\n\t                case 17:\n\t                case 18:\n\t                  break;\n\t                default:\n\t                  (0, _util.warn)('Unknown colorspace ' + colorspace);\n\t                  break;\n\t              }\n\t            } else if (method === 2) {\n\t              (0, _util.info)('ICC profile not supported');\n\t            }\n\t            break;\n\t          case 0x6A703263:\n\t            this.parseCodestream(data, position, position + dataLength);\n\t            break;\n\t          case 0x6A502020:\n\t            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\n\t              (0, _util.warn)('Invalid JP2 signature');\n\t            }\n\t            break;\n\t          case 0x6A501A1A:\n\t          case 0x66747970:\n\t          case 0x72726571:\n\t          case 0x72657320:\n\t          case 0x69686472:\n\t            break;\n\t          default:\n\t            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n\t            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\n\t            break;\n\t        }\n\t        if (jumpDataLength) {\n\t          position += dataLength;\n\t        }\n\t      }\n\t    },\n\t    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n\t      var newByte = stream.getByte();\n\t      while (newByte >= 0) {\n\t        var oldByte = newByte;\n\t        newByte = stream.getByte();\n\t        var code = oldByte << 8 | newByte;\n\t        if (code === 0xFF51) {\n\t          stream.skip(4);\n\t          var Xsiz = stream.getInt32() >>> 0;\n\t          var Ysiz = stream.getInt32() >>> 0;\n\t          var XOsiz = stream.getInt32() >>> 0;\n\t          var YOsiz = stream.getInt32() >>> 0;\n\t          stream.skip(16);\n\t          var Csiz = stream.getUint16();\n\t          this.width = Xsiz - XOsiz;\n\t          this.height = Ysiz - YOsiz;\n\t          this.componentsCount = Csiz;\n\t          this.bitsPerComponent = 8;\n\t          return;\n\t        }\n\t      }\n\t      throw new JpxError('No size marker found in JPX stream');\n\t    },\n\t    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n\t      var context = {};\n\t      var doNotRecover = false;\n\t      try {\n\t        var position = start;\n\t        while (position + 1 < end) {\n\t          var code = (0, _util.readUint16)(data, position);\n\t          position += 2;\n\t          var length = 0,\n\t              j,\n\t              sqcd,\n\t              spqcds,\n\t              spqcdSize,\n\t              scalarExpounded,\n\t              tile;\n\t          switch (code) {\n\t            case 0xFF4F:\n\t              context.mainHeader = true;\n\t              break;\n\t            case 0xFFD9:\n\t              break;\n\t            case 0xFF51:\n\t              length = (0, _util.readUint16)(data, position);\n\t              var siz = {};\n\t              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\n\t              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\n\t              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\n\t              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\n\t              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\n\t              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\n\t              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\n\t              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\n\t              var componentsCount = (0, _util.readUint16)(data, position + 36);\n\t              siz.Csiz = componentsCount;\n\t              var components = [];\n\t              j = position + 38;\n\t              for (var i = 0; i < componentsCount; i++) {\n\t                var component = {\n\t                  precision: (data[j] & 0x7F) + 1,\n\t                  isSigned: !!(data[j] & 0x80),\n\t                  XRsiz: data[j + 1],\n\t                  YRsiz: data[j + 1]\n\t                };\n\t                calculateComponentDimensions(component, siz);\n\t                components.push(component);\n\t              }\n\t              context.SIZ = siz;\n\t              context.components = components;\n\t              calculateTileGrids(context, components);\n\t              context.QCC = [];\n\t              context.COC = [];\n\t              break;\n\t            case 0xFF5C:\n\t              length = (0, _util.readUint16)(data, position);\n\t              var qcd = {};\n\t              j = position + 2;\n\t              sqcd = data[j++];\n\t              switch (sqcd & 0x1F) {\n\t                case 0:\n\t                  spqcdSize = 8;\n\t                  scalarExpounded = true;\n\t                  break;\n\t                case 1:\n\t                  spqcdSize = 16;\n\t                  scalarExpounded = false;\n\t                  break;\n\t                case 2:\n\t                  spqcdSize = 16;\n\t                  scalarExpounded = true;\n\t                  break;\n\t                default:\n\t                  throw new Error('Invalid SQcd value ' + sqcd);\n\t              }\n\t              qcd.noQuantization = spqcdSize === 8;\n\t              qcd.scalarExpounded = scalarExpounded;\n\t              qcd.guardBits = sqcd >> 5;\n\t              spqcds = [];\n\t              while (j < length + position) {\n\t                var spqcd = {};\n\t                if (spqcdSize === 8) {\n\t                  spqcd.epsilon = data[j++] >> 3;\n\t                  spqcd.mu = 0;\n\t                } else {\n\t                  spqcd.epsilon = data[j] >> 3;\n\t                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n\t                  j += 2;\n\t                }\n\t                spqcds.push(spqcd);\n\t              }\n\t              qcd.SPqcds = spqcds;\n\t              if (context.mainHeader) {\n\t                context.QCD = qcd;\n\t              } else {\n\t                context.currentTile.QCD = qcd;\n\t                context.currentTile.QCC = [];\n\t              }\n\t              break;\n\t            case 0xFF5D:\n\t              length = (0, _util.readUint16)(data, position);\n\t              var qcc = {};\n\t              j = position + 2;\n\t              var cqcc;\n\t              if (context.SIZ.Csiz < 257) {\n\t                cqcc = data[j++];\n\t              } else {\n\t                cqcc = (0, _util.readUint16)(data, j);\n\t                j += 2;\n\t              }\n\t              sqcd = data[j++];\n\t              switch (sqcd & 0x1F) {\n\t                case 0:\n\t                  spqcdSize = 8;\n\t                  scalarExpounded = true;\n\t                  break;\n\t                case 1:\n\t                  spqcdSize = 16;\n\t                  scalarExpounded = false;\n\t                  break;\n\t                case 2:\n\t                  spqcdSize = 16;\n\t                  scalarExpounded = true;\n\t                  break;\n\t                default:\n\t                  throw new Error('Invalid SQcd value ' + sqcd);\n\t              }\n\t              qcc.noQuantization = spqcdSize === 8;\n\t              qcc.scalarExpounded = scalarExpounded;\n\t              qcc.guardBits = sqcd >> 5;\n\t              spqcds = [];\n\t              while (j < length + position) {\n\t                spqcd = {};\n\t                if (spqcdSize === 8) {\n\t                  spqcd.epsilon = data[j++] >> 3;\n\t                  spqcd.mu = 0;\n\t                } else {\n\t                  spqcd.epsilon = data[j] >> 3;\n\t                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n\t                  j += 2;\n\t                }\n\t                spqcds.push(spqcd);\n\t              }\n\t              qcc.SPqcds = spqcds;\n\t              if (context.mainHeader) {\n\t                context.QCC[cqcc] = qcc;\n\t              } else {\n\t                context.currentTile.QCC[cqcc] = qcc;\n\t              }\n\t              break;\n\t            case 0xFF52:\n\t              length = (0, _util.readUint16)(data, position);\n\t              var cod = {};\n\t              j = position + 2;\n\t              var scod = data[j++];\n\t              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n\t              cod.sopMarkerUsed = !!(scod & 2);\n\t              cod.ephMarkerUsed = !!(scod & 4);\n\t              cod.progressionOrder = data[j++];\n\t              cod.layersCount = (0, _util.readUint16)(data, j);\n\t              j += 2;\n\t              cod.multipleComponentTransform = data[j++];\n\t              cod.decompositionLevelsCount = data[j++];\n\t              cod.xcb = (data[j++] & 0xF) + 2;\n\t              cod.ycb = (data[j++] & 0xF) + 2;\n\t              var blockStyle = data[j++];\n\t              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n\t              cod.resetContextProbabilities = !!(blockStyle & 2);\n\t              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n\t              cod.verticalyStripe = !!(blockStyle & 8);\n\t              cod.predictableTermination = !!(blockStyle & 16);\n\t              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n\t              cod.reversibleTransformation = data[j++];\n\t              if (cod.entropyCoderWithCustomPrecincts) {\n\t                var precinctsSizes = [];\n\t                while (j < length + position) {\n\t                  var precinctsSize = data[j++];\n\t                  precinctsSizes.push({\n\t                    PPx: precinctsSize & 0xF,\n\t                    PPy: precinctsSize >> 4\n\t                  });\n\t                }\n\t                cod.precinctsSizes = precinctsSizes;\n\t              }\n\t              var unsupported = [];\n\t              if (cod.selectiveArithmeticCodingBypass) {\n\t                unsupported.push('selectiveArithmeticCodingBypass');\n\t              }\n\t              if (cod.resetContextProbabilities) {\n\t                unsupported.push('resetContextProbabilities');\n\t              }\n\t              if (cod.terminationOnEachCodingPass) {\n\t                unsupported.push('terminationOnEachCodingPass');\n\t              }\n\t              if (cod.verticalyStripe) {\n\t                unsupported.push('verticalyStripe');\n\t              }\n\t              if (cod.predictableTermination) {\n\t                unsupported.push('predictableTermination');\n\t              }\n\t              if (unsupported.length > 0) {\n\t                doNotRecover = true;\n\t                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n\t              }\n\t              if (context.mainHeader) {\n\t                context.COD = cod;\n\t              } else {\n\t                context.currentTile.COD = cod;\n\t                context.currentTile.COC = [];\n\t              }\n\t              break;\n\t            case 0xFF90:\n\t              length = (0, _util.readUint16)(data, position);\n\t              tile = {};\n\t              tile.index = (0, _util.readUint16)(data, position + 2);\n\t              tile.length = (0, _util.readUint32)(data, position + 4);\n\t              tile.dataEnd = tile.length + position - 2;\n\t              tile.partIndex = data[position + 8];\n\t              tile.partsCount = data[position + 9];\n\t              context.mainHeader = false;\n\t              if (tile.partIndex === 0) {\n\t                tile.COD = context.COD;\n\t                tile.COC = context.COC.slice(0);\n\t                tile.QCD = context.QCD;\n\t                tile.QCC = context.QCC.slice(0);\n\t              }\n\t              context.currentTile = tile;\n\t              break;\n\t            case 0xFF93:\n\t              tile = context.currentTile;\n\t              if (tile.partIndex === 0) {\n\t                initializeTile(context, tile.index);\n\t                buildPackets(context);\n\t              }\n\t              length = tile.dataEnd - position;\n\t              parseTilePackets(context, data, position, length);\n\t              break;\n\t            case 0xFF55:\n\t            case 0xFF57:\n\t            case 0xFF58:\n\t            case 0xFF64:\n\t              length = (0, _util.readUint16)(data, position);\n\t              break;\n\t            case 0xFF53:\n\t              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n\t            default:\n\t              throw new Error('Unknown codestream code: ' + code.toString(16));\n\t          }\n\t          position += length;\n\t        }\n\t      } catch (e) {\n\t        if (doNotRecover || this.failOnCorruptedImage) {\n\t          throw new JpxError(e.message);\n\t        } else {\n\t          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\n\t        }\n\t      }\n\t      this.tiles = transformComponents(context);\n\t      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n\t      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n\t      this.componentsCount = context.SIZ.Csiz;\n\t    }\n\t  };\n\t  function calculateComponentDimensions(component, siz) {\n\t    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n\t    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n\t    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n\t    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n\t    component.width = component.x1 - component.x0;\n\t    component.height = component.y1 - component.y0;\n\t  }\n\t  function calculateTileGrids(context, components) {\n\t    var siz = context.SIZ;\n\t    var tile,\n\t        tiles = [];\n\t    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n\t    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n\t    for (var q = 0; q < numYtiles; q++) {\n\t      for (var p = 0; p < numXtiles; p++) {\n\t        tile = {};\n\t        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n\t        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n\t        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n\t        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n\t        tile.width = tile.tx1 - tile.tx0;\n\t        tile.height = tile.ty1 - tile.ty0;\n\t        tile.components = [];\n\t        tiles.push(tile);\n\t      }\n\t    }\n\t    context.tiles = tiles;\n\t    var componentsCount = siz.Csiz;\n\t    for (var i = 0, ii = componentsCount; i < ii; i++) {\n\t      var component = components[i];\n\t      for (var j = 0, jj = tiles.length; j < jj; j++) {\n\t        var tileComponent = {};\n\t        tile = tiles[j];\n\t        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n\t        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n\t        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n\t        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n\t        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n\t        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n\t        tile.components[i] = tileComponent;\n\t      }\n\t    }\n\t  }\n\t  function getBlocksDimensions(context, component, r) {\n\t    var codOrCoc = component.codingStyleParameters;\n\t    var result = {};\n\t    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n\t      result.PPx = 15;\n\t      result.PPy = 15;\n\t    } else {\n\t      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n\t      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n\t    }\n\t    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n\t    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n\t    return result;\n\t  }\n\t  function buildPrecincts(context, resolution, dimensions) {\n\t    var precinctWidth = 1 << dimensions.PPx;\n\t    var precinctHeight = 1 << dimensions.PPy;\n\t    var isZeroRes = resolution.resLevel === 0;\n\t    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n\t    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n\t    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n\t    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n\t    var numprecincts = numprecinctswide * numprecinctshigh;\n\t    resolution.precinctParameters = {\n\t      precinctWidth: precinctWidth,\n\t      precinctHeight: precinctHeight,\n\t      numprecinctswide: numprecinctswide,\n\t      numprecinctshigh: numprecinctshigh,\n\t      numprecincts: numprecincts,\n\t      precinctWidthInSubband: precinctWidthInSubband,\n\t      precinctHeightInSubband: precinctHeightInSubband\n\t    };\n\t  }\n\t  function buildCodeblocks(context, subband, dimensions) {\n\t    var xcb_ = dimensions.xcb_;\n\t    var ycb_ = dimensions.ycb_;\n\t    var codeblockWidth = 1 << xcb_;\n\t    var codeblockHeight = 1 << ycb_;\n\t    var cbx0 = subband.tbx0 >> xcb_;\n\t    var cby0 = subband.tby0 >> ycb_;\n\t    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n\t    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n\t    var precinctParameters = subband.resolution.precinctParameters;\n\t    var codeblocks = [];\n\t    var precincts = [];\n\t    var i, j, codeblock, precinctNumber;\n\t    for (j = cby0; j < cby1; j++) {\n\t      for (i = cbx0; i < cbx1; i++) {\n\t        codeblock = {\n\t          cbx: i,\n\t          cby: j,\n\t          tbx0: codeblockWidth * i,\n\t          tby0: codeblockHeight * j,\n\t          tbx1: codeblockWidth * (i + 1),\n\t          tby1: codeblockHeight * (j + 1)\n\t        };\n\t        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n\t        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n\t        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n\t        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n\t        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n\t        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n\t        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n\t        codeblock.precinctNumber = precinctNumber;\n\t        codeblock.subbandType = subband.type;\n\t        codeblock.Lblock = 3;\n\t        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n\t          continue;\n\t        }\n\t        codeblocks.push(codeblock);\n\t        var precinct = precincts[precinctNumber];\n\t        if (precinct !== undefined) {\n\t          if (i < precinct.cbxMin) {\n\t            precinct.cbxMin = i;\n\t          } else if (i > precinct.cbxMax) {\n\t            precinct.cbxMax = i;\n\t          }\n\t          if (j < precinct.cbyMin) {\n\t            precinct.cbxMin = j;\n\t          } else if (j > precinct.cbyMax) {\n\t            precinct.cbyMax = j;\n\t          }\n\t        } else {\n\t          precincts[precinctNumber] = precinct = {\n\t            cbxMin: i,\n\t            cbyMin: j,\n\t            cbxMax: i,\n\t            cbyMax: j\n\t          };\n\t        }\n\t        codeblock.precinct = precinct;\n\t      }\n\t    }\n\t    subband.codeblockParameters = {\n\t      codeblockWidth: xcb_,\n\t      codeblockHeight: ycb_,\n\t      numcodeblockwide: cbx1 - cbx0 + 1,\n\t      numcodeblockhigh: cby1 - cby0 + 1\n\t    };\n\t    subband.codeblocks = codeblocks;\n\t    subband.precincts = precincts;\n\t  }\n\t  function createPacket(resolution, precinctNumber, layerNumber) {\n\t    var precinctCodeblocks = [];\n\t    var subbands = resolution.subbands;\n\t    for (var i = 0, ii = subbands.length; i < ii; i++) {\n\t      var subband = subbands[i];\n\t      var codeblocks = subband.codeblocks;\n\t      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n\t        var codeblock = codeblocks[j];\n\t        if (codeblock.precinctNumber !== precinctNumber) {\n\t          continue;\n\t        }\n\t        precinctCodeblocks.push(codeblock);\n\t      }\n\t    }\n\t    return {\n\t      layerNumber: layerNumber,\n\t      codeblocks: precinctCodeblocks\n\t    };\n\t  }\n\t  function LayerResolutionComponentPositionIterator(context) {\n\t    var siz = context.SIZ;\n\t    var tileIndex = context.currentTile.index;\n\t    var tile = context.tiles[tileIndex];\n\t    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n\t    var componentsCount = siz.Csiz;\n\t    var maxDecompositionLevelsCount = 0;\n\t    for (var q = 0; q < componentsCount; q++) {\n\t      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n\t    }\n\t    var l = 0,\n\t        r = 0,\n\t        i = 0,\n\t        k = 0;\n\t    this.nextPacket = function JpxImage_nextPacket() {\n\t      for (; l < layersCount; l++) {\n\t        for (; r <= maxDecompositionLevelsCount; r++) {\n\t          for (; i < componentsCount; i++) {\n\t            var component = tile.components[i];\n\t            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n\t              continue;\n\t            }\n\t            var resolution = component.resolutions[r];\n\t            var numprecincts = resolution.precinctParameters.numprecincts;\n\t            for (; k < numprecincts;) {\n\t              var packet = createPacket(resolution, k, l);\n\t              k++;\n\t              return packet;\n\t            }\n\t            k = 0;\n\t          }\n\t          i = 0;\n\t        }\n\t        r = 0;\n\t      }\n\t      throw new JpxError('Out of packets');\n\t    };\n\t  }\n\t  function ResolutionLayerComponentPositionIterator(context) {\n\t    var siz = context.SIZ;\n\t    var tileIndex = context.currentTile.index;\n\t    var tile = context.tiles[tileIndex];\n\t    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n\t    var componentsCount = siz.Csiz;\n\t    var maxDecompositionLevelsCount = 0;\n\t    for (var q = 0; q < componentsCount; q++) {\n\t      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n\t    }\n\t    var r = 0,\n\t        l = 0,\n\t        i = 0,\n\t        k = 0;\n\t    this.nextPacket = function JpxImage_nextPacket() {\n\t      for (; r <= maxDecompositionLevelsCount; r++) {\n\t        for (; l < layersCount; l++) {\n\t          for (; i < componentsCount; i++) {\n\t            var component = tile.components[i];\n\t            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n\t              continue;\n\t            }\n\t            var resolution = component.resolutions[r];\n\t            var numprecincts = resolution.precinctParameters.numprecincts;\n\t            for (; k < numprecincts;) {\n\t              var packet = createPacket(resolution, k, l);\n\t              k++;\n\t              return packet;\n\t            }\n\t            k = 0;\n\t          }\n\t          i = 0;\n\t        }\n\t        l = 0;\n\t      }\n\t      throw new JpxError('Out of packets');\n\t    };\n\t  }\n\t  function ResolutionPositionComponentLayerIterator(context) {\n\t    var siz = context.SIZ;\n\t    var tileIndex = context.currentTile.index;\n\t    var tile = context.tiles[tileIndex];\n\t    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n\t    var componentsCount = siz.Csiz;\n\t    var l, r, c, p;\n\t    var maxDecompositionLevelsCount = 0;\n\t    for (c = 0; c < componentsCount; c++) {\n\t      var component = tile.components[c];\n\t      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n\t    }\n\t    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n\t    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n\t      var maxNumPrecincts = 0;\n\t      for (c = 0; c < componentsCount; ++c) {\n\t        var resolutions = tile.components[c].resolutions;\n\t        if (r < resolutions.length) {\n\t          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n\t        }\n\t      }\n\t      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n\t    }\n\t    l = 0;\n\t    r = 0;\n\t    c = 0;\n\t    p = 0;\n\t    this.nextPacket = function JpxImage_nextPacket() {\n\t      for (; r <= maxDecompositionLevelsCount; r++) {\n\t        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n\t          for (; c < componentsCount; c++) {\n\t            var component = tile.components[c];\n\t            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n\t              continue;\n\t            }\n\t            var resolution = component.resolutions[r];\n\t            var numprecincts = resolution.precinctParameters.numprecincts;\n\t            if (p >= numprecincts) {\n\t              continue;\n\t            }\n\t            for (; l < layersCount;) {\n\t              var packet = createPacket(resolution, p, l);\n\t              l++;\n\t              return packet;\n\t            }\n\t            l = 0;\n\t          }\n\t          c = 0;\n\t        }\n\t        p = 0;\n\t      }\n\t      throw new JpxError('Out of packets');\n\t    };\n\t  }\n\t  function PositionComponentResolutionLayerIterator(context) {\n\t    var siz = context.SIZ;\n\t    var tileIndex = context.currentTile.index;\n\t    var tile = context.tiles[tileIndex];\n\t    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n\t    var componentsCount = siz.Csiz;\n\t    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n\t    var precinctsIterationSizes = precinctsSizes;\n\t    var l = 0,\n\t        r = 0,\n\t        c = 0,\n\t        px = 0,\n\t        py = 0;\n\t    this.nextPacket = function JpxImage_nextPacket() {\n\t      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n\t        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n\t          for (; c < componentsCount; c++) {\n\t            var component = tile.components[c];\n\t            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n\t            for (; r <= decompositionLevelsCount; r++) {\n\t              var resolution = component.resolutions[r];\n\t              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n\t              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n\t              if (k === null) {\n\t                continue;\n\t              }\n\t              for (; l < layersCount;) {\n\t                var packet = createPacket(resolution, k, l);\n\t                l++;\n\t                return packet;\n\t              }\n\t              l = 0;\n\t            }\n\t            r = 0;\n\t          }\n\t          c = 0;\n\t        }\n\t        px = 0;\n\t      }\n\t      throw new JpxError('Out of packets');\n\t    };\n\t  }\n\t  function ComponentPositionResolutionLayerIterator(context) {\n\t    var siz = context.SIZ;\n\t    var tileIndex = context.currentTile.index;\n\t    var tile = context.tiles[tileIndex];\n\t    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n\t    var componentsCount = siz.Csiz;\n\t    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n\t    var l = 0,\n\t        r = 0,\n\t        c = 0,\n\t        px = 0,\n\t        py = 0;\n\t    this.nextPacket = function JpxImage_nextPacket() {\n\t      for (; c < componentsCount; ++c) {\n\t        var component = tile.components[c];\n\t        var precinctsIterationSizes = precinctsSizes.components[c];\n\t        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n\t        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n\t          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n\t            for (; r <= decompositionLevelsCount; r++) {\n\t              var resolution = component.resolutions[r];\n\t              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n\t              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n\t              if (k === null) {\n\t                continue;\n\t              }\n\t              for (; l < layersCount;) {\n\t                var packet = createPacket(resolution, k, l);\n\t                l++;\n\t                return packet;\n\t              }\n\t              l = 0;\n\t            }\n\t            r = 0;\n\t          }\n\t          px = 0;\n\t        }\n\t        py = 0;\n\t      }\n\t      throw new JpxError('Out of packets');\n\t    };\n\t  }\n\t  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n\t    var posX = pxIndex * precinctIterationSizes.minWidth;\n\t    var posY = pyIndex * precinctIterationSizes.minHeight;\n\t    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n\t      return null;\n\t    }\n\t    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n\t    return posX / sizeInImageScale.height + startPrecinctRowIndex;\n\t  }\n\t  function getPrecinctSizesInImageScale(tile) {\n\t    var componentsCount = tile.components.length;\n\t    var minWidth = Number.MAX_VALUE;\n\t    var minHeight = Number.MAX_VALUE;\n\t    var maxNumWide = 0;\n\t    var maxNumHigh = 0;\n\t    var sizePerComponent = new Array(componentsCount);\n\t    for (var c = 0; c < componentsCount; c++) {\n\t      var component = tile.components[c];\n\t      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n\t      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n\t      var minWidthCurrentComponent = Number.MAX_VALUE;\n\t      var minHeightCurrentComponent = Number.MAX_VALUE;\n\t      var maxNumWideCurrentComponent = 0;\n\t      var maxNumHighCurrentComponent = 0;\n\t      var scale = 1;\n\t      for (var r = decompositionLevelsCount; r >= 0; --r) {\n\t        var resolution = component.resolutions[r];\n\t        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n\t        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n\t        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n\t        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n\t        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n\t        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n\t        sizePerResolution[r] = {\n\t          width: widthCurrentResolution,\n\t          height: heightCurrentResolution\n\t        };\n\t        scale <<= 1;\n\t      }\n\t      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n\t      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n\t      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n\t      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n\t      sizePerComponent[c] = {\n\t        resolutions: sizePerResolution,\n\t        minWidth: minWidthCurrentComponent,\n\t        minHeight: minHeightCurrentComponent,\n\t        maxNumWide: maxNumWideCurrentComponent,\n\t        maxNumHigh: maxNumHighCurrentComponent\n\t      };\n\t    }\n\t    return {\n\t      components: sizePerComponent,\n\t      minWidth: minWidth,\n\t      minHeight: minHeight,\n\t      maxNumWide: maxNumWide,\n\t      maxNumHigh: maxNumHigh\n\t    };\n\t  }\n\t  function buildPackets(context) {\n\t    var siz = context.SIZ;\n\t    var tileIndex = context.currentTile.index;\n\t    var tile = context.tiles[tileIndex];\n\t    var componentsCount = siz.Csiz;\n\t    for (var c = 0; c < componentsCount; c++) {\n\t      var component = tile.components[c];\n\t      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n\t      var resolutions = [];\n\t      var subbands = [];\n\t      for (var r = 0; r <= decompositionLevelsCount; r++) {\n\t        var blocksDimensions = getBlocksDimensions(context, component, r);\n\t        var resolution = {};\n\t        var scale = 1 << decompositionLevelsCount - r;\n\t        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n\t        resolution.try0 = Math.ceil(component.tcy0 / scale);\n\t        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n\t        resolution.try1 = Math.ceil(component.tcy1 / scale);\n\t        resolution.resLevel = r;\n\t        buildPrecincts(context, resolution, blocksDimensions);\n\t        resolutions.push(resolution);\n\t        var subband;\n\t        if (r === 0) {\n\t          subband = {};\n\t          subband.type = 'LL';\n\t          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n\t          subband.tby0 = Math.ceil(component.tcy0 / scale);\n\t          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n\t          subband.tby1 = Math.ceil(component.tcy1 / scale);\n\t          subband.resolution = resolution;\n\t          buildCodeblocks(context, subband, blocksDimensions);\n\t          subbands.push(subband);\n\t          resolution.subbands = [subband];\n\t        } else {\n\t          var bscale = 1 << decompositionLevelsCount - r + 1;\n\t          var resolutionSubbands = [];\n\t          subband = {};\n\t          subband.type = 'HL';\n\t          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n\t          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n\t          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n\t          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n\t          subband.resolution = resolution;\n\t          buildCodeblocks(context, subband, blocksDimensions);\n\t          subbands.push(subband);\n\t          resolutionSubbands.push(subband);\n\t          subband = {};\n\t          subband.type = 'LH';\n\t          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n\t          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n\t          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n\t          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n\t          subband.resolution = resolution;\n\t          buildCodeblocks(context, subband, blocksDimensions);\n\t          subbands.push(subband);\n\t          resolutionSubbands.push(subband);\n\t          subband = {};\n\t          subband.type = 'HH';\n\t          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n\t          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n\t          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n\t          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n\t          subband.resolution = resolution;\n\t          buildCodeblocks(context, subband, blocksDimensions);\n\t          subbands.push(subband);\n\t          resolutionSubbands.push(subband);\n\t          resolution.subbands = resolutionSubbands;\n\t        }\n\t      }\n\t      component.resolutions = resolutions;\n\t      component.subbands = subbands;\n\t    }\n\t    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n\t    switch (progressionOrder) {\n\t      case 0:\n\t        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n\t        break;\n\t      case 1:\n\t        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n\t        break;\n\t      case 2:\n\t        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n\t        break;\n\t      case 3:\n\t        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n\t        break;\n\t      case 4:\n\t        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n\t        break;\n\t      default:\n\t        throw new JpxError('Unsupported progression order ' + progressionOrder);\n\t    }\n\t  }\n\t  function parseTilePackets(context, data, offset, dataLength) {\n\t    var position = 0;\n\t    var buffer,\n\t        bufferSize = 0,\n\t        skipNextBit = false;\n\t    function readBits(count) {\n\t      while (bufferSize < count) {\n\t        var b = data[offset + position];\n\t        position++;\n\t        if (skipNextBit) {\n\t          buffer = buffer << 7 | b;\n\t          bufferSize += 7;\n\t          skipNextBit = false;\n\t        } else {\n\t          buffer = buffer << 8 | b;\n\t          bufferSize += 8;\n\t        }\n\t        if (b === 0xFF) {\n\t          skipNextBit = true;\n\t        }\n\t      }\n\t      bufferSize -= count;\n\t      return buffer >>> bufferSize & (1 << count) - 1;\n\t    }\n\t    function skipMarkerIfEqual(value) {\n\t      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n\t        skipBytes(1);\n\t        return true;\n\t      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n\t        skipBytes(2);\n\t        return true;\n\t      }\n\t      return false;\n\t    }\n\t    function skipBytes(count) {\n\t      position += count;\n\t    }\n\t    function alignToByte() {\n\t      bufferSize = 0;\n\t      if (skipNextBit) {\n\t        position++;\n\t        skipNextBit = false;\n\t      }\n\t    }\n\t    function readCodingpasses() {\n\t      if (readBits(1) === 0) {\n\t        return 1;\n\t      }\n\t      if (readBits(1) === 0) {\n\t        return 2;\n\t      }\n\t      var value = readBits(2);\n\t      if (value < 3) {\n\t        return value + 3;\n\t      }\n\t      value = readBits(5);\n\t      if (value < 31) {\n\t        return value + 6;\n\t      }\n\t      value = readBits(7);\n\t      return value + 37;\n\t    }\n\t    var tileIndex = context.currentTile.index;\n\t    var tile = context.tiles[tileIndex];\n\t    var sopMarkerUsed = context.COD.sopMarkerUsed;\n\t    var ephMarkerUsed = context.COD.ephMarkerUsed;\n\t    var packetsIterator = tile.packetsIterator;\n\t    while (position < dataLength) {\n\t      alignToByte();\n\t      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n\t        skipBytes(4);\n\t      }\n\t      var packet = packetsIterator.nextPacket();\n\t      if (!readBits(1)) {\n\t        continue;\n\t      }\n\t      var layerNumber = packet.layerNumber;\n\t      var queue = [],\n\t          codeblock;\n\t      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n\t        codeblock = packet.codeblocks[i];\n\t        var precinct = codeblock.precinct;\n\t        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n\t        var codeblockRow = codeblock.cby - precinct.cbyMin;\n\t        var codeblockIncluded = false;\n\t        var firstTimeInclusion = false;\n\t        var valueReady;\n\t        if (codeblock['included'] !== undefined) {\n\t          codeblockIncluded = !!readBits(1);\n\t        } else {\n\t          precinct = codeblock.precinct;\n\t          var inclusionTree, zeroBitPlanesTree;\n\t          if (precinct['inclusionTree'] !== undefined) {\n\t            inclusionTree = precinct.inclusionTree;\n\t          } else {\n\t            var width = precinct.cbxMax - precinct.cbxMin + 1;\n\t            var height = precinct.cbyMax - precinct.cbyMin + 1;\n\t            inclusionTree = new InclusionTree(width, height, layerNumber);\n\t            zeroBitPlanesTree = new TagTree(width, height);\n\t            precinct.inclusionTree = inclusionTree;\n\t            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n\t          }\n\t          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n\t            while (true) {\n\t              if (readBits(1)) {\n\t                valueReady = !inclusionTree.nextLevel();\n\t                if (valueReady) {\n\t                  codeblock.included = true;\n\t                  codeblockIncluded = firstTimeInclusion = true;\n\t                  break;\n\t                }\n\t              } else {\n\t                inclusionTree.incrementValue(layerNumber);\n\t                break;\n\t              }\n\t            }\n\t          }\n\t        }\n\t        if (!codeblockIncluded) {\n\t          continue;\n\t        }\n\t        if (firstTimeInclusion) {\n\t          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n\t          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n\t          while (true) {\n\t            if (readBits(1)) {\n\t              valueReady = !zeroBitPlanesTree.nextLevel();\n\t              if (valueReady) {\n\t                break;\n\t              }\n\t            } else {\n\t              zeroBitPlanesTree.incrementValue();\n\t            }\n\t          }\n\t          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n\t        }\n\t        var codingpasses = readCodingpasses();\n\t        while (readBits(1)) {\n\t          codeblock.Lblock++;\n\t        }\n\t        var codingpassesLog2 = (0, _util.log2)(codingpasses);\n\t        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n\t        var codedDataLength = readBits(bits);\n\t        queue.push({\n\t          codeblock: codeblock,\n\t          codingpasses: codingpasses,\n\t          dataLength: codedDataLength\n\t        });\n\t      }\n\t      alignToByte();\n\t      if (ephMarkerUsed) {\n\t        skipMarkerIfEqual(0x92);\n\t      }\n\t      while (queue.length > 0) {\n\t        var packetItem = queue.shift();\n\t        codeblock = packetItem.codeblock;\n\t        if (codeblock['data'] === undefined) {\n\t          codeblock.data = [];\n\t        }\n\t        codeblock.data.push({\n\t          data: data,\n\t          start: offset + position,\n\t          end: offset + position + packetItem.dataLength,\n\t          codingpasses: packetItem.codingpasses\n\t        });\n\t        position += packetItem.dataLength;\n\t      }\n\t    }\n\t    return position;\n\t  }\n\t  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n\t    var x0 = subband.tbx0;\n\t    var y0 = subband.tby0;\n\t    var width = subband.tbx1 - subband.tbx0;\n\t    var codeblocks = subband.codeblocks;\n\t    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n\t    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n\t    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n\t      var codeblock = codeblocks[i];\n\t      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n\t      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n\t      if (blockWidth === 0 || blockHeight === 0) {\n\t        continue;\n\t      }\n\t      if (codeblock['data'] === undefined) {\n\t        continue;\n\t      }\n\t      var bitModel, currentCodingpassType;\n\t      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n\t      currentCodingpassType = 2;\n\t      var data = codeblock.data,\n\t          totalLength = 0,\n\t          codingpasses = 0;\n\t      var j, jj, dataItem;\n\t      for (j = 0, jj = data.length; j < jj; j++) {\n\t        dataItem = data[j];\n\t        totalLength += dataItem.end - dataItem.start;\n\t        codingpasses += dataItem.codingpasses;\n\t      }\n\t      var encodedData = new Uint8Array(totalLength);\n\t      var position = 0;\n\t      for (j = 0, jj = data.length; j < jj; j++) {\n\t        dataItem = data[j];\n\t        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n\t        encodedData.set(chunk, position);\n\t        position += chunk.length;\n\t      }\n\t      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\n\t      bitModel.setDecoder(decoder);\n\t      for (j = 0; j < codingpasses; j++) {\n\t        switch (currentCodingpassType) {\n\t          case 0:\n\t            bitModel.runSignificancePropagationPass();\n\t            break;\n\t          case 1:\n\t            bitModel.runMagnitudeRefinementPass();\n\t            break;\n\t          case 2:\n\t            bitModel.runCleanupPass();\n\t            if (segmentationSymbolUsed) {\n\t              bitModel.checkSegmentationSymbol();\n\t            }\n\t            break;\n\t        }\n\t        currentCodingpassType = (currentCodingpassType + 1) % 3;\n\t      }\n\t      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n\t      var sign = bitModel.coefficentsSign;\n\t      var magnitude = bitModel.coefficentsMagnitude;\n\t      var bitsDecoded = bitModel.bitsDecoded;\n\t      var magnitudeCorrection = reversible ? 0 : 0.5;\n\t      var k, n, nb;\n\t      position = 0;\n\t      var interleave = subband.type !== 'LL';\n\t      for (j = 0; j < blockHeight; j++) {\n\t        var row = offset / width | 0;\n\t        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n\t        for (k = 0; k < blockWidth; k++) {\n\t          n = magnitude[position];\n\t          if (n !== 0) {\n\t            n = (n + magnitudeCorrection) * delta;\n\t            if (sign[position] !== 0) {\n\t              n = -n;\n\t            }\n\t            nb = bitsDecoded[position];\n\t            var pos = interleave ? levelOffset + (offset << 1) : offset;\n\t            if (reversible && nb >= mb) {\n\t              coefficients[pos] = n;\n\t            } else {\n\t              coefficients[pos] = n * (1 << mb - nb);\n\t            }\n\t          }\n\t          offset++;\n\t          position++;\n\t        }\n\t        offset += width - blockWidth;\n\t      }\n\t    }\n\t  }\n\t  function transformTile(context, tile, c) {\n\t    var component = tile.components[c];\n\t    var codingStyleParameters = component.codingStyleParameters;\n\t    var quantizationParameters = component.quantizationParameters;\n\t    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n\t    var spqcds = quantizationParameters.SPqcds;\n\t    var scalarExpounded = quantizationParameters.scalarExpounded;\n\t    var guardBits = quantizationParameters.guardBits;\n\t    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n\t    var precision = context.components[c].precision;\n\t    var reversible = codingStyleParameters.reversibleTransformation;\n\t    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n\t    var subbandCoefficients = [];\n\t    var b = 0;\n\t    for (var i = 0; i <= decompositionLevelsCount; i++) {\n\t      var resolution = component.resolutions[i];\n\t      var width = resolution.trx1 - resolution.trx0;\n\t      var height = resolution.try1 - resolution.try0;\n\t      var coefficients = new Float32Array(width * height);\n\t      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n\t        var mu, epsilon;\n\t        if (!scalarExpounded) {\n\t          mu = spqcds[0].mu;\n\t          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n\t        } else {\n\t          mu = spqcds[b].mu;\n\t          epsilon = spqcds[b].epsilon;\n\t          b++;\n\t        }\n\t        var subband = resolution.subbands[j];\n\t        var gainLog2 = SubbandsGainLog2[subband.type];\n\t        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n\t        var mb = guardBits + epsilon - 1;\n\t        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n\t      }\n\t      subbandCoefficients.push({\n\t        width: width,\n\t        height: height,\n\t        items: coefficients\n\t      });\n\t    }\n\t    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n\t    return {\n\t      left: component.tcx0,\n\t      top: component.tcy0,\n\t      width: result.width,\n\t      height: result.height,\n\t      items: result.items\n\t    };\n\t  }\n\t  function transformComponents(context) {\n\t    var siz = context.SIZ;\n\t    var components = context.components;\n\t    var componentsCount = siz.Csiz;\n\t    var resultImages = [];\n\t    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n\t      var tile = context.tiles[i];\n\t      var transformedTiles = [];\n\t      var c;\n\t      for (c = 0; c < componentsCount; c++) {\n\t        transformedTiles[c] = transformTile(context, tile, c);\n\t      }\n\t      var tile0 = transformedTiles[0];\n\t      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n\t      var result = {\n\t        left: tile0.left,\n\t        top: tile0.top,\n\t        width: tile0.width,\n\t        height: tile0.height,\n\t        items: out\n\t      };\n\t      var shift, offset;\n\t      var pos = 0,\n\t          j,\n\t          jj,\n\t          y0,\n\t          y1,\n\t          y2;\n\t      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n\t        var fourComponents = componentsCount === 4;\n\t        var y0items = transformedTiles[0].items;\n\t        var y1items = transformedTiles[1].items;\n\t        var y2items = transformedTiles[2].items;\n\t        var y3items = fourComponents ? transformedTiles[3].items : null;\n\t        shift = components[0].precision - 8;\n\t        offset = (128 << shift) + 0.5;\n\t        var component0 = tile.components[0];\n\t        var alpha01 = componentsCount - 3;\n\t        jj = y0items.length;\n\t        if (!component0.codingStyleParameters.reversibleTransformation) {\n\t          for (j = 0; j < jj; j++, pos += alpha01) {\n\t            y0 = y0items[j] + offset;\n\t            y1 = y1items[j];\n\t            y2 = y2items[j];\n\t            out[pos++] = y0 + 1.402 * y2 >> shift;\n\t            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\n\t            out[pos++] = y0 + 1.772 * y1 >> shift;\n\t          }\n\t        } else {\n\t          for (j = 0; j < jj; j++, pos += alpha01) {\n\t            y0 = y0items[j] + offset;\n\t            y1 = y1items[j];\n\t            y2 = y2items[j];\n\t            var g = y0 - (y2 + y1 >> 2);\n\t            out[pos++] = g + y2 >> shift;\n\t            out[pos++] = g >> shift;\n\t            out[pos++] = g + y1 >> shift;\n\t          }\n\t        }\n\t        if (fourComponents) {\n\t          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n\t            out[pos] = y3items[j] + offset >> shift;\n\t          }\n\t        }\n\t      } else {\n\t        for (c = 0; c < componentsCount; c++) {\n\t          var items = transformedTiles[c].items;\n\t          shift = components[c].precision - 8;\n\t          offset = (128 << shift) + 0.5;\n\t          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n\t            out[pos] = items[j] + offset >> shift;\n\t            pos += componentsCount;\n\t          }\n\t        }\n\t      }\n\t      resultImages.push(result);\n\t    }\n\t    return resultImages;\n\t  }\n\t  function initializeTile(context, tileIndex) {\n\t    var siz = context.SIZ;\n\t    var componentsCount = siz.Csiz;\n\t    var tile = context.tiles[tileIndex];\n\t    for (var c = 0; c < componentsCount; c++) {\n\t      var component = tile.components[c];\n\t      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n\t      component.quantizationParameters = qcdOrQcc;\n\t      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n\t      component.codingStyleParameters = codOrCoc;\n\t    }\n\t    tile.codingStyleDefaultParameters = context.currentTile.COD;\n\t  }\n\t  var TagTree = function TagTreeClosure() {\n\t    function TagTree(width, height) {\n\t      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n\t      this.levels = [];\n\t      for (var i = 0; i < levelsLength; i++) {\n\t        var level = {\n\t          width: width,\n\t          height: height,\n\t          items: []\n\t        };\n\t        this.levels.push(level);\n\t        width = Math.ceil(width / 2);\n\t        height = Math.ceil(height / 2);\n\t      }\n\t    }\n\t    TagTree.prototype = {\n\t      reset: function TagTree_reset(i, j) {\n\t        var currentLevel = 0,\n\t            value = 0,\n\t            level;\n\t        while (currentLevel < this.levels.length) {\n\t          level = this.levels[currentLevel];\n\t          var index = i + j * level.width;\n\t          if (level.items[index] !== undefined) {\n\t            value = level.items[index];\n\t            break;\n\t          }\n\t          level.index = index;\n\t          i >>= 1;\n\t          j >>= 1;\n\t          currentLevel++;\n\t        }\n\t        currentLevel--;\n\t        level = this.levels[currentLevel];\n\t        level.items[level.index] = value;\n\t        this.currentLevel = currentLevel;\n\t        delete this.value;\n\t      },\n\t      incrementValue: function TagTree_incrementValue() {\n\t        var level = this.levels[this.currentLevel];\n\t        level.items[level.index]++;\n\t      },\n\t      nextLevel: function TagTree_nextLevel() {\n\t        var currentLevel = this.currentLevel;\n\t        var level = this.levels[currentLevel];\n\t        var value = level.items[level.index];\n\t        currentLevel--;\n\t        if (currentLevel < 0) {\n\t          this.value = value;\n\t          return false;\n\t        }\n\t        this.currentLevel = currentLevel;\n\t        level = this.levels[currentLevel];\n\t        level.items[level.index] = value;\n\t        return true;\n\t      }\n\t    };\n\t    return TagTree;\n\t  }();\n\t  var InclusionTree = function InclusionTreeClosure() {\n\t    function InclusionTree(width, height, defaultValue) {\n\t      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n\t      this.levels = [];\n\t      for (var i = 0; i < levelsLength; i++) {\n\t        var items = new Uint8Array(width * height);\n\t        for (var j = 0, jj = items.length; j < jj; j++) {\n\t          items[j] = defaultValue;\n\t        }\n\t        var level = {\n\t          width: width,\n\t          height: height,\n\t          items: items\n\t        };\n\t        this.levels.push(level);\n\t        width = Math.ceil(width / 2);\n\t        height = Math.ceil(height / 2);\n\t      }\n\t    }\n\t    InclusionTree.prototype = {\n\t      reset: function InclusionTree_reset(i, j, stopValue) {\n\t        var currentLevel = 0;\n\t        while (currentLevel < this.levels.length) {\n\t          var level = this.levels[currentLevel];\n\t          var index = i + j * level.width;\n\t          level.index = index;\n\t          var value = level.items[index];\n\t          if (value === 0xFF) {\n\t            break;\n\t          }\n\t          if (value > stopValue) {\n\t            this.currentLevel = currentLevel;\n\t            this.propagateValues();\n\t            return false;\n\t          }\n\t          i >>= 1;\n\t          j >>= 1;\n\t          currentLevel++;\n\t        }\n\t        this.currentLevel = currentLevel - 1;\n\t        return true;\n\t      },\n\t      incrementValue: function InclusionTree_incrementValue(stopValue) {\n\t        var level = this.levels[this.currentLevel];\n\t        level.items[level.index] = stopValue + 1;\n\t        this.propagateValues();\n\t      },\n\t      propagateValues: function InclusionTree_propagateValues() {\n\t        var levelIndex = this.currentLevel;\n\t        var level = this.levels[levelIndex];\n\t        var currentValue = level.items[level.index];\n\t        while (--levelIndex >= 0) {\n\t          level = this.levels[levelIndex];\n\t          level.items[level.index] = currentValue;\n\t        }\n\t      },\n\t      nextLevel: function InclusionTree_nextLevel() {\n\t        var currentLevel = this.currentLevel;\n\t        var level = this.levels[currentLevel];\n\t        var value = level.items[level.index];\n\t        level.items[level.index] = 0xFF;\n\t        currentLevel--;\n\t        if (currentLevel < 0) {\n\t          return false;\n\t        }\n\t        this.currentLevel = currentLevel;\n\t        level = this.levels[currentLevel];\n\t        level.items[level.index] = value;\n\t        return true;\n\t      }\n\t    };\n\t    return InclusionTree;\n\t  }();\n\t  var BitModel = function BitModelClosure() {\n\t    var UNIFORM_CONTEXT = 17;\n\t    var RUNLENGTH_CONTEXT = 18;\n\t    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\n\t    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\n\t    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\n\t    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n\t      this.width = width;\n\t      this.height = height;\n\t      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n\t      var coefficientCount = width * height;\n\t      this.neighborsSignificance = new Uint8Array(coefficientCount);\n\t      this.coefficentsSign = new Uint8Array(coefficientCount);\n\t      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n\t      this.processingFlags = new Uint8Array(coefficientCount);\n\t      var bitsDecoded = new Uint8Array(coefficientCount);\n\t      if (zeroBitPlanes !== 0) {\n\t        for (var i = 0; i < coefficientCount; i++) {\n\t          bitsDecoded[i] = zeroBitPlanes;\n\t        }\n\t      }\n\t      this.bitsDecoded = bitsDecoded;\n\t      this.reset();\n\t    }\n\t    BitModel.prototype = {\n\t      setDecoder: function BitModel_setDecoder(decoder) {\n\t        this.decoder = decoder;\n\t      },\n\t      reset: function BitModel_reset() {\n\t        this.contexts = new Int8Array(19);\n\t        this.contexts[0] = 4 << 1 | 0;\n\t        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n\t        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n\t      },\n\t      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n\t        var neighborsSignificance = this.neighborsSignificance;\n\t        var width = this.width,\n\t            height = this.height;\n\t        var left = column > 0;\n\t        var right = column + 1 < width;\n\t        var i;\n\t        if (row > 0) {\n\t          i = index - width;\n\t          if (left) {\n\t            neighborsSignificance[i - 1] += 0x10;\n\t          }\n\t          if (right) {\n\t            neighborsSignificance[i + 1] += 0x10;\n\t          }\n\t          neighborsSignificance[i] += 0x04;\n\t        }\n\t        if (row + 1 < height) {\n\t          i = index + width;\n\t          if (left) {\n\t            neighborsSignificance[i - 1] += 0x10;\n\t          }\n\t          if (right) {\n\t            neighborsSignificance[i + 1] += 0x10;\n\t          }\n\t          neighborsSignificance[i] += 0x04;\n\t        }\n\t        if (left) {\n\t          neighborsSignificance[index - 1] += 0x01;\n\t        }\n\t        if (right) {\n\t          neighborsSignificance[index + 1] += 0x01;\n\t        }\n\t        neighborsSignificance[index] |= 0x80;\n\t      },\n\t      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n\t        var decoder = this.decoder;\n\t        var width = this.width,\n\t            height = this.height;\n\t        var coefficentsMagnitude = this.coefficentsMagnitude;\n\t        var coefficentsSign = this.coefficentsSign;\n\t        var neighborsSignificance = this.neighborsSignificance;\n\t        var processingFlags = this.processingFlags;\n\t        var contexts = this.contexts;\n\t        var labels = this.contextLabelTable;\n\t        var bitsDecoded = this.bitsDecoded;\n\t        var processedInverseMask = ~1;\n\t        var processedMask = 1;\n\t        var firstMagnitudeBitMask = 2;\n\t        for (var i0 = 0; i0 < height; i0 += 4) {\n\t          for (var j = 0; j < width; j++) {\n\t            var index = i0 * width + j;\n\t            for (var i1 = 0; i1 < 4; i1++, index += width) {\n\t              var i = i0 + i1;\n\t              if (i >= height) {\n\t                break;\n\t              }\n\t              processingFlags[index] &= processedInverseMask;\n\t              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n\t                continue;\n\t              }\n\t              var contextLabel = labels[neighborsSignificance[index]];\n\t              var decision = decoder.readBit(contexts, contextLabel);\n\t              if (decision) {\n\t                var sign = this.decodeSignBit(i, j, index);\n\t                coefficentsSign[index] = sign;\n\t                coefficentsMagnitude[index] = 1;\n\t                this.setNeighborsSignificance(i, j, index);\n\t                processingFlags[index] |= firstMagnitudeBitMask;\n\t              }\n\t              bitsDecoded[index]++;\n\t              processingFlags[index] |= processedMask;\n\t            }\n\t          }\n\t        }\n\t      },\n\t      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n\t        var width = this.width,\n\t            height = this.height;\n\t        var coefficentsMagnitude = this.coefficentsMagnitude;\n\t        var coefficentsSign = this.coefficentsSign;\n\t        var contribution, sign0, sign1, significance1;\n\t        var contextLabel, decoded;\n\t        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n\t        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n\t          sign1 = coefficentsSign[index + 1];\n\t          if (significance1) {\n\t            sign0 = coefficentsSign[index - 1];\n\t            contribution = 1 - sign1 - sign0;\n\t          } else {\n\t            contribution = 1 - sign1 - sign1;\n\t          }\n\t        } else if (significance1) {\n\t          sign0 = coefficentsSign[index - 1];\n\t          contribution = 1 - sign0 - sign0;\n\t        } else {\n\t          contribution = 0;\n\t        }\n\t        var horizontalContribution = 3 * contribution;\n\t        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n\t        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n\t          sign1 = coefficentsSign[index + width];\n\t          if (significance1) {\n\t            sign0 = coefficentsSign[index - width];\n\t            contribution = 1 - sign1 - sign0 + horizontalContribution;\n\t          } else {\n\t            contribution = 1 - sign1 - sign1 + horizontalContribution;\n\t          }\n\t        } else if (significance1) {\n\t          sign0 = coefficentsSign[index - width];\n\t          contribution = 1 - sign0 - sign0 + horizontalContribution;\n\t        } else {\n\t          contribution = horizontalContribution;\n\t        }\n\t        if (contribution >= 0) {\n\t          contextLabel = 9 + contribution;\n\t          decoded = this.decoder.readBit(this.contexts, contextLabel);\n\t        } else {\n\t          contextLabel = 9 - contribution;\n\t          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n\t        }\n\t        return decoded;\n\t      },\n\t      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n\t        var decoder = this.decoder;\n\t        var width = this.width,\n\t            height = this.height;\n\t        var coefficentsMagnitude = this.coefficentsMagnitude;\n\t        var neighborsSignificance = this.neighborsSignificance;\n\t        var contexts = this.contexts;\n\t        var bitsDecoded = this.bitsDecoded;\n\t        var processingFlags = this.processingFlags;\n\t        var processedMask = 1;\n\t        var firstMagnitudeBitMask = 2;\n\t        var length = width * height;\n\t        var width4 = width * 4;\n\t        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n\t          indexNext = Math.min(length, index0 + width4);\n\t          for (var j = 0; j < width; j++) {\n\t            for (var index = index0 + j; index < indexNext; index += width) {\n\t              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n\t                continue;\n\t              }\n\t              var contextLabel = 16;\n\t              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n\t                processingFlags[index] ^= firstMagnitudeBitMask;\n\t                var significance = neighborsSignificance[index] & 127;\n\t                contextLabel = significance === 0 ? 15 : 14;\n\t              }\n\t              var bit = decoder.readBit(contexts, contextLabel);\n\t              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n\t              bitsDecoded[index]++;\n\t              processingFlags[index] |= processedMask;\n\t            }\n\t          }\n\t        }\n\t      },\n\t      runCleanupPass: function BitModel_runCleanupPass() {\n\t        var decoder = this.decoder;\n\t        var width = this.width,\n\t            height = this.height;\n\t        var neighborsSignificance = this.neighborsSignificance;\n\t        var coefficentsMagnitude = this.coefficentsMagnitude;\n\t        var coefficentsSign = this.coefficentsSign;\n\t        var contexts = this.contexts;\n\t        var labels = this.contextLabelTable;\n\t        var bitsDecoded = this.bitsDecoded;\n\t        var processingFlags = this.processingFlags;\n\t        var processedMask = 1;\n\t        var firstMagnitudeBitMask = 2;\n\t        var oneRowDown = width;\n\t        var twoRowsDown = width * 2;\n\t        var threeRowsDown = width * 3;\n\t        var iNext;\n\t        for (var i0 = 0; i0 < height; i0 = iNext) {\n\t          iNext = Math.min(i0 + 4, height);\n\t          var indexBase = i0 * width;\n\t          var checkAllEmpty = i0 + 3 < height;\n\t          for (var j = 0; j < width; j++) {\n\t            var index0 = indexBase + j;\n\t            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n\t            var i1 = 0,\n\t                index = index0;\n\t            var i = i0,\n\t                sign;\n\t            if (allEmpty) {\n\t              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n\t              if (!hasSignificantCoefficent) {\n\t                bitsDecoded[index0]++;\n\t                bitsDecoded[index0 + oneRowDown]++;\n\t                bitsDecoded[index0 + twoRowsDown]++;\n\t                bitsDecoded[index0 + threeRowsDown]++;\n\t                continue;\n\t              }\n\t              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n\t              if (i1 !== 0) {\n\t                i = i0 + i1;\n\t                index += i1 * width;\n\t              }\n\t              sign = this.decodeSignBit(i, j, index);\n\t              coefficentsSign[index] = sign;\n\t              coefficentsMagnitude[index] = 1;\n\t              this.setNeighborsSignificance(i, j, index);\n\t              processingFlags[index] |= firstMagnitudeBitMask;\n\t              index = index0;\n\t              for (var i2 = i0; i2 <= i; i2++, index += width) {\n\t                bitsDecoded[index]++;\n\t              }\n\t              i1++;\n\t            }\n\t            for (i = i0 + i1; i < iNext; i++, index += width) {\n\t              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n\t                continue;\n\t              }\n\t              var contextLabel = labels[neighborsSignificance[index]];\n\t              var decision = decoder.readBit(contexts, contextLabel);\n\t              if (decision === 1) {\n\t                sign = this.decodeSignBit(i, j, index);\n\t                coefficentsSign[index] = sign;\n\t                coefficentsMagnitude[index] = 1;\n\t                this.setNeighborsSignificance(i, j, index);\n\t                processingFlags[index] |= firstMagnitudeBitMask;\n\t              }\n\t              bitsDecoded[index]++;\n\t            }\n\t          }\n\t        }\n\t      },\n\t      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n\t        var decoder = this.decoder;\n\t        var contexts = this.contexts;\n\t        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n\t        if (symbol !== 0xA) {\n\t          throw new JpxError('Invalid segmentation symbol');\n\t        }\n\t      }\n\t    };\n\t    return BitModel;\n\t  }();\n\t  var Transform = function TransformClosure() {\n\t    function Transform() {}\n\t    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n\t      var ll = subbands[0];\n\t      for (var i = 1, ii = subbands.length; i < ii; i++) {\n\t        ll = this.iterate(ll, subbands[i], u0, v0);\n\t      }\n\t      return ll;\n\t    };\n\t    Transform.prototype.extend = function extend(buffer, offset, size) {\n\t      var i1 = offset - 1,\n\t          j1 = offset + 1;\n\t      var i2 = offset + size - 2,\n\t          j2 = offset + size;\n\t      buffer[i1--] = buffer[j1++];\n\t      buffer[j2++] = buffer[i2--];\n\t      buffer[i1--] = buffer[j1++];\n\t      buffer[j2++] = buffer[i2--];\n\t      buffer[i1--] = buffer[j1++];\n\t      buffer[j2++] = buffer[i2--];\n\t      buffer[i1] = buffer[j1];\n\t      buffer[j2] = buffer[i2];\n\t    };\n\t    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n\t      var llWidth = ll.width,\n\t          llHeight = ll.height,\n\t          llItems = ll.items;\n\t      var width = hl_lh_hh.width;\n\t      var height = hl_lh_hh.height;\n\t      var items = hl_lh_hh.items;\n\t      var i, j, k, l, u, v;\n\t      for (k = 0, i = 0; i < llHeight; i++) {\n\t        l = i * 2 * width;\n\t        for (j = 0; j < llWidth; j++, k++, l += 2) {\n\t          items[l] = llItems[k];\n\t        }\n\t      }\n\t      llItems = ll.items = null;\n\t      var bufferPadding = 4;\n\t      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n\t      if (width === 1) {\n\t        if ((u0 & 1) !== 0) {\n\t          for (v = 0, k = 0; v < height; v++, k += width) {\n\t            items[k] *= 0.5;\n\t          }\n\t        }\n\t      } else {\n\t        for (v = 0, k = 0; v < height; v++, k += width) {\n\t          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n\t          this.extend(rowBuffer, bufferPadding, width);\n\t          this.filter(rowBuffer, bufferPadding, width);\n\t          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n\t        }\n\t      }\n\t      var numBuffers = 16;\n\t      var colBuffers = [];\n\t      for (i = 0; i < numBuffers; i++) {\n\t        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n\t      }\n\t      var b,\n\t          currentBuffer = 0;\n\t      ll = bufferPadding + height;\n\t      if (height === 1) {\n\t        if ((v0 & 1) !== 0) {\n\t          for (u = 0; u < width; u++) {\n\t            items[u] *= 0.5;\n\t          }\n\t        }\n\t      } else {\n\t        for (u = 0; u < width; u++) {\n\t          if (currentBuffer === 0) {\n\t            numBuffers = Math.min(width - u, numBuffers);\n\t            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n\t              for (b = 0; b < numBuffers; b++) {\n\t                colBuffers[b][l] = items[k + b];\n\t              }\n\t            }\n\t            currentBuffer = numBuffers;\n\t          }\n\t          currentBuffer--;\n\t          var buffer = colBuffers[currentBuffer];\n\t          this.extend(buffer, bufferPadding, height);\n\t          this.filter(buffer, bufferPadding, height);\n\t          if (currentBuffer === 0) {\n\t            k = u - numBuffers + 1;\n\t            for (l = bufferPadding; l < ll; k += width, l++) {\n\t              for (b = 0; b < numBuffers; b++) {\n\t                items[k + b] = colBuffers[b][l];\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t      return {\n\t        width: width,\n\t        height: height,\n\t        items: items\n\t      };\n\t    };\n\t    return Transform;\n\t  }();\n\t  var IrreversibleTransform = function IrreversibleTransformClosure() {\n\t    function IrreversibleTransform() {\n\t      Transform.call(this);\n\t    }\n\t    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n\t    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n\t      var len = length >> 1;\n\t      offset = offset | 0;\n\t      var j, n, current, next;\n\t      var alpha = -1.586134342059924;\n\t      var beta = -0.052980118572961;\n\t      var gamma = 0.882911075530934;\n\t      var delta = 0.443506852043971;\n\t      var K = 1.230174104914001;\n\t      var K_ = 1 / K;\n\t      j = offset - 3;\n\t      for (n = len + 4; n--; j += 2) {\n\t        x[j] *= K_;\n\t      }\n\t      j = offset - 2;\n\t      current = delta * x[j - 1];\n\t      for (n = len + 3; n--; j += 2) {\n\t        next = delta * x[j + 1];\n\t        x[j] = K * x[j] - current - next;\n\t        if (n--) {\n\t          j += 2;\n\t          current = delta * x[j + 1];\n\t          x[j] = K * x[j] - current - next;\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t      j = offset - 1;\n\t      current = gamma * x[j - 1];\n\t      for (n = len + 2; n--; j += 2) {\n\t        next = gamma * x[j + 1];\n\t        x[j] -= current + next;\n\t        if (n--) {\n\t          j += 2;\n\t          current = gamma * x[j + 1];\n\t          x[j] -= current + next;\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t      j = offset;\n\t      current = beta * x[j - 1];\n\t      for (n = len + 1; n--; j += 2) {\n\t        next = beta * x[j + 1];\n\t        x[j] -= current + next;\n\t        if (n--) {\n\t          j += 2;\n\t          current = beta * x[j + 1];\n\t          x[j] -= current + next;\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t      if (len !== 0) {\n\t        j = offset + 1;\n\t        current = alpha * x[j - 1];\n\t        for (n = len; n--; j += 2) {\n\t          next = alpha * x[j + 1];\n\t          x[j] -= current + next;\n\t          if (n--) {\n\t            j += 2;\n\t            current = alpha * x[j + 1];\n\t            x[j] -= current + next;\n\t          } else {\n\t            break;\n\t          }\n\t        }\n\t      }\n\t    };\n\t    return IrreversibleTransform;\n\t  }();\n\t  var ReversibleTransform = function ReversibleTransformClosure() {\n\t    function ReversibleTransform() {\n\t      Transform.call(this);\n\t    }\n\t    ReversibleTransform.prototype = Object.create(Transform.prototype);\n\t    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n\t      var len = length >> 1;\n\t      offset = offset | 0;\n\t      var j, n;\n\t      for (j = offset, n = len + 1; n--; j += 2) {\n\t        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n\t      }\n\t      for (j = offset + 1, n = len; n--; j += 2) {\n\t        x[j] += x[j - 1] + x[j + 1] >> 1;\n\t      }\n\t    };\n\t    return ReversibleTransform;\n\t  }();\n\t  return JpxImage;\n\t}();\n\texports.JpxImage = JpxImage;\n\t\n\t/***/ }),\n\t/* 75 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n\t  var QeTable = [{\n\t    qe: 0x5601,\n\t    nmps: 1,\n\t    nlps: 1,\n\t    switchFlag: 1\n\t  }, {\n\t    qe: 0x3401,\n\t    nmps: 2,\n\t    nlps: 6,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x1801,\n\t    nmps: 3,\n\t    nlps: 9,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0AC1,\n\t    nmps: 4,\n\t    nlps: 12,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0521,\n\t    nmps: 5,\n\t    nlps: 29,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0221,\n\t    nmps: 38,\n\t    nlps: 33,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x5601,\n\t    nmps: 7,\n\t    nlps: 6,\n\t    switchFlag: 1\n\t  }, {\n\t    qe: 0x5401,\n\t    nmps: 8,\n\t    nlps: 14,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x4801,\n\t    nmps: 9,\n\t    nlps: 14,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x3801,\n\t    nmps: 10,\n\t    nlps: 14,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x3001,\n\t    nmps: 11,\n\t    nlps: 17,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x2401,\n\t    nmps: 12,\n\t    nlps: 18,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x1C01,\n\t    nmps: 13,\n\t    nlps: 20,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x1601,\n\t    nmps: 29,\n\t    nlps: 21,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x5601,\n\t    nmps: 15,\n\t    nlps: 14,\n\t    switchFlag: 1\n\t  }, {\n\t    qe: 0x5401,\n\t    nmps: 16,\n\t    nlps: 14,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x5101,\n\t    nmps: 17,\n\t    nlps: 15,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x4801,\n\t    nmps: 18,\n\t    nlps: 16,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x3801,\n\t    nmps: 19,\n\t    nlps: 17,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x3401,\n\t    nmps: 20,\n\t    nlps: 18,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x3001,\n\t    nmps: 21,\n\t    nlps: 19,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x2801,\n\t    nmps: 22,\n\t    nlps: 19,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x2401,\n\t    nmps: 23,\n\t    nlps: 20,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x2201,\n\t    nmps: 24,\n\t    nlps: 21,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x1C01,\n\t    nmps: 25,\n\t    nlps: 22,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x1801,\n\t    nmps: 26,\n\t    nlps: 23,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x1601,\n\t    nmps: 27,\n\t    nlps: 24,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x1401,\n\t    nmps: 28,\n\t    nlps: 25,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x1201,\n\t    nmps: 29,\n\t    nlps: 26,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x1101,\n\t    nmps: 30,\n\t    nlps: 27,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0AC1,\n\t    nmps: 31,\n\t    nlps: 28,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x09C1,\n\t    nmps: 32,\n\t    nlps: 29,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x08A1,\n\t    nmps: 33,\n\t    nlps: 30,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0521,\n\t    nmps: 34,\n\t    nlps: 31,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0441,\n\t    nmps: 35,\n\t    nlps: 32,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x02A1,\n\t    nmps: 36,\n\t    nlps: 33,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0221,\n\t    nmps: 37,\n\t    nlps: 34,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0141,\n\t    nmps: 38,\n\t    nlps: 35,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0111,\n\t    nmps: 39,\n\t    nlps: 36,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0085,\n\t    nmps: 40,\n\t    nlps: 37,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0049,\n\t    nmps: 41,\n\t    nlps: 38,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0025,\n\t    nmps: 42,\n\t    nlps: 39,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0015,\n\t    nmps: 43,\n\t    nlps: 40,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0009,\n\t    nmps: 44,\n\t    nlps: 41,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0005,\n\t    nmps: 45,\n\t    nlps: 42,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x0001,\n\t    nmps: 45,\n\t    nlps: 43,\n\t    switchFlag: 0\n\t  }, {\n\t    qe: 0x5601,\n\t    nmps: 46,\n\t    nlps: 46,\n\t    switchFlag: 0\n\t  }];\n\t  function ArithmeticDecoder(data, start, end) {\n\t    this.data = data;\n\t    this.bp = start;\n\t    this.dataEnd = end;\n\t    this.chigh = data[start];\n\t    this.clow = 0;\n\t    this.byteIn();\n\t    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n\t    this.clow = this.clow << 7 & 0xFFFF;\n\t    this.ct -= 7;\n\t    this.a = 0x8000;\n\t  }\n\t  ArithmeticDecoder.prototype = {\n\t    byteIn: function ArithmeticDecoder_byteIn() {\n\t      var data = this.data;\n\t      var bp = this.bp;\n\t      if (data[bp] === 0xFF) {\n\t        var b1 = data[bp + 1];\n\t        if (b1 > 0x8F) {\n\t          this.clow += 0xFF00;\n\t          this.ct = 8;\n\t        } else {\n\t          bp++;\n\t          this.clow += data[bp] << 9;\n\t          this.ct = 7;\n\t          this.bp = bp;\n\t        }\n\t      } else {\n\t        bp++;\n\t        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n\t        this.ct = 8;\n\t        this.bp = bp;\n\t      }\n\t      if (this.clow > 0xFFFF) {\n\t        this.chigh += this.clow >> 16;\n\t        this.clow &= 0xFFFF;\n\t      }\n\t    },\n\t    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n\t      var cx_index = contexts[pos] >> 1,\n\t          cx_mps = contexts[pos] & 1;\n\t      var qeTableIcx = QeTable[cx_index];\n\t      var qeIcx = qeTableIcx.qe;\n\t      var d;\n\t      var a = this.a - qeIcx;\n\t      if (this.chigh < qeIcx) {\n\t        if (a < qeIcx) {\n\t          a = qeIcx;\n\t          d = cx_mps;\n\t          cx_index = qeTableIcx.nmps;\n\t        } else {\n\t          a = qeIcx;\n\t          d = 1 ^ cx_mps;\n\t          if (qeTableIcx.switchFlag === 1) {\n\t            cx_mps = d;\n\t          }\n\t          cx_index = qeTableIcx.nlps;\n\t        }\n\t      } else {\n\t        this.chigh -= qeIcx;\n\t        if ((a & 0x8000) !== 0) {\n\t          this.a = a;\n\t          return cx_mps;\n\t        }\n\t        if (a < qeIcx) {\n\t          d = 1 ^ cx_mps;\n\t          if (qeTableIcx.switchFlag === 1) {\n\t            cx_mps = d;\n\t          }\n\t          cx_index = qeTableIcx.nlps;\n\t        } else {\n\t          d = cx_mps;\n\t          cx_index = qeTableIcx.nmps;\n\t        }\n\t      }\n\t      do {\n\t        if (this.ct === 0) {\n\t          this.byteIn();\n\t        }\n\t        a <<= 1;\n\t        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n\t        this.clow = this.clow << 1 & 0xFFFF;\n\t        this.ct--;\n\t      } while ((a & 0x8000) === 0);\n\t      this.a = a;\n\t      contexts[pos] = cx_index << 1 | cx_mps;\n\t      return d;\n\t    }\n\t  };\n\t  return ArithmeticDecoder;\n\t}();\n\texports.ArithmeticDecoder = ArithmeticDecoder;\n\t\n\t/***/ }),\n\t/* 76 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar _stream = __w_pdfjs_require__(5);\n\t\n\tvar ARCFourCipher = function ARCFourCipherClosure() {\n\t  function ARCFourCipher(key) {\n\t    this.a = 0;\n\t    this.b = 0;\n\t    var s = new Uint8Array(256);\n\t    var i,\n\t        j = 0,\n\t        tmp,\n\t        keyLength = key.length;\n\t    for (i = 0; i < 256; ++i) {\n\t      s[i] = i;\n\t    }\n\t    for (i = 0; i < 256; ++i) {\n\t      tmp = s[i];\n\t      j = j + tmp + key[i % keyLength] & 0xFF;\n\t      s[i] = s[j];\n\t      s[j] = tmp;\n\t    }\n\t    this.s = s;\n\t  }\n\t  ARCFourCipher.prototype = {\n\t    encryptBlock: function ARCFourCipher_encryptBlock(data) {\n\t      var i,\n\t          n = data.length,\n\t          tmp,\n\t          tmp2;\n\t      var a = this.a,\n\t          b = this.b,\n\t          s = this.s;\n\t      var output = new Uint8Array(n);\n\t      for (i = 0; i < n; ++i) {\n\t        a = a + 1 & 0xFF;\n\t        tmp = s[a];\n\t        b = b + tmp & 0xFF;\n\t        tmp2 = s[b];\n\t        s[a] = tmp2;\n\t        s[b] = tmp;\n\t        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n\t      }\n\t      this.a = a;\n\t      this.b = b;\n\t      return output;\n\t    }\n\t  };\n\t  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n\t  return ARCFourCipher;\n\t}();\n\tvar calculateMD5 = function calculateMD5Closure() {\n\t  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n\t  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n\t  function hash(data, offset, length) {\n\t    var h0 = 1732584193,\n\t        h1 = -271733879,\n\t        h2 = -1732584194,\n\t        h3 = 271733878;\n\t    var paddedLength = length + 72 & ~63;\n\t    var padded = new Uint8Array(paddedLength);\n\t    var i, j, n;\n\t    for (i = 0; i < length; ++i) {\n\t      padded[i] = data[offset++];\n\t    }\n\t    padded[i++] = 0x80;\n\t    n = paddedLength - 8;\n\t    while (i < n) {\n\t      padded[i++] = 0;\n\t    }\n\t    padded[i++] = length << 3 & 0xFF;\n\t    padded[i++] = length >> 5 & 0xFF;\n\t    padded[i++] = length >> 13 & 0xFF;\n\t    padded[i++] = length >> 21 & 0xFF;\n\t    padded[i++] = length >>> 29 & 0xFF;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    var w = new Int32Array(16);\n\t    for (i = 0; i < paddedLength;) {\n\t      for (j = 0; j < 16; ++j, i += 4) {\n\t        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n\t      }\n\t      var a = h0,\n\t          b = h1,\n\t          c = h2,\n\t          d = h3,\n\t          f,\n\t          g;\n\t      for (j = 0; j < 64; ++j) {\n\t        if (j < 16) {\n\t          f = b & c | ~b & d;\n\t          g = j;\n\t        } else if (j < 32) {\n\t          f = d & b | ~d & c;\n\t          g = 5 * j + 1 & 15;\n\t        } else if (j < 48) {\n\t          f = b ^ c ^ d;\n\t          g = 3 * j + 5 & 15;\n\t        } else {\n\t          f = c ^ (b | ~d);\n\t          g = 7 * j & 15;\n\t        }\n\t        var tmp = d,\n\t            rotateArg = a + f + k[j] + w[g] | 0,\n\t            rotate = r[j];\n\t        d = c;\n\t        c = b;\n\t        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n\t        a = tmp;\n\t      }\n\t      h0 = h0 + a | 0;\n\t      h1 = h1 + b | 0;\n\t      h2 = h2 + c | 0;\n\t      h3 = h3 + d | 0;\n\t    }\n\t    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\n\t  }\n\t  return hash;\n\t}();\n\tvar Word64 = function Word64Closure() {\n\t  function Word64(highInteger, lowInteger) {\n\t    this.high = highInteger | 0;\n\t    this.low = lowInteger | 0;\n\t  }\n\t  Word64.prototype = {\n\t    and: function Word64_and(word) {\n\t      this.high &= word.high;\n\t      this.low &= word.low;\n\t    },\n\t    xor: function Word64_xor(word) {\n\t      this.high ^= word.high;\n\t      this.low ^= word.low;\n\t    },\n\t    or: function Word64_or(word) {\n\t      this.high |= word.high;\n\t      this.low |= word.low;\n\t    },\n\t    shiftRight: function Word64_shiftRight(places) {\n\t      if (places >= 32) {\n\t        this.low = this.high >>> places - 32 | 0;\n\t        this.high = 0;\n\t      } else {\n\t        this.low = this.low >>> places | this.high << 32 - places;\n\t        this.high = this.high >>> places | 0;\n\t      }\n\t    },\n\t    shiftLeft: function Word64_shiftLeft(places) {\n\t      if (places >= 32) {\n\t        this.high = this.low << places - 32;\n\t        this.low = 0;\n\t      } else {\n\t        this.high = this.high << places | this.low >>> 32 - places;\n\t        this.low = this.low << places;\n\t      }\n\t    },\n\t    rotateRight: function Word64_rotateRight(places) {\n\t      var low, high;\n\t      if (places & 32) {\n\t        high = this.low;\n\t        low = this.high;\n\t      } else {\n\t        low = this.low;\n\t        high = this.high;\n\t      }\n\t      places &= 31;\n\t      this.low = low >>> places | high << 32 - places;\n\t      this.high = high >>> places | low << 32 - places;\n\t    },\n\t    not: function Word64_not() {\n\t      this.high = ~this.high;\n\t      this.low = ~this.low;\n\t    },\n\t    add: function Word64_add(word) {\n\t      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n\t      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n\t      if (lowAdd > 0xFFFFFFFF) {\n\t        highAdd += 1;\n\t      }\n\t      this.low = lowAdd | 0;\n\t      this.high = highAdd | 0;\n\t    },\n\t    copyTo: function Word64_copyTo(bytes, offset) {\n\t      bytes[offset] = this.high >>> 24 & 0xFF;\n\t      bytes[offset + 1] = this.high >> 16 & 0xFF;\n\t      bytes[offset + 2] = this.high >> 8 & 0xFF;\n\t      bytes[offset + 3] = this.high & 0xFF;\n\t      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n\t      bytes[offset + 5] = this.low >> 16 & 0xFF;\n\t      bytes[offset + 6] = this.low >> 8 & 0xFF;\n\t      bytes[offset + 7] = this.low & 0xFF;\n\t    },\n\t    assign: function Word64_assign(word) {\n\t      this.high = word.high;\n\t      this.low = word.low;\n\t    }\n\t  };\n\t  return Word64;\n\t}();\n\tvar calculateSHA256 = function calculateSHA256Closure() {\n\t  function rotr(x, n) {\n\t    return x >>> n | x << 32 - n;\n\t  }\n\t  function ch(x, y, z) {\n\t    return x & y ^ ~x & z;\n\t  }\n\t  function maj(x, y, z) {\n\t    return x & y ^ x & z ^ y & z;\n\t  }\n\t  function sigma(x) {\n\t    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n\t  }\n\t  function sigmaPrime(x) {\n\t    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n\t  }\n\t  function littleSigma(x) {\n\t    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n\t  }\n\t  function littleSigmaPrime(x) {\n\t    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n\t  }\n\t  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\t  function hash(data, offset, length) {\n\t    var h0 = 0x6a09e667,\n\t        h1 = 0xbb67ae85,\n\t        h2 = 0x3c6ef372,\n\t        h3 = 0xa54ff53a,\n\t        h4 = 0x510e527f,\n\t        h5 = 0x9b05688c,\n\t        h6 = 0x1f83d9ab,\n\t        h7 = 0x5be0cd19;\n\t    var paddedLength = Math.ceil((length + 9) / 64) * 64;\n\t    var padded = new Uint8Array(paddedLength);\n\t    var i, j, n;\n\t    for (i = 0; i < length; ++i) {\n\t      padded[i] = data[offset++];\n\t    }\n\t    padded[i++] = 0x80;\n\t    n = paddedLength - 8;\n\t    while (i < n) {\n\t      padded[i++] = 0;\n\t    }\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = length >>> 29 & 0xFF;\n\t    padded[i++] = length >> 21 & 0xFF;\n\t    padded[i++] = length >> 13 & 0xFF;\n\t    padded[i++] = length >> 5 & 0xFF;\n\t    padded[i++] = length << 3 & 0xFF;\n\t    var w = new Uint32Array(64);\n\t    for (i = 0; i < paddedLength;) {\n\t      for (j = 0; j < 16; ++j) {\n\t        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n\t        i += 4;\n\t      }\n\t      for (j = 16; j < 64; ++j) {\n\t        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n\t      }\n\t      var a = h0,\n\t          b = h1,\n\t          c = h2,\n\t          d = h3,\n\t          e = h4,\n\t          f = h5,\n\t          g = h6,\n\t          h = h7,\n\t          t1,\n\t          t2;\n\t      for (j = 0; j < 64; ++j) {\n\t        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n\t        t2 = sigma(a) + maj(a, b, c);\n\t        h = g;\n\t        g = f;\n\t        f = e;\n\t        e = d + t1 | 0;\n\t        d = c;\n\t        c = b;\n\t        b = a;\n\t        a = t1 + t2 | 0;\n\t      }\n\t      h0 = h0 + a | 0;\n\t      h1 = h1 + b | 0;\n\t      h2 = h2 + c | 0;\n\t      h3 = h3 + d | 0;\n\t      h4 = h4 + e | 0;\n\t      h5 = h5 + f | 0;\n\t      h6 = h6 + g | 0;\n\t      h7 = h7 + h | 0;\n\t    }\n\t    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\n\t  }\n\t  return hash;\n\t}();\n\tvar calculateSHA512 = function calculateSHA512Closure() {\n\t  function ch(result, x, y, z, tmp) {\n\t    result.assign(x);\n\t    result.and(y);\n\t    tmp.assign(x);\n\t    tmp.not();\n\t    tmp.and(z);\n\t    result.xor(tmp);\n\t  }\n\t  function maj(result, x, y, z, tmp) {\n\t    result.assign(x);\n\t    result.and(y);\n\t    tmp.assign(x);\n\t    tmp.and(z);\n\t    result.xor(tmp);\n\t    tmp.assign(y);\n\t    tmp.and(z);\n\t    result.xor(tmp);\n\t  }\n\t  function sigma(result, x, tmp) {\n\t    result.assign(x);\n\t    result.rotateRight(28);\n\t    tmp.assign(x);\n\t    tmp.rotateRight(34);\n\t    result.xor(tmp);\n\t    tmp.assign(x);\n\t    tmp.rotateRight(39);\n\t    result.xor(tmp);\n\t  }\n\t  function sigmaPrime(result, x, tmp) {\n\t    result.assign(x);\n\t    result.rotateRight(14);\n\t    tmp.assign(x);\n\t    tmp.rotateRight(18);\n\t    result.xor(tmp);\n\t    tmp.assign(x);\n\t    tmp.rotateRight(41);\n\t    result.xor(tmp);\n\t  }\n\t  function littleSigma(result, x, tmp) {\n\t    result.assign(x);\n\t    result.rotateRight(1);\n\t    tmp.assign(x);\n\t    tmp.rotateRight(8);\n\t    result.xor(tmp);\n\t    tmp.assign(x);\n\t    tmp.shiftRight(7);\n\t    result.xor(tmp);\n\t  }\n\t  function littleSigmaPrime(result, x, tmp) {\n\t    result.assign(x);\n\t    result.rotateRight(19);\n\t    tmp.assign(x);\n\t    tmp.rotateRight(61);\n\t    result.xor(tmp);\n\t    tmp.assign(x);\n\t    tmp.shiftRight(6);\n\t    result.xor(tmp);\n\t  }\n\t  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n\t  function hash(data, offset, length, mode384) {\n\t    mode384 = !!mode384;\n\t    var h0, h1, h2, h3, h4, h5, h6, h7;\n\t    if (!mode384) {\n\t      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n\t      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n\t      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n\t      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n\t      h4 = new Word64(0x510e527f, 0xade682d1);\n\t      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n\t      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n\t      h7 = new Word64(0x5be0cd19, 0x137e2179);\n\t    } else {\n\t      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n\t      h1 = new Word64(0x629a292a, 0x367cd507);\n\t      h2 = new Word64(0x9159015a, 0x3070dd17);\n\t      h3 = new Word64(0x152fecd8, 0xf70e5939);\n\t      h4 = new Word64(0x67332667, 0xffc00b31);\n\t      h5 = new Word64(0x8eb44a87, 0x68581511);\n\t      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n\t      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n\t    }\n\t    var paddedLength = Math.ceil((length + 17) / 128) * 128;\n\t    var padded = new Uint8Array(paddedLength);\n\t    var i, j, n;\n\t    for (i = 0; i < length; ++i) {\n\t      padded[i] = data[offset++];\n\t    }\n\t    padded[i++] = 0x80;\n\t    n = paddedLength - 16;\n\t    while (i < n) {\n\t      padded[i++] = 0;\n\t    }\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = 0;\n\t    padded[i++] = length >>> 29 & 0xFF;\n\t    padded[i++] = length >> 21 & 0xFF;\n\t    padded[i++] = length >> 13 & 0xFF;\n\t    padded[i++] = length >> 5 & 0xFF;\n\t    padded[i++] = length << 3 & 0xFF;\n\t    var w = new Array(80);\n\t    for (i = 0; i < 80; i++) {\n\t      w[i] = new Word64(0, 0);\n\t    }\n\t    var a = new Word64(0, 0),\n\t        b = new Word64(0, 0),\n\t        c = new Word64(0, 0);\n\t    var d = new Word64(0, 0),\n\t        e = new Word64(0, 0),\n\t        f = new Word64(0, 0);\n\t    var g = new Word64(0, 0),\n\t        h = new Word64(0, 0);\n\t    var t1 = new Word64(0, 0),\n\t        t2 = new Word64(0, 0);\n\t    var tmp1 = new Word64(0, 0),\n\t        tmp2 = new Word64(0, 0),\n\t        tmp3;\n\t    for (i = 0; i < paddedLength;) {\n\t      for (j = 0; j < 16; ++j) {\n\t        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n\t        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n\t        i += 8;\n\t      }\n\t      for (j = 16; j < 80; ++j) {\n\t        tmp3 = w[j];\n\t        littleSigmaPrime(tmp3, w[j - 2], tmp2);\n\t        tmp3.add(w[j - 7]);\n\t        littleSigma(tmp1, w[j - 15], tmp2);\n\t        tmp3.add(tmp1);\n\t        tmp3.add(w[j - 16]);\n\t      }\n\t      a.assign(h0);\n\t      b.assign(h1);\n\t      c.assign(h2);\n\t      d.assign(h3);\n\t      e.assign(h4);\n\t      f.assign(h5);\n\t      g.assign(h6);\n\t      h.assign(h7);\n\t      for (j = 0; j < 80; ++j) {\n\t        t1.assign(h);\n\t        sigmaPrime(tmp1, e, tmp2);\n\t        t1.add(tmp1);\n\t        ch(tmp1, e, f, g, tmp2);\n\t        t1.add(tmp1);\n\t        t1.add(k[j]);\n\t        t1.add(w[j]);\n\t        sigma(t2, a, tmp2);\n\t        maj(tmp1, a, b, c, tmp2);\n\t        t2.add(tmp1);\n\t        tmp3 = h;\n\t        h = g;\n\t        g = f;\n\t        f = e;\n\t        d.add(t1);\n\t        e = d;\n\t        d = c;\n\t        c = b;\n\t        b = a;\n\t        tmp3.assign(t1);\n\t        tmp3.add(t2);\n\t        a = tmp3;\n\t      }\n\t      h0.add(a);\n\t      h1.add(b);\n\t      h2.add(c);\n\t      h3.add(d);\n\t      h4.add(e);\n\t      h5.add(f);\n\t      h6.add(g);\n\t      h7.add(h);\n\t    }\n\t    var result;\n\t    if (!mode384) {\n\t      result = new Uint8Array(64);\n\t      h0.copyTo(result, 0);\n\t      h1.copyTo(result, 8);\n\t      h2.copyTo(result, 16);\n\t      h3.copyTo(result, 24);\n\t      h4.copyTo(result, 32);\n\t      h5.copyTo(result, 40);\n\t      h6.copyTo(result, 48);\n\t      h7.copyTo(result, 56);\n\t    } else {\n\t      result = new Uint8Array(48);\n\t      h0.copyTo(result, 0);\n\t      h1.copyTo(result, 8);\n\t      h2.copyTo(result, 16);\n\t      h3.copyTo(result, 24);\n\t      h4.copyTo(result, 32);\n\t      h5.copyTo(result, 40);\n\t    }\n\t    return result;\n\t  }\n\t  return hash;\n\t}();\n\tvar calculateSHA384 = function calculateSHA384Closure() {\n\t  function hash(data, offset, length) {\n\t    return calculateSHA512(data, offset, length, true);\n\t  }\n\t  return hash;\n\t}();\n\tvar NullCipher = function NullCipherClosure() {\n\t  function NullCipher() {}\n\t  NullCipher.prototype = {\n\t    decryptBlock: function NullCipher_decryptBlock(data) {\n\t      return data;\n\t    }\n\t  };\n\t  return NullCipher;\n\t}();\n\tvar AES128Cipher = function AES128CipherClosure() {\n\t  var rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\n\t  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n\t  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n\t  var mixCol = new Uint8Array(256);\n\t  for (var i = 0; i < 256; i++) {\n\t    if (i < 128) {\n\t      mixCol[i] = i << 1;\n\t    } else {\n\t      mixCol[i] = i << 1 ^ 0x1b;\n\t    }\n\t  }\n\t  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n\t  function expandKey128(cipherKey) {\n\t    var b = 176,\n\t        result = new Uint8Array(b);\n\t    result.set(cipherKey);\n\t    for (var j = 16, i = 1; j < b; ++i) {\n\t      var t1 = result[j - 3],\n\t          t2 = result[j - 2],\n\t          t3 = result[j - 1],\n\t          t4 = result[j - 4];\n\t      t1 = s[t1];\n\t      t2 = s[t2];\n\t      t3 = s[t3];\n\t      t4 = s[t4];\n\t      t1 = t1 ^ rcon[i];\n\t      for (var n = 0; n < 4; ++n) {\n\t        result[j] = t1 ^= result[j - 16];\n\t        j++;\n\t        result[j] = t2 ^= result[j - 16];\n\t        j++;\n\t        result[j] = t3 ^= result[j - 16];\n\t        j++;\n\t        result[j] = t4 ^= result[j - 16];\n\t        j++;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t  function decrypt128(input, key) {\n\t    var state = new Uint8Array(16);\n\t    state.set(input);\n\t    var i, j, k;\n\t    var t, u, v;\n\t    for (j = 0, k = 160; j < 16; ++j, ++k) {\n\t      state[j] ^= key[k];\n\t    }\n\t    for (i = 9; i >= 1; --i) {\n\t      t = state[13];\n\t      state[13] = state[9];\n\t      state[9] = state[5];\n\t      state[5] = state[1];\n\t      state[1] = t;\n\t      t = state[14];\n\t      u = state[10];\n\t      state[14] = state[6];\n\t      state[10] = state[2];\n\t      state[6] = t;\n\t      state[2] = u;\n\t      t = state[15];\n\t      u = state[11];\n\t      v = state[7];\n\t      state[15] = state[3];\n\t      state[11] = t;\n\t      state[7] = u;\n\t      state[3] = v;\n\t      for (j = 0; j < 16; ++j) {\n\t        state[j] = inv_s[state[j]];\n\t      }\n\t      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n\t        state[j] ^= key[k];\n\t      }\n\t      for (j = 0; j < 16; j += 4) {\n\t        var s0 = mix[state[j]],\n\t            s1 = mix[state[j + 1]],\n\t            s2 = mix[state[j + 2]],\n\t            s3 = mix[state[j + 3]];\n\t        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n\t        state[j] = t >>> 24 & 0xFF;\n\t        state[j + 1] = t >> 16 & 0xFF;\n\t        state[j + 2] = t >> 8 & 0xFF;\n\t        state[j + 3] = t & 0xFF;\n\t      }\n\t    }\n\t    t = state[13];\n\t    state[13] = state[9];\n\t    state[9] = state[5];\n\t    state[5] = state[1];\n\t    state[1] = t;\n\t    t = state[14];\n\t    u = state[10];\n\t    state[14] = state[6];\n\t    state[10] = state[2];\n\t    state[6] = t;\n\t    state[2] = u;\n\t    t = state[15];\n\t    u = state[11];\n\t    v = state[7];\n\t    state[15] = state[3];\n\t    state[11] = t;\n\t    state[7] = u;\n\t    state[3] = v;\n\t    for (j = 0; j < 16; ++j) {\n\t      state[j] = inv_s[state[j]];\n\t      state[j] ^= key[j];\n\t    }\n\t    return state;\n\t  }\n\t  function encrypt128(input, key) {\n\t    var t, u, v, k;\n\t    var state = new Uint8Array(16);\n\t    state.set(input);\n\t    for (j = 0; j < 16; ++j) {\n\t      state[j] ^= key[j];\n\t    }\n\t    for (i = 1; i < 10; i++) {\n\t      for (j = 0; j < 16; ++j) {\n\t        state[j] = s[state[j]];\n\t      }\n\t      v = state[1];\n\t      state[1] = state[5];\n\t      state[5] = state[9];\n\t      state[9] = state[13];\n\t      state[13] = v;\n\t      v = state[2];\n\t      u = state[6];\n\t      state[2] = state[10];\n\t      state[6] = state[14];\n\t      state[10] = v;\n\t      state[14] = u;\n\t      v = state[3];\n\t      u = state[7];\n\t      t = state[11];\n\t      state[3] = state[15];\n\t      state[7] = v;\n\t      state[11] = u;\n\t      state[15] = t;\n\t      for (var j = 0; j < 16; j += 4) {\n\t        var s0 = state[j + 0],\n\t            s1 = state[j + 1];\n\t        var s2 = state[j + 2],\n\t            s3 = state[j + 3];\n\t        t = s0 ^ s1 ^ s2 ^ s3;\n\t        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n\t        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n\t        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n\t        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n\t      }\n\t      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n\t        state[j] ^= key[k];\n\t      }\n\t    }\n\t    for (j = 0; j < 16; ++j) {\n\t      state[j] = s[state[j]];\n\t    }\n\t    v = state[1];\n\t    state[1] = state[5];\n\t    state[5] = state[9];\n\t    state[9] = state[13];\n\t    state[13] = v;\n\t    v = state[2];\n\t    u = state[6];\n\t    state[2] = state[10];\n\t    state[6] = state[14];\n\t    state[10] = v;\n\t    state[14] = u;\n\t    v = state[3];\n\t    u = state[7];\n\t    t = state[11];\n\t    state[3] = state[15];\n\t    state[7] = v;\n\t    state[11] = u;\n\t    state[15] = t;\n\t    for (j = 0, k = 160; j < 16; ++j, ++k) {\n\t      state[j] ^= key[k];\n\t    }\n\t    return state;\n\t  }\n\t  function AES128Cipher(key) {\n\t    this.key = expandKey128(key);\n\t    this.buffer = new Uint8Array(16);\n\t    this.bufferPosition = 0;\n\t  }\n\t  function decryptBlock2(data, finalize) {\n\t    var i,\n\t        j,\n\t        ii,\n\t        sourceLength = data.length,\n\t        buffer = this.buffer,\n\t        bufferLength = this.bufferPosition,\n\t        result = [],\n\t        iv = this.iv;\n\t    for (i = 0; i < sourceLength; ++i) {\n\t      buffer[bufferLength] = data[i];\n\t      ++bufferLength;\n\t      if (bufferLength < 16) {\n\t        continue;\n\t      }\n\t      var plain = decrypt128(buffer, this.key);\n\t      for (j = 0; j < 16; ++j) {\n\t        plain[j] ^= iv[j];\n\t      }\n\t      iv = buffer;\n\t      result.push(plain);\n\t      buffer = new Uint8Array(16);\n\t      bufferLength = 0;\n\t    }\n\t    this.buffer = buffer;\n\t    this.bufferLength = bufferLength;\n\t    this.iv = iv;\n\t    if (result.length === 0) {\n\t      return new Uint8Array([]);\n\t    }\n\t    var outputLength = 16 * result.length;\n\t    if (finalize) {\n\t      var lastBlock = result[result.length - 1];\n\t      var psLen = lastBlock[15];\n\t      if (psLen <= 16) {\n\t        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n\t          if (lastBlock[i] !== psLen) {\n\t            psLen = 0;\n\t            break;\n\t          }\n\t        }\n\t        outputLength -= psLen;\n\t        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n\t      }\n\t    }\n\t    var output = new Uint8Array(outputLength);\n\t    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n\t      output.set(result[i], j);\n\t    }\n\t    return output;\n\t  }\n\t  AES128Cipher.prototype = {\n\t    decryptBlock: function AES128Cipher_decryptBlock(data, finalize) {\n\t      var i,\n\t          sourceLength = data.length;\n\t      var buffer = this.buffer,\n\t          bufferLength = this.bufferPosition;\n\t      for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n\t        buffer[bufferLength] = data[i];\n\t      }\n\t      if (bufferLength < 16) {\n\t        this.bufferLength = bufferLength;\n\t        return new Uint8Array([]);\n\t      }\n\t      this.iv = buffer;\n\t      this.buffer = new Uint8Array(16);\n\t      this.bufferLength = 0;\n\t      this.decryptBlock = decryptBlock2;\n\t      return this.decryptBlock(data.subarray(16), finalize);\n\t    },\n\t    encrypt: function AES128Cipher_encrypt(data, iv) {\n\t      var i,\n\t          j,\n\t          ii,\n\t          sourceLength = data.length,\n\t          buffer = this.buffer,\n\t          bufferLength = this.bufferPosition,\n\t          result = [];\n\t      if (!iv) {\n\t        iv = new Uint8Array(16);\n\t      }\n\t      for (i = 0; i < sourceLength; ++i) {\n\t        buffer[bufferLength] = data[i];\n\t        ++bufferLength;\n\t        if (bufferLength < 16) {\n\t          continue;\n\t        }\n\t        for (j = 0; j < 16; ++j) {\n\t          buffer[j] ^= iv[j];\n\t        }\n\t        var cipher = encrypt128(buffer, this.key);\n\t        iv = cipher;\n\t        result.push(cipher);\n\t        buffer = new Uint8Array(16);\n\t        bufferLength = 0;\n\t      }\n\t      this.buffer = buffer;\n\t      this.bufferLength = bufferLength;\n\t      this.iv = iv;\n\t      if (result.length === 0) {\n\t        return new Uint8Array([]);\n\t      }\n\t      var outputLength = 16 * result.length;\n\t      var output = new Uint8Array(outputLength);\n\t      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n\t        output.set(result[i], j);\n\t      }\n\t      return output;\n\t    }\n\t  };\n\t  return AES128Cipher;\n\t}();\n\tvar AES256Cipher = function AES256CipherClosure() {\n\t  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n\t  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n\t  var mixCol = new Uint8Array(256);\n\t  for (var i = 0; i < 256; i++) {\n\t    if (i < 128) {\n\t      mixCol[i] = i << 1;\n\t    } else {\n\t      mixCol[i] = i << 1 ^ 0x1b;\n\t    }\n\t  }\n\t  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n\t  function expandKey256(cipherKey) {\n\t    var b = 240,\n\t        result = new Uint8Array(b);\n\t    var r = 1;\n\t    result.set(cipherKey);\n\t    for (var j = 32, i = 1; j < b; ++i) {\n\t      if (j % 32 === 16) {\n\t        t1 = s[t1];\n\t        t2 = s[t2];\n\t        t3 = s[t3];\n\t        t4 = s[t4];\n\t      } else if (j % 32 === 0) {\n\t        var t1 = result[j - 3],\n\t            t2 = result[j - 2],\n\t            t3 = result[j - 1],\n\t            t4 = result[j - 4];\n\t        t1 = s[t1];\n\t        t2 = s[t2];\n\t        t3 = s[t3];\n\t        t4 = s[t4];\n\t        t1 = t1 ^ r;\n\t        if ((r <<= 1) >= 256) {\n\t          r = (r ^ 0x1b) & 0xFF;\n\t        }\n\t      }\n\t      for (var n = 0; n < 4; ++n) {\n\t        result[j] = t1 ^= result[j - 32];\n\t        j++;\n\t        result[j] = t2 ^= result[j - 32];\n\t        j++;\n\t        result[j] = t3 ^= result[j - 32];\n\t        j++;\n\t        result[j] = t4 ^= result[j - 32];\n\t        j++;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t  function decrypt256(input, key) {\n\t    var state = new Uint8Array(16);\n\t    state.set(input);\n\t    var i, j, k;\n\t    var t, u, v;\n\t    for (j = 0, k = 224; j < 16; ++j, ++k) {\n\t      state[j] ^= key[k];\n\t    }\n\t    for (i = 13; i >= 1; --i) {\n\t      t = state[13];\n\t      state[13] = state[9];\n\t      state[9] = state[5];\n\t      state[5] = state[1];\n\t      state[1] = t;\n\t      t = state[14];\n\t      u = state[10];\n\t      state[14] = state[6];\n\t      state[10] = state[2];\n\t      state[6] = t;\n\t      state[2] = u;\n\t      t = state[15];\n\t      u = state[11];\n\t      v = state[7];\n\t      state[15] = state[3];\n\t      state[11] = t;\n\t      state[7] = u;\n\t      state[3] = v;\n\t      for (j = 0; j < 16; ++j) {\n\t        state[j] = inv_s[state[j]];\n\t      }\n\t      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n\t        state[j] ^= key[k];\n\t      }\n\t      for (j = 0; j < 16; j += 4) {\n\t        var s0 = mix[state[j]],\n\t            s1 = mix[state[j + 1]],\n\t            s2 = mix[state[j + 2]],\n\t            s3 = mix[state[j + 3]];\n\t        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n\t        state[j] = t >>> 24 & 0xFF;\n\t        state[j + 1] = t >> 16 & 0xFF;\n\t        state[j + 2] = t >> 8 & 0xFF;\n\t        state[j + 3] = t & 0xFF;\n\t      }\n\t    }\n\t    t = state[13];\n\t    state[13] = state[9];\n\t    state[9] = state[5];\n\t    state[5] = state[1];\n\t    state[1] = t;\n\t    t = state[14];\n\t    u = state[10];\n\t    state[14] = state[6];\n\t    state[10] = state[2];\n\t    state[6] = t;\n\t    state[2] = u;\n\t    t = state[15];\n\t    u = state[11];\n\t    v = state[7];\n\t    state[15] = state[3];\n\t    state[11] = t;\n\t    state[7] = u;\n\t    state[3] = v;\n\t    for (j = 0; j < 16; ++j) {\n\t      state[j] = inv_s[state[j]];\n\t      state[j] ^= key[j];\n\t    }\n\t    return state;\n\t  }\n\t  function encrypt256(input, key) {\n\t    var t, u, v, k;\n\t    var state = new Uint8Array(16);\n\t    state.set(input);\n\t    for (j = 0; j < 16; ++j) {\n\t      state[j] ^= key[j];\n\t    }\n\t    for (i = 1; i < 14; i++) {\n\t      for (j = 0; j < 16; ++j) {\n\t        state[j] = s[state[j]];\n\t      }\n\t      v = state[1];\n\t      state[1] = state[5];\n\t      state[5] = state[9];\n\t      state[9] = state[13];\n\t      state[13] = v;\n\t      v = state[2];\n\t      u = state[6];\n\t      state[2] = state[10];\n\t      state[6] = state[14];\n\t      state[10] = v;\n\t      state[14] = u;\n\t      v = state[3];\n\t      u = state[7];\n\t      t = state[11];\n\t      state[3] = state[15];\n\t      state[7] = v;\n\t      state[11] = u;\n\t      state[15] = t;\n\t      for (var j = 0; j < 16; j += 4) {\n\t        var s0 = state[j + 0],\n\t            s1 = state[j + 1];\n\t        var s2 = state[j + 2],\n\t            s3 = state[j + 3];\n\t        t = s0 ^ s1 ^ s2 ^ s3;\n\t        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n\t        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n\t        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n\t        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n\t      }\n\t      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n\t        state[j] ^= key[k];\n\t      }\n\t    }\n\t    for (j = 0; j < 16; ++j) {\n\t      state[j] = s[state[j]];\n\t    }\n\t    v = state[1];\n\t    state[1] = state[5];\n\t    state[5] = state[9];\n\t    state[9] = state[13];\n\t    state[13] = v;\n\t    v = state[2];\n\t    u = state[6];\n\t    state[2] = state[10];\n\t    state[6] = state[14];\n\t    state[10] = v;\n\t    state[14] = u;\n\t    v = state[3];\n\t    u = state[7];\n\t    t = state[11];\n\t    state[3] = state[15];\n\t    state[7] = v;\n\t    state[11] = u;\n\t    state[15] = t;\n\t    for (j = 0, k = 224; j < 16; ++j, ++k) {\n\t      state[j] ^= key[k];\n\t    }\n\t    return state;\n\t  }\n\t  function AES256Cipher(key) {\n\t    this.key = expandKey256(key);\n\t    this.buffer = new Uint8Array(16);\n\t    this.bufferPosition = 0;\n\t  }\n\t  function decryptBlock2(data, finalize) {\n\t    var i,\n\t        j,\n\t        ii,\n\t        sourceLength = data.length,\n\t        buffer = this.buffer,\n\t        bufferLength = this.bufferPosition,\n\t        result = [],\n\t        iv = this.iv;\n\t    for (i = 0; i < sourceLength; ++i) {\n\t      buffer[bufferLength] = data[i];\n\t      ++bufferLength;\n\t      if (bufferLength < 16) {\n\t        continue;\n\t      }\n\t      var plain = decrypt256(buffer, this.key);\n\t      for (j = 0; j < 16; ++j) {\n\t        plain[j] ^= iv[j];\n\t      }\n\t      iv = buffer;\n\t      result.push(plain);\n\t      buffer = new Uint8Array(16);\n\t      bufferLength = 0;\n\t    }\n\t    this.buffer = buffer;\n\t    this.bufferLength = bufferLength;\n\t    this.iv = iv;\n\t    if (result.length === 0) {\n\t      return new Uint8Array([]);\n\t    }\n\t    var outputLength = 16 * result.length;\n\t    if (finalize) {\n\t      var lastBlock = result[result.length - 1];\n\t      var psLen = lastBlock[15];\n\t      if (psLen <= 16) {\n\t        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n\t          if (lastBlock[i] !== psLen) {\n\t            psLen = 0;\n\t            break;\n\t          }\n\t        }\n\t        outputLength -= psLen;\n\t        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n\t      }\n\t    }\n\t    var output = new Uint8Array(outputLength);\n\t    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n\t      output.set(result[i], j);\n\t    }\n\t    return output;\n\t  }\n\t  AES256Cipher.prototype = {\n\t    decryptBlock: function AES256Cipher_decryptBlock(data, finalize, iv) {\n\t      var i,\n\t          sourceLength = data.length;\n\t      var buffer = this.buffer,\n\t          bufferLength = this.bufferPosition;\n\t      if (iv) {\n\t        this.iv = iv;\n\t      } else {\n\t        for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n\t          buffer[bufferLength] = data[i];\n\t        }\n\t        if (bufferLength < 16) {\n\t          this.bufferLength = bufferLength;\n\t          return new Uint8Array([]);\n\t        }\n\t        this.iv = buffer;\n\t        data = data.subarray(16);\n\t      }\n\t      this.buffer = new Uint8Array(16);\n\t      this.bufferLength = 0;\n\t      this.decryptBlock = decryptBlock2;\n\t      return this.decryptBlock(data, finalize);\n\t    },\n\t    encrypt: function AES256Cipher_encrypt(data, iv) {\n\t      var i,\n\t          j,\n\t          ii,\n\t          sourceLength = data.length,\n\t          buffer = this.buffer,\n\t          bufferLength = this.bufferPosition,\n\t          result = [];\n\t      if (!iv) {\n\t        iv = new Uint8Array(16);\n\t      }\n\t      for (i = 0; i < sourceLength; ++i) {\n\t        buffer[bufferLength] = data[i];\n\t        ++bufferLength;\n\t        if (bufferLength < 16) {\n\t          continue;\n\t        }\n\t        for (j = 0; j < 16; ++j) {\n\t          buffer[j] ^= iv[j];\n\t        }\n\t        var cipher = encrypt256(buffer, this.key);\n\t        this.iv = cipher;\n\t        result.push(cipher);\n\t        buffer = new Uint8Array(16);\n\t        bufferLength = 0;\n\t      }\n\t      this.buffer = buffer;\n\t      this.bufferLength = bufferLength;\n\t      this.iv = iv;\n\t      if (result.length === 0) {\n\t        return new Uint8Array([]);\n\t      }\n\t      var outputLength = 16 * result.length;\n\t      var output = new Uint8Array(outputLength);\n\t      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n\t        output.set(result[i], j);\n\t      }\n\t      return output;\n\t    }\n\t  };\n\t  return AES256Cipher;\n\t}();\n\tvar PDF17 = function PDF17Closure() {\n\t  function compareByteArrays(array1, array2) {\n\t    if (array1.length !== array2.length) {\n\t      return false;\n\t    }\n\t    for (var i = 0; i < array1.length; i++) {\n\t      if (array1[i] !== array2[i]) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t  function PDF17() {}\n\t  PDF17.prototype = {\n\t    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n\t      var hashData = new Uint8Array(password.length + 56);\n\t      hashData.set(password, 0);\n\t      hashData.set(ownerValidationSalt, password.length);\n\t      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n\t      var result = calculateSHA256(hashData, 0, hashData.length);\n\t      return compareByteArrays(result, ownerPassword);\n\t    },\n\t    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n\t      var hashData = new Uint8Array(password.length + 8);\n\t      hashData.set(password, 0);\n\t      hashData.set(userValidationSalt, password.length);\n\t      var result = calculateSHA256(hashData, 0, hashData.length);\n\t      return compareByteArrays(result, userPassword);\n\t    },\n\t    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n\t      var hashData = new Uint8Array(password.length + 56);\n\t      hashData.set(password, 0);\n\t      hashData.set(ownerKeySalt, password.length);\n\t      hashData.set(userBytes, password.length + ownerKeySalt.length);\n\t      var key = calculateSHA256(hashData, 0, hashData.length);\n\t      var cipher = new AES256Cipher(key);\n\t      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n\t    },\n\t    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n\t      var hashData = new Uint8Array(password.length + 8);\n\t      hashData.set(password, 0);\n\t      hashData.set(userKeySalt, password.length);\n\t      var key = calculateSHA256(hashData, 0, hashData.length);\n\t      var cipher = new AES256Cipher(key);\n\t      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n\t    }\n\t  };\n\t  return PDF17;\n\t}();\n\tvar PDF20 = function PDF20Closure() {\n\t  function concatArrays(array1, array2) {\n\t    var t = new Uint8Array(array1.length + array2.length);\n\t    t.set(array1, 0);\n\t    t.set(array2, array1.length);\n\t    return t;\n\t  }\n\t  function calculatePDF20Hash(password, input, userBytes) {\n\t    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n\t    var e = [0];\n\t    var i = 0;\n\t    while (i < 64 || e[e.length - 1] > i - 32) {\n\t      var arrayLength = password.length + k.length + userBytes.length;\n\t      var k1 = new Uint8Array(arrayLength * 64);\n\t      var array = concatArrays(password, k);\n\t      array = concatArrays(array, userBytes);\n\t      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n\t        k1.set(array, pos);\n\t      }\n\t      var cipher = new AES128Cipher(k.subarray(0, 16));\n\t      e = cipher.encrypt(k1, k.subarray(16, 32));\n\t      var remainder = 0;\n\t      for (var z = 0; z < 16; z++) {\n\t        remainder *= 256 % 3;\n\t        remainder %= 3;\n\t        remainder += (e[z] >>> 0) % 3;\n\t        remainder %= 3;\n\t      }\n\t      if (remainder === 0) {\n\t        k = calculateSHA256(e, 0, e.length);\n\t      } else if (remainder === 1) {\n\t        k = calculateSHA384(e, 0, e.length);\n\t      } else if (remainder === 2) {\n\t        k = calculateSHA512(e, 0, e.length);\n\t      }\n\t      i++;\n\t    }\n\t    return k.subarray(0, 32);\n\t  }\n\t  function PDF20() {}\n\t  function compareByteArrays(array1, array2) {\n\t    if (array1.length !== array2.length) {\n\t      return false;\n\t    }\n\t    for (var i = 0; i < array1.length; i++) {\n\t      if (array1[i] !== array2[i]) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t  PDF20.prototype = {\n\t    hash: function PDF20_hash(password, concatBytes, userBytes) {\n\t      return calculatePDF20Hash(password, concatBytes, userBytes);\n\t    },\n\t    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n\t      var hashData = new Uint8Array(password.length + 56);\n\t      hashData.set(password, 0);\n\t      hashData.set(ownerValidationSalt, password.length);\n\t      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n\t      var result = calculatePDF20Hash(password, hashData, userBytes);\n\t      return compareByteArrays(result, ownerPassword);\n\t    },\n\t    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n\t      var hashData = new Uint8Array(password.length + 8);\n\t      hashData.set(password, 0);\n\t      hashData.set(userValidationSalt, password.length);\n\t      var result = calculatePDF20Hash(password, hashData, []);\n\t      return compareByteArrays(result, userPassword);\n\t    },\n\t    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n\t      var hashData = new Uint8Array(password.length + 56);\n\t      hashData.set(password, 0);\n\t      hashData.set(ownerKeySalt, password.length);\n\t      hashData.set(userBytes, password.length + ownerKeySalt.length);\n\t      var key = calculatePDF20Hash(password, hashData, userBytes);\n\t      var cipher = new AES256Cipher(key);\n\t      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n\t    },\n\t    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n\t      var hashData = new Uint8Array(password.length + 8);\n\t      hashData.set(password, 0);\n\t      hashData.set(userKeySalt, password.length);\n\t      var key = calculatePDF20Hash(password, hashData, []);\n\t      var cipher = new AES256Cipher(key);\n\t      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n\t    }\n\t  };\n\t  return PDF20;\n\t}();\n\tvar CipherTransform = function CipherTransformClosure() {\n\t  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n\t    this.StringCipherConstructor = stringCipherConstructor;\n\t    this.StreamCipherConstructor = streamCipherConstructor;\n\t  }\n\t  CipherTransform.prototype = {\n\t    createStream: function CipherTransform_createStream(stream, length) {\n\t      var cipher = new this.StreamCipherConstructor();\n\t      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n\t        return cipher.decryptBlock(data, finalize);\n\t      });\n\t    },\n\t    decryptString: function CipherTransform_decryptString(s) {\n\t      var cipher = new this.StringCipherConstructor();\n\t      var data = (0, _util.stringToBytes)(s);\n\t      data = cipher.decryptBlock(data, true);\n\t      return (0, _util.bytesToString)(data);\n\t    }\n\t  };\n\t  return CipherTransform;\n\t}();\n\tvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n\t  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n\t  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n\t    if (password) {\n\t      var passwordLength = Math.min(127, password.length);\n\t      password = password.subarray(0, passwordLength);\n\t    } else {\n\t      password = [];\n\t    }\n\t    var pdfAlgorithm;\n\t    if (revision === 6) {\n\t      pdfAlgorithm = new PDF20();\n\t    } else {\n\t      pdfAlgorithm = new PDF17();\n\t    }\n\t    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n\t      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n\t    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n\t      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n\t    }\n\t    return null;\n\t  }\n\t  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n\t    var hashDataSize = 40 + ownerPassword.length + fileId.length;\n\t    var hashData = new Uint8Array(hashDataSize),\n\t        i = 0,\n\t        j,\n\t        n;\n\t    if (password) {\n\t      n = Math.min(32, password.length);\n\t      for (; i < n; ++i) {\n\t        hashData[i] = password[i];\n\t      }\n\t    }\n\t    j = 0;\n\t    while (i < 32) {\n\t      hashData[i++] = defaultPasswordBytes[j++];\n\t    }\n\t    for (j = 0, n = ownerPassword.length; j < n; ++j) {\n\t      hashData[i++] = ownerPassword[j];\n\t    }\n\t    hashData[i++] = flags & 0xFF;\n\t    hashData[i++] = flags >> 8 & 0xFF;\n\t    hashData[i++] = flags >> 16 & 0xFF;\n\t    hashData[i++] = flags >>> 24 & 0xFF;\n\t    for (j = 0, n = fileId.length; j < n; ++j) {\n\t      hashData[i++] = fileId[j];\n\t    }\n\t    if (revision >= 4 && !encryptMetadata) {\n\t      hashData[i++] = 0xFF;\n\t      hashData[i++] = 0xFF;\n\t      hashData[i++] = 0xFF;\n\t      hashData[i++] = 0xFF;\n\t    }\n\t    var hash = calculateMD5(hashData, 0, i);\n\t    var keyLengthInBytes = keyLength >> 3;\n\t    if (revision >= 3) {\n\t      for (j = 0; j < 50; ++j) {\n\t        hash = calculateMD5(hash, 0, keyLengthInBytes);\n\t      }\n\t    }\n\t    var encryptionKey = hash.subarray(0, keyLengthInBytes);\n\t    var cipher, checkData;\n\t    if (revision >= 3) {\n\t      for (i = 0; i < 32; ++i) {\n\t        hashData[i] = defaultPasswordBytes[i];\n\t      }\n\t      for (j = 0, n = fileId.length; j < n; ++j) {\n\t        hashData[i++] = fileId[j];\n\t      }\n\t      cipher = new ARCFourCipher(encryptionKey);\n\t      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n\t      n = encryptionKey.length;\n\t      var derivedKey = new Uint8Array(n),\n\t          k;\n\t      for (j = 1; j <= 19; ++j) {\n\t        for (k = 0; k < n; ++k) {\n\t          derivedKey[k] = encryptionKey[k] ^ j;\n\t        }\n\t        cipher = new ARCFourCipher(derivedKey);\n\t        checkData = cipher.encryptBlock(checkData);\n\t      }\n\t      for (j = 0, n = checkData.length; j < n; ++j) {\n\t        if (userPassword[j] !== checkData[j]) {\n\t          return null;\n\t        }\n\t      }\n\t    } else {\n\t      cipher = new ARCFourCipher(encryptionKey);\n\t      checkData = cipher.encryptBlock(defaultPasswordBytes);\n\t      for (j = 0, n = checkData.length; j < n; ++j) {\n\t        if (userPassword[j] !== checkData[j]) {\n\t          return null;\n\t        }\n\t      }\n\t    }\n\t    return encryptionKey;\n\t  }\n\t  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n\t    var hashData = new Uint8Array(32),\n\t        i = 0,\n\t        j,\n\t        n;\n\t    n = Math.min(32, password.length);\n\t    for (; i < n; ++i) {\n\t      hashData[i] = password[i];\n\t    }\n\t    j = 0;\n\t    while (i < 32) {\n\t      hashData[i++] = defaultPasswordBytes[j++];\n\t    }\n\t    var hash = calculateMD5(hashData, 0, i);\n\t    var keyLengthInBytes = keyLength >> 3;\n\t    if (revision >= 3) {\n\t      for (j = 0; j < 50; ++j) {\n\t        hash = calculateMD5(hash, 0, hash.length);\n\t      }\n\t    }\n\t    var cipher, userPassword;\n\t    if (revision >= 3) {\n\t      userPassword = ownerPassword;\n\t      var derivedKey = new Uint8Array(keyLengthInBytes),\n\t          k;\n\t      for (j = 19; j >= 0; j--) {\n\t        for (k = 0; k < keyLengthInBytes; ++k) {\n\t          derivedKey[k] = hash[k] ^ j;\n\t        }\n\t        cipher = new ARCFourCipher(derivedKey);\n\t        userPassword = cipher.encryptBlock(userPassword);\n\t      }\n\t    } else {\n\t      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n\t      userPassword = cipher.encryptBlock(ownerPassword);\n\t    }\n\t    return userPassword;\n\t  }\n\t  var identityName = _primitives.Name.get('Identity');\n\t  function CipherTransformFactory(dict, fileId, password) {\n\t    var filter = dict.get('Filter');\n\t    if (!(0, _primitives.isName)(filter, 'Standard')) {\n\t      throw new _util.FormatError('unknown encryption method');\n\t    }\n\t    this.dict = dict;\n\t    var algorithm = dict.get('V');\n\t    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n\t      throw new _util.FormatError('unsupported encryption algorithm');\n\t    }\n\t    this.algorithm = algorithm;\n\t    var keyLength = dict.get('Length');\n\t    if (!keyLength) {\n\t      if (algorithm <= 3) {\n\t        keyLength = 40;\n\t      } else {\n\t        var cfDict = dict.get('CF');\n\t        var streamCryptoName = dict.get('StmF');\n\t        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\n\t          cfDict.suppressEncryption = true;\n\t          var handlerDict = cfDict.get(streamCryptoName.name);\n\t          keyLength = handlerDict && handlerDict.get('Length') || 128;\n\t          if (keyLength < 40) {\n\t            keyLength <<= 3;\n\t          }\n\t        }\n\t      }\n\t    }\n\t    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n\t      throw new _util.FormatError('invalid key length');\n\t    }\n\t    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\n\t    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\n\t    var flags = dict.get('P');\n\t    var revision = dict.get('R');\n\t    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n\t    this.encryptMetadata = encryptMetadata;\n\t    var fileIdBytes = (0, _util.stringToBytes)(fileId);\n\t    var passwordBytes;\n\t    if (password) {\n\t      if (revision === 6) {\n\t        try {\n\t          password = (0, _util.utf8StringToString)(password);\n\t        } catch (ex) {\n\t          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n\t        }\n\t      }\n\t      passwordBytes = (0, _util.stringToBytes)(password);\n\t    }\n\t    var encryptionKey;\n\t    if (algorithm !== 5) {\n\t      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n\t    } else {\n\t      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\n\t      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\n\t      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\n\t      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\n\t      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\n\t      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\n\t      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\n\t      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\n\t      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n\t    }\n\t    if (!encryptionKey && !password) {\n\t      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\n\t    } else if (!encryptionKey && password) {\n\t      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n\t      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n\t    }\n\t    if (!encryptionKey) {\n\t      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\n\t    }\n\t    this.encryptionKey = encryptionKey;\n\t    if (algorithm >= 4) {\n\t      var cf = dict.get('CF');\n\t      if ((0, _primitives.isDict)(cf)) {\n\t        cf.suppressEncryption = true;\n\t      }\n\t      this.cf = cf;\n\t      this.stmf = dict.get('StmF') || identityName;\n\t      this.strf = dict.get('StrF') || identityName;\n\t      this.eff = dict.get('EFF') || this.stmf;\n\t    }\n\t  }\n\t  function buildObjectKey(num, gen, encryptionKey, isAes) {\n\t    var key = new Uint8Array(encryptionKey.length + 9),\n\t        i,\n\t        n;\n\t    for (i = 0, n = encryptionKey.length; i < n; ++i) {\n\t      key[i] = encryptionKey[i];\n\t    }\n\t    key[i++] = num & 0xFF;\n\t    key[i++] = num >> 8 & 0xFF;\n\t    key[i++] = num >> 16 & 0xFF;\n\t    key[i++] = gen & 0xFF;\n\t    key[i++] = gen >> 8 & 0xFF;\n\t    if (isAes) {\n\t      key[i++] = 0x73;\n\t      key[i++] = 0x41;\n\t      key[i++] = 0x6C;\n\t      key[i++] = 0x54;\n\t    }\n\t    var hash = calculateMD5(key, 0, i);\n\t    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n\t  }\n\t  function buildCipherConstructor(cf, name, num, gen, key) {\n\t    if (!(0, _primitives.isName)(name)) {\n\t      throw new _util.FormatError('Invalid crypt filter name.');\n\t    }\n\t    var cryptFilter = cf.get(name.name);\n\t    var cfm;\n\t    if (cryptFilter !== null && cryptFilter !== undefined) {\n\t      cfm = cryptFilter.get('CFM');\n\t    }\n\t    if (!cfm || cfm.name === 'None') {\n\t      return function cipherTransformFactoryBuildCipherConstructorNone() {\n\t        return new NullCipher();\n\t      };\n\t    }\n\t    if (cfm.name === 'V2') {\n\t      return function cipherTransformFactoryBuildCipherConstructorV2() {\n\t        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n\t      };\n\t    }\n\t    if (cfm.name === 'AESV2') {\n\t      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n\t        return new AES128Cipher(buildObjectKey(num, gen, key, true));\n\t      };\n\t    }\n\t    if (cfm.name === 'AESV3') {\n\t      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n\t        return new AES256Cipher(key);\n\t      };\n\t    }\n\t    throw new _util.FormatError('Unknown crypto method');\n\t  }\n\t  CipherTransformFactory.prototype = {\n\t    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n\t      if (this.algorithm === 4 || this.algorithm === 5) {\n\t        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n\t      }\n\t      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n\t      var cipherConstructor = function buildCipherCipherConstructor() {\n\t        return new ARCFourCipher(key);\n\t      };\n\t      return new CipherTransform(cipherConstructor, cipherConstructor);\n\t    }\n\t  };\n\t  return CipherTransformFactory;\n\t}();\n\texports.AES128Cipher = AES128Cipher;\n\texports.AES256Cipher = AES256Cipher;\n\texports.ARCFourCipher = ARCFourCipher;\n\texports.CipherTransformFactory = CipherTransformFactory;\n\texports.PDF17 = PDF17;\n\texports.PDF20 = PDF20;\n\texports.calculateMD5 = calculateMD5;\n\texports.calculateSHA256 = calculateSHA256;\n\texports.calculateSHA384 = calculateSHA384;\n\texports.calculateSHA512 = calculateSHA512;\n\t\n\t/***/ }),\n\t/* 77 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.PartialEvaluator = exports.OperatorList = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _cmap = __w_pdfjs_require__(134);\n\t\n\tvar _stream = __w_pdfjs_require__(5);\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar _fonts = __w_pdfjs_require__(135);\n\t\n\tvar _encodings = __w_pdfjs_require__(28);\n\t\n\tvar _unicode = __w_pdfjs_require__(80);\n\t\n\tvar _standard_fonts = __w_pdfjs_require__(79);\n\t\n\tvar _pattern = __w_pdfjs_require__(139);\n\t\n\tvar _parser = __w_pdfjs_require__(34);\n\t\n\tvar _bidi = __w_pdfjs_require__(140);\n\t\n\tvar _colorspace = __w_pdfjs_require__(27);\n\t\n\tvar _glyphlist = __w_pdfjs_require__(47);\n\t\n\tvar _metrics = __w_pdfjs_require__(141);\n\t\n\tvar _function = __w_pdfjs_require__(81);\n\t\n\tvar _murmurhash = __w_pdfjs_require__(143);\n\t\n\tvar _image = __w_pdfjs_require__(144);\n\t\n\tvar PartialEvaluator = function PartialEvaluatorClosure() {\n\t  var DefaultPartialEvaluatorOptions = {\n\t    forceDataSchema: false,\n\t    maxImageSize: -1,\n\t    disableFontFace: false,\n\t    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\n\t    ignoreErrors: false,\n\t    isEvalSupported: true\n\t  };\n\t  function NativeImageDecoder(_ref) {\n\t    var xref = _ref.xref,\n\t        resources = _ref.resources,\n\t        handler = _ref.handler,\n\t        _ref$forceDataSchema = _ref.forceDataSchema,\n\t        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\n\t        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\t\n\t    this.xref = xref;\n\t    this.resources = resources;\n\t    this.handler = handler;\n\t    this.forceDataSchema = forceDataSchema;\n\t    this.pdfFunctionFactory = pdfFunctionFactory;\n\t  }\n\t  NativeImageDecoder.prototype = {\n\t    canDecode: function canDecode(image) {\n\t      return image instanceof _stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\n\t    },\n\t    decode: function decode(image) {\n\t      var dict = image.dict;\n\t      var colorSpace = dict.get('ColorSpace', 'CS');\n\t      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\n\t      var numComps = colorSpace.numComps;\n\t      var decodePromise = this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), numComps]);\n\t      return decodePromise.then(function (message) {\n\t        var data = message.data;\n\t        return new _stream.Stream(data, 0, data.length, image.dict);\n\t      });\n\t    }\n\t  };\n\t  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\n\t    var dict = image.dict;\n\t    if (dict.has('DecodeParms') || dict.has('DP')) {\n\t      return false;\n\t    }\n\t    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n\t    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n\t  };\n\t  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\n\t    var dict = image.dict;\n\t    if (dict.has('DecodeParms') || dict.has('DP')) {\n\t      return false;\n\t    }\n\t    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n\t    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n\t  };\n\t  function PartialEvaluator(_ref2) {\n\t    var _this = this;\n\t\n\t    var pdfManager = _ref2.pdfManager,\n\t        xref = _ref2.xref,\n\t        handler = _ref2.handler,\n\t        pageIndex = _ref2.pageIndex,\n\t        idFactory = _ref2.idFactory,\n\t        fontCache = _ref2.fontCache,\n\t        builtInCMapCache = _ref2.builtInCMapCache,\n\t        _ref2$options = _ref2.options,\n\t        options = _ref2$options === undefined ? null : _ref2$options,\n\t        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\t\n\t    this.pdfManager = pdfManager;\n\t    this.xref = xref;\n\t    this.handler = handler;\n\t    this.pageIndex = pageIndex;\n\t    this.idFactory = idFactory;\n\t    this.fontCache = fontCache;\n\t    this.builtInCMapCache = builtInCMapCache;\n\t    this.options = options || DefaultPartialEvaluatorOptions;\n\t    this.pdfFunctionFactory = pdfFunctionFactory;\n\t    this.fetchBuiltInCMap = function (name) {\n\t      var cachedCMap = _this.builtInCMapCache[name];\n\t      if (cachedCMap) {\n\t        return Promise.resolve(cachedCMap);\n\t      }\n\t      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n\t        if (data.compressionType !== _util.CMapCompressionType.NONE) {\n\t          _this.builtInCMapCache[name] = data;\n\t        }\n\t        return data;\n\t      });\n\t    };\n\t  }\n\t  var TIME_SLOT_DURATION_MS = 20;\n\t  var CHECK_TIME_EVERY = 100;\n\t  function TimeSlotManager() {\n\t    this.reset();\n\t  }\n\t  TimeSlotManager.prototype = {\n\t    check: function TimeSlotManager_check() {\n\t      if (++this.checked < CHECK_TIME_EVERY) {\n\t        return false;\n\t      }\n\t      this.checked = 0;\n\t      return this.endTime <= Date.now();\n\t    },\n\t    reset: function TimeSlotManager_reset() {\n\t      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n\t      this.checked = 0;\n\t    }\n\t  };\n\t  function normalizeBlendMode(value) {\n\t    if (!(0, _primitives.isName)(value)) {\n\t      return 'source-over';\n\t    }\n\t    switch (value.name) {\n\t      case 'Normal':\n\t      case 'Compatible':\n\t        return 'source-over';\n\t      case 'Multiply':\n\t        return 'multiply';\n\t      case 'Screen':\n\t        return 'screen';\n\t      case 'Overlay':\n\t        return 'overlay';\n\t      case 'Darken':\n\t        return 'darken';\n\t      case 'Lighten':\n\t        return 'lighten';\n\t      case 'ColorDodge':\n\t        return 'color-dodge';\n\t      case 'ColorBurn':\n\t        return 'color-burn';\n\t      case 'HardLight':\n\t        return 'hard-light';\n\t      case 'SoftLight':\n\t        return 'soft-light';\n\t      case 'Difference':\n\t        return 'difference';\n\t      case 'Exclusion':\n\t        return 'exclusion';\n\t      case 'Hue':\n\t        return 'hue';\n\t      case 'Saturation':\n\t        return 'saturation';\n\t      case 'Color':\n\t        return 'color';\n\t      case 'Luminosity':\n\t        return 'luminosity';\n\t    }\n\t    (0, _util.warn)('Unsupported blend mode: ' + value.name);\n\t    return 'source-over';\n\t  }\n\t  var deferred = Promise.resolve();\n\t  var TILING_PATTERN = 1,\n\t      SHADING_PATTERN = 2;\n\t  PartialEvaluator.prototype = {\n\t    clone: function clone() {\n\t      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\n\t\n\t      var newEvaluator = Object.create(this);\n\t      newEvaluator.options = newOptions;\n\t      return newEvaluator;\n\t    },\n\t\n\t    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n\t      if (!(0, _primitives.isDict)(resources)) {\n\t        return false;\n\t      }\n\t      var processed = Object.create(null);\n\t      if (resources.objId) {\n\t        processed[resources.objId] = true;\n\t      }\n\t      var nodes = [resources],\n\t          xref = this.xref;\n\t      while (nodes.length) {\n\t        var key, i, ii;\n\t        var node = nodes.shift();\n\t        var graphicStates = node.get('ExtGState');\n\t        if ((0, _primitives.isDict)(graphicStates)) {\n\t          var graphicStatesKeys = graphicStates.getKeys();\n\t          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n\t            key = graphicStatesKeys[i];\n\t            var graphicState = graphicStates.get(key);\n\t            var bm = graphicState.get('BM');\n\t            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\n\t              return true;\n\t            }\n\t          }\n\t        }\n\t        var xObjects = node.get('XObject');\n\t        if (!(0, _primitives.isDict)(xObjects)) {\n\t          continue;\n\t        }\n\t        var xObjectsKeys = xObjects.getKeys();\n\t        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n\t          key = xObjectsKeys[i];\n\t          var xObject = xObjects.getRaw(key);\n\t          if ((0, _primitives.isRef)(xObject)) {\n\t            if (processed[xObject.toString()]) {\n\t              continue;\n\t            }\n\t            xObject = xref.fetch(xObject);\n\t          }\n\t          if (!(0, _primitives.isStream)(xObject)) {\n\t            continue;\n\t          }\n\t          if (xObject.dict.objId) {\n\t            if (processed[xObject.dict.objId]) {\n\t              continue;\n\t            }\n\t            processed[xObject.dict.objId] = true;\n\t          }\n\t          var xResources = xObject.dict.get('Resources');\n\t          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n\t            nodes.push(xResources);\n\t            if (xResources.objId) {\n\t              processed[xResources.objId] = true;\n\t            }\n\t          }\n\t        }\n\t      }\n\t      return false;\n\t    },\n\t    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n\t      var dict = xobj.dict;\n\t      var matrix = dict.getArray('Matrix');\n\t      var bbox = dict.getArray('BBox');\n\t      var group = dict.get('Group');\n\t      if (group) {\n\t        var groupOptions = {\n\t          matrix: matrix,\n\t          bbox: bbox,\n\t          smask: smask,\n\t          isolated: false,\n\t          knockout: false\n\t        };\n\t        var groupSubtype = group.get('S');\n\t        var colorSpace = null;\n\t        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\n\t          groupOptions.isolated = group.get('I') || false;\n\t          groupOptions.knockout = group.get('K') || false;\n\t          if (group.has('CS')) {\n\t            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\n\t          }\n\t        }\n\t        if (smask && smask.backdrop) {\n\t          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\n\t          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n\t        }\n\t        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\n\t      }\n\t      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\n\t      return this.getOperatorList({\n\t        stream: xobj,\n\t        task: task,\n\t        resources: dict.get('Resources') || resources,\n\t        operatorList: operatorList,\n\t        initialState: initialState\n\t      }).then(function () {\n\t        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\n\t        if (group) {\n\t          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\n\t        }\n\t      });\n\t    },\n\t    buildPaintImageXObject: function PartialEvaluator_buildPaintImageXObject(resources, image, inline, operatorList, cacheKey, imageCache) {\n\t      var _this2 = this;\n\t\n\t      var dict = image.dict;\n\t      var w = dict.get('Width', 'W');\n\t      var h = dict.get('Height', 'H');\n\t      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\n\t        (0, _util.warn)('Image dimensions are missing, or not numbers.');\n\t        return;\n\t      }\n\t      var maxImageSize = this.options.maxImageSize;\n\t      if (maxImageSize !== -1 && w * h > maxImageSize) {\n\t        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\n\t        return;\n\t      }\n\t      var imageMask = dict.get('ImageMask', 'IM') || false;\n\t      var imgData, args;\n\t      if (imageMask) {\n\t        var width = dict.get('Width', 'W');\n\t        var height = dict.get('Height', 'H');\n\t        var bitStrideLength = width + 7 >> 3;\n\t        var imgArray = image.getBytes(bitStrideLength * height);\n\t        var decode = dict.getArray('Decode', 'D');\n\t        imgData = _image.PDFImage.createMask({\n\t          imgArray: imgArray,\n\t          width: width,\n\t          height: height,\n\t          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\n\t          inverseDecode: !!decode && decode[0] > 0\n\t        });\n\t        imgData.cached = true;\n\t        args = [imgData];\n\t        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\n\t        if (cacheKey) {\n\t          imageCache[cacheKey] = {\n\t            fn: _util.OPS.paintImageMaskXObject,\n\t            args: args\n\t          };\n\t        }\n\t        return;\n\t      }\n\t      var softMask = dict.get('SMask', 'SM') || false;\n\t      var mask = dict.get('Mask') || false;\n\t      var SMALL_IMAGE_DIMENSIONS = 200;\n\t      if (inline && !softMask && !mask && !(image instanceof _stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n\t        var imageObj = new _image.PDFImage({\n\t          xref: this.xref,\n\t          res: resources,\n\t          image: image,\n\t          pdfFunctionFactory: this.pdfFunctionFactory\n\t        });\n\t        imgData = imageObj.createImageData(true);\n\t        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\n\t        return;\n\t      }\n\t      var nativeImageDecoderSupport = this.options.nativeImageDecoderSupport;\n\t      var objId = 'img_' + this.idFactory.createObjId();\n\t      operatorList.addDependency(objId);\n\t      args = [objId, w, h];\n\t      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\n\t        operatorList.addOp(_util.OPS.paintJpegXObject, args);\n\t        this.handler.send('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]);\n\t        if (cacheKey) {\n\t          imageCache[cacheKey] = {\n\t            fn: _util.OPS.paintJpegXObject,\n\t            args: args\n\t          };\n\t        }\n\t        return;\n\t      }\n\t      var nativeImageDecoder = null;\n\t      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _stream.JpegStream || mask instanceof _stream.JpegStream || softMask instanceof _stream.JpegStream)) {\n\t        nativeImageDecoder = new NativeImageDecoder({\n\t          xref: this.xref,\n\t          resources: resources,\n\t          handler: this.handler,\n\t          forceDataSchema: this.options.forceDataSchema,\n\t          pdfFunctionFactory: this.pdfFunctionFactory\n\t        });\n\t      }\n\t      _image.PDFImage.buildImage({\n\t        handler: this.handler,\n\t        xref: this.xref,\n\t        res: resources,\n\t        image: image,\n\t        nativeDecoder: nativeImageDecoder,\n\t        pdfFunctionFactory: this.pdfFunctionFactory\n\t      }).then(function (imageObj) {\n\t        var imgData = imageObj.createImageData(false);\n\t        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\n\t      }).catch(function (reason) {\n\t        (0, _util.warn)('Unable to decode image: ' + reason);\n\t        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\n\t      });\n\t      operatorList.addOp(_util.OPS.paintImageXObject, args);\n\t      if (cacheKey) {\n\t        imageCache[cacheKey] = {\n\t          fn: _util.OPS.paintImageXObject,\n\t          args: args\n\t        };\n\t      }\n\t    },\n\t    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n\t      var smaskContent = smask.get('G');\n\t      var smaskOptions = {\n\t        subtype: smask.get('S').name,\n\t        backdrop: smask.get('BC')\n\t      };\n\t      var transferObj = smask.get('TR');\n\t      if ((0, _function.isPDFFunction)(transferObj)) {\n\t        var transferFn = this.pdfFunctionFactory.create(transferObj);\n\t        var transferMap = new Uint8Array(256);\n\t        var tmp = new Float32Array(1);\n\t        for (var i = 0; i < 256; i++) {\n\t          tmp[0] = i / 255;\n\t          transferFn(tmp, 0, tmp, 0);\n\t          transferMap[i] = tmp[0] * 255 | 0;\n\t        }\n\t        smaskOptions.transferMap = transferMap;\n\t      }\n\t      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n\t    },\n\t    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n\t      var _this3 = this;\n\t\n\t      var tilingOpList = new OperatorList();\n\t      var resourcesArray = [patternDict.get('Resources'), resources];\n\t      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\n\t      return this.getOperatorList({\n\t        stream: pattern,\n\t        task: task,\n\t        resources: patternResources,\n\t        operatorList: tilingOpList\n\t      }).then(function () {\n\t        return (0, _pattern.getTilingPatternIR)({\n\t          fnArray: tilingOpList.fnArray,\n\t          argsArray: tilingOpList.argsArray\n\t        }, patternDict, args);\n\t      }).then(function (tilingPatternIR) {\n\t        operatorList.addDependencies(tilingOpList.dependencies);\n\t        operatorList.addOp(fn, tilingPatternIR);\n\t      }, function (reason) {\n\t        if (_this3.options.ignoreErrors) {\n\t          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n\t          (0, _util.warn)('handleTilingType - ignoring pattern: \"' + reason + '\".');\n\t          return;\n\t        }\n\t        throw reason;\n\t      });\n\t    },\n\t\n\t    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n\t      var _this4 = this;\n\t\n\t      var fontName;\n\t      if (fontArgs) {\n\t        fontArgs = fontArgs.slice();\n\t        fontName = fontArgs[0].name;\n\t      }\n\t      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\n\t        if (!translated.font.isType3Font) {\n\t          return translated;\n\t        }\n\t        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\n\t          return translated;\n\t        }).catch(function (reason) {\n\t          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n\t          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\n\t        });\n\t      }).then(function (translated) {\n\t        state.font = translated.font;\n\t        translated.send(_this4.handler);\n\t        return translated.loadedName;\n\t      });\n\t    },\n\t    handleText: function PartialEvaluator_handleText(chars, state) {\n\t      var _this5 = this;\n\t\n\t      var font = state.font;\n\t      var glyphs = font.charsToGlyphs(chars);\n\t      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n\t      if (font.data && (isAddToPathSet || this.options.disableFontFace)) {\n\t        var buildPath = function buildPath(fontChar) {\n\t          if (!font.renderer.hasBuiltPath(fontChar)) {\n\t            var path = font.renderer.getPathJs(fontChar);\n\t            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\n\t          }\n\t        };\n\t        for (var i = 0, ii = glyphs.length; i < ii; i++) {\n\t          var glyph = glyphs[i];\n\t          buildPath(glyph.fontChar);\n\t          var accent = glyph.accent;\n\t          if (accent && accent.fontChar) {\n\t            buildPath(accent.fontChar);\n\t          }\n\t        }\n\t      }\n\t      return glyphs;\n\t    },\n\t    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\n\t      var _this6 = this;\n\t\n\t      var gStateObj = [];\n\t      var gStateKeys = gState.getKeys();\n\t      var promise = Promise.resolve();\n\t\n\t      var _loop = function _loop() {\n\t        var key = gStateKeys[i];\n\t        var value = gState.get(key);\n\t        switch (key) {\n\t          case 'Type':\n\t            break;\n\t          case 'LW':\n\t          case 'LC':\n\t          case 'LJ':\n\t          case 'ML':\n\t          case 'D':\n\t          case 'RI':\n\t          case 'FL':\n\t          case 'CA':\n\t          case 'ca':\n\t            gStateObj.push([key, value]);\n\t            break;\n\t          case 'Font':\n\t            promise = promise.then(function () {\n\t              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n\t                operatorList.addDependency(loadedName);\n\t                gStateObj.push([key, [loadedName, value[1]]]);\n\t              });\n\t            });\n\t            break;\n\t          case 'BM':\n\t            gStateObj.push([key, normalizeBlendMode(value)]);\n\t            break;\n\t          case 'SMask':\n\t            if ((0, _primitives.isName)(value, 'None')) {\n\t              gStateObj.push([key, false]);\n\t              break;\n\t            }\n\t            if ((0, _primitives.isDict)(value)) {\n\t              promise = promise.then(function () {\n\t                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\n\t              });\n\t              gStateObj.push([key, true]);\n\t            } else {\n\t              (0, _util.warn)('Unsupported SMask type');\n\t            }\n\t            break;\n\t          case 'OP':\n\t          case 'op':\n\t          case 'OPM':\n\t          case 'BG':\n\t          case 'BG2':\n\t          case 'UCR':\n\t          case 'UCR2':\n\t          case 'TR':\n\t          case 'TR2':\n\t          case 'HT':\n\t          case 'SM':\n\t          case 'SA':\n\t          case 'AIS':\n\t          case 'TK':\n\t            (0, _util.info)('graphic state operator ' + key);\n\t            break;\n\t          default:\n\t            (0, _util.info)('Unknown graphic state operator ' + key);\n\t            break;\n\t        }\n\t      };\n\t\n\t      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n\t        _loop();\n\t      }\n\t      return promise.then(function () {\n\t        if (gStateObj.length > 0) {\n\t          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\n\t        }\n\t      });\n\t    },\n\t    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\n\t      var _this7 = this;\n\t\n\t      function errorFont() {\n\t        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\n\t      }\n\t      var fontRef,\n\t          xref = this.xref;\n\t      if (font) {\n\t        if (!(0, _primitives.isRef)(font)) {\n\t          throw new Error('The \"font\" object should be a reference.');\n\t        }\n\t        fontRef = font;\n\t      } else {\n\t        var fontRes = resources.get('Font');\n\t        if (fontRes) {\n\t          fontRef = fontRes.getRaw(fontName);\n\t        } else {\n\t          (0, _util.warn)('fontRes not available');\n\t          return errorFont();\n\t        }\n\t      }\n\t      if (!fontRef) {\n\t        (0, _util.warn)('fontRef not available');\n\t        return errorFont();\n\t      }\n\t      if (this.fontCache.has(fontRef)) {\n\t        return this.fontCache.get(fontRef);\n\t      }\n\t      font = xref.fetchIfRef(fontRef);\n\t      if (!(0, _primitives.isDict)(font)) {\n\t        return errorFont();\n\t      }\n\t      if (font.translated) {\n\t        return font.translated;\n\t      }\n\t      var fontCapability = (0, _util.createPromiseCapability)();\n\t      var preEvaluatedFont = this.preEvaluateFont(font);\n\t      var descriptor = preEvaluatedFont.descriptor;\n\t      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\n\t          fontID;\n\t      if (fontRefIsRef) {\n\t        fontID = fontRef.toString();\n\t      }\n\t      if ((0, _primitives.isDict)(descriptor)) {\n\t        if (!descriptor.fontAliases) {\n\t          descriptor.fontAliases = Object.create(null);\n\t        }\n\t        var fontAliases = descriptor.fontAliases;\n\t        var hash = preEvaluatedFont.hash;\n\t        if (fontAliases[hash]) {\n\t          var aliasFontRef = fontAliases[hash].aliasRef;\n\t          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n\t            this.fontCache.putAlias(fontRef, aliasFontRef);\n\t            return this.fontCache.get(fontRef);\n\t          }\n\t        } else {\n\t          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\n\t        }\n\t        if (fontRefIsRef) {\n\t          fontAliases[hash].aliasRef = fontRef;\n\t        }\n\t        fontID = fontAliases[hash].fontID;\n\t      }\n\t      if (fontRefIsRef) {\n\t        this.fontCache.put(fontRef, fontCapability.promise);\n\t      } else {\n\t        if (!fontID) {\n\t          fontID = this.idFactory.createObjId();\n\t        }\n\t        this.fontCache.put('id_' + fontID, fontCapability.promise);\n\t      }\n\t      (0, _util.assert)(fontID, 'The \"fontID\" must be defined.');\n\t      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n\t      font.translated = fontCapability.promise;\n\t      var translatedPromise;\n\t      try {\n\t        translatedPromise = this.translateFont(preEvaluatedFont);\n\t      } catch (e) {\n\t        translatedPromise = Promise.reject(e);\n\t      }\n\t      translatedPromise.then(function (translatedFont) {\n\t        if (translatedFont.fontType !== undefined) {\n\t          var xrefFontStats = xref.stats.fontTypes;\n\t          xrefFontStats[translatedFont.fontType] = true;\n\t        }\n\t        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n\t      }).catch(function (reason) {\n\t        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n\t        try {\n\t          var descriptor = preEvaluatedFont.descriptor;\n\t          var fontFile3 = descriptor && descriptor.get('FontFile3');\n\t          var subtype = fontFile3 && fontFile3.get('Subtype');\n\t          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\n\t          var xrefFontStats = xref.stats.fontTypes;\n\t          xrefFontStats[fontType] = true;\n\t        } catch (ex) {}\n\t        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\n\t      });\n\t      return fontCapability.promise;\n\t    },\n\t    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n\t      var lastIndex = operatorList.length - 1;\n\t      if (!args) {\n\t        args = [];\n\t      }\n\t      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\n\t        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\n\t      } else {\n\t        var opArgs = operatorList.argsArray[lastIndex];\n\t        opArgs[0].push(fn);\n\t        Array.prototype.push.apply(opArgs[1], args);\n\t      }\n\t    },\n\t    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\n\t      var patternName = args[args.length - 1];\n\t      var pattern;\n\t      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\n\t        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\n\t        var typeNum = dict.get('PatternType');\n\t        if (typeNum === TILING_PATTERN) {\n\t          var color = cs.base ? cs.base.getRgb(args, 0) : null;\n\t          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n\t        } else if (typeNum === SHADING_PATTERN) {\n\t          var shading = dict.get('Shading');\n\t          var matrix = dict.getArray('Matrix');\n\t          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\n\t          operatorList.addOp(fn, pattern.getIR());\n\t          return Promise.resolve();\n\t        }\n\t        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\n\t      }\n\t      operatorList.addOp(fn, args);\n\t      return Promise.resolve();\n\t    },\n\t    getOperatorList: function getOperatorList(_ref3) {\n\t      var _this8 = this;\n\t\n\t      var stream = _ref3.stream,\n\t          task = _ref3.task,\n\t          resources = _ref3.resources,\n\t          operatorList = _ref3.operatorList,\n\t          _ref3$initialState = _ref3.initialState,\n\t          initialState = _ref3$initialState === undefined ? null : _ref3$initialState;\n\t\n\t      resources = resources || _primitives.Dict.empty;\n\t      initialState = initialState || new EvalState();\n\t      if (!operatorList) {\n\t        throw new Error('getOperatorList: missing \"operatorList\" parameter');\n\t      }\n\t      var self = this;\n\t      var xref = this.xref;\n\t      var imageCache = Object.create(null);\n\t      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\n\t      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\n\t      var stateManager = new StateManager(initialState);\n\t      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n\t      var timeSlotManager = new TimeSlotManager();\n\t      function closePendingRestoreOPS(argument) {\n\t        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n\t          operatorList.addOp(_util.OPS.restore, []);\n\t        }\n\t      }\n\t      return new Promise(function promiseBody(resolve, reject) {\n\t        var next = function next(promise) {\n\t          promise.then(function () {\n\t            try {\n\t              promiseBody(resolve, reject);\n\t            } catch (ex) {\n\t              reject(ex);\n\t            }\n\t          }, reject);\n\t        };\n\t        task.ensureNotTerminated();\n\t        timeSlotManager.reset();\n\t        var stop,\n\t            operation = {},\n\t            i,\n\t            ii,\n\t            cs;\n\t        while (!(stop = timeSlotManager.check())) {\n\t          operation.args = null;\n\t          if (!preprocessor.read(operation)) {\n\t            break;\n\t          }\n\t          var args = operation.args;\n\t          var fn = operation.fn;\n\t          switch (fn | 0) {\n\t            case _util.OPS.paintXObject:\n\t              var name = args[0].name;\n\t              if (name && imageCache[name] !== undefined) {\n\t                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n\t                args = null;\n\t                continue;\n\t              }\n\t              next(new Promise(function (resolveXObject, rejectXObject) {\n\t                if (!name) {\n\t                  throw new _util.FormatError('XObject must be referred to by name.');\n\t                }\n\t                var xobj = xobjs.get(name);\n\t                if (!xobj) {\n\t                  operatorList.addOp(fn, args);\n\t                  resolveXObject();\n\t                  return;\n\t                }\n\t                if (!(0, _primitives.isStream)(xobj)) {\n\t                  throw new _util.FormatError('XObject should be a stream');\n\t                }\n\t                var type = xobj.dict.get('Subtype');\n\t                if (!(0, _primitives.isName)(type)) {\n\t                  throw new _util.FormatError('XObject should have a Name subtype');\n\t                }\n\t                if (type.name === 'Form') {\n\t                  stateManager.save();\n\t                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n\t                    stateManager.restore();\n\t                    resolveXObject();\n\t                  }, rejectXObject);\n\t                  return;\n\t                } else if (type.name === 'Image') {\n\t                  self.buildPaintImageXObject(resources, xobj, false, operatorList, name, imageCache);\n\t                } else if (type.name === 'PS') {\n\t                  (0, _util.info)('Ignored XObject subtype PS');\n\t                } else {\n\t                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\n\t                }\n\t                resolveXObject();\n\t              }).catch(function (reason) {\n\t                if (self.options.ignoreErrors) {\n\t                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n\t                  (0, _util.warn)('getOperatorList - ignoring XObject: \"' + reason + '\".');\n\t                  return;\n\t                }\n\t                throw reason;\n\t              }));\n\t              return;\n\t            case _util.OPS.setFont:\n\t              var fontSize = args[1];\n\t              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n\t                operatorList.addDependency(loadedName);\n\t                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\n\t              }));\n\t              return;\n\t            case _util.OPS.endInlineImage:\n\t              var cacheKey = args[0].cacheKey;\n\t              if (cacheKey) {\n\t                var cacheEntry = imageCache[cacheKey];\n\t                if (cacheEntry !== undefined) {\n\t                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n\t                  args = null;\n\t                  continue;\n\t                }\n\t              }\n\t              self.buildPaintImageXObject(resources, args[0], true, operatorList, cacheKey, imageCache);\n\t              args = null;\n\t              continue;\n\t            case _util.OPS.showText:\n\t              args[0] = self.handleText(args[0], stateManager.state);\n\t              break;\n\t            case _util.OPS.showSpacedText:\n\t              var arr = args[0];\n\t              var combinedGlyphs = [];\n\t              var arrLength = arr.length;\n\t              var state = stateManager.state;\n\t              for (i = 0; i < arrLength; ++i) {\n\t                var arrItem = arr[i];\n\t                if ((0, _util.isString)(arrItem)) {\n\t                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n\t                } else if ((0, _util.isNum)(arrItem)) {\n\t                  combinedGlyphs.push(arrItem);\n\t                }\n\t              }\n\t              args[0] = combinedGlyphs;\n\t              fn = _util.OPS.showText;\n\t              break;\n\t            case _util.OPS.nextLineShowText:\n\t              operatorList.addOp(_util.OPS.nextLine);\n\t              args[0] = self.handleText(args[0], stateManager.state);\n\t              fn = _util.OPS.showText;\n\t              break;\n\t            case _util.OPS.nextLineSetSpacingShowText:\n\t              operatorList.addOp(_util.OPS.nextLine);\n\t              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\n\t              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\n\t              args[0] = self.handleText(args[0], stateManager.state);\n\t              fn = _util.OPS.showText;\n\t              break;\n\t            case _util.OPS.setTextRenderingMode:\n\t              stateManager.state.textRenderingMode = args[0];\n\t              break;\n\t            case _util.OPS.setFillColorSpace:\n\t              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n\t              continue;\n\t            case _util.OPS.setStrokeColorSpace:\n\t              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n\t              continue;\n\t            case _util.OPS.setFillColor:\n\t              cs = stateManager.state.fillColorSpace;\n\t              args = cs.getRgb(args, 0);\n\t              fn = _util.OPS.setFillRGBColor;\n\t              break;\n\t            case _util.OPS.setStrokeColor:\n\t              cs = stateManager.state.strokeColorSpace;\n\t              args = cs.getRgb(args, 0);\n\t              fn = _util.OPS.setStrokeRGBColor;\n\t              break;\n\t            case _util.OPS.setFillGray:\n\t              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n\t              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n\t              fn = _util.OPS.setFillRGBColor;\n\t              break;\n\t            case _util.OPS.setStrokeGray:\n\t              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n\t              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n\t              fn = _util.OPS.setStrokeRGBColor;\n\t              break;\n\t            case _util.OPS.setFillCMYKColor:\n\t              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n\t              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n\t              fn = _util.OPS.setFillRGBColor;\n\t              break;\n\t            case _util.OPS.setStrokeCMYKColor:\n\t              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n\t              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n\t              fn = _util.OPS.setStrokeRGBColor;\n\t              break;\n\t            case _util.OPS.setFillRGBColor:\n\t              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\n\t              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n\t              break;\n\t            case _util.OPS.setStrokeRGBColor:\n\t              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\n\t              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n\t              break;\n\t            case _util.OPS.setFillColorN:\n\t              cs = stateManager.state.fillColorSpace;\n\t              if (cs.name === 'Pattern') {\n\t                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\n\t                return;\n\t              }\n\t              args = cs.getRgb(args, 0);\n\t              fn = _util.OPS.setFillRGBColor;\n\t              break;\n\t            case _util.OPS.setStrokeColorN:\n\t              cs = stateManager.state.strokeColorSpace;\n\t              if (cs.name === 'Pattern') {\n\t                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\n\t                return;\n\t              }\n\t              args = cs.getRgb(args, 0);\n\t              fn = _util.OPS.setStrokeRGBColor;\n\t              break;\n\t            case _util.OPS.shadingFill:\n\t              var shadingRes = resources.get('Shading');\n\t              if (!shadingRes) {\n\t                throw new _util.FormatError('No shading resource found');\n\t              }\n\t              var shading = shadingRes.get(args[0].name);\n\t              if (!shading) {\n\t                throw new _util.FormatError('No shading object found');\n\t              }\n\t              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\n\t              var patternIR = shadingFill.getIR();\n\t              args = [patternIR];\n\t              fn = _util.OPS.shadingFill;\n\t              break;\n\t            case _util.OPS.setGState:\n\t              var dictName = args[0];\n\t              var extGState = resources.get('ExtGState');\n\t              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\n\t                break;\n\t              }\n\t              var gState = extGState.get(dictName.name);\n\t              next(self.setGState(resources, gState, operatorList, task, stateManager));\n\t              return;\n\t            case _util.OPS.moveTo:\n\t            case _util.OPS.lineTo:\n\t            case _util.OPS.curveTo:\n\t            case _util.OPS.curveTo2:\n\t            case _util.OPS.curveTo3:\n\t            case _util.OPS.closePath:\n\t              self.buildPath(operatorList, fn, args);\n\t              continue;\n\t            case _util.OPS.rectangle:\n\t              self.buildPath(operatorList, fn, args);\n\t              continue;\n\t            case _util.OPS.markPoint:\n\t            case _util.OPS.markPointProps:\n\t            case _util.OPS.beginMarkedContent:\n\t            case _util.OPS.beginMarkedContentProps:\n\t            case _util.OPS.endMarkedContent:\n\t            case _util.OPS.beginCompat:\n\t            case _util.OPS.endCompat:\n\t              continue;\n\t            default:\n\t              if (args !== null) {\n\t                for (i = 0, ii = args.length; i < ii; i++) {\n\t                  if (args[i] instanceof _primitives.Dict) {\n\t                    break;\n\t                  }\n\t                }\n\t                if (i < ii) {\n\t                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\n\t                  continue;\n\t                }\n\t              }\n\t          }\n\t          operatorList.addOp(fn, args);\n\t        }\n\t        if (stop) {\n\t          next(deferred);\n\t          return;\n\t        }\n\t        closePendingRestoreOPS();\n\t        resolve();\n\t      }).catch(function (reason) {\n\t        if (_this8.options.ignoreErrors) {\n\t          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n\t          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\n\t          closePendingRestoreOPS();\n\t          return;\n\t        }\n\t        throw reason;\n\t      });\n\t    },\n\t    getTextContent: function getTextContent(_ref4) {\n\t      var _this9 = this;\n\t\n\t      var stream = _ref4.stream,\n\t          task = _ref4.task,\n\t          resources = _ref4.resources,\n\t          _ref4$stateManager = _ref4.stateManager,\n\t          stateManager = _ref4$stateManager === undefined ? null : _ref4$stateManager,\n\t          _ref4$normalizeWhites = _ref4.normalizeWhitespace,\n\t          normalizeWhitespace = _ref4$normalizeWhites === undefined ? false : _ref4$normalizeWhites,\n\t          _ref4$combineTextItem = _ref4.combineTextItems,\n\t          combineTextItems = _ref4$combineTextItem === undefined ? false : _ref4$combineTextItem,\n\t          sink = _ref4.sink,\n\t          _ref4$seenStyles = _ref4.seenStyles,\n\t          seenStyles = _ref4$seenStyles === undefined ? Object.create(null) : _ref4$seenStyles;\n\t\n\t      resources = resources || _primitives.Dict.empty;\n\t      stateManager = stateManager || new StateManager(new TextState());\n\t      var WhitespaceRegexp = /\\s/g;\n\t      var textContent = {\n\t        items: [],\n\t        styles: Object.create(null)\n\t      };\n\t      var textContentItem = {\n\t        initialized: false,\n\t        str: [],\n\t        width: 0,\n\t        height: 0,\n\t        vertical: false,\n\t        lastAdvanceWidth: 0,\n\t        lastAdvanceHeight: 0,\n\t        textAdvanceScale: 0,\n\t        spaceWidth: 0,\n\t        fakeSpaceMin: Infinity,\n\t        fakeMultiSpaceMin: Infinity,\n\t        fakeMultiSpaceMax: -0,\n\t        textRunBreakAllowed: false,\n\t        transform: null,\n\t        fontName: null\n\t      };\n\t      var SPACE_FACTOR = 0.3;\n\t      var MULTI_SPACE_FACTOR = 1.5;\n\t      var MULTI_SPACE_FACTOR_MAX = 4;\n\t      var self = this;\n\t      var xref = this.xref;\n\t      var xobjs = null;\n\t      var skipEmptyXObjs = Object.create(null);\n\t      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n\t      var textState;\n\t      function ensureTextContentItem() {\n\t        if (textContentItem.initialized) {\n\t          return textContentItem;\n\t        }\n\t        var font = textState.font;\n\t        if (!(font.loadedName in seenStyles)) {\n\t          seenStyles[font.loadedName] = true;\n\t          textContent.styles[font.loadedName] = {\n\t            fontFamily: font.fallbackName,\n\t            ascent: font.ascent,\n\t            descent: font.descent,\n\t            vertical: font.vertical\n\t          };\n\t        }\n\t        textContentItem.fontName = font.loadedName;\n\t        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\n\t        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n\t          var glyphHeight = font.bbox[3] - font.bbox[1];\n\t          if (glyphHeight > 0) {\n\t            glyphHeight = glyphHeight * textState.fontMatrix[3];\n\t            tsm[3] *= glyphHeight;\n\t          }\n\t        }\n\t        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\n\t        textContentItem.transform = trm;\n\t        if (!font.vertical) {\n\t          textContentItem.width = 0;\n\t          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n\t          textContentItem.vertical = false;\n\t        } else {\n\t          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n\t          textContentItem.height = 0;\n\t          textContentItem.vertical = true;\n\t        }\n\t        var a = textState.textLineMatrix[0];\n\t        var b = textState.textLineMatrix[1];\n\t        var scaleLineX = Math.sqrt(a * a + b * b);\n\t        a = textState.ctm[0];\n\t        b = textState.ctm[1];\n\t        var scaleCtmX = Math.sqrt(a * a + b * b);\n\t        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n\t        textContentItem.lastAdvanceWidth = 0;\n\t        textContentItem.lastAdvanceHeight = 0;\n\t        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n\t        if (spaceWidth) {\n\t          textContentItem.spaceWidth = spaceWidth;\n\t          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n\t          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n\t          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n\t          textContentItem.textRunBreakAllowed = !font.isMonospace;\n\t        } else {\n\t          textContentItem.spaceWidth = 0;\n\t          textContentItem.fakeSpaceMin = Infinity;\n\t          textContentItem.fakeMultiSpaceMin = Infinity;\n\t          textContentItem.fakeMultiSpaceMax = 0;\n\t          textContentItem.textRunBreakAllowed = false;\n\t        }\n\t        textContentItem.initialized = true;\n\t        return textContentItem;\n\t      }\n\t      function replaceWhitespace(str) {\n\t        var i = 0,\n\t            ii = str.length,\n\t            code;\n\t        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n\t          i++;\n\t        }\n\t        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n\t      }\n\t      function runBidiTransform(textChunk) {\n\t        var str = textChunk.str.join('');\n\t        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\n\t        return {\n\t          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n\t          dir: bidiResult.dir,\n\t          width: textChunk.width,\n\t          height: textChunk.height,\n\t          transform: textChunk.transform,\n\t          fontName: textChunk.fontName\n\t        };\n\t      }\n\t      function handleSetFont(fontName, fontRef) {\n\t        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\n\t          textState.font = translated.font;\n\t          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n\t        });\n\t      }\n\t      function buildTextContentItem(chars) {\n\t        var font = textState.font;\n\t        var textChunk = ensureTextContentItem();\n\t        var width = 0;\n\t        var height = 0;\n\t        var glyphs = font.charsToGlyphs(chars);\n\t        for (var i = 0; i < glyphs.length; i++) {\n\t          var glyph = glyphs[i];\n\t          var glyphWidth = null;\n\t          if (font.vertical && glyph.vmetric) {\n\t            glyphWidth = glyph.vmetric[0];\n\t          } else {\n\t            glyphWidth = glyph.width;\n\t          }\n\t          var glyphUnicode = glyph.unicode;\n\t          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\n\t          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n\t            glyphUnicode = NormalizedUnicodes[glyphUnicode];\n\t          }\n\t          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\n\t          var charSpacing = textState.charSpacing;\n\t          if (glyph.isSpace) {\n\t            var wordSpacing = textState.wordSpacing;\n\t            charSpacing += wordSpacing;\n\t            if (wordSpacing > 0) {\n\t              addFakeSpaces(wordSpacing, textChunk.str);\n\t            }\n\t          }\n\t          var tx = 0;\n\t          var ty = 0;\n\t          if (!font.vertical) {\n\t            var w0 = glyphWidth * textState.fontMatrix[0];\n\t            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n\t            width += tx;\n\t          } else {\n\t            var w1 = glyphWidth * textState.fontMatrix[0];\n\t            ty = w1 * textState.fontSize + charSpacing;\n\t            height += ty;\n\t          }\n\t          textState.translateTextMatrix(tx, ty);\n\t          textChunk.str.push(glyphUnicode);\n\t        }\n\t        if (!font.vertical) {\n\t          textChunk.lastAdvanceWidth = width;\n\t          textChunk.width += width;\n\t        } else {\n\t          textChunk.lastAdvanceHeight = height;\n\t          textChunk.height += Math.abs(height);\n\t        }\n\t        return textChunk;\n\t      }\n\t      function addFakeSpaces(width, strBuf) {\n\t        if (width < textContentItem.fakeSpaceMin) {\n\t          return;\n\t        }\n\t        if (width < textContentItem.fakeMultiSpaceMin) {\n\t          strBuf.push(' ');\n\t          return;\n\t        }\n\t        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n\t        while (fakeSpaces-- > 0) {\n\t          strBuf.push(' ');\n\t        }\n\t      }\n\t      function flushTextContentItem() {\n\t        if (!textContentItem.initialized) {\n\t          return;\n\t        }\n\t        textContentItem.width *= textContentItem.textAdvanceScale;\n\t        textContentItem.height *= textContentItem.textAdvanceScale;\n\t        textContent.items.push(runBidiTransform(textContentItem));\n\t        textContentItem.initialized = false;\n\t        textContentItem.str.length = 0;\n\t      }\n\t      function enqueueChunk() {\n\t        var length = textContent.items.length;\n\t        if (length > 0) {\n\t          sink.enqueue(textContent, length);\n\t          textContent.items = [];\n\t          textContent.styles = Object.create(null);\n\t        }\n\t      }\n\t      var timeSlotManager = new TimeSlotManager();\n\t      return new Promise(function promiseBody(resolve, reject) {\n\t        var next = function next(promise) {\n\t          enqueueChunk();\n\t          Promise.all([promise, sink.ready]).then(function () {\n\t            try {\n\t              promiseBody(resolve, reject);\n\t            } catch (ex) {\n\t              reject(ex);\n\t            }\n\t          }, reject);\n\t        };\n\t        task.ensureNotTerminated();\n\t        timeSlotManager.reset();\n\t        var stop,\n\t            operation = {},\n\t            args = [];\n\t        while (!(stop = timeSlotManager.check())) {\n\t          args.length = 0;\n\t          operation.args = args;\n\t          if (!preprocessor.read(operation)) {\n\t            break;\n\t          }\n\t          textState = stateManager.state;\n\t          var fn = operation.fn;\n\t          args = operation.args;\n\t          var advance, diff;\n\t          switch (fn | 0) {\n\t            case _util.OPS.setFont:\n\t              var fontNameArg = args[0].name,\n\t                  fontSizeArg = args[1];\n\t              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n\t                break;\n\t              }\n\t              flushTextContentItem();\n\t              textState.fontName = fontNameArg;\n\t              textState.fontSize = fontSizeArg;\n\t              next(handleSetFont(fontNameArg, null));\n\t              return;\n\t            case _util.OPS.setTextRise:\n\t              flushTextContentItem();\n\t              textState.textRise = args[0];\n\t              break;\n\t            case _util.OPS.setHScale:\n\t              flushTextContentItem();\n\t              textState.textHScale = args[0] / 100;\n\t              break;\n\t            case _util.OPS.setLeading:\n\t              flushTextContentItem();\n\t              textState.leading = args[0];\n\t              break;\n\t            case _util.OPS.moveText:\n\t              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n\t              advance = args[0] - args[1];\n\t              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n\t                textState.translateTextLineMatrix(args[0], args[1]);\n\t                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n\t                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n\t                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n\t                addFakeSpaces(diff, textContentItem.str);\n\t                break;\n\t              }\n\t              flushTextContentItem();\n\t              textState.translateTextLineMatrix(args[0], args[1]);\n\t              textState.textMatrix = textState.textLineMatrix.slice();\n\t              break;\n\t            case _util.OPS.setLeadingMoveText:\n\t              flushTextContentItem();\n\t              textState.leading = -args[1];\n\t              textState.translateTextLineMatrix(args[0], args[1]);\n\t              textState.textMatrix = textState.textLineMatrix.slice();\n\t              break;\n\t            case _util.OPS.nextLine:\n\t              flushTextContentItem();\n\t              textState.carriageReturn();\n\t              break;\n\t            case _util.OPS.setTextMatrix:\n\t              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n\t                textState.translateTextLineMatrix(advance.width, advance.height);\n\t                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n\t                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n\t                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n\t                addFakeSpaces(diff, textContentItem.str);\n\t                break;\n\t              }\n\t              flushTextContentItem();\n\t              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t              break;\n\t            case _util.OPS.setCharSpacing:\n\t              textState.charSpacing = args[0];\n\t              break;\n\t            case _util.OPS.setWordSpacing:\n\t              textState.wordSpacing = args[0];\n\t              break;\n\t            case _util.OPS.beginText:\n\t              flushTextContentItem();\n\t              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\n\t              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n\t              break;\n\t            case _util.OPS.showSpacedText:\n\t              var items = args[0];\n\t              var offset;\n\t              for (var j = 0, jj = items.length; j < jj; j++) {\n\t                if (typeof items[j] === 'string') {\n\t                  buildTextContentItem(items[j]);\n\t                } else if ((0, _util.isNum)(items[j])) {\n\t                  ensureTextContentItem();\n\t                  advance = items[j] * textState.fontSize / 1000;\n\t                  var breakTextRun = false;\n\t                  if (textState.font.vertical) {\n\t                    offset = advance;\n\t                    textState.translateTextMatrix(0, offset);\n\t                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n\t                    if (!breakTextRun) {\n\t                      textContentItem.height += offset;\n\t                    }\n\t                  } else {\n\t                    advance = -advance;\n\t                    offset = advance * textState.textHScale;\n\t                    textState.translateTextMatrix(offset, 0);\n\t                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n\t                    if (!breakTextRun) {\n\t                      textContentItem.width += offset;\n\t                    }\n\t                  }\n\t                  if (breakTextRun) {\n\t                    flushTextContentItem();\n\t                  } else if (advance > 0) {\n\t                    addFakeSpaces(advance, textContentItem.str);\n\t                  }\n\t                }\n\t              }\n\t              break;\n\t            case _util.OPS.showText:\n\t              buildTextContentItem(args[0]);\n\t              break;\n\t            case _util.OPS.nextLineShowText:\n\t              flushTextContentItem();\n\t              textState.carriageReturn();\n\t              buildTextContentItem(args[0]);\n\t              break;\n\t            case _util.OPS.nextLineSetSpacingShowText:\n\t              flushTextContentItem();\n\t              textState.wordSpacing = args[0];\n\t              textState.charSpacing = args[1];\n\t              textState.carriageReturn();\n\t              buildTextContentItem(args[2]);\n\t              break;\n\t            case _util.OPS.paintXObject:\n\t              flushTextContentItem();\n\t              if (!xobjs) {\n\t                xobjs = resources.get('XObject') || _primitives.Dict.empty;\n\t              }\n\t              var name = args[0].name;\n\t              if (name && skipEmptyXObjs[name] !== undefined) {\n\t                break;\n\t              }\n\t              next(new Promise(function (resolveXObject, rejectXObject) {\n\t                if (!name) {\n\t                  throw new _util.FormatError('XObject must be referred to by name.');\n\t                }\n\t                var xobj = xobjs.get(name);\n\t                if (!xobj) {\n\t                  resolveXObject();\n\t                  return;\n\t                }\n\t                if (!(0, _primitives.isStream)(xobj)) {\n\t                  throw new _util.FormatError('XObject should be a stream');\n\t                }\n\t                var type = xobj.dict.get('Subtype');\n\t                if (!(0, _primitives.isName)(type)) {\n\t                  throw new _util.FormatError('XObject should have a Name subtype');\n\t                }\n\t                if (type.name !== 'Form') {\n\t                  skipEmptyXObjs[name] = true;\n\t                  resolveXObject();\n\t                  return;\n\t                }\n\t                var currentState = stateManager.state.clone();\n\t                var xObjStateManager = new StateManager(currentState);\n\t                var matrix = xobj.dict.getArray('Matrix');\n\t                if (Array.isArray(matrix) && matrix.length === 6) {\n\t                  xObjStateManager.transform(matrix);\n\t                }\n\t                enqueueChunk();\n\t                var sinkWrapper = {\n\t                  enqueueInvoked: false,\n\t                  enqueue: function enqueue(chunk, size) {\n\t                    this.enqueueInvoked = true;\n\t                    sink.enqueue(chunk, size);\n\t                  },\n\t\n\t                  get desiredSize() {\n\t                    return sink.desiredSize;\n\t                  },\n\t                  get ready() {\n\t                    return sink.ready;\n\t                  }\n\t                };\n\t                self.getTextContent({\n\t                  stream: xobj,\n\t                  task: task,\n\t                  resources: xobj.dict.get('Resources') || resources,\n\t                  stateManager: xObjStateManager,\n\t                  normalizeWhitespace: normalizeWhitespace,\n\t                  combineTextItems: combineTextItems,\n\t                  sink: sinkWrapper,\n\t                  seenStyles: seenStyles\n\t                }).then(function () {\n\t                  if (!sinkWrapper.enqueueInvoked) {\n\t                    skipEmptyXObjs[name] = true;\n\t                  }\n\t                  resolveXObject();\n\t                }, rejectXObject);\n\t              }).catch(function (reason) {\n\t                if (reason instanceof _util.AbortException) {\n\t                  return;\n\t                }\n\t                if (self.options.ignoreErrors) {\n\t                  (0, _util.warn)('getTextContent - ignoring XObject: \"' + reason + '\".');\n\t                  return;\n\t                }\n\t                throw reason;\n\t              }));\n\t              return;\n\t            case _util.OPS.setGState:\n\t              flushTextContentItem();\n\t              var dictName = args[0];\n\t              var extGState = resources.get('ExtGState');\n\t              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\n\t                break;\n\t              }\n\t              var gState = extGState.get(dictName.name);\n\t              if (!(0, _primitives.isDict)(gState)) {\n\t                break;\n\t              }\n\t              var gStateFont = gState.get('Font');\n\t              if (gStateFont) {\n\t                textState.fontName = null;\n\t                textState.fontSize = gStateFont[1];\n\t                next(handleSetFont(null, gStateFont[0]));\n\t                return;\n\t              }\n\t              break;\n\t          }\n\t          if (textContent.items.length >= sink.desiredSize) {\n\t            stop = true;\n\t            break;\n\t          }\n\t        }\n\t        if (stop) {\n\t          next(deferred);\n\t          return;\n\t        }\n\t        flushTextContentItem();\n\t        enqueueChunk();\n\t        resolve();\n\t      }).catch(function (reason) {\n\t        if (reason instanceof _util.AbortException) {\n\t          return;\n\t        }\n\t        if (_this9.options.ignoreErrors) {\n\t          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\n\t          flushTextContentItem();\n\t          enqueueChunk();\n\t          return;\n\t        }\n\t        throw reason;\n\t      });\n\t    },\n\t\n\t    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\n\t      var _this10 = this;\n\t\n\t      var xref = this.xref;\n\t      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n\t      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n\t      if (properties.composite) {\n\t        var cidSystemInfo = dict.get('CIDSystemInfo');\n\t        if ((0, _primitives.isDict)(cidSystemInfo)) {\n\t          properties.cidSystemInfo = {\n\t            registry: cidSystemInfo.get('Registry'),\n\t            ordering: cidSystemInfo.get('Ordering'),\n\t            supplement: cidSystemInfo.get('Supplement')\n\t          };\n\t        }\n\t        var cidToGidMap = dict.get('CIDToGIDMap');\n\t        if ((0, _primitives.isStream)(cidToGidMap)) {\n\t          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n\t        }\n\t      }\n\t      var differences = [];\n\t      var baseEncodingName = null;\n\t      var encoding;\n\t      if (dict.has('Encoding')) {\n\t        encoding = dict.get('Encoding');\n\t        if ((0, _primitives.isDict)(encoding)) {\n\t          baseEncodingName = encoding.get('BaseEncoding');\n\t          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\n\t          if (encoding.has('Differences')) {\n\t            var diffEncoding = encoding.get('Differences');\n\t            var index = 0;\n\t            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n\t              var data = xref.fetchIfRef(diffEncoding[j]);\n\t              if ((0, _util.isNum)(data)) {\n\t                index = data;\n\t              } else if ((0, _primitives.isName)(data)) {\n\t                differences[index++] = data.name;\n\t              } else {\n\t                throw new _util.FormatError('Invalid entry in \\'Differences\\' array: ' + data);\n\t              }\n\t            }\n\t          }\n\t        } else if ((0, _primitives.isName)(encoding)) {\n\t          baseEncodingName = encoding.name;\n\t        } else {\n\t          throw new _util.FormatError('Encoding is not a Name nor a Dict');\n\t        }\n\t        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n\t          baseEncodingName = null;\n\t        }\n\t      }\n\t      if (baseEncodingName) {\n\t        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\n\t      } else {\n\t        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\n\t        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\n\t        encoding = _encodings.StandardEncoding;\n\t        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n\t          encoding = _encodings.WinAnsiEncoding;\n\t        }\n\t        if (isSymbolicFont) {\n\t          encoding = _encodings.MacRomanEncoding;\n\t          if (!properties.file) {\n\t            if (/Symbol/i.test(properties.name)) {\n\t              encoding = _encodings.SymbolSetEncoding;\n\t            } else if (/Dingbats/i.test(properties.name)) {\n\t              encoding = _encodings.ZapfDingbatsEncoding;\n\t            }\n\t          }\n\t        }\n\t        properties.defaultEncoding = encoding;\n\t      }\n\t      properties.differences = differences;\n\t      properties.baseEncodingName = baseEncodingName;\n\t      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n\t      properties.dict = dict;\n\t      return toUnicodePromise.then(function (toUnicode) {\n\t        properties.toUnicode = toUnicode;\n\t        return _this10.buildToUnicode(properties);\n\t      }).then(function (toUnicode) {\n\t        properties.toUnicode = toUnicode;\n\t        return properties;\n\t      });\n\t    },\n\t    buildToUnicode: function PartialEvaluator_buildToUnicode(properties) {\n\t      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n\t      if (properties.hasIncludedToUnicodeMap) {\n\t        return Promise.resolve(properties.toUnicode);\n\t      }\n\t      var toUnicode, charcode, glyphName;\n\t      if (!properties.composite) {\n\t        toUnicode = [];\n\t        var encoding = properties.defaultEncoding.slice();\n\t        var baseEncodingName = properties.baseEncodingName;\n\t        var differences = properties.differences;\n\t        for (charcode in differences) {\n\t          glyphName = differences[charcode];\n\t          if (glyphName === '.notdef') {\n\t            continue;\n\t          }\n\t          encoding[charcode] = glyphName;\n\t        }\n\t        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n\t        for (charcode in encoding) {\n\t          glyphName = encoding[charcode];\n\t          if (glyphName === '') {\n\t            continue;\n\t          } else if (glyphsUnicodeMap[glyphName] === undefined) {\n\t            var code = 0;\n\t            switch (glyphName[0]) {\n\t              case 'G':\n\t                if (glyphName.length === 3) {\n\t                  code = parseInt(glyphName.substr(1), 16);\n\t                }\n\t                break;\n\t              case 'g':\n\t                if (glyphName.length === 5) {\n\t                  code = parseInt(glyphName.substr(1), 16);\n\t                }\n\t                break;\n\t              case 'C':\n\t              case 'c':\n\t                if (glyphName.length >= 3) {\n\t                  code = +glyphName.substr(1);\n\t                }\n\t                break;\n\t              default:\n\t                var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n\t                if (unicode !== -1) {\n\t                  code = unicode;\n\t                }\n\t            }\n\t            if (code) {\n\t              if (baseEncodingName && code === +charcode) {\n\t                var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\n\t                if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n\t                  toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n\t                  continue;\n\t                }\n\t              }\n\t              toUnicode[charcode] = String.fromCharCode(code);\n\t            }\n\t            continue;\n\t          }\n\t          toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n\t        }\n\t        return Promise.resolve(new _fonts.ToUnicodeMap(toUnicode));\n\t      }\n\t      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n\t        var registry = properties.cidSystemInfo.registry;\n\t        var ordering = properties.cidSystemInfo.ordering;\n\t        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\n\t        return _cmap.CMapFactory.create({\n\t          encoding: ucs2CMapName,\n\t          fetchBuiltInCMap: this.fetchBuiltInCMap,\n\t          useCMap: null\n\t        }).then(function (ucs2CMap) {\n\t          var cMap = properties.cMap;\n\t          toUnicode = [];\n\t          cMap.forEach(function (charcode, cid) {\n\t            if (cid > 0xffff) {\n\t              throw new _util.FormatError('Max size of CID is 65,535');\n\t            }\n\t            var ucs2 = ucs2CMap.lookup(cid);\n\t            if (ucs2) {\n\t              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n\t            }\n\t          });\n\t          return new _fonts.ToUnicodeMap(toUnicode);\n\t        });\n\t      }\n\t      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n\t    },\n\t    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n\t      var cmapObj = toUnicode;\n\t      if ((0, _primitives.isName)(cmapObj)) {\n\t        return _cmap.CMapFactory.create({\n\t          encoding: cmapObj,\n\t          fetchBuiltInCMap: this.fetchBuiltInCMap,\n\t          useCMap: null\n\t        }).then(function (cmap) {\n\t          if (cmap instanceof _cmap.IdentityCMap) {\n\t            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n\t          }\n\t          return new _fonts.ToUnicodeMap(cmap.getMap());\n\t        });\n\t      } else if ((0, _primitives.isStream)(cmapObj)) {\n\t        return _cmap.CMapFactory.create({\n\t          encoding: cmapObj,\n\t          fetchBuiltInCMap: this.fetchBuiltInCMap,\n\t          useCMap: null\n\t        }).then(function (cmap) {\n\t          if (cmap instanceof _cmap.IdentityCMap) {\n\t            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n\t          }\n\t          var map = new Array(cmap.length);\n\t          cmap.forEach(function (charCode, token) {\n\t            var str = [];\n\t            for (var k = 0; k < token.length; k += 2) {\n\t              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n\t              if ((w1 & 0xF800) !== 0xD800) {\n\t                str.push(w1);\n\t                continue;\n\t              }\n\t              k += 2;\n\t              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n\t              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n\t            }\n\t            map[charCode] = String.fromCharCode.apply(String, str);\n\t          });\n\t          return new _fonts.ToUnicodeMap(map);\n\t        });\n\t      }\n\t      return Promise.resolve(null);\n\t    },\n\t    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n\t      var glyphsData = cidToGidStream.getBytes();\n\t      var result = [];\n\t      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n\t        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n\t        if (glyphID === 0) {\n\t          continue;\n\t        }\n\t        var code = j >> 1;\n\t        result[code] = glyphID;\n\t      }\n\t      return result;\n\t    },\n\t    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\n\t      var xref = this.xref;\n\t      var glyphsWidths = [];\n\t      var defaultWidth = 0;\n\t      var glyphsVMetrics = [];\n\t      var defaultVMetrics;\n\t      var i, ii, j, jj, start, code, widths;\n\t      if (properties.composite) {\n\t        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\n\t        widths = dict.get('W');\n\t        if (widths) {\n\t          for (i = 0, ii = widths.length; i < ii; i++) {\n\t            start = xref.fetchIfRef(widths[i++]);\n\t            code = xref.fetchIfRef(widths[i]);\n\t            if (Array.isArray(code)) {\n\t              for (j = 0, jj = code.length; j < jj; j++) {\n\t                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n\t              }\n\t            } else {\n\t              var width = xref.fetchIfRef(widths[++i]);\n\t              for (j = start; j <= code; j++) {\n\t                glyphsWidths[j] = width;\n\t              }\n\t            }\n\t          }\n\t        }\n\t        if (properties.vertical) {\n\t          var vmetrics = dict.getArray('DW2') || [880, -1000];\n\t          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n\t          vmetrics = dict.get('W2');\n\t          if (vmetrics) {\n\t            for (i = 0, ii = vmetrics.length; i < ii; i++) {\n\t              start = xref.fetchIfRef(vmetrics[i++]);\n\t              code = xref.fetchIfRef(vmetrics[i]);\n\t              if (Array.isArray(code)) {\n\t                for (j = 0, jj = code.length; j < jj; j++) {\n\t                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\n\t                }\n\t              } else {\n\t                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\n\t                for (j = start; j <= code; j++) {\n\t                  glyphsVMetrics[j] = vmetric;\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        var firstChar = properties.firstChar;\n\t        widths = dict.get('Widths');\n\t        if (widths) {\n\t          j = firstChar;\n\t          for (i = 0, ii = widths.length; i < ii; i++) {\n\t            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n\t          }\n\t          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n\t        } else {\n\t          var baseFontName = dict.get('BaseFont');\n\t          if ((0, _primitives.isName)(baseFontName)) {\n\t            var metrics = this.getBaseFontMetrics(baseFontName.name);\n\t            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n\t            defaultWidth = metrics.defaultWidth;\n\t          }\n\t        }\n\t      }\n\t      var isMonospace = true;\n\t      var firstWidth = defaultWidth;\n\t      for (var glyph in glyphsWidths) {\n\t        var glyphWidth = glyphsWidths[glyph];\n\t        if (!glyphWidth) {\n\t          continue;\n\t        }\n\t        if (!firstWidth) {\n\t          firstWidth = glyphWidth;\n\t          continue;\n\t        }\n\t        if (firstWidth !== glyphWidth) {\n\t          isMonospace = false;\n\t          break;\n\t        }\n\t      }\n\t      if (isMonospace) {\n\t        properties.flags |= _fonts.FontFlags.FixedPitch;\n\t      }\n\t      properties.defaultWidth = defaultWidth;\n\t      properties.widths = glyphsWidths;\n\t      properties.defaultVMetrics = defaultVMetrics;\n\t      properties.vmetrics = glyphsVMetrics;\n\t    },\n\t    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n\t      var fontNameWoStyle = baseFontName.split('-')[0];\n\t      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\n\t    },\n\t    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n\t      var defaultWidth = 0;\n\t      var widths = [];\n\t      var monospace = false;\n\t      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\n\t      var lookupName = stdFontMap[name] || name;\n\t      var Metrics = (0, _metrics.getMetrics)();\n\t      if (!(lookupName in Metrics)) {\n\t        if (this.isSerifFont(name)) {\n\t          lookupName = 'Times-Roman';\n\t        } else {\n\t          lookupName = 'Helvetica';\n\t        }\n\t      }\n\t      var glyphWidths = Metrics[lookupName];\n\t      if ((0, _util.isNum)(glyphWidths)) {\n\t        defaultWidth = glyphWidths;\n\t        monospace = true;\n\t      } else {\n\t        widths = glyphWidths();\n\t      }\n\t      return {\n\t        defaultWidth: defaultWidth,\n\t        monospace: monospace,\n\t        widths: widths\n\t      };\n\t    },\n\t    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n\t      var widths = Object.create(null);\n\t      var differences = properties.differences;\n\t      var encoding = properties.defaultEncoding;\n\t      for (var charCode = 0; charCode < 256; charCode++) {\n\t        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n\t          widths[charCode] = widthsByGlyphName[differences[charCode]];\n\t          continue;\n\t        }\n\t        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n\t          widths[charCode] = widthsByGlyphName[encoding[charCode]];\n\t          continue;\n\t        }\n\t      }\n\t      return widths;\n\t    },\n\t    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\n\t      var baseDict = dict;\n\t      var type = dict.get('Subtype');\n\t      if (!(0, _primitives.isName)(type)) {\n\t        throw new _util.FormatError('invalid font Subtype');\n\t      }\n\t      var composite = false;\n\t      var uint8array;\n\t      if (type.name === 'Type0') {\n\t        var df = dict.get('DescendantFonts');\n\t        if (!df) {\n\t          throw new _util.FormatError('Descendant fonts are not specified');\n\t        }\n\t        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\n\t        type = dict.get('Subtype');\n\t        if (!(0, _primitives.isName)(type)) {\n\t          throw new _util.FormatError('invalid font Subtype');\n\t        }\n\t        composite = true;\n\t      }\n\t      var descriptor = dict.get('FontDescriptor');\n\t      if (descriptor) {\n\t        var hash = new _murmurhash.MurmurHash3_64();\n\t        var encoding = baseDict.getRaw('Encoding');\n\t        if ((0, _primitives.isName)(encoding)) {\n\t          hash.update(encoding.name);\n\t        } else if ((0, _primitives.isRef)(encoding)) {\n\t          hash.update(encoding.toString());\n\t        } else if ((0, _primitives.isDict)(encoding)) {\n\t          var keys = encoding.getKeys();\n\t          for (var i = 0, ii = keys.length; i < ii; i++) {\n\t            var entry = encoding.getRaw(keys[i]);\n\t            if ((0, _primitives.isName)(entry)) {\n\t              hash.update(entry.name);\n\t            } else if ((0, _primitives.isRef)(entry)) {\n\t              hash.update(entry.toString());\n\t            } else if (Array.isArray(entry)) {\n\t              var diffLength = entry.length,\n\t                  diffBuf = new Array(diffLength);\n\t              for (var j = 0; j < diffLength; j++) {\n\t                var diffEntry = entry[j];\n\t                if ((0, _primitives.isName)(diffEntry)) {\n\t                  diffBuf[j] = diffEntry.name;\n\t                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\n\t                  diffBuf[j] = diffEntry.toString();\n\t                }\n\t              }\n\t              hash.update(diffBuf.join());\n\t            }\n\t          }\n\t        }\n\t        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n\t        if ((0, _primitives.isStream)(toUnicode)) {\n\t          var stream = toUnicode.str || toUnicode;\n\t          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n\t          hash.update(uint8array);\n\t        } else if ((0, _primitives.isName)(toUnicode)) {\n\t          hash.update(toUnicode.name);\n\t        }\n\t        var widths = dict.get('Widths') || baseDict.get('Widths');\n\t        if (widths) {\n\t          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n\t          hash.update(uint8array);\n\t        }\n\t      }\n\t      return {\n\t        descriptor: descriptor,\n\t        dict: dict,\n\t        baseDict: baseDict,\n\t        composite: composite,\n\t        type: type.name,\n\t        hash: hash ? hash.hexdigest() : ''\n\t      };\n\t    },\n\t    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\n\t      var _this11 = this;\n\t\n\t      var baseDict = preEvaluatedFont.baseDict;\n\t      var dict = preEvaluatedFont.dict;\n\t      var composite = preEvaluatedFont.composite;\n\t      var descriptor = preEvaluatedFont.descriptor;\n\t      var type = preEvaluatedFont.type;\n\t      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n\t      var properties;\n\t      if (!descriptor) {\n\t        if (type === 'Type3') {\n\t          descriptor = new _primitives.Dict(null);\n\t          descriptor.set('FontName', _primitives.Name.get(type));\n\t          descriptor.set('FontBBox', dict.getArray('FontBBox'));\n\t        } else {\n\t          var baseFontName = dict.get('BaseFont');\n\t          if (!(0, _primitives.isName)(baseFontName)) {\n\t            throw new _util.FormatError('Base font is not specified');\n\t          }\n\t          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n\t          var metrics = this.getBaseFontMetrics(baseFontName);\n\t          var fontNameWoStyle = baseFontName.split('-')[0];\n\t          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\n\t          properties = {\n\t            type: type,\n\t            name: baseFontName,\n\t            widths: metrics.widths,\n\t            defaultWidth: metrics.defaultWidth,\n\t            flags: flags,\n\t            firstChar: 0,\n\t            lastChar: maxCharIndex\n\t          };\n\t          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\n\t            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\n\t            return new _fonts.Font(baseFontName, null, properties);\n\t          });\n\t        }\n\t      }\n\t      var firstChar = dict.get('FirstChar') || 0;\n\t      var lastChar = dict.get('LastChar') || maxCharIndex;\n\t      var fontName = descriptor.get('FontName');\n\t      var baseFont = dict.get('BaseFont');\n\t      if ((0, _util.isString)(fontName)) {\n\t        fontName = _primitives.Name.get(fontName);\n\t      }\n\t      if ((0, _util.isString)(baseFont)) {\n\t        baseFont = _primitives.Name.get(baseFont);\n\t      }\n\t      if (type !== 'Type3') {\n\t        var fontNameStr = fontName && fontName.name;\n\t        var baseFontStr = baseFont && baseFont.name;\n\t        if (fontNameStr !== baseFontStr) {\n\t          (0, _util.info)('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n\t          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n\t            fontName = baseFont;\n\t          }\n\t        }\n\t      }\n\t      fontName = fontName || baseFont;\n\t      if (!(0, _primitives.isName)(fontName)) {\n\t        throw new _util.FormatError('invalid font name');\n\t      }\n\t      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n\t      if (fontFile) {\n\t        if (fontFile.dict) {\n\t          var subtype = fontFile.dict.get('Subtype');\n\t          if (subtype) {\n\t            subtype = subtype.name;\n\t          }\n\t          var length1 = fontFile.dict.get('Length1');\n\t          var length2 = fontFile.dict.get('Length2');\n\t          var length3 = fontFile.dict.get('Length3');\n\t        }\n\t      }\n\t      properties = {\n\t        type: type,\n\t        name: fontName.name,\n\t        subtype: subtype,\n\t        file: fontFile,\n\t        length1: length1,\n\t        length2: length2,\n\t        length3: length3,\n\t        loadedName: baseDict.loadedName,\n\t        composite: composite,\n\t        wideChars: composite,\n\t        fixedPitch: false,\n\t        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\n\t        firstChar: firstChar || 0,\n\t        lastChar: lastChar || maxCharIndex,\n\t        bbox: descriptor.getArray('FontBBox'),\n\t        ascent: descriptor.get('Ascent'),\n\t        descent: descriptor.get('Descent'),\n\t        xHeight: descriptor.get('XHeight'),\n\t        capHeight: descriptor.get('CapHeight'),\n\t        flags: descriptor.get('Flags'),\n\t        italicAngle: descriptor.get('ItalicAngle'),\n\t        isType3Font: false\n\t      };\n\t      var cMapPromise;\n\t      if (composite) {\n\t        var cidEncoding = baseDict.get('Encoding');\n\t        if ((0, _primitives.isName)(cidEncoding)) {\n\t          properties.cidEncoding = cidEncoding.name;\n\t        }\n\t        cMapPromise = _cmap.CMapFactory.create({\n\t          encoding: cidEncoding,\n\t          fetchBuiltInCMap: this.fetchBuiltInCMap,\n\t          useCMap: null\n\t        }).then(function (cMap) {\n\t          properties.cMap = cMap;\n\t          properties.vertical = properties.cMap.vertical;\n\t        });\n\t      } else {\n\t        cMapPromise = Promise.resolve(undefined);\n\t      }\n\t      return cMapPromise.then(function () {\n\t        return _this11.extractDataStructures(dict, baseDict, properties);\n\t      }).then(function (properties) {\n\t        _this11.extractWidths(dict, descriptor, properties);\n\t        if (type === 'Type3') {\n\t          properties.isType3Font = true;\n\t        }\n\t        return new _fonts.Font(fontName.name, fontFile, properties);\n\t      });\n\t    }\n\t  };\n\t  return PartialEvaluator;\n\t}();\n\tvar TranslatedFont = function TranslatedFontClosure() {\n\t  function TranslatedFont(loadedName, font, dict) {\n\t    this.loadedName = loadedName;\n\t    this.font = font;\n\t    this.dict = dict;\n\t    this.type3Loaded = null;\n\t    this.sent = false;\n\t  }\n\t  TranslatedFont.prototype = {\n\t    send: function send(handler) {\n\t      if (this.sent) {\n\t        return;\n\t      }\n\t      var fontData = this.font.exportData();\n\t      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\n\t      this.sent = true;\n\t    },\n\t    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\n\t      if (!this.font.isType3Font) {\n\t        throw new Error('Must be a Type3 font.');\n\t      }\n\t      if (this.type3Loaded) {\n\t        return this.type3Loaded;\n\t      }\n\t      var type3Options = Object.create(evaluator.options);\n\t      type3Options.ignoreErrors = false;\n\t      var type3Evaluator = evaluator.clone(type3Options);\n\t      var translatedFont = this.font;\n\t      var loadCharProcsPromise = Promise.resolve();\n\t      var charProcs = this.dict.get('CharProcs');\n\t      var fontResources = this.dict.get('Resources') || resources;\n\t      var charProcKeys = charProcs.getKeys();\n\t      var charProcOperatorList = Object.create(null);\n\t\n\t      var _loop2 = function _loop2() {\n\t        var key = charProcKeys[i];\n\t        loadCharProcsPromise = loadCharProcsPromise.then(function () {\n\t          var glyphStream = charProcs.get(key);\n\t          var operatorList = new OperatorList();\n\t          return type3Evaluator.getOperatorList({\n\t            stream: glyphStream,\n\t            task: task,\n\t            resources: fontResources,\n\t            operatorList: operatorList\n\t          }).then(function () {\n\t            charProcOperatorList[key] = operatorList.getIR();\n\t            parentOperatorList.addDependencies(operatorList.dependencies);\n\t          }).catch(function (reason) {\n\t            (0, _util.warn)('Type3 font resource \"' + key + '\" is not available.');\n\t            var operatorList = new OperatorList();\n\t            charProcOperatorList[key] = operatorList.getIR();\n\t          });\n\t        });\n\t      };\n\t\n\t      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n\t        _loop2();\n\t      }\n\t      this.type3Loaded = loadCharProcsPromise.then(function () {\n\t        translatedFont.charProcOperatorList = charProcOperatorList;\n\t      });\n\t      return this.type3Loaded;\n\t    }\n\t  };\n\t  return TranslatedFont;\n\t}();\n\tvar OperatorList = function OperatorListClosure() {\n\t  var CHUNK_SIZE = 1000;\n\t  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n\t  function getTransfers(queue) {\n\t    var transfers = [];\n\t    var fnArray = queue.fnArray,\n\t        argsArray = queue.argsArray;\n\t    for (var i = 0, ii = queue.length; i < ii; i++) {\n\t      switch (fnArray[i]) {\n\t        case _util.OPS.paintInlineImageXObject:\n\t        case _util.OPS.paintInlineImageXObjectGroup:\n\t        case _util.OPS.paintImageMaskXObject:\n\t          var arg = argsArray[i][0];\n\t          if (!arg.cached) {\n\t            transfers.push(arg.data.buffer);\n\t          }\n\t          break;\n\t      }\n\t    }\n\t    return transfers;\n\t  }\n\t  function OperatorList(intent, messageHandler, pageIndex) {\n\t    this.messageHandler = messageHandler;\n\t    this.fnArray = [];\n\t    this.argsArray = [];\n\t    this.dependencies = Object.create(null);\n\t    this._totalLength = 0;\n\t    this.pageIndex = pageIndex;\n\t    this.intent = intent;\n\t  }\n\t  OperatorList.prototype = {\n\t    get length() {\n\t      return this.argsArray.length;\n\t    },\n\t    get totalLength() {\n\t      return this._totalLength + this.length;\n\t    },\n\t    addOp: function addOp(fn, args) {\n\t      this.fnArray.push(fn);\n\t      this.argsArray.push(args);\n\t      if (this.messageHandler) {\n\t        if (this.fnArray.length >= CHUNK_SIZE) {\n\t          this.flush();\n\t        } else if (this.fnArray.length >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\n\t          this.flush();\n\t        }\n\t      }\n\t    },\n\t    addDependency: function addDependency(dependency) {\n\t      if (dependency in this.dependencies) {\n\t        return;\n\t      }\n\t      this.dependencies[dependency] = true;\n\t      this.addOp(_util.OPS.dependency, [dependency]);\n\t    },\n\t    addDependencies: function addDependencies(dependencies) {\n\t      for (var key in dependencies) {\n\t        this.addDependency(key);\n\t      }\n\t    },\n\t    addOpList: function addOpList(opList) {\n\t      _util.Util.extendObj(this.dependencies, opList.dependencies);\n\t      for (var i = 0, ii = opList.length; i < ii; i++) {\n\t        this.addOp(opList.fnArray[i], opList.argsArray[i]);\n\t      }\n\t    },\n\t    getIR: function getIR() {\n\t      return {\n\t        fnArray: this.fnArray,\n\t        argsArray: this.argsArray,\n\t        length: this.length\n\t      };\n\t    },\n\t    flush: function flush(lastChunk) {\n\t      if (this.intent !== 'oplist') {\n\t        new QueueOptimizer().optimize(this);\n\t      }\n\t      var transfers = getTransfers(this);\n\t      var length = this.length;\n\t      this._totalLength += length;\n\t      this.messageHandler.send('RenderPageChunk', {\n\t        operatorList: {\n\t          fnArray: this.fnArray,\n\t          argsArray: this.argsArray,\n\t          lastChunk: lastChunk,\n\t          length: length\n\t        },\n\t        pageIndex: this.pageIndex,\n\t        intent: this.intent\n\t      }, transfers);\n\t      this.dependencies = Object.create(null);\n\t      this.fnArray.length = 0;\n\t      this.argsArray.length = 0;\n\t    }\n\t  };\n\t  return OperatorList;\n\t}();\n\tvar StateManager = function StateManagerClosure() {\n\t  function StateManager(initialState) {\n\t    this.state = initialState;\n\t    this.stateStack = [];\n\t  }\n\t  StateManager.prototype = {\n\t    save: function save() {\n\t      var old = this.state;\n\t      this.stateStack.push(this.state);\n\t      this.state = old.clone();\n\t    },\n\t    restore: function restore() {\n\t      var prev = this.stateStack.pop();\n\t      if (prev) {\n\t        this.state = prev;\n\t      }\n\t    },\n\t    transform: function transform(args) {\n\t      this.state.ctm = _util.Util.transform(this.state.ctm, args);\n\t    }\n\t  };\n\t  return StateManager;\n\t}();\n\tvar TextState = function TextStateClosure() {\n\t  function TextState() {\n\t    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n\t    this.fontName = null;\n\t    this.fontSize = 0;\n\t    this.font = null;\n\t    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n\t    this.textMatrix = _util.IDENTITY_MATRIX.slice();\n\t    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n\t    this.charSpacing = 0;\n\t    this.wordSpacing = 0;\n\t    this.leading = 0;\n\t    this.textHScale = 1;\n\t    this.textRise = 0;\n\t  }\n\t  TextState.prototype = {\n\t    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n\t      var m = this.textMatrix;\n\t      m[0] = a;\n\t      m[1] = b;\n\t      m[2] = c;\n\t      m[3] = d;\n\t      m[4] = e;\n\t      m[5] = f;\n\t    },\n\t    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n\t      var m = this.textLineMatrix;\n\t      m[0] = a;\n\t      m[1] = b;\n\t      m[2] = c;\n\t      m[3] = d;\n\t      m[4] = e;\n\t      m[5] = f;\n\t    },\n\t    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n\t      var m = this.textMatrix;\n\t      m[4] = m[0] * x + m[2] * y + m[4];\n\t      m[5] = m[1] * x + m[3] * y + m[5];\n\t    },\n\t    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n\t      var m = this.textLineMatrix;\n\t      m[4] = m[0] * x + m[2] * y + m[4];\n\t      m[5] = m[1] * x + m[3] * y + m[5];\n\t    },\n\t    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n\t      var font = this.font;\n\t      if (!font) {\n\t        return null;\n\t      }\n\t      var m = this.textLineMatrix;\n\t      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n\t        return null;\n\t      }\n\t      var txDiff = e - m[4],\n\t          tyDiff = f - m[5];\n\t      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n\t        return null;\n\t      }\n\t      var tx,\n\t          ty,\n\t          denominator = a * d - b * c;\n\t      if (font.vertical) {\n\t        tx = -tyDiff * c / denominator;\n\t        ty = tyDiff * a / denominator;\n\t      } else {\n\t        tx = txDiff * d / denominator;\n\t        ty = -txDiff * b / denominator;\n\t      }\n\t      return {\n\t        width: tx,\n\t        height: ty,\n\t        value: font.vertical ? ty : tx\n\t      };\n\t    },\n\t    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n\t      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\n\t      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\n\t    },\n\t    carriageReturn: function TextState_carriageReturn() {\n\t      this.translateTextLineMatrix(0, -this.leading);\n\t      this.textMatrix = this.textLineMatrix.slice();\n\t    },\n\t    clone: function TextState_clone() {\n\t      var clone = Object.create(this);\n\t      clone.textMatrix = this.textMatrix.slice();\n\t      clone.textLineMatrix = this.textLineMatrix.slice();\n\t      clone.fontMatrix = this.fontMatrix.slice();\n\t      return clone;\n\t    }\n\t  };\n\t  return TextState;\n\t}();\n\tvar EvalState = function EvalStateClosure() {\n\t  function EvalState() {\n\t    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n\t    this.font = null;\n\t    this.textRenderingMode = _util.TextRenderingMode.FILL;\n\t    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n\t    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n\t  }\n\t  EvalState.prototype = {\n\t    clone: function CanvasExtraState_clone() {\n\t      return Object.create(this);\n\t    }\n\t  };\n\t  return EvalState;\n\t}();\n\tvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n\t  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['w'] = {\n\t      id: _util.OPS.setLineWidth,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['J'] = {\n\t      id: _util.OPS.setLineCap,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['j'] = {\n\t      id: _util.OPS.setLineJoin,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['M'] = {\n\t      id: _util.OPS.setMiterLimit,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['d'] = {\n\t      id: _util.OPS.setDash,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t    };\n\t    t['ri'] = {\n\t      id: _util.OPS.setRenderingIntent,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['i'] = {\n\t      id: _util.OPS.setFlatness,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['gs'] = {\n\t      id: _util.OPS.setGState,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['q'] = {\n\t      id: _util.OPS.save,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['Q'] = {\n\t      id: _util.OPS.restore,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['cm'] = {\n\t      id: _util.OPS.transform,\n\t      numArgs: 6,\n\t      variableArgs: false\n\t    };\n\t    t['m'] = {\n\t      id: _util.OPS.moveTo,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t    };\n\t    t['l'] = {\n\t      id: _util.OPS.lineTo,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t    };\n\t    t['c'] = {\n\t      id: _util.OPS.curveTo,\n\t      numArgs: 6,\n\t      variableArgs: false\n\t    };\n\t    t['v'] = {\n\t      id: _util.OPS.curveTo2,\n\t      numArgs: 4,\n\t      variableArgs: false\n\t    };\n\t    t['y'] = {\n\t      id: _util.OPS.curveTo3,\n\t      numArgs: 4,\n\t      variableArgs: false\n\t    };\n\t    t['h'] = {\n\t      id: _util.OPS.closePath,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['re'] = {\n\t      id: _util.OPS.rectangle,\n\t      numArgs: 4,\n\t      variableArgs: false\n\t    };\n\t    t['S'] = {\n\t      id: _util.OPS.stroke,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['s'] = {\n\t      id: _util.OPS.closeStroke,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['f'] = {\n\t      id: _util.OPS.fill,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['F'] = {\n\t      id: _util.OPS.fill,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['f*'] = {\n\t      id: _util.OPS.eoFill,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['B'] = {\n\t      id: _util.OPS.fillStroke,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['B*'] = {\n\t      id: _util.OPS.eoFillStroke,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['b'] = {\n\t      id: _util.OPS.closeFillStroke,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['b*'] = {\n\t      id: _util.OPS.closeEOFillStroke,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['n'] = {\n\t      id: _util.OPS.endPath,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['W'] = {\n\t      id: _util.OPS.clip,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['W*'] = {\n\t      id: _util.OPS.eoClip,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['BT'] = {\n\t      id: _util.OPS.beginText,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['ET'] = {\n\t      id: _util.OPS.endText,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['Tc'] = {\n\t      id: _util.OPS.setCharSpacing,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['Tw'] = {\n\t      id: _util.OPS.setWordSpacing,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['Tz'] = {\n\t      id: _util.OPS.setHScale,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['TL'] = {\n\t      id: _util.OPS.setLeading,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['Tf'] = {\n\t      id: _util.OPS.setFont,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t    };\n\t    t['Tr'] = {\n\t      id: _util.OPS.setTextRenderingMode,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['Ts'] = {\n\t      id: _util.OPS.setTextRise,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['Td'] = {\n\t      id: _util.OPS.moveText,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t    };\n\t    t['TD'] = {\n\t      id: _util.OPS.setLeadingMoveText,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t    };\n\t    t['Tm'] = {\n\t      id: _util.OPS.setTextMatrix,\n\t      numArgs: 6,\n\t      variableArgs: false\n\t    };\n\t    t['T*'] = {\n\t      id: _util.OPS.nextLine,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['Tj'] = {\n\t      id: _util.OPS.showText,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['TJ'] = {\n\t      id: _util.OPS.showSpacedText,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['\\''] = {\n\t      id: _util.OPS.nextLineShowText,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['\"'] = {\n\t      id: _util.OPS.nextLineSetSpacingShowText,\n\t      numArgs: 3,\n\t      variableArgs: false\n\t    };\n\t    t['d0'] = {\n\t      id: _util.OPS.setCharWidth,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t    };\n\t    t['d1'] = {\n\t      id: _util.OPS.setCharWidthAndBounds,\n\t      numArgs: 6,\n\t      variableArgs: false\n\t    };\n\t    t['CS'] = {\n\t      id: _util.OPS.setStrokeColorSpace,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['cs'] = {\n\t      id: _util.OPS.setFillColorSpace,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['SC'] = {\n\t      id: _util.OPS.setStrokeColor,\n\t      numArgs: 4,\n\t      variableArgs: true\n\t    };\n\t    t['SCN'] = {\n\t      id: _util.OPS.setStrokeColorN,\n\t      numArgs: 33,\n\t      variableArgs: true\n\t    };\n\t    t['sc'] = {\n\t      id: _util.OPS.setFillColor,\n\t      numArgs: 4,\n\t      variableArgs: true\n\t    };\n\t    t['scn'] = {\n\t      id: _util.OPS.setFillColorN,\n\t      numArgs: 33,\n\t      variableArgs: true\n\t    };\n\t    t['G'] = {\n\t      id: _util.OPS.setStrokeGray,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['g'] = {\n\t      id: _util.OPS.setFillGray,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['RG'] = {\n\t      id: _util.OPS.setStrokeRGBColor,\n\t      numArgs: 3,\n\t      variableArgs: false\n\t    };\n\t    t['rg'] = {\n\t      id: _util.OPS.setFillRGBColor,\n\t      numArgs: 3,\n\t      variableArgs: false\n\t    };\n\t    t['K'] = {\n\t      id: _util.OPS.setStrokeCMYKColor,\n\t      numArgs: 4,\n\t      variableArgs: false\n\t    };\n\t    t['k'] = {\n\t      id: _util.OPS.setFillCMYKColor,\n\t      numArgs: 4,\n\t      variableArgs: false\n\t    };\n\t    t['sh'] = {\n\t      id: _util.OPS.shadingFill,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['BI'] = {\n\t      id: _util.OPS.beginInlineImage,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['ID'] = {\n\t      id: _util.OPS.beginImageData,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['EI'] = {\n\t      id: _util.OPS.endInlineImage,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['Do'] = {\n\t      id: _util.OPS.paintXObject,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['MP'] = {\n\t      id: _util.OPS.markPoint,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['DP'] = {\n\t      id: _util.OPS.markPointProps,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t    };\n\t    t['BMC'] = {\n\t      id: _util.OPS.beginMarkedContent,\n\t      numArgs: 1,\n\t      variableArgs: false\n\t    };\n\t    t['BDC'] = {\n\t      id: _util.OPS.beginMarkedContentProps,\n\t      numArgs: 2,\n\t      variableArgs: false\n\t    };\n\t    t['EMC'] = {\n\t      id: _util.OPS.endMarkedContent,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['BX'] = {\n\t      id: _util.OPS.beginCompat,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['EX'] = {\n\t      id: _util.OPS.endCompat,\n\t      numArgs: 0,\n\t      variableArgs: false\n\t    };\n\t    t['BM'] = null;\n\t    t['BD'] = null;\n\t    t['true'] = null;\n\t    t['fa'] = null;\n\t    t['fal'] = null;\n\t    t['fals'] = null;\n\t    t['false'] = null;\n\t    t['nu'] = null;\n\t    t['nul'] = null;\n\t    t['null'] = null;\n\t  });\n\t  function EvaluatorPreprocessor(stream, xref, stateManager) {\n\t    this.opMap = getOPMap();\n\t    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\n\t    this.stateManager = stateManager;\n\t    this.nonProcessedArgs = [];\n\t  }\n\t  EvaluatorPreprocessor.prototype = {\n\t    get savedStatesDepth() {\n\t      return this.stateManager.stateStack.length;\n\t    },\n\t    read: function EvaluatorPreprocessor_read(operation) {\n\t      var args = operation.args;\n\t      while (true) {\n\t        var obj = this.parser.getObj();\n\t        if ((0, _primitives.isCmd)(obj)) {\n\t          var cmd = obj.cmd;\n\t          var opSpec = this.opMap[cmd];\n\t          if (!opSpec) {\n\t            (0, _util.warn)('Unknown command \"' + cmd + '\"');\n\t            continue;\n\t          }\n\t          var fn = opSpec.id;\n\t          var numArgs = opSpec.numArgs;\n\t          var argsLength = args !== null ? args.length : 0;\n\t          if (!opSpec.variableArgs) {\n\t            if (argsLength !== numArgs) {\n\t              var nonProcessedArgs = this.nonProcessedArgs;\n\t              while (argsLength > numArgs) {\n\t                nonProcessedArgs.push(args.shift());\n\t                argsLength--;\n\t              }\n\t              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n\t                if (args === null) {\n\t                  args = [];\n\t                }\n\t                args.unshift(nonProcessedArgs.pop());\n\t                argsLength++;\n\t              }\n\t            }\n\t            if (argsLength < numArgs) {\n\t              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n\t              if (args !== null) {\n\t                args.length = 0;\n\t              }\n\t              continue;\n\t            }\n\t          } else if (argsLength > numArgs) {\n\t            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n\t          }\n\t          this.preprocessCommand(fn, args);\n\t          operation.fn = fn;\n\t          operation.args = args;\n\t          return true;\n\t        }\n\t        if ((0, _primitives.isEOF)(obj)) {\n\t          return false;\n\t        }\n\t        if (obj !== null) {\n\t          if (args === null) {\n\t            args = [];\n\t          }\n\t          args.push(obj);\n\t          if (args.length > 33) {\n\t            throw new _util.FormatError('Too many arguments');\n\t          }\n\t        }\n\t      }\n\t    },\n\t    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n\t      switch (fn | 0) {\n\t        case _util.OPS.save:\n\t          this.stateManager.save();\n\t          break;\n\t        case _util.OPS.restore:\n\t          this.stateManager.restore();\n\t          break;\n\t        case _util.OPS.transform:\n\t          this.stateManager.transform(args);\n\t          break;\n\t      }\n\t    }\n\t  };\n\t  return EvaluatorPreprocessor;\n\t}();\n\tvar QueueOptimizer = function QueueOptimizerClosure() {\n\t  function addState(parentState, pattern, fn) {\n\t    var state = parentState;\n\t    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n\t      var item = pattern[i];\n\t      state = state[item] || (state[item] = []);\n\t    }\n\t    state[pattern[pattern.length - 1]] = fn;\n\t  }\n\t  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n\t    var iFirstPIMXO = iFirstSave + 2;\n\t    for (var i = 0; i < count; i++) {\n\t      var arg = argsArray[iFirstPIMXO + 4 * i];\n\t      var imageMask = arg.length === 1 && arg[0];\n\t      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n\t        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\n\t        continue;\n\t      }\n\t      break;\n\t    }\n\t    return count - i;\n\t  }\n\t  var InitialState = [];\n\t  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], function foundInlineImageGroup(context) {\n\t    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n\t    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n\t    var MAX_WIDTH = 1000;\n\t    var IMAGE_PADDING = 1;\n\t    var fnArray = context.fnArray,\n\t        argsArray = context.argsArray;\n\t    var curr = context.iCurr;\n\t    var iFirstSave = curr - 3;\n\t    var iFirstTransform = curr - 2;\n\t    var iFirstPIIXO = curr - 1;\n\t    var i = iFirstSave + 4;\n\t    var ii = fnArray.length;\n\t    while (i + 3 < ii) {\n\t      if (fnArray[i] !== _util.OPS.save || fnArray[i + 1] !== _util.OPS.transform || fnArray[i + 2] !== _util.OPS.paintInlineImageXObject || fnArray[i + 3] !== _util.OPS.restore) {\n\t        break;\n\t      }\n\t      i += 4;\n\t    }\n\t    var count = Math.min((i - iFirstSave) / 4, MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n\t    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n\t      return i;\n\t    }\n\t    var maxX = 0;\n\t    var map = [],\n\t        maxLineHeight = 0;\n\t    var currentX = IMAGE_PADDING,\n\t        currentY = IMAGE_PADDING;\n\t    var q;\n\t    for (q = 0; q < count; q++) {\n\t      var transform = argsArray[iFirstTransform + (q << 2)];\n\t      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n\t      if (currentX + img.width > MAX_WIDTH) {\n\t        maxX = Math.max(maxX, currentX);\n\t        currentY += maxLineHeight + 2 * IMAGE_PADDING;\n\t        currentX = 0;\n\t        maxLineHeight = 0;\n\t      }\n\t      map.push({\n\t        transform: transform,\n\t        x: currentX,\n\t        y: currentY,\n\t        w: img.width,\n\t        h: img.height\n\t      });\n\t      currentX += img.width + 2 * IMAGE_PADDING;\n\t      maxLineHeight = Math.max(maxLineHeight, img.height);\n\t    }\n\t    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n\t    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n\t    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n\t    var imgRowSize = imgWidth << 2;\n\t    for (q = 0; q < count; q++) {\n\t      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n\t      var rowSize = map[q].w << 2;\n\t      var dataOffset = 0;\n\t      var offset = map[q].x + map[q].y * imgWidth << 2;\n\t      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n\t      for (var k = 0, kk = map[q].h; k < kk; k++) {\n\t        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n\t        dataOffset += rowSize;\n\t        offset += imgRowSize;\n\t      }\n\t      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n\t      while (offset >= 0) {\n\t        data[offset - 4] = data[offset];\n\t        data[offset - 3] = data[offset + 1];\n\t        data[offset - 2] = data[offset + 2];\n\t        data[offset - 1] = data[offset + 3];\n\t        data[offset + rowSize] = data[offset + rowSize - 4];\n\t        data[offset + rowSize + 1] = data[offset + rowSize - 3];\n\t        data[offset + rowSize + 2] = data[offset + rowSize - 2];\n\t        data[offset + rowSize + 3] = data[offset + rowSize - 1];\n\t        offset -= imgRowSize;\n\t      }\n\t    }\n\t    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\n\t    argsArray.splice(iFirstSave, count * 4, [{\n\t      width: imgWidth,\n\t      height: imgHeight,\n\t      kind: _util.ImageKind.RGBA_32BPP,\n\t      data: imgData\n\t    }, map]);\n\t    return iFirstSave + 1;\n\t  });\n\t  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], function foundImageMaskGroup(context) {\n\t    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n\t    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n\t    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n\t    var fnArray = context.fnArray,\n\t        argsArray = context.argsArray;\n\t    var curr = context.iCurr;\n\t    var iFirstSave = curr - 3;\n\t    var iFirstTransform = curr - 2;\n\t    var iFirstPIMXO = curr - 1;\n\t    var i = iFirstSave + 4;\n\t    var ii = fnArray.length;\n\t    while (i + 3 < ii) {\n\t      if (fnArray[i] !== _util.OPS.save || fnArray[i + 1] !== _util.OPS.transform || fnArray[i + 2] !== _util.OPS.paintImageMaskXObject || fnArray[i + 3] !== _util.OPS.restore) {\n\t        break;\n\t      }\n\t      i += 4;\n\t    }\n\t    var count = (i - iFirstSave) / 4;\n\t    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n\t    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n\t      return i;\n\t    }\n\t    var q;\n\t    var isSameImage = false;\n\t    var iTransform, transformArgs;\n\t    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n\t    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n\t      isSameImage = true;\n\t      var firstTransformArg0 = argsArray[iFirstTransform][0];\n\t      var firstTransformArg3 = argsArray[iFirstTransform][3];\n\t      iTransform = iFirstTransform + 4;\n\t      var iPIMXO = iFirstPIMXO + 4;\n\t      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n\t        transformArgs = argsArray[iTransform];\n\t        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n\t          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n\t            isSameImage = false;\n\t          } else {\n\t            count = q;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    if (isSameImage) {\n\t      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n\t      var positions = new Float32Array(count * 2);\n\t      iTransform = iFirstTransform;\n\t      for (q = 0; q < count; q++, iTransform += 4) {\n\t        transformArgs = argsArray[iTransform];\n\t        positions[q << 1] = transformArgs[4];\n\t        positions[(q << 1) + 1] = transformArgs[5];\n\t      }\n\t      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\n\t      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\n\t    } else {\n\t      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n\t      var images = [];\n\t      for (q = 0; q < count; q++) {\n\t        transformArgs = argsArray[iFirstTransform + (q << 2)];\n\t        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n\t        images.push({\n\t          data: maskParams.data,\n\t          width: maskParams.width,\n\t          height: maskParams.height,\n\t          transform: transformArgs\n\t        });\n\t      }\n\t      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\n\t      argsArray.splice(iFirstSave, count * 4, [images]);\n\t    }\n\t    return iFirstSave + 1;\n\t  });\n\t  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\n\t    var MIN_IMAGES_IN_BLOCK = 3;\n\t    var MAX_IMAGES_IN_BLOCK = 1000;\n\t    var fnArray = context.fnArray,\n\t        argsArray = context.argsArray;\n\t    var curr = context.iCurr;\n\t    var iFirstSave = curr - 3;\n\t    var iFirstTransform = curr - 2;\n\t    var iFirstPIXO = curr - 1;\n\t    var iFirstRestore = curr;\n\t    if (argsArray[iFirstTransform][1] !== 0 || argsArray[iFirstTransform][2] !== 0) {\n\t      return iFirstRestore + 1;\n\t    }\n\t    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n\t    var firstTransformArg0 = argsArray[iFirstTransform][0];\n\t    var firstTransformArg3 = argsArray[iFirstTransform][3];\n\t    var i = iFirstSave + 4;\n\t    var ii = fnArray.length;\n\t    while (i + 3 < ii) {\n\t      if (fnArray[i] !== _util.OPS.save || fnArray[i + 1] !== _util.OPS.transform || fnArray[i + 2] !== _util.OPS.paintImageXObject || fnArray[i + 3] !== _util.OPS.restore) {\n\t        break;\n\t      }\n\t      if (argsArray[i + 1][0] !== firstTransformArg0 || argsArray[i + 1][1] !== 0 || argsArray[i + 1][2] !== 0 || argsArray[i + 1][3] !== firstTransformArg3) {\n\t        break;\n\t      }\n\t      if (argsArray[i + 2][0] !== firstPIXOArg0) {\n\t        break;\n\t      }\n\t      i += 4;\n\t    }\n\t    var count = Math.min((i - iFirstSave) / 4, MAX_IMAGES_IN_BLOCK);\n\t    if (count < MIN_IMAGES_IN_BLOCK) {\n\t      return i;\n\t    }\n\t    var positions = new Float32Array(count * 2);\n\t    var iTransform = iFirstTransform;\n\t    for (var q = 0; q < count; q++, iTransform += 4) {\n\t      var transformArgs = argsArray[iTransform];\n\t      positions[q << 1] = transformArgs[4];\n\t      positions[(q << 1) + 1] = transformArgs[5];\n\t    }\n\t    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\n\t    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\n\t    argsArray.splice(iFirstSave, count * 4, args);\n\t    return iFirstSave + 1;\n\t  });\n\t  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], function (context) {\n\t    var MIN_CHARS_IN_BLOCK = 3;\n\t    var MAX_CHARS_IN_BLOCK = 1000;\n\t    var fnArray = context.fnArray,\n\t        argsArray = context.argsArray;\n\t    var curr = context.iCurr;\n\t    var iFirstBeginText = curr - 4;\n\t    var iFirstSetFont = curr - 3;\n\t    var iFirstSetTextMatrix = curr - 2;\n\t    var iFirstShowText = curr - 1;\n\t    var iFirstEndText = curr;\n\t    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n\t    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n\t    var i = iFirstBeginText + 5;\n\t    var ii = fnArray.length;\n\t    while (i + 4 < ii) {\n\t      if (fnArray[i] !== _util.OPS.beginText || fnArray[i + 1] !== _util.OPS.setFont || fnArray[i + 2] !== _util.OPS.setTextMatrix || fnArray[i + 3] !== _util.OPS.showText || fnArray[i + 4] !== _util.OPS.endText) {\n\t        break;\n\t      }\n\t      if (argsArray[i + 1][0] !== firstSetFontArg0 || argsArray[i + 1][1] !== firstSetFontArg1) {\n\t        break;\n\t      }\n\t      i += 5;\n\t    }\n\t    var count = Math.min((i - iFirstBeginText) / 5, MAX_CHARS_IN_BLOCK);\n\t    if (count < MIN_CHARS_IN_BLOCK) {\n\t      return i;\n\t    }\n\t    var iFirst = iFirstBeginText;\n\t    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n\t      count++;\n\t      iFirst -= 5;\n\t    }\n\t    var iEndText = iFirst + 4;\n\t    for (var q = 1; q < count; q++) {\n\t      fnArray.splice(iEndText, 3);\n\t      argsArray.splice(iEndText, 3);\n\t      iEndText += 2;\n\t    }\n\t    return iEndText + 1;\n\t  });\n\t  function QueueOptimizer() {}\n\t  QueueOptimizer.prototype = {\n\t    optimize: function QueueOptimizer_optimize(queue) {\n\t      var fnArray = queue.fnArray,\n\t          argsArray = queue.argsArray;\n\t      var context = {\n\t        iCurr: 0,\n\t        fnArray: fnArray,\n\t        argsArray: argsArray\n\t      };\n\t      var state;\n\t      var i = 0,\n\t          ii = fnArray.length;\n\t      while (i < ii) {\n\t        state = (state || InitialState)[fnArray[i]];\n\t        if (typeof state === 'function') {\n\t          context.iCurr = i;\n\t          i = state(context);\n\t          state = undefined;\n\t          ii = context.fnArray.length;\n\t        } else {\n\t          i++;\n\t        }\n\t      }\n\t    }\n\t  };\n\t  return QueueOptimizer;\n\t}();\n\texports.OperatorList = OperatorList;\n\texports.PartialEvaluator = PartialEvaluator;\n\t\n\t/***/ }),\n\t/* 78 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _charsets = __w_pdfjs_require__(136);\n\t\n\tvar _encodings = __w_pdfjs_require__(28);\n\t\n\tvar MAX_SUBR_NESTING = 10;\n\tvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\n\tvar CFFParser = function CFFParserClosure() {\n\t  var CharstringValidationData = [null, {\n\t    id: 'hstem',\n\t    min: 2,\n\t    stackClearing: true,\n\t    stem: true\n\t  }, null, {\n\t    id: 'vstem',\n\t    min: 2,\n\t    stackClearing: true,\n\t    stem: true\n\t  }, {\n\t    id: 'vmoveto',\n\t    min: 1,\n\t    stackClearing: true\n\t  }, {\n\t    id: 'rlineto',\n\t    min: 2,\n\t    resetStack: true\n\t  }, {\n\t    id: 'hlineto',\n\t    min: 1,\n\t    resetStack: true\n\t  }, {\n\t    id: 'vlineto',\n\t    min: 1,\n\t    resetStack: true\n\t  }, {\n\t    id: 'rrcurveto',\n\t    min: 6,\n\t    resetStack: true\n\t  }, null, {\n\t    id: 'callsubr',\n\t    min: 1,\n\t    undefStack: true\n\t  }, {\n\t    id: 'return',\n\t    min: 0,\n\t    undefStack: true\n\t  }, null, null, {\n\t    id: 'endchar',\n\t    min: 0,\n\t    stackClearing: true\n\t  }, null, null, null, {\n\t    id: 'hstemhm',\n\t    min: 2,\n\t    stackClearing: true,\n\t    stem: true\n\t  }, {\n\t    id: 'hintmask',\n\t    min: 0,\n\t    stackClearing: true\n\t  }, {\n\t    id: 'cntrmask',\n\t    min: 0,\n\t    stackClearing: true\n\t  }, {\n\t    id: 'rmoveto',\n\t    min: 2,\n\t    stackClearing: true\n\t  }, {\n\t    id: 'hmoveto',\n\t    min: 1,\n\t    stackClearing: true\n\t  }, {\n\t    id: 'vstemhm',\n\t    min: 2,\n\t    stackClearing: true,\n\t    stem: true\n\t  }, {\n\t    id: 'rcurveline',\n\t    min: 8,\n\t    resetStack: true\n\t  }, {\n\t    id: 'rlinecurve',\n\t    min: 8,\n\t    resetStack: true\n\t  }, {\n\t    id: 'vvcurveto',\n\t    min: 4,\n\t    resetStack: true\n\t  }, {\n\t    id: 'hhcurveto',\n\t    min: 4,\n\t    resetStack: true\n\t  }, null, {\n\t    id: 'callgsubr',\n\t    min: 1,\n\t    undefStack: true\n\t  }, {\n\t    id: 'vhcurveto',\n\t    min: 4,\n\t    resetStack: true\n\t  }, {\n\t    id: 'hvcurveto',\n\t    min: 4,\n\t    resetStack: true\n\t  }];\n\t  var CharstringValidationData12 = [null, null, null, {\n\t    id: 'and',\n\t    min: 2,\n\t    stackDelta: -1\n\t  }, {\n\t    id: 'or',\n\t    min: 2,\n\t    stackDelta: -1\n\t  }, {\n\t    id: 'not',\n\t    min: 1,\n\t    stackDelta: 0\n\t  }, null, null, null, {\n\t    id: 'abs',\n\t    min: 1,\n\t    stackDelta: 0\n\t  }, {\n\t    id: 'add',\n\t    min: 2,\n\t    stackDelta: -1,\n\t    stackFn: function stack_div(stack, index) {\n\t      stack[index - 2] = stack[index - 2] + stack[index - 1];\n\t    }\n\t  }, {\n\t    id: 'sub',\n\t    min: 2,\n\t    stackDelta: -1,\n\t    stackFn: function stack_div(stack, index) {\n\t      stack[index - 2] = stack[index - 2] - stack[index - 1];\n\t    }\n\t  }, {\n\t    id: 'div',\n\t    min: 2,\n\t    stackDelta: -1,\n\t    stackFn: function stack_div(stack, index) {\n\t      stack[index - 2] = stack[index - 2] / stack[index - 1];\n\t    }\n\t  }, null, {\n\t    id: 'neg',\n\t    min: 1,\n\t    stackDelta: 0,\n\t    stackFn: function stack_div(stack, index) {\n\t      stack[index - 1] = -stack[index - 1];\n\t    }\n\t  }, {\n\t    id: 'eq',\n\t    min: 2,\n\t    stackDelta: -1\n\t  }, null, null, {\n\t    id: 'drop',\n\t    min: 1,\n\t    stackDelta: -1\n\t  }, null, {\n\t    id: 'put',\n\t    min: 2,\n\t    stackDelta: -2\n\t  }, {\n\t    id: 'get',\n\t    min: 1,\n\t    stackDelta: 0\n\t  }, {\n\t    id: 'ifelse',\n\t    min: 4,\n\t    stackDelta: -3\n\t  }, {\n\t    id: 'random',\n\t    min: 0,\n\t    stackDelta: 1\n\t  }, {\n\t    id: 'mul',\n\t    min: 2,\n\t    stackDelta: -1,\n\t    stackFn: function stack_div(stack, index) {\n\t      stack[index - 2] = stack[index - 2] * stack[index - 1];\n\t    }\n\t  }, null, {\n\t    id: 'sqrt',\n\t    min: 1,\n\t    stackDelta: 0\n\t  }, {\n\t    id: 'dup',\n\t    min: 1,\n\t    stackDelta: 1\n\t  }, {\n\t    id: 'exch',\n\t    min: 2,\n\t    stackDelta: 0\n\t  }, {\n\t    id: 'index',\n\t    min: 2,\n\t    stackDelta: 0\n\t  }, {\n\t    id: 'roll',\n\t    min: 3,\n\t    stackDelta: -2\n\t  }, null, null, null, {\n\t    id: 'hflex',\n\t    min: 7,\n\t    resetStack: true\n\t  }, {\n\t    id: 'flex',\n\t    min: 13,\n\t    resetStack: true\n\t  }, {\n\t    id: 'hflex1',\n\t    min: 9,\n\t    resetStack: true\n\t  }, {\n\t    id: 'flex1',\n\t    min: 11,\n\t    resetStack: true\n\t  }];\n\t  function CFFParser(file, properties, seacAnalysisEnabled) {\n\t    this.bytes = file.getBytes();\n\t    this.properties = properties;\n\t    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n\t  }\n\t  CFFParser.prototype = {\n\t    parse: function CFFParser_parse() {\n\t      var properties = this.properties;\n\t      var cff = new CFF();\n\t      this.cff = cff;\n\t      var header = this.parseHeader();\n\t      var nameIndex = this.parseIndex(header.endPos);\n\t      var topDictIndex = this.parseIndex(nameIndex.endPos);\n\t      var stringIndex = this.parseIndex(topDictIndex.endPos);\n\t      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n\t      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n\t      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n\t      cff.header = header.obj;\n\t      cff.names = this.parseNameIndex(nameIndex.obj);\n\t      cff.strings = this.parseStringIndex(stringIndex.obj);\n\t      cff.topDict = topDict;\n\t      cff.globalSubrIndex = globalSubrIndex.obj;\n\t      this.parsePrivateDict(cff.topDict);\n\t      cff.isCIDFont = topDict.hasName('ROS');\n\t      var charStringOffset = topDict.getByName('CharStrings');\n\t      var charStringIndex = this.parseIndex(charStringOffset).obj;\n\t      var fontMatrix = topDict.getByName('FontMatrix');\n\t      if (fontMatrix) {\n\t        properties.fontMatrix = fontMatrix;\n\t      }\n\t      var fontBBox = topDict.getByName('FontBBox');\n\t      if (fontBBox) {\n\t        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n\t        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n\t        properties.ascentScaled = true;\n\t      }\n\t      var charset, encoding;\n\t      if (cff.isCIDFont) {\n\t        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n\t        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n\t          var dictRaw = fdArrayIndex.get(i);\n\t          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n\t          this.parsePrivateDict(fontDict);\n\t          cff.fdArray.push(fontDict);\n\t        }\n\t        encoding = null;\n\t        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n\t        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n\t      } else {\n\t        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n\t        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n\t      }\n\t      cff.charset = charset;\n\t      cff.encoding = encoding;\n\t      var charStringsAndSeacs = this.parseCharStrings({\n\t        charStrings: charStringIndex,\n\t        localSubrIndex: topDict.privateDict.subrsIndex,\n\t        globalSubrIndex: globalSubrIndex.obj,\n\t        fdSelect: cff.fdSelect,\n\t        fdArray: cff.fdArray,\n\t        privateDict: topDict.privateDict\n\t      });\n\t      cff.charStrings = charStringsAndSeacs.charStrings;\n\t      cff.seacs = charStringsAndSeacs.seacs;\n\t      cff.widths = charStringsAndSeacs.widths;\n\t      return cff;\n\t    },\n\t    parseHeader: function CFFParser_parseHeader() {\n\t      var bytes = this.bytes;\n\t      var bytesLength = bytes.length;\n\t      var offset = 0;\n\t      while (offset < bytesLength && bytes[offset] !== 1) {\n\t        ++offset;\n\t      }\n\t      if (offset >= bytesLength) {\n\t        throw new _util.FormatError('Invalid CFF header');\n\t      }\n\t      if (offset !== 0) {\n\t        (0, _util.info)('cff data is shifted');\n\t        bytes = bytes.subarray(offset);\n\t        this.bytes = bytes;\n\t      }\n\t      var major = bytes[0];\n\t      var minor = bytes[1];\n\t      var hdrSize = bytes[2];\n\t      var offSize = bytes[3];\n\t      var header = new CFFHeader(major, minor, hdrSize, offSize);\n\t      return {\n\t        obj: header,\n\t        endPos: hdrSize\n\t      };\n\t    },\n\t    parseDict: function CFFParser_parseDict(dict) {\n\t      var pos = 0;\n\t      function parseOperand() {\n\t        var value = dict[pos++];\n\t        if (value === 30) {\n\t          return parseFloatOperand();\n\t        } else if (value === 28) {\n\t          value = dict[pos++];\n\t          value = (value << 24 | dict[pos++] << 16) >> 16;\n\t          return value;\n\t        } else if (value === 29) {\n\t          value = dict[pos++];\n\t          value = value << 8 | dict[pos++];\n\t          value = value << 8 | dict[pos++];\n\t          value = value << 8 | dict[pos++];\n\t          return value;\n\t        } else if (value >= 32 && value <= 246) {\n\t          return value - 139;\n\t        } else if (value >= 247 && value <= 250) {\n\t          return (value - 247) * 256 + dict[pos++] + 108;\n\t        } else if (value >= 251 && value <= 254) {\n\t          return -((value - 251) * 256) - dict[pos++] - 108;\n\t        }\n\t        (0, _util.warn)('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n\t        return NaN;\n\t      }\n\t      function parseFloatOperand() {\n\t        var str = '';\n\t        var eof = 15;\n\t        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n\t        var length = dict.length;\n\t        while (pos < length) {\n\t          var b = dict[pos++];\n\t          var b1 = b >> 4;\n\t          var b2 = b & 15;\n\t          if (b1 === eof) {\n\t            break;\n\t          }\n\t          str += lookup[b1];\n\t          if (b2 === eof) {\n\t            break;\n\t          }\n\t          str += lookup[b2];\n\t        }\n\t        return parseFloat(str);\n\t      }\n\t      var operands = [];\n\t      var entries = [];\n\t      pos = 0;\n\t      var end = dict.length;\n\t      while (pos < end) {\n\t        var b = dict[pos];\n\t        if (b <= 21) {\n\t          if (b === 12) {\n\t            b = b << 8 | dict[++pos];\n\t          }\n\t          entries.push([b, operands]);\n\t          operands = [];\n\t          ++pos;\n\t        } else {\n\t          operands.push(parseOperand());\n\t        }\n\t      }\n\t      return entries;\n\t    },\n\t    parseIndex: function CFFParser_parseIndex(pos) {\n\t      var cffIndex = new CFFIndex();\n\t      var bytes = this.bytes;\n\t      var count = bytes[pos++] << 8 | bytes[pos++];\n\t      var offsets = [];\n\t      var end = pos;\n\t      var i, ii;\n\t      if (count !== 0) {\n\t        var offsetSize = bytes[pos++];\n\t        var startPos = pos + (count + 1) * offsetSize - 1;\n\t        for (i = 0, ii = count + 1; i < ii; ++i) {\n\t          var offset = 0;\n\t          for (var j = 0; j < offsetSize; ++j) {\n\t            offset <<= 8;\n\t            offset += bytes[pos++];\n\t          }\n\t          offsets.push(startPos + offset);\n\t        }\n\t        end = offsets[count];\n\t      }\n\t      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n\t        var offsetStart = offsets[i];\n\t        var offsetEnd = offsets[i + 1];\n\t        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n\t      }\n\t      return {\n\t        obj: cffIndex,\n\t        endPos: end\n\t      };\n\t    },\n\t    parseNameIndex: function CFFParser_parseNameIndex(index) {\n\t      var names = [];\n\t      for (var i = 0, ii = index.count; i < ii; ++i) {\n\t        var name = index.get(i);\n\t        names.push((0, _util.bytesToString)(name));\n\t      }\n\t      return names;\n\t    },\n\t    parseStringIndex: function CFFParser_parseStringIndex(index) {\n\t      var strings = new CFFStrings();\n\t      for (var i = 0, ii = index.count; i < ii; ++i) {\n\t        var data = index.get(i);\n\t        strings.add((0, _util.bytesToString)(data));\n\t      }\n\t      return strings;\n\t    },\n\t    createDict: function CFFParser_createDict(Type, dict, strings) {\n\t      var cffDict = new Type(strings);\n\t      for (var i = 0, ii = dict.length; i < ii; ++i) {\n\t        var pair = dict[i];\n\t        var key = pair[0];\n\t        var value = pair[1];\n\t        cffDict.setByKey(key, value);\n\t      }\n\t      return cffDict;\n\t    },\n\t    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n\t      if (!data || state.callDepth > MAX_SUBR_NESTING) {\n\t        return false;\n\t      }\n\t      var stackSize = state.stackSize;\n\t      var stack = state.stack;\n\t      var length = data.length;\n\t      for (var j = 0; j < length;) {\n\t        var value = data[j++];\n\t        var validationCommand = null;\n\t        if (value === 12) {\n\t          var q = data[j++];\n\t          if (q === 0) {\n\t            data[j - 2] = 139;\n\t            data[j - 1] = 22;\n\t            stackSize = 0;\n\t          } else {\n\t            validationCommand = CharstringValidationData12[q];\n\t          }\n\t        } else if (value === 28) {\n\t          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n\t          j += 2;\n\t          stackSize++;\n\t        } else if (value === 14) {\n\t          if (stackSize >= 4) {\n\t            stackSize -= 4;\n\t            if (this.seacAnalysisEnabled) {\n\t              state.seac = stack.slice(stackSize, stackSize + 4);\n\t              return false;\n\t            }\n\t          }\n\t          validationCommand = CharstringValidationData[value];\n\t        } else if (value >= 32 && value <= 246) {\n\t          stack[stackSize] = value - 139;\n\t          stackSize++;\n\t        } else if (value >= 247 && value <= 254) {\n\t          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n\t          j++;\n\t          stackSize++;\n\t        } else if (value === 255) {\n\t          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n\t          j += 4;\n\t          stackSize++;\n\t        } else if (value === 19 || value === 20) {\n\t          state.hints += stackSize >> 1;\n\t          j += state.hints + 7 >> 3;\n\t          stackSize %= 2;\n\t          validationCommand = CharstringValidationData[value];\n\t        } else if (value === 10 || value === 29) {\n\t          var subrsIndex;\n\t          if (value === 10) {\n\t            subrsIndex = localSubrIndex;\n\t          } else {\n\t            subrsIndex = globalSubrIndex;\n\t          }\n\t          if (!subrsIndex) {\n\t            validationCommand = CharstringValidationData[value];\n\t            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\n\t            return false;\n\t          }\n\t          var bias = 32768;\n\t          if (subrsIndex.count < 1240) {\n\t            bias = 107;\n\t          } else if (subrsIndex.count < 33900) {\n\t            bias = 1131;\n\t          }\n\t          var subrNumber = stack[--stackSize] + bias;\n\t          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n\t            validationCommand = CharstringValidationData[value];\n\t            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\n\t            return false;\n\t          }\n\t          state.stackSize = stackSize;\n\t          state.callDepth++;\n\t          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n\t          if (!valid) {\n\t            return false;\n\t          }\n\t          state.callDepth--;\n\t          stackSize = state.stackSize;\n\t          continue;\n\t        } else if (value === 11) {\n\t          state.stackSize = stackSize;\n\t          return true;\n\t        } else {\n\t          validationCommand = CharstringValidationData[value];\n\t        }\n\t        if (validationCommand) {\n\t          if (validationCommand.stem) {\n\t            state.hints += stackSize >> 1;\n\t          }\n\t          if ('min' in validationCommand) {\n\t            if (!state.undefStack && stackSize < validationCommand.min) {\n\t              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n\t              return false;\n\t            }\n\t          }\n\t          if (state.firstStackClearing && validationCommand.stackClearing) {\n\t            state.firstStackClearing = false;\n\t            stackSize -= validationCommand.min;\n\t            if (stackSize >= 2 && validationCommand.stem) {\n\t              stackSize %= 2;\n\t            } else if (stackSize > 1) {\n\t              (0, _util.warn)('Found too many parameters for stack-clearing command');\n\t            }\n\t            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n\t              state.width = stack[stackSize - 1];\n\t            }\n\t          }\n\t          if ('stackDelta' in validationCommand) {\n\t            if ('stackFn' in validationCommand) {\n\t              validationCommand.stackFn(stack, stackSize);\n\t            }\n\t            stackSize += validationCommand.stackDelta;\n\t          } else if (validationCommand.stackClearing) {\n\t            stackSize = 0;\n\t          } else if (validationCommand.resetStack) {\n\t            stackSize = 0;\n\t            state.undefStack = false;\n\t          } else if (validationCommand.undefStack) {\n\t            stackSize = 0;\n\t            state.undefStack = true;\n\t            state.firstStackClearing = false;\n\t          }\n\t        }\n\t      }\n\t      state.stackSize = stackSize;\n\t      return true;\n\t    },\n\t    parseCharStrings: function parseCharStrings(_ref) {\n\t      var charStrings = _ref.charStrings,\n\t          localSubrIndex = _ref.localSubrIndex,\n\t          globalSubrIndex = _ref.globalSubrIndex,\n\t          fdSelect = _ref.fdSelect,\n\t          fdArray = _ref.fdArray,\n\t          privateDict = _ref.privateDict;\n\t\n\t      var seacs = [];\n\t      var widths = [];\n\t      var count = charStrings.count;\n\t      for (var i = 0; i < count; i++) {\n\t        var charstring = charStrings.get(i);\n\t        var state = {\n\t          callDepth: 0,\n\t          stackSize: 0,\n\t          stack: [],\n\t          undefStack: true,\n\t          hints: 0,\n\t          firstStackClearing: true,\n\t          seac: null,\n\t          width: null\n\t        };\n\t        var valid = true;\n\t        var localSubrToUse = null;\n\t        var privateDictToUse = privateDict;\n\t        if (fdSelect && fdArray.length) {\n\t          var fdIndex = fdSelect.getFDIndex(i);\n\t          if (fdIndex === -1) {\n\t            (0, _util.warn)('Glyph index is not in fd select.');\n\t            valid = false;\n\t          }\n\t          if (fdIndex >= fdArray.length) {\n\t            (0, _util.warn)('Invalid fd index for glyph index.');\n\t            valid = false;\n\t          }\n\t          if (valid) {\n\t            privateDictToUse = fdArray[fdIndex].privateDict;\n\t            localSubrToUse = privateDictToUse.subrsIndex;\n\t          }\n\t        } else if (localSubrIndex) {\n\t          localSubrToUse = localSubrIndex;\n\t        }\n\t        if (valid) {\n\t          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n\t        }\n\t        if (state.width !== null) {\n\t          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\n\t          widths[i] = nominalWidth + state.width;\n\t        } else {\n\t          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\n\t          widths[i] = defaultWidth;\n\t        }\n\t        if (state.seac !== null) {\n\t          seacs[i] = state.seac;\n\t        }\n\t        if (!valid) {\n\t          charStrings.set(i, new Uint8Array([14]));\n\t        }\n\t      }\n\t      return {\n\t        charStrings: charStrings,\n\t        seacs: seacs,\n\t        widths: widths\n\t      };\n\t    },\n\t\n\t    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n\t      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n\t      parentDict.setByKey(18, [0, 0]);\n\t      parentDict.privateDict = privateDict;\n\t    },\n\t    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n\t      if (!parentDict.hasName('Private')) {\n\t        this.emptyPrivateDictionary(parentDict);\n\t        return;\n\t      }\n\t      var privateOffset = parentDict.getByName('Private');\n\t      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\n\t        parentDict.removeByName('Private');\n\t        return;\n\t      }\n\t      var size = privateOffset[0];\n\t      var offset = privateOffset[1];\n\t      if (size === 0 || offset >= this.bytes.length) {\n\t        this.emptyPrivateDictionary(parentDict);\n\t        return;\n\t      }\n\t      var privateDictEnd = offset + size;\n\t      var dictData = this.bytes.subarray(offset, privateDictEnd);\n\t      var dict = this.parseDict(dictData);\n\t      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n\t      parentDict.privateDict = privateDict;\n\t      if (!privateDict.getByName('Subrs')) {\n\t        return;\n\t      }\n\t      var subrsOffset = privateDict.getByName('Subrs');\n\t      var relativeOffset = offset + subrsOffset;\n\t      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n\t        this.emptyPrivateDictionary(parentDict);\n\t        return;\n\t      }\n\t      var subrsIndex = this.parseIndex(relativeOffset);\n\t      privateDict.subrsIndex = subrsIndex.obj;\n\t    },\n\t    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n\t      if (pos === 0) {\n\t        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\n\t      } else if (pos === 1) {\n\t        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\n\t      } else if (pos === 2) {\n\t        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\n\t      }\n\t      var bytes = this.bytes;\n\t      var start = pos;\n\t      var format = bytes[pos++];\n\t      var charset = ['.notdef'];\n\t      var id, count, i;\n\t      length -= 1;\n\t      switch (format) {\n\t        case 0:\n\t          for (i = 0; i < length; i++) {\n\t            id = bytes[pos++] << 8 | bytes[pos++];\n\t            charset.push(cid ? id : strings.get(id));\n\t          }\n\t          break;\n\t        case 1:\n\t          while (charset.length <= length) {\n\t            id = bytes[pos++] << 8 | bytes[pos++];\n\t            count = bytes[pos++];\n\t            for (i = 0; i <= count; i++) {\n\t              charset.push(cid ? id++ : strings.get(id++));\n\t            }\n\t          }\n\t          break;\n\t        case 2:\n\t          while (charset.length <= length) {\n\t            id = bytes[pos++] << 8 | bytes[pos++];\n\t            count = bytes[pos++] << 8 | bytes[pos++];\n\t            for (i = 0; i <= count; i++) {\n\t              charset.push(cid ? id++ : strings.get(id++));\n\t            }\n\t          }\n\t          break;\n\t        default:\n\t          throw new _util.FormatError('Unknown charset format');\n\t      }\n\t      var end = pos;\n\t      var raw = bytes.subarray(start, end);\n\t      return new CFFCharset(false, format, charset, raw);\n\t    },\n\t    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n\t      var encoding = Object.create(null);\n\t      var bytes = this.bytes;\n\t      var predefined = false;\n\t      var format, i, ii;\n\t      var raw = null;\n\t      function readSupplement() {\n\t        var supplementsCount = bytes[pos++];\n\t        for (i = 0; i < supplementsCount; i++) {\n\t          var code = bytes[pos++];\n\t          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n\t          encoding[code] = charset.indexOf(strings.get(sid));\n\t        }\n\t      }\n\t      if (pos === 0 || pos === 1) {\n\t        predefined = true;\n\t        format = pos;\n\t        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\n\t        for (i = 0, ii = charset.length; i < ii; i++) {\n\t          var index = baseEncoding.indexOf(charset[i]);\n\t          if (index !== -1) {\n\t            encoding[index] = i;\n\t          }\n\t        }\n\t      } else {\n\t        var dataStart = pos;\n\t        format = bytes[pos++];\n\t        switch (format & 0x7f) {\n\t          case 0:\n\t            var glyphsCount = bytes[pos++];\n\t            for (i = 1; i <= glyphsCount; i++) {\n\t              encoding[bytes[pos++]] = i;\n\t            }\n\t            break;\n\t          case 1:\n\t            var rangesCount = bytes[pos++];\n\t            var gid = 1;\n\t            for (i = 0; i < rangesCount; i++) {\n\t              var start = bytes[pos++];\n\t              var left = bytes[pos++];\n\t              for (var j = start; j <= start + left; j++) {\n\t                encoding[j] = gid++;\n\t              }\n\t            }\n\t            break;\n\t          default:\n\t            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\n\t        }\n\t        var dataEnd = pos;\n\t        if (format & 0x80) {\n\t          bytes[dataStart] &= 0x7f;\n\t          readSupplement();\n\t        }\n\t        raw = bytes.subarray(dataStart, dataEnd);\n\t      }\n\t      format = format & 0x7f;\n\t      return new CFFEncoding(predefined, format, encoding, raw);\n\t    },\n\t    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n\t      var start = pos;\n\t      var bytes = this.bytes;\n\t      var format = bytes[pos++];\n\t      var fdSelect = [],\n\t          rawBytes;\n\t      var i,\n\t          invalidFirstGID = false;\n\t      switch (format) {\n\t        case 0:\n\t          for (i = 0; i < length; ++i) {\n\t            var id = bytes[pos++];\n\t            fdSelect.push(id);\n\t          }\n\t          rawBytes = bytes.subarray(start, pos);\n\t          break;\n\t        case 3:\n\t          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n\t          for (i = 0; i < rangesCount; ++i) {\n\t            var first = bytes[pos++] << 8 | bytes[pos++];\n\t            if (i === 0 && first !== 0) {\n\t              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n\t              invalidFirstGID = true;\n\t              first = 0;\n\t            }\n\t            var fdIndex = bytes[pos++];\n\t            var next = bytes[pos] << 8 | bytes[pos + 1];\n\t            for (var j = first; j < next; ++j) {\n\t              fdSelect.push(fdIndex);\n\t            }\n\t          }\n\t          pos += 2;\n\t          rawBytes = bytes.subarray(start, pos);\n\t          if (invalidFirstGID) {\n\t            rawBytes[3] = rawBytes[4] = 0;\n\t          }\n\t          break;\n\t        default:\n\t          throw new _util.FormatError('parseFDSelect: Unknown format \"' + format + '\".');\n\t      }\n\t      if (fdSelect.length !== length) {\n\t        throw new _util.FormatError('parseFDSelect: Invalid font data.');\n\t      }\n\t      return new CFFFDSelect(fdSelect, rawBytes);\n\t    }\n\t  };\n\t  return CFFParser;\n\t}();\n\tvar CFF = function CFFClosure() {\n\t  function CFF() {\n\t    this.header = null;\n\t    this.names = [];\n\t    this.topDict = null;\n\t    this.strings = new CFFStrings();\n\t    this.globalSubrIndex = null;\n\t    this.encoding = null;\n\t    this.charset = null;\n\t    this.charStrings = null;\n\t    this.fdArray = [];\n\t    this.fdSelect = null;\n\t    this.isCIDFont = false;\n\t  }\n\t  return CFF;\n\t}();\n\tvar CFFHeader = function CFFHeaderClosure() {\n\t  function CFFHeader(major, minor, hdrSize, offSize) {\n\t    this.major = major;\n\t    this.minor = minor;\n\t    this.hdrSize = hdrSize;\n\t    this.offSize = offSize;\n\t  }\n\t  return CFFHeader;\n\t}();\n\tvar CFFStrings = function CFFStringsClosure() {\n\t  function CFFStrings() {\n\t    this.strings = [];\n\t  }\n\t  CFFStrings.prototype = {\n\t    get: function CFFStrings_get(index) {\n\t      if (index >= 0 && index <= 390) {\n\t        return CFFStandardStrings[index];\n\t      }\n\t      if (index - 391 <= this.strings.length) {\n\t        return this.strings[index - 391];\n\t      }\n\t      return CFFStandardStrings[0];\n\t    },\n\t    add: function CFFStrings_add(value) {\n\t      this.strings.push(value);\n\t    },\n\t    get count() {\n\t      return this.strings.length;\n\t    }\n\t  };\n\t  return CFFStrings;\n\t}();\n\tvar CFFIndex = function CFFIndexClosure() {\n\t  function CFFIndex() {\n\t    this.objects = [];\n\t    this.length = 0;\n\t  }\n\t  CFFIndex.prototype = {\n\t    add: function CFFIndex_add(data) {\n\t      this.length += data.length;\n\t      this.objects.push(data);\n\t    },\n\t    set: function CFFIndex_set(index, data) {\n\t      this.length += data.length - this.objects[index].length;\n\t      this.objects[index] = data;\n\t    },\n\t    get: function CFFIndex_get(index) {\n\t      return this.objects[index];\n\t    },\n\t    get count() {\n\t      return this.objects.length;\n\t    }\n\t  };\n\t  return CFFIndex;\n\t}();\n\tvar CFFDict = function CFFDictClosure() {\n\t  function CFFDict(tables, strings) {\n\t    this.keyToNameMap = tables.keyToNameMap;\n\t    this.nameToKeyMap = tables.nameToKeyMap;\n\t    this.defaults = tables.defaults;\n\t    this.types = tables.types;\n\t    this.opcodes = tables.opcodes;\n\t    this.order = tables.order;\n\t    this.strings = strings;\n\t    this.values = Object.create(null);\n\t  }\n\t  CFFDict.prototype = {\n\t    setByKey: function CFFDict_setByKey(key, value) {\n\t      if (!(key in this.keyToNameMap)) {\n\t        return false;\n\t      }\n\t      var valueLength = value.length;\n\t      if (valueLength === 0) {\n\t        return true;\n\t      }\n\t      for (var i = 0; i < valueLength; i++) {\n\t        if (isNaN(value[i])) {\n\t          (0, _util.warn)('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n\t          return true;\n\t        }\n\t      }\n\t      var type = this.types[key];\n\t      if (type === 'num' || type === 'sid' || type === 'offset') {\n\t        value = value[0];\n\t      }\n\t      this.values[key] = value;\n\t      return true;\n\t    },\n\t    setByName: function CFFDict_setByName(name, value) {\n\t      if (!(name in this.nameToKeyMap)) {\n\t        throw new _util.FormatError('Invalid dictionary name \"' + name + '\"');\n\t      }\n\t      this.values[this.nameToKeyMap[name]] = value;\n\t    },\n\t    hasName: function CFFDict_hasName(name) {\n\t      return this.nameToKeyMap[name] in this.values;\n\t    },\n\t    getByName: function CFFDict_getByName(name) {\n\t      if (!(name in this.nameToKeyMap)) {\n\t        throw new _util.FormatError('Invalid dictionary name ' + name + '\"');\n\t      }\n\t      var key = this.nameToKeyMap[name];\n\t      if (!(key in this.values)) {\n\t        return this.defaults[key];\n\t      }\n\t      return this.values[key];\n\t    },\n\t    removeByName: function CFFDict_removeByName(name) {\n\t      delete this.values[this.nameToKeyMap[name]];\n\t    }\n\t  };\n\t  CFFDict.createTables = function CFFDict_createTables(layout) {\n\t    var tables = {\n\t      keyToNameMap: {},\n\t      nameToKeyMap: {},\n\t      defaults: {},\n\t      types: {},\n\t      opcodes: {},\n\t      order: []\n\t    };\n\t    for (var i = 0, ii = layout.length; i < ii; ++i) {\n\t      var entry = layout[i];\n\t      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n\t      tables.keyToNameMap[key] = entry[1];\n\t      tables.nameToKeyMap[entry[1]] = key;\n\t      tables.types[key] = entry[2];\n\t      tables.defaults[key] = entry[3];\n\t      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\n\t      tables.order.push(key);\n\t    }\n\t    return tables;\n\t  };\n\t  return CFFDict;\n\t}();\n\tvar CFFTopDict = function CFFTopDictClosure() {\n\t  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\n\t  var tables = null;\n\t  function CFFTopDict(strings) {\n\t    if (tables === null) {\n\t      tables = CFFDict.createTables(layout);\n\t    }\n\t    CFFDict.call(this, tables, strings);\n\t    this.privateDict = null;\n\t  }\n\t  CFFTopDict.prototype = Object.create(CFFDict.prototype);\n\t  return CFFTopDict;\n\t}();\n\tvar CFFPrivateDict = function CFFPrivateDictClosure() {\n\t  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\n\t  var tables = null;\n\t  function CFFPrivateDict(strings) {\n\t    if (tables === null) {\n\t      tables = CFFDict.createTables(layout);\n\t    }\n\t    CFFDict.call(this, tables, strings);\n\t    this.subrsIndex = null;\n\t  }\n\t  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n\t  return CFFPrivateDict;\n\t}();\n\tvar CFFCharsetPredefinedTypes = {\n\t  ISO_ADOBE: 0,\n\t  EXPERT: 1,\n\t  EXPERT_SUBSET: 2\n\t};\n\tvar CFFCharset = function CFFCharsetClosure() {\n\t  function CFFCharset(predefined, format, charset, raw) {\n\t    this.predefined = predefined;\n\t    this.format = format;\n\t    this.charset = charset;\n\t    this.raw = raw;\n\t  }\n\t  return CFFCharset;\n\t}();\n\tvar CFFEncoding = function CFFEncodingClosure() {\n\t  function CFFEncoding(predefined, format, encoding, raw) {\n\t    this.predefined = predefined;\n\t    this.format = format;\n\t    this.encoding = encoding;\n\t    this.raw = raw;\n\t  }\n\t  return CFFEncoding;\n\t}();\n\tvar CFFFDSelect = function CFFFDSelectClosure() {\n\t  function CFFFDSelect(fdSelect, raw) {\n\t    this.fdSelect = fdSelect;\n\t    this.raw = raw;\n\t  }\n\t  CFFFDSelect.prototype = {\n\t    getFDIndex: function CFFFDSelect_get(glyphIndex) {\n\t      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n\t        return -1;\n\t      }\n\t      return this.fdSelect[glyphIndex];\n\t    }\n\t  };\n\t  return CFFFDSelect;\n\t}();\n\tvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n\t  function CFFOffsetTracker() {\n\t    this.offsets = Object.create(null);\n\t  }\n\t  CFFOffsetTracker.prototype = {\n\t    isTracking: function CFFOffsetTracker_isTracking(key) {\n\t      return key in this.offsets;\n\t    },\n\t    track: function CFFOffsetTracker_track(key, location) {\n\t      if (key in this.offsets) {\n\t        throw new _util.FormatError('Already tracking location of ' + key);\n\t      }\n\t      this.offsets[key] = location;\n\t    },\n\t    offset: function CFFOffsetTracker_offset(value) {\n\t      for (var key in this.offsets) {\n\t        this.offsets[key] += value;\n\t      }\n\t    },\n\t    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n\t      if (!(key in this.offsets)) {\n\t        throw new _util.FormatError('Not tracking location of ' + key);\n\t      }\n\t      var data = output.data;\n\t      var dataOffset = this.offsets[key];\n\t      var size = 5;\n\t      for (var i = 0, ii = values.length; i < ii; ++i) {\n\t        var offset0 = i * size + dataOffset;\n\t        var offset1 = offset0 + 1;\n\t        var offset2 = offset0 + 2;\n\t        var offset3 = offset0 + 3;\n\t        var offset4 = offset0 + 4;\n\t        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n\t          throw new _util.FormatError('writing to an offset that is not empty');\n\t        }\n\t        var value = values[i];\n\t        data[offset0] = 0x1d;\n\t        data[offset1] = value >> 24 & 0xFF;\n\t        data[offset2] = value >> 16 & 0xFF;\n\t        data[offset3] = value >> 8 & 0xFF;\n\t        data[offset4] = value & 0xFF;\n\t      }\n\t    }\n\t  };\n\t  return CFFOffsetTracker;\n\t}();\n\tvar CFFCompiler = function CFFCompilerClosure() {\n\t  function CFFCompiler(cff) {\n\t    this.cff = cff;\n\t  }\n\t  CFFCompiler.prototype = {\n\t    compile: function CFFCompiler_compile() {\n\t      var cff = this.cff;\n\t      var output = {\n\t        data: [],\n\t        length: 0,\n\t        add: function CFFCompiler_add(data) {\n\t          this.data = this.data.concat(data);\n\t          this.length = this.data.length;\n\t        }\n\t      };\n\t      var header = this.compileHeader(cff.header);\n\t      output.add(header);\n\t      var nameIndex = this.compileNameIndex(cff.names);\n\t      output.add(nameIndex);\n\t      if (cff.isCIDFont) {\n\t        if (cff.topDict.hasName('FontMatrix')) {\n\t          var base = cff.topDict.getByName('FontMatrix');\n\t          cff.topDict.removeByName('FontMatrix');\n\t          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n\t            var subDict = cff.fdArray[i];\n\t            var matrix = base.slice(0);\n\t            if (subDict.hasName('FontMatrix')) {\n\t              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\n\t            }\n\t            subDict.setByName('FontMatrix', matrix);\n\t          }\n\t        }\n\t      }\n\t      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n\t      output.add(compiled.output);\n\t      var topDictTracker = compiled.trackers[0];\n\t      var stringIndex = this.compileStringIndex(cff.strings.strings);\n\t      output.add(stringIndex);\n\t      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n\t      output.add(globalSubrIndex);\n\t      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n\t        if (cff.encoding.predefined) {\n\t          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n\t        } else {\n\t          var encoding = this.compileEncoding(cff.encoding);\n\t          topDictTracker.setEntryLocation('Encoding', [output.length], output);\n\t          output.add(encoding);\n\t        }\n\t      }\n\t      if (cff.charset && cff.topDict.hasName('charset')) {\n\t        if (cff.charset.predefined) {\n\t          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n\t        } else {\n\t          var charset = this.compileCharset(cff.charset);\n\t          topDictTracker.setEntryLocation('charset', [output.length], output);\n\t          output.add(charset);\n\t        }\n\t      }\n\t      var charStrings = this.compileCharStrings(cff.charStrings);\n\t      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n\t      output.add(charStrings);\n\t      if (cff.isCIDFont) {\n\t        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n\t        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n\t        output.add(fdSelect);\n\t        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n\t        topDictTracker.setEntryLocation('FDArray', [output.length], output);\n\t        output.add(compiled.output);\n\t        var fontDictTrackers = compiled.trackers;\n\t        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n\t      }\n\t      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n\t      output.add([0]);\n\t      return output.data;\n\t    },\n\t    encodeNumber: function CFFCompiler_encodeNumber(value) {\n\t      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n\t        return this.encodeInteger(value);\n\t      }\n\t      return this.encodeFloat(value);\n\t    },\n\t    encodeFloat: function CFFCompiler_encodeFloat(num) {\n\t      var value = num.toString();\n\t      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n\t      if (m) {\n\t        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n\t        value = (Math.round(num * epsilon) / epsilon).toString();\n\t      }\n\t      var nibbles = '';\n\t      var i, ii;\n\t      for (i = 0, ii = value.length; i < ii; ++i) {\n\t        var a = value[i];\n\t        if (a === 'e') {\n\t          nibbles += value[++i] === '-' ? 'c' : 'b';\n\t        } else if (a === '.') {\n\t          nibbles += 'a';\n\t        } else if (a === '-') {\n\t          nibbles += 'e';\n\t        } else {\n\t          nibbles += a;\n\t        }\n\t      }\n\t      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n\t      var out = [30];\n\t      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n\t        out.push(parseInt(nibbles.substr(i, 2), 16));\n\t      }\n\t      return out;\n\t    },\n\t    encodeInteger: function CFFCompiler_encodeInteger(value) {\n\t      var code;\n\t      if (value >= -107 && value <= 107) {\n\t        code = [value + 139];\n\t      } else if (value >= 108 && value <= 1131) {\n\t        value = value - 108;\n\t        code = [(value >> 8) + 247, value & 0xFF];\n\t      } else if (value >= -1131 && value <= -108) {\n\t        value = -value - 108;\n\t        code = [(value >> 8) + 251, value & 0xFF];\n\t      } else if (value >= -32768 && value <= 32767) {\n\t        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\n\t      } else {\n\t        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\n\t      }\n\t      return code;\n\t    },\n\t    compileHeader: function CFFCompiler_compileHeader(header) {\n\t      return [header.major, header.minor, header.hdrSize, header.offSize];\n\t    },\n\t    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n\t      var nameIndex = new CFFIndex();\n\t      for (var i = 0, ii = names.length; i < ii; ++i) {\n\t        var name = names[i];\n\t        var length = Math.min(name.length, 127);\n\t        var sanitizedName = new Array(length);\n\t        for (var j = 0; j < length; j++) {\n\t          var char = name[j];\n\t          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\n\t            char = '_';\n\t          }\n\t          sanitizedName[j] = char;\n\t        }\n\t        sanitizedName = sanitizedName.join('');\n\t        if (sanitizedName === '') {\n\t          sanitizedName = 'Bad_Font_Name';\n\t        }\n\t        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\n\t      }\n\t      return this.compileIndex(nameIndex);\n\t    },\n\t    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n\t      var fontDictTrackers = [];\n\t      var fdArrayIndex = new CFFIndex();\n\t      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n\t        var fontDict = dicts[i];\n\t        if (removeCidKeys) {\n\t          fontDict.removeByName('CIDFontVersion');\n\t          fontDict.removeByName('CIDFontRevision');\n\t          fontDict.removeByName('CIDFontType');\n\t          fontDict.removeByName('CIDCount');\n\t          fontDict.removeByName('UIDBase');\n\t        }\n\t        var fontDictTracker = new CFFOffsetTracker();\n\t        var fontDictData = this.compileDict(fontDict, fontDictTracker);\n\t        fontDictTrackers.push(fontDictTracker);\n\t        fdArrayIndex.add(fontDictData);\n\t        fontDictTracker.offset(length);\n\t      }\n\t      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n\t      return {\n\t        trackers: fontDictTrackers,\n\t        output: fdArrayIndex\n\t      };\n\t    },\n\t    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n\t      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n\t        var fontDict = dicts[i];\n\t        var privateDict = fontDict.privateDict;\n\t        if (!privateDict || !fontDict.hasName('Private')) {\n\t          throw new _util.FormatError('There must be a private dictionary.');\n\t        }\n\t        var privateDictTracker = new CFFOffsetTracker();\n\t        var privateDictData = this.compileDict(privateDict, privateDictTracker);\n\t        var outputLength = output.length;\n\t        privateDictTracker.offset(outputLength);\n\t        if (!privateDictData.length) {\n\t          outputLength = 0;\n\t        }\n\t        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\n\t        output.add(privateDictData);\n\t        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n\t          var subrs = this.compileIndex(privateDict.subrsIndex);\n\t          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n\t          output.add(subrs);\n\t        }\n\t      }\n\t    },\n\t    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n\t      var out = [];\n\t      var order = dict.order;\n\t      for (var i = 0; i < order.length; ++i) {\n\t        var key = order[i];\n\t        if (!(key in dict.values)) {\n\t          continue;\n\t        }\n\t        var values = dict.values[key];\n\t        var types = dict.types[key];\n\t        if (!Array.isArray(types)) {\n\t          types = [types];\n\t        }\n\t        if (!Array.isArray(values)) {\n\t          values = [values];\n\t        }\n\t        if (values.length === 0) {\n\t          continue;\n\t        }\n\t        for (var j = 0, jj = types.length; j < jj; ++j) {\n\t          var type = types[j];\n\t          var value = values[j];\n\t          switch (type) {\n\t            case 'num':\n\t            case 'sid':\n\t              out = out.concat(this.encodeNumber(value));\n\t              break;\n\t            case 'offset':\n\t              var name = dict.keyToNameMap[key];\n\t              if (!offsetTracker.isTracking(name)) {\n\t                offsetTracker.track(name, out.length);\n\t              }\n\t              out = out.concat([0x1d, 0, 0, 0, 0]);\n\t              break;\n\t            case 'array':\n\t            case 'delta':\n\t              out = out.concat(this.encodeNumber(value));\n\t              for (var k = 1, kk = values.length; k < kk; ++k) {\n\t                out = out.concat(this.encodeNumber(values[k]));\n\t              }\n\t              break;\n\t            default:\n\t              throw new _util.FormatError('Unknown data type of ' + type);\n\t          }\n\t        }\n\t        out = out.concat(dict.opcodes[key]);\n\t      }\n\t      return out;\n\t    },\n\t    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n\t      var stringIndex = new CFFIndex();\n\t      for (var i = 0, ii = strings.length; i < ii; ++i) {\n\t        stringIndex.add((0, _util.stringToBytes)(strings[i]));\n\t      }\n\t      return this.compileIndex(stringIndex);\n\t    },\n\t    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n\t      var globalSubrIndex = this.cff.globalSubrIndex;\n\t      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n\t    },\n\t    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n\t      return this.compileIndex(charStrings);\n\t    },\n\t    compileCharset: function CFFCompiler_compileCharset(charset) {\n\t      return this.compileTypedArray(charset.raw);\n\t    },\n\t    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n\t      return this.compileTypedArray(encoding.raw);\n\t    },\n\t    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n\t      return this.compileTypedArray(fdSelect);\n\t    },\n\t    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n\t      var out = [];\n\t      for (var i = 0, ii = data.length; i < ii; ++i) {\n\t        out[i] = data[i];\n\t      }\n\t      return out;\n\t    },\n\t    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n\t      trackers = trackers || [];\n\t      var objects = index.objects;\n\t      var count = objects.length;\n\t      if (count === 0) {\n\t        return [0, 0, 0];\n\t      }\n\t      var data = [count >> 8 & 0xFF, count & 0xff];\n\t      var lastOffset = 1,\n\t          i;\n\t      for (i = 0; i < count; ++i) {\n\t        lastOffset += objects[i].length;\n\t      }\n\t      var offsetSize;\n\t      if (lastOffset < 0x100) {\n\t        offsetSize = 1;\n\t      } else if (lastOffset < 0x10000) {\n\t        offsetSize = 2;\n\t      } else if (lastOffset < 0x1000000) {\n\t        offsetSize = 3;\n\t      } else {\n\t        offsetSize = 4;\n\t      }\n\t      data.push(offsetSize);\n\t      var relativeOffset = 1;\n\t      for (i = 0; i < count + 1; i++) {\n\t        if (offsetSize === 1) {\n\t          data.push(relativeOffset & 0xFF);\n\t        } else if (offsetSize === 2) {\n\t          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n\t        } else if (offsetSize === 3) {\n\t          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n\t        } else {\n\t          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n\t        }\n\t        if (objects[i]) {\n\t          relativeOffset += objects[i].length;\n\t        }\n\t      }\n\t      for (i = 0; i < count; i++) {\n\t        if (trackers[i]) {\n\t          trackers[i].offset(data.length);\n\t        }\n\t        for (var j = 0, jj = objects[i].length; j < jj; j++) {\n\t          data.push(objects[i][j]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t  };\n\t  return CFFCompiler;\n\t}();\n\texports.CFFStandardStrings = CFFStandardStrings;\n\texports.CFFParser = CFFParser;\n\texports.CFF = CFF;\n\texports.CFFHeader = CFFHeader;\n\texports.CFFStrings = CFFStrings;\n\texports.CFFIndex = CFFIndex;\n\texports.CFFCharset = CFFCharset;\n\texports.CFFTopDict = CFFTopDict;\n\texports.CFFPrivateDict = CFFPrivateDict;\n\texports.CFFCompiler = CFFCompiler;\n\t\n\t/***/ }),\n\t/* 79 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n\t  t['ArialNarrow'] = 'Helvetica';\n\t  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n\t  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n\t  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n\t  t['ArialBlack'] = 'Helvetica';\n\t  t['ArialBlack-Bold'] = 'Helvetica-Bold';\n\t  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n\t  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n\t  t['Arial-Black'] = 'Helvetica';\n\t  t['Arial-Black-Bold'] = 'Helvetica-Bold';\n\t  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n\t  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n\t  t['Arial'] = 'Helvetica';\n\t  t['Arial-Bold'] = 'Helvetica-Bold';\n\t  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n\t  t['Arial-Italic'] = 'Helvetica-Oblique';\n\t  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n\t  t['Arial-BoldMT'] = 'Helvetica-Bold';\n\t  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n\t  t['ArialMT'] = 'Helvetica';\n\t  t['Courier-Bold'] = 'Courier-Bold';\n\t  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n\t  t['Courier-Italic'] = 'Courier-Oblique';\n\t  t['CourierNew'] = 'Courier';\n\t  t['CourierNew-Bold'] = 'Courier-Bold';\n\t  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n\t  t['CourierNew-Italic'] = 'Courier-Oblique';\n\t  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n\t  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n\t  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n\t  t['CourierNewPSMT'] = 'Courier';\n\t  t['Helvetica'] = 'Helvetica';\n\t  t['Helvetica-Bold'] = 'Helvetica-Bold';\n\t  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n\t  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n\t  t['Helvetica-Italic'] = 'Helvetica-Oblique';\n\t  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n\t  t['SegoeUISymbol'] = 'Helvetica';\n\t  t['Symbol-Bold'] = 'Symbol';\n\t  t['Symbol-BoldItalic'] = 'Symbol';\n\t  t['Symbol-Italic'] = 'Symbol';\n\t  t['TimesNewRoman'] = 'Times-Roman';\n\t  t['TimesNewRoman-Bold'] = 'Times-Bold';\n\t  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n\t  t['TimesNewRoman-Italic'] = 'Times-Italic';\n\t  t['TimesNewRomanPS'] = 'Times-Roman';\n\t  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n\t  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n\t  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n\t  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n\t  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n\t  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n\t  t['TimesNewRomanPSMT'] = 'Times-Roman';\n\t  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n\t  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n\t  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n\t});\n\tvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n\t  t['CenturyGothic'] = 'Helvetica';\n\t  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n\t  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n\t  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n\t  t['ComicSansMS'] = 'Comic Sans MS';\n\t  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n\t  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n\t  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n\t  t['LucidaConsole'] = 'Courier';\n\t  t['LucidaConsole-Bold'] = 'Courier-Bold';\n\t  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n\t  t['LucidaConsole-Italic'] = 'Courier-Oblique';\n\t  t['MS-Gothic'] = 'MS Gothic';\n\t  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n\t  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n\t  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n\t  t['MS-Mincho'] = 'MS Mincho';\n\t  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n\t  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n\t  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n\t  t['MS-PGothic'] = 'MS PGothic';\n\t  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n\t  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n\t  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n\t  t['MS-PMincho'] = 'MS PMincho';\n\t  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n\t  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n\t  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n\t  t['NuptialScript'] = 'Times-Italic';\n\t  t['Wingdings'] = 'ZapfDingbats';\n\t});\n\tvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\n\t  t['Adobe Jenson'] = true;\n\t  t['Adobe Text'] = true;\n\t  t['Albertus'] = true;\n\t  t['Aldus'] = true;\n\t  t['Alexandria'] = true;\n\t  t['Algerian'] = true;\n\t  t['American Typewriter'] = true;\n\t  t['Antiqua'] = true;\n\t  t['Apex'] = true;\n\t  t['Arno'] = true;\n\t  t['Aster'] = true;\n\t  t['Aurora'] = true;\n\t  t['Baskerville'] = true;\n\t  t['Bell'] = true;\n\t  t['Bembo'] = true;\n\t  t['Bembo Schoolbook'] = true;\n\t  t['Benguiat'] = true;\n\t  t['Berkeley Old Style'] = true;\n\t  t['Bernhard Modern'] = true;\n\t  t['Berthold City'] = true;\n\t  t['Bodoni'] = true;\n\t  t['Bauer Bodoni'] = true;\n\t  t['Book Antiqua'] = true;\n\t  t['Bookman'] = true;\n\t  t['Bordeaux Roman'] = true;\n\t  t['Californian FB'] = true;\n\t  t['Calisto'] = true;\n\t  t['Calvert'] = true;\n\t  t['Capitals'] = true;\n\t  t['Cambria'] = true;\n\t  t['Cartier'] = true;\n\t  t['Caslon'] = true;\n\t  t['Catull'] = true;\n\t  t['Centaur'] = true;\n\t  t['Century Old Style'] = true;\n\t  t['Century Schoolbook'] = true;\n\t  t['Chaparral'] = true;\n\t  t['Charis SIL'] = true;\n\t  t['Cheltenham'] = true;\n\t  t['Cholla Slab'] = true;\n\t  t['Clarendon'] = true;\n\t  t['Clearface'] = true;\n\t  t['Cochin'] = true;\n\t  t['Colonna'] = true;\n\t  t['Computer Modern'] = true;\n\t  t['Concrete Roman'] = true;\n\t  t['Constantia'] = true;\n\t  t['Cooper Black'] = true;\n\t  t['Corona'] = true;\n\t  t['Ecotype'] = true;\n\t  t['Egyptienne'] = true;\n\t  t['Elephant'] = true;\n\t  t['Excelsior'] = true;\n\t  t['Fairfield'] = true;\n\t  t['FF Scala'] = true;\n\t  t['Folkard'] = true;\n\t  t['Footlight'] = true;\n\t  t['FreeSerif'] = true;\n\t  t['Friz Quadrata'] = true;\n\t  t['Garamond'] = true;\n\t  t['Gentium'] = true;\n\t  t['Georgia'] = true;\n\t  t['Gloucester'] = true;\n\t  t['Goudy Old Style'] = true;\n\t  t['Goudy Schoolbook'] = true;\n\t  t['Goudy Pro Font'] = true;\n\t  t['Granjon'] = true;\n\t  t['Guardian Egyptian'] = true;\n\t  t['Heather'] = true;\n\t  t['Hercules'] = true;\n\t  t['High Tower Text'] = true;\n\t  t['Hiroshige'] = true;\n\t  t['Hoefler Text'] = true;\n\t  t['Humana Serif'] = true;\n\t  t['Imprint'] = true;\n\t  t['Ionic No. 5'] = true;\n\t  t['Janson'] = true;\n\t  t['Joanna'] = true;\n\t  t['Korinna'] = true;\n\t  t['Lexicon'] = true;\n\t  t['Liberation Serif'] = true;\n\t  t['Linux Libertine'] = true;\n\t  t['Literaturnaya'] = true;\n\t  t['Lucida'] = true;\n\t  t['Lucida Bright'] = true;\n\t  t['Melior'] = true;\n\t  t['Memphis'] = true;\n\t  t['Miller'] = true;\n\t  t['Minion'] = true;\n\t  t['Modern'] = true;\n\t  t['Mona Lisa'] = true;\n\t  t['Mrs Eaves'] = true;\n\t  t['MS Serif'] = true;\n\t  t['Museo Slab'] = true;\n\t  t['New York'] = true;\n\t  t['Nimbus Roman'] = true;\n\t  t['NPS Rawlinson Roadway'] = true;\n\t  t['NuptialScript'] = true;\n\t  t['Palatino'] = true;\n\t  t['Perpetua'] = true;\n\t  t['Plantin'] = true;\n\t  t['Plantin Schoolbook'] = true;\n\t  t['Playbill'] = true;\n\t  t['Poor Richard'] = true;\n\t  t['Rawlinson Roadway'] = true;\n\t  t['Renault'] = true;\n\t  t['Requiem'] = true;\n\t  t['Rockwell'] = true;\n\t  t['Roman'] = true;\n\t  t['Rotis Serif'] = true;\n\t  t['Sabon'] = true;\n\t  t['Scala'] = true;\n\t  t['Seagull'] = true;\n\t  t['Sistina'] = true;\n\t  t['Souvenir'] = true;\n\t  t['STIX'] = true;\n\t  t['Stone Informal'] = true;\n\t  t['Stone Serif'] = true;\n\t  t['Sylfaen'] = true;\n\t  t['Times'] = true;\n\t  t['Trajan'] = true;\n\t  t['Trinité'] = true;\n\t  t['Trump Mediaeval'] = true;\n\t  t['Utopia'] = true;\n\t  t['Vale Type'] = true;\n\t  t['Bitstream Vera'] = true;\n\t  t['Vera Serif'] = true;\n\t  t['Versailles'] = true;\n\t  t['Wanted'] = true;\n\t  t['Weiss'] = true;\n\t  t['Wide Latin'] = true;\n\t  t['Windsor'] = true;\n\t  t['XITS'] = true;\n\t});\n\tvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\n\t  t['Dingbats'] = true;\n\t  t['Symbol'] = true;\n\t  t['ZapfDingbats'] = true;\n\t});\n\tvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\n\t  t[2] = 10;\n\t  t[3] = 32;\n\t  t[4] = 33;\n\t  t[5] = 34;\n\t  t[6] = 35;\n\t  t[7] = 36;\n\t  t[8] = 37;\n\t  t[9] = 38;\n\t  t[10] = 39;\n\t  t[11] = 40;\n\t  t[12] = 41;\n\t  t[13] = 42;\n\t  t[14] = 43;\n\t  t[15] = 44;\n\t  t[16] = 45;\n\t  t[17] = 46;\n\t  t[18] = 47;\n\t  t[19] = 48;\n\t  t[20] = 49;\n\t  t[21] = 50;\n\t  t[22] = 51;\n\t  t[23] = 52;\n\t  t[24] = 53;\n\t  t[25] = 54;\n\t  t[26] = 55;\n\t  t[27] = 56;\n\t  t[28] = 57;\n\t  t[29] = 58;\n\t  t[30] = 894;\n\t  t[31] = 60;\n\t  t[32] = 61;\n\t  t[33] = 62;\n\t  t[34] = 63;\n\t  t[35] = 64;\n\t  t[36] = 65;\n\t  t[37] = 66;\n\t  t[38] = 67;\n\t  t[39] = 68;\n\t  t[40] = 69;\n\t  t[41] = 70;\n\t  t[42] = 71;\n\t  t[43] = 72;\n\t  t[44] = 73;\n\t  t[45] = 74;\n\t  t[46] = 75;\n\t  t[47] = 76;\n\t  t[48] = 77;\n\t  t[49] = 78;\n\t  t[50] = 79;\n\t  t[51] = 80;\n\t  t[52] = 81;\n\t  t[53] = 82;\n\t  t[54] = 83;\n\t  t[55] = 84;\n\t  t[56] = 85;\n\t  t[57] = 86;\n\t  t[58] = 87;\n\t  t[59] = 88;\n\t  t[60] = 89;\n\t  t[61] = 90;\n\t  t[62] = 91;\n\t  t[63] = 92;\n\t  t[64] = 93;\n\t  t[65] = 94;\n\t  t[66] = 95;\n\t  t[67] = 96;\n\t  t[68] = 97;\n\t  t[69] = 98;\n\t  t[70] = 99;\n\t  t[71] = 100;\n\t  t[72] = 101;\n\t  t[73] = 102;\n\t  t[74] = 103;\n\t  t[75] = 104;\n\t  t[76] = 105;\n\t  t[77] = 106;\n\t  t[78] = 107;\n\t  t[79] = 108;\n\t  t[80] = 109;\n\t  t[81] = 110;\n\t  t[82] = 111;\n\t  t[83] = 112;\n\t  t[84] = 113;\n\t  t[85] = 114;\n\t  t[86] = 115;\n\t  t[87] = 116;\n\t  t[88] = 117;\n\t  t[89] = 118;\n\t  t[90] = 119;\n\t  t[91] = 120;\n\t  t[92] = 121;\n\t  t[93] = 122;\n\t  t[94] = 123;\n\t  t[95] = 124;\n\t  t[96] = 125;\n\t  t[97] = 126;\n\t  t[98] = 196;\n\t  t[99] = 197;\n\t  t[100] = 199;\n\t  t[101] = 201;\n\t  t[102] = 209;\n\t  t[103] = 214;\n\t  t[104] = 220;\n\t  t[105] = 225;\n\t  t[106] = 224;\n\t  t[107] = 226;\n\t  t[108] = 228;\n\t  t[109] = 227;\n\t  t[110] = 229;\n\t  t[111] = 231;\n\t  t[112] = 233;\n\t  t[113] = 232;\n\t  t[114] = 234;\n\t  t[115] = 235;\n\t  t[116] = 237;\n\t  t[117] = 236;\n\t  t[118] = 238;\n\t  t[119] = 239;\n\t  t[120] = 241;\n\t  t[121] = 243;\n\t  t[122] = 242;\n\t  t[123] = 244;\n\t  t[124] = 246;\n\t  t[125] = 245;\n\t  t[126] = 250;\n\t  t[127] = 249;\n\t  t[128] = 251;\n\t  t[129] = 252;\n\t  t[130] = 8224;\n\t  t[131] = 176;\n\t  t[132] = 162;\n\t  t[133] = 163;\n\t  t[134] = 167;\n\t  t[135] = 8226;\n\t  t[136] = 182;\n\t  t[137] = 223;\n\t  t[138] = 174;\n\t  t[139] = 169;\n\t  t[140] = 8482;\n\t  t[141] = 180;\n\t  t[142] = 168;\n\t  t[143] = 8800;\n\t  t[144] = 198;\n\t  t[145] = 216;\n\t  t[146] = 8734;\n\t  t[147] = 177;\n\t  t[148] = 8804;\n\t  t[149] = 8805;\n\t  t[150] = 165;\n\t  t[151] = 181;\n\t  t[152] = 8706;\n\t  t[153] = 8721;\n\t  t[154] = 8719;\n\t  t[156] = 8747;\n\t  t[157] = 170;\n\t  t[158] = 186;\n\t  t[159] = 8486;\n\t  t[160] = 230;\n\t  t[161] = 248;\n\t  t[162] = 191;\n\t  t[163] = 161;\n\t  t[164] = 172;\n\t  t[165] = 8730;\n\t  t[166] = 402;\n\t  t[167] = 8776;\n\t  t[168] = 8710;\n\t  t[169] = 171;\n\t  t[170] = 187;\n\t  t[171] = 8230;\n\t  t[210] = 218;\n\t  t[223] = 711;\n\t  t[224] = 321;\n\t  t[225] = 322;\n\t  t[227] = 353;\n\t  t[229] = 382;\n\t  t[234] = 253;\n\t  t[252] = 263;\n\t  t[253] = 268;\n\t  t[254] = 269;\n\t  t[258] = 258;\n\t  t[260] = 260;\n\t  t[261] = 261;\n\t  t[265] = 280;\n\t  t[266] = 281;\n\t  t[268] = 283;\n\t  t[269] = 313;\n\t  t[275] = 323;\n\t  t[276] = 324;\n\t  t[278] = 328;\n\t  t[284] = 345;\n\t  t[285] = 346;\n\t  t[286] = 347;\n\t  t[292] = 367;\n\t  t[295] = 377;\n\t  t[296] = 378;\n\t  t[298] = 380;\n\t  t[305] = 963;\n\t  t[306] = 964;\n\t  t[307] = 966;\n\t  t[308] = 8215;\n\t  t[309] = 8252;\n\t  t[310] = 8319;\n\t  t[311] = 8359;\n\t  t[312] = 8592;\n\t  t[313] = 8593;\n\t  t[337] = 9552;\n\t  t[493] = 1039;\n\t  t[494] = 1040;\n\t  t[705] = 1524;\n\t  t[706] = 8362;\n\t  t[710] = 64288;\n\t  t[711] = 64298;\n\t  t[759] = 1617;\n\t  t[761] = 1776;\n\t  t[763] = 1778;\n\t  t[775] = 1652;\n\t  t[777] = 1764;\n\t  t[778] = 1780;\n\t  t[779] = 1781;\n\t  t[780] = 1782;\n\t  t[782] = 771;\n\t  t[783] = 64726;\n\t  t[786] = 8363;\n\t  t[788] = 8532;\n\t  t[790] = 768;\n\t  t[791] = 769;\n\t  t[792] = 768;\n\t  t[795] = 803;\n\t  t[797] = 64336;\n\t  t[798] = 64337;\n\t  t[799] = 64342;\n\t  t[800] = 64343;\n\t  t[801] = 64344;\n\t  t[802] = 64345;\n\t  t[803] = 64362;\n\t  t[804] = 64363;\n\t  t[805] = 64364;\n\t  t[2424] = 7821;\n\t  t[2425] = 7822;\n\t  t[2426] = 7823;\n\t  t[2427] = 7824;\n\t  t[2428] = 7825;\n\t  t[2429] = 7826;\n\t  t[2430] = 7827;\n\t  t[2433] = 7682;\n\t  t[2678] = 8045;\n\t  t[2679] = 8046;\n\t  t[2830] = 1552;\n\t  t[2838] = 686;\n\t  t[2840] = 751;\n\t  t[2842] = 753;\n\t  t[2843] = 754;\n\t  t[2844] = 755;\n\t  t[2846] = 757;\n\t  t[2856] = 767;\n\t  t[2857] = 848;\n\t  t[2858] = 849;\n\t  t[2862] = 853;\n\t  t[2863] = 854;\n\t  t[2864] = 855;\n\t  t[2865] = 861;\n\t  t[2866] = 862;\n\t  t[2906] = 7460;\n\t  t[2908] = 7462;\n\t  t[2909] = 7463;\n\t  t[2910] = 7464;\n\t  t[2912] = 7466;\n\t  t[2913] = 7467;\n\t  t[2914] = 7468;\n\t  t[2916] = 7470;\n\t  t[2917] = 7471;\n\t  t[2918] = 7472;\n\t  t[2920] = 7474;\n\t  t[2921] = 7475;\n\t  t[2922] = 7476;\n\t  t[2924] = 7478;\n\t  t[2925] = 7479;\n\t  t[2926] = 7480;\n\t  t[2928] = 7482;\n\t  t[2929] = 7483;\n\t  t[2930] = 7484;\n\t  t[2932] = 7486;\n\t  t[2933] = 7487;\n\t  t[2934] = 7488;\n\t  t[2936] = 7490;\n\t  t[2937] = 7491;\n\t  t[2938] = 7492;\n\t  t[2940] = 7494;\n\t  t[2941] = 7495;\n\t  t[2942] = 7496;\n\t  t[2944] = 7498;\n\t  t[2946] = 7500;\n\t  t[2948] = 7502;\n\t  t[2950] = 7504;\n\t  t[2951] = 7505;\n\t  t[2952] = 7506;\n\t  t[2954] = 7508;\n\t  t[2955] = 7509;\n\t  t[2956] = 7510;\n\t  t[2958] = 7512;\n\t  t[2959] = 7513;\n\t  t[2960] = 7514;\n\t  t[2962] = 7516;\n\t  t[2963] = 7517;\n\t  t[2964] = 7518;\n\t  t[2966] = 7520;\n\t  t[2967] = 7521;\n\t  t[2968] = 7522;\n\t  t[2970] = 7524;\n\t  t[2971] = 7525;\n\t  t[2972] = 7526;\n\t  t[2974] = 7528;\n\t  t[2975] = 7529;\n\t  t[2976] = 7530;\n\t  t[2978] = 1537;\n\t  t[2979] = 1538;\n\t  t[2980] = 1539;\n\t  t[2982] = 1549;\n\t  t[2983] = 1551;\n\t  t[2984] = 1552;\n\t  t[2986] = 1554;\n\t  t[2987] = 1555;\n\t  t[2988] = 1556;\n\t  t[2990] = 1623;\n\t  t[2991] = 1624;\n\t  t[2995] = 1775;\n\t  t[2999] = 1791;\n\t  t[3002] = 64290;\n\t  t[3003] = 64291;\n\t  t[3004] = 64292;\n\t  t[3006] = 64294;\n\t  t[3007] = 64295;\n\t  t[3008] = 64296;\n\t  t[3011] = 1900;\n\t  t[3014] = 8223;\n\t  t[3015] = 8244;\n\t  t[3017] = 7532;\n\t  t[3018] = 7533;\n\t  t[3019] = 7534;\n\t  t[3075] = 7590;\n\t  t[3076] = 7591;\n\t  t[3079] = 7594;\n\t  t[3080] = 7595;\n\t  t[3083] = 7598;\n\t  t[3084] = 7599;\n\t  t[3087] = 7602;\n\t  t[3088] = 7603;\n\t  t[3091] = 7606;\n\t  t[3092] = 7607;\n\t  t[3095] = 7610;\n\t  t[3096] = 7611;\n\t  t[3099] = 7614;\n\t  t[3100] = 7615;\n\t  t[3103] = 7618;\n\t  t[3104] = 7619;\n\t  t[3107] = 8337;\n\t  t[3108] = 8338;\n\t  t[3116] = 1884;\n\t  t[3119] = 1885;\n\t  t[3120] = 1885;\n\t  t[3123] = 1886;\n\t  t[3124] = 1886;\n\t  t[3127] = 1887;\n\t  t[3128] = 1887;\n\t  t[3131] = 1888;\n\t  t[3132] = 1888;\n\t  t[3135] = 1889;\n\t  t[3136] = 1889;\n\t  t[3139] = 1890;\n\t  t[3140] = 1890;\n\t  t[3143] = 1891;\n\t  t[3144] = 1891;\n\t  t[3147] = 1892;\n\t  t[3148] = 1892;\n\t  t[3153] = 580;\n\t  t[3154] = 581;\n\t  t[3157] = 584;\n\t  t[3158] = 585;\n\t  t[3161] = 588;\n\t  t[3162] = 589;\n\t  t[3165] = 891;\n\t  t[3166] = 892;\n\t  t[3169] = 1274;\n\t  t[3170] = 1275;\n\t  t[3173] = 1278;\n\t  t[3174] = 1279;\n\t  t[3181] = 7622;\n\t  t[3182] = 7623;\n\t  t[3282] = 11799;\n\t  t[3316] = 578;\n\t  t[3379] = 42785;\n\t  t[3393] = 1159;\n\t  t[3416] = 8377;\n\t});\n\tvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\n\t  t[227] = 322;\n\t  t[264] = 261;\n\t  t[291] = 346;\n\t});\n\texports.getStdFontMap = getStdFontMap;\n\texports.getNonStdFontMap = getNonStdFontMap;\n\texports.getSerifFonts = getSerifFonts;\n\texports.getSymbolsFonts = getSymbolsFonts;\n\texports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\n\texports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\n\t\n\t/***/ }),\n\t/* 80 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\tvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\n\tvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n\t t[63721] = 0x00A9;\n\t t[63193] = 0x00A9;\n\t t[63720] = 0x00AE;\n\t t[63194] = 0x00AE;\n\t t[63722] = 0x2122;\n\t t[63195] = 0x2122;\n\t t[63729] = 0x23A7;\n\t t[63730] = 0x23A8;\n\t t[63731] = 0x23A9;\n\t t[63740] = 0x23AB;\n\t t[63741] = 0x23AC;\n\t t[63742] = 0x23AD;\n\t t[63726] = 0x23A1;\n\t t[63727] = 0x23A2;\n\t t[63728] = 0x23A3;\n\t t[63737] = 0x23A4;\n\t t[63738] = 0x23A5;\n\t t[63739] = 0x23A6;\n\t t[63723] = 0x239B;\n\t t[63724] = 0x239C;\n\t t[63725] = 0x239D;\n\t t[63734] = 0x239E;\n\t t[63735] = 0x239F;\n\t t[63736] = 0x23A0;\n\t});\n\tfunction mapSpecialUnicodeValues(code) {\n\t if (code >= 0xFFF0 && code <= 0xFFFF) {\n\t  return 0;\n\t } else if (code >= 0xF600 && code <= 0xF8FF) {\n\t  return getSpecialPUASymbols()[code] || code;\n\t } else if (code === 0x00AD) {\n\t  return 0x002D;\n\t }\n\t return code;\n\t}\n\tfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n\t var unicode = glyphsUnicodeMap[name];\n\t if (unicode !== undefined) {\n\t  return unicode;\n\t }\n\t if (!name) {\n\t  return -1;\n\t }\n\t if (name[0] === 'u') {\n\t  var nameLen = name.length, hexStr;\n\t  if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n\t   hexStr = name.substr(3);\n\t  } else if (nameLen >= 5 && nameLen <= 7) {\n\t   hexStr = name.substr(1);\n\t  } else {\n\t   return -1;\n\t  }\n\t  if (hexStr === hexStr.toUpperCase()) {\n\t   unicode = parseInt(hexStr, 16);\n\t   if (unicode >= 0) {\n\t    return unicode;\n\t   }\n\t  }\n\t }\n\t return -1;\n\t}\n\tvar UnicodeRanges = [\n\t {\n\t  'begin': 0x0000,\n\t  'end': 0x007F\n\t },\n\t {\n\t  'begin': 0x0080,\n\t  'end': 0x00FF\n\t },\n\t {\n\t  'begin': 0x0100,\n\t  'end': 0x017F\n\t },\n\t {\n\t  'begin': 0x0180,\n\t  'end': 0x024F\n\t },\n\t {\n\t  'begin': 0x0250,\n\t  'end': 0x02AF\n\t },\n\t {\n\t  'begin': 0x02B0,\n\t  'end': 0x02FF\n\t },\n\t {\n\t  'begin': 0x0300,\n\t  'end': 0x036F\n\t },\n\t {\n\t  'begin': 0x0370,\n\t  'end': 0x03FF\n\t },\n\t {\n\t  'begin': 0x2C80,\n\t  'end': 0x2CFF\n\t },\n\t {\n\t  'begin': 0x0400,\n\t  'end': 0x04FF\n\t },\n\t {\n\t  'begin': 0x0530,\n\t  'end': 0x058F\n\t },\n\t {\n\t  'begin': 0x0590,\n\t  'end': 0x05FF\n\t },\n\t {\n\t  'begin': 0xA500,\n\t  'end': 0xA63F\n\t },\n\t {\n\t  'begin': 0x0600,\n\t  'end': 0x06FF\n\t },\n\t {\n\t  'begin': 0x07C0,\n\t  'end': 0x07FF\n\t },\n\t {\n\t  'begin': 0x0900,\n\t  'end': 0x097F\n\t },\n\t {\n\t  'begin': 0x0980,\n\t  'end': 0x09FF\n\t },\n\t {\n\t  'begin': 0x0A00,\n\t  'end': 0x0A7F\n\t },\n\t {\n\t  'begin': 0x0A80,\n\t  'end': 0x0AFF\n\t },\n\t {\n\t  'begin': 0x0B00,\n\t  'end': 0x0B7F\n\t },\n\t {\n\t  'begin': 0x0B80,\n\t  'end': 0x0BFF\n\t },\n\t {\n\t  'begin': 0x0C00,\n\t  'end': 0x0C7F\n\t },\n\t {\n\t  'begin': 0x0C80,\n\t  'end': 0x0CFF\n\t },\n\t {\n\t  'begin': 0x0D00,\n\t  'end': 0x0D7F\n\t },\n\t {\n\t  'begin': 0x0E00,\n\t  'end': 0x0E7F\n\t },\n\t {\n\t  'begin': 0x0E80,\n\t  'end': 0x0EFF\n\t },\n\t {\n\t  'begin': 0x10A0,\n\t  'end': 0x10FF\n\t },\n\t {\n\t  'begin': 0x1B00,\n\t  'end': 0x1B7F\n\t },\n\t {\n\t  'begin': 0x1100,\n\t  'end': 0x11FF\n\t },\n\t {\n\t  'begin': 0x1E00,\n\t  'end': 0x1EFF\n\t },\n\t {\n\t  'begin': 0x1F00,\n\t  'end': 0x1FFF\n\t },\n\t {\n\t  'begin': 0x2000,\n\t  'end': 0x206F\n\t },\n\t {\n\t  'begin': 0x2070,\n\t  'end': 0x209F\n\t },\n\t {\n\t  'begin': 0x20A0,\n\t  'end': 0x20CF\n\t },\n\t {\n\t  'begin': 0x20D0,\n\t  'end': 0x20FF\n\t },\n\t {\n\t  'begin': 0x2100,\n\t  'end': 0x214F\n\t },\n\t {\n\t  'begin': 0x2150,\n\t  'end': 0x218F\n\t },\n\t {\n\t  'begin': 0x2190,\n\t  'end': 0x21FF\n\t },\n\t {\n\t  'begin': 0x2200,\n\t  'end': 0x22FF\n\t },\n\t {\n\t  'begin': 0x2300,\n\t  'end': 0x23FF\n\t },\n\t {\n\t  'begin': 0x2400,\n\t  'end': 0x243F\n\t },\n\t {\n\t  'begin': 0x2440,\n\t  'end': 0x245F\n\t },\n\t {\n\t  'begin': 0x2460,\n\t  'end': 0x24FF\n\t },\n\t {\n\t  'begin': 0x2500,\n\t  'end': 0x257F\n\t },\n\t {\n\t  'begin': 0x2580,\n\t  'end': 0x259F\n\t },\n\t {\n\t  'begin': 0x25A0,\n\t  'end': 0x25FF\n\t },\n\t {\n\t  'begin': 0x2600,\n\t  'end': 0x26FF\n\t },\n\t {\n\t  'begin': 0x2700,\n\t  'end': 0x27BF\n\t },\n\t {\n\t  'begin': 0x3000,\n\t  'end': 0x303F\n\t },\n\t {\n\t  'begin': 0x3040,\n\t  'end': 0x309F\n\t },\n\t {\n\t  'begin': 0x30A0,\n\t  'end': 0x30FF\n\t },\n\t {\n\t  'begin': 0x3100,\n\t  'end': 0x312F\n\t },\n\t {\n\t  'begin': 0x3130,\n\t  'end': 0x318F\n\t },\n\t {\n\t  'begin': 0xA840,\n\t  'end': 0xA87F\n\t },\n\t {\n\t  'begin': 0x3200,\n\t  'end': 0x32FF\n\t },\n\t {\n\t  'begin': 0x3300,\n\t  'end': 0x33FF\n\t },\n\t {\n\t  'begin': 0xAC00,\n\t  'end': 0xD7AF\n\t },\n\t {\n\t  'begin': 0xD800,\n\t  'end': 0xDFFF\n\t },\n\t {\n\t  'begin': 0x10900,\n\t  'end': 0x1091F\n\t },\n\t {\n\t  'begin': 0x4E00,\n\t  'end': 0x9FFF\n\t },\n\t {\n\t  'begin': 0xE000,\n\t  'end': 0xF8FF\n\t },\n\t {\n\t  'begin': 0x31C0,\n\t  'end': 0x31EF\n\t },\n\t {\n\t  'begin': 0xFB00,\n\t  'end': 0xFB4F\n\t },\n\t {\n\t  'begin': 0xFB50,\n\t  'end': 0xFDFF\n\t },\n\t {\n\t  'begin': 0xFE20,\n\t  'end': 0xFE2F\n\t },\n\t {\n\t  'begin': 0xFE10,\n\t  'end': 0xFE1F\n\t },\n\t {\n\t  'begin': 0xFE50,\n\t  'end': 0xFE6F\n\t },\n\t {\n\t  'begin': 0xFE70,\n\t  'end': 0xFEFF\n\t },\n\t {\n\t  'begin': 0xFF00,\n\t  'end': 0xFFEF\n\t },\n\t {\n\t  'begin': 0xFFF0,\n\t  'end': 0xFFFF\n\t },\n\t {\n\t  'begin': 0x0F00,\n\t  'end': 0x0FFF\n\t },\n\t {\n\t  'begin': 0x0700,\n\t  'end': 0x074F\n\t },\n\t {\n\t  'begin': 0x0780,\n\t  'end': 0x07BF\n\t },\n\t {\n\t  'begin': 0x0D80,\n\t  'end': 0x0DFF\n\t },\n\t {\n\t  'begin': 0x1000,\n\t  'end': 0x109F\n\t },\n\t {\n\t  'begin': 0x1200,\n\t  'end': 0x137F\n\t },\n\t {\n\t  'begin': 0x13A0,\n\t  'end': 0x13FF\n\t },\n\t {\n\t  'begin': 0x1400,\n\t  'end': 0x167F\n\t },\n\t {\n\t  'begin': 0x1680,\n\t  'end': 0x169F\n\t },\n\t {\n\t  'begin': 0x16A0,\n\t  'end': 0x16FF\n\t },\n\t {\n\t  'begin': 0x1780,\n\t  'end': 0x17FF\n\t },\n\t {\n\t  'begin': 0x1800,\n\t  'end': 0x18AF\n\t },\n\t {\n\t  'begin': 0x2800,\n\t  'end': 0x28FF\n\t },\n\t {\n\t  'begin': 0xA000,\n\t  'end': 0xA48F\n\t },\n\t {\n\t  'begin': 0x1700,\n\t  'end': 0x171F\n\t },\n\t {\n\t  'begin': 0x10300,\n\t  'end': 0x1032F\n\t },\n\t {\n\t  'begin': 0x10330,\n\t  'end': 0x1034F\n\t },\n\t {\n\t  'begin': 0x10400,\n\t  'end': 0x1044F\n\t },\n\t {\n\t  'begin': 0x1D000,\n\t  'end': 0x1D0FF\n\t },\n\t {\n\t  'begin': 0x1D400,\n\t  'end': 0x1D7FF\n\t },\n\t {\n\t  'begin': 0xFF000,\n\t  'end': 0xFFFFD\n\t },\n\t {\n\t  'begin': 0xFE00,\n\t  'end': 0xFE0F\n\t },\n\t {\n\t  'begin': 0xE0000,\n\t  'end': 0xE007F\n\t },\n\t {\n\t  'begin': 0x1900,\n\t  'end': 0x194F\n\t },\n\t {\n\t  'begin': 0x1950,\n\t  'end': 0x197F\n\t },\n\t {\n\t  'begin': 0x1980,\n\t  'end': 0x19DF\n\t },\n\t {\n\t  'begin': 0x1A00,\n\t  'end': 0x1A1F\n\t },\n\t {\n\t  'begin': 0x2C00,\n\t  'end': 0x2C5F\n\t },\n\t {\n\t  'begin': 0x2D30,\n\t  'end': 0x2D7F\n\t },\n\t {\n\t  'begin': 0x4DC0,\n\t  'end': 0x4DFF\n\t },\n\t {\n\t  'begin': 0xA800,\n\t  'end': 0xA82F\n\t },\n\t {\n\t  'begin': 0x10000,\n\t  'end': 0x1007F\n\t },\n\t {\n\t  'begin': 0x10140,\n\t  'end': 0x1018F\n\t },\n\t {\n\t  'begin': 0x10380,\n\t  'end': 0x1039F\n\t },\n\t {\n\t  'begin': 0x103A0,\n\t  'end': 0x103DF\n\t },\n\t {\n\t  'begin': 0x10450,\n\t  'end': 0x1047F\n\t },\n\t {\n\t  'begin': 0x10480,\n\t  'end': 0x104AF\n\t },\n\t {\n\t  'begin': 0x10800,\n\t  'end': 0x1083F\n\t },\n\t {\n\t  'begin': 0x10A00,\n\t  'end': 0x10A5F\n\t },\n\t {\n\t  'begin': 0x1D300,\n\t  'end': 0x1D35F\n\t },\n\t {\n\t  'begin': 0x12000,\n\t  'end': 0x123FF\n\t },\n\t {\n\t  'begin': 0x1D360,\n\t  'end': 0x1D37F\n\t },\n\t {\n\t  'begin': 0x1B80,\n\t  'end': 0x1BBF\n\t },\n\t {\n\t  'begin': 0x1C00,\n\t  'end': 0x1C4F\n\t },\n\t {\n\t  'begin': 0x1C50,\n\t  'end': 0x1C7F\n\t },\n\t {\n\t  'begin': 0xA880,\n\t  'end': 0xA8DF\n\t },\n\t {\n\t  'begin': 0xA900,\n\t  'end': 0xA92F\n\t },\n\t {\n\t  'begin': 0xA930,\n\t  'end': 0xA95F\n\t },\n\t {\n\t  'begin': 0xAA00,\n\t  'end': 0xAA5F\n\t },\n\t {\n\t  'begin': 0x10190,\n\t  'end': 0x101CF\n\t },\n\t {\n\t  'begin': 0x101D0,\n\t  'end': 0x101FF\n\t },\n\t {\n\t  'begin': 0x102A0,\n\t  'end': 0x102DF\n\t },\n\t {\n\t  'begin': 0x1F030,\n\t  'end': 0x1F09F\n\t }\n\t];\n\tfunction getUnicodeRangeFor(value) {\n\t for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n\t  var range = UnicodeRanges[i];\n\t  if (value >= range.begin && value < range.end) {\n\t   return i;\n\t  }\n\t }\n\t return -1;\n\t}\n\tfunction isRTLRangeFor(value) {\n\t var range = UnicodeRanges[13];\n\t if (value >= range.begin && value < range.end) {\n\t  return true;\n\t }\n\t range = UnicodeRanges[11];\n\t if (value >= range.begin && value < range.end) {\n\t  return true;\n\t }\n\t return false;\n\t}\n\tvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n\t t['\\u00A8'] = '\\u0020\\u0308';\n\t t['\\u00AF'] = '\\u0020\\u0304';\n\t t['\\u00B4'] = '\\u0020\\u0301';\n\t t['\\u00B5'] = '\\u03BC';\n\t t['\\u00B8'] = '\\u0020\\u0327';\n\t t['\\u0132'] = '\\u0049\\u004A';\n\t t['\\u0133'] = '\\u0069\\u006A';\n\t t['\\u013F'] = '\\u004C\\u00B7';\n\t t['\\u0140'] = '\\u006C\\u00B7';\n\t t['\\u0149'] = '\\u02BC\\u006E';\n\t t['\\u017F'] = '\\u0073';\n\t t['\\u01C4'] = '\\u0044\\u017D';\n\t t['\\u01C5'] = '\\u0044\\u017E';\n\t t['\\u01C6'] = '\\u0064\\u017E';\n\t t['\\u01C7'] = '\\u004C\\u004A';\n\t t['\\u01C8'] = '\\u004C\\u006A';\n\t t['\\u01C9'] = '\\u006C\\u006A';\n\t t['\\u01CA'] = '\\u004E\\u004A';\n\t t['\\u01CB'] = '\\u004E\\u006A';\n\t t['\\u01CC'] = '\\u006E\\u006A';\n\t t['\\u01F1'] = '\\u0044\\u005A';\n\t t['\\u01F2'] = '\\u0044\\u007A';\n\t t['\\u01F3'] = '\\u0064\\u007A';\n\t t['\\u02D8'] = '\\u0020\\u0306';\n\t t['\\u02D9'] = '\\u0020\\u0307';\n\t t['\\u02DA'] = '\\u0020\\u030A';\n\t t['\\u02DB'] = '\\u0020\\u0328';\n\t t['\\u02DC'] = '\\u0020\\u0303';\n\t t['\\u02DD'] = '\\u0020\\u030B';\n\t t['\\u037A'] = '\\u0020\\u0345';\n\t t['\\u0384'] = '\\u0020\\u0301';\n\t t['\\u03D0'] = '\\u03B2';\n\t t['\\u03D1'] = '\\u03B8';\n\t t['\\u03D2'] = '\\u03A5';\n\t t['\\u03D5'] = '\\u03C6';\n\t t['\\u03D6'] = '\\u03C0';\n\t t['\\u03F0'] = '\\u03BA';\n\t t['\\u03F1'] = '\\u03C1';\n\t t['\\u03F2'] = '\\u03C2';\n\t t['\\u03F4'] = '\\u0398';\n\t t['\\u03F5'] = '\\u03B5';\n\t t['\\u03F9'] = '\\u03A3';\n\t t['\\u0587'] = '\\u0565\\u0582';\n\t t['\\u0675'] = '\\u0627\\u0674';\n\t t['\\u0676'] = '\\u0648\\u0674';\n\t t['\\u0677'] = '\\u06C7\\u0674';\n\t t['\\u0678'] = '\\u064A\\u0674';\n\t t['\\u0E33'] = '\\u0E4D\\u0E32';\n\t t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n\t t['\\u0EDC'] = '\\u0EAB\\u0E99';\n\t t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n\t t['\\u0F77'] = '\\u0FB2\\u0F81';\n\t t['\\u0F79'] = '\\u0FB3\\u0F81';\n\t t['\\u1E9A'] = '\\u0061\\u02BE';\n\t t['\\u1FBD'] = '\\u0020\\u0313';\n\t t['\\u1FBF'] = '\\u0020\\u0313';\n\t t['\\u1FC0'] = '\\u0020\\u0342';\n\t t['\\u1FFE'] = '\\u0020\\u0314';\n\t t['\\u2002'] = '\\u0020';\n\t t['\\u2003'] = '\\u0020';\n\t t['\\u2004'] = '\\u0020';\n\t t['\\u2005'] = '\\u0020';\n\t t['\\u2006'] = '\\u0020';\n\t t['\\u2008'] = '\\u0020';\n\t t['\\u2009'] = '\\u0020';\n\t t['\\u200A'] = '\\u0020';\n\t t['\\u2017'] = '\\u0020\\u0333';\n\t t['\\u2024'] = '\\u002E';\n\t t['\\u2025'] = '\\u002E\\u002E';\n\t t['\\u2026'] = '\\u002E\\u002E\\u002E';\n\t t['\\u2033'] = '\\u2032\\u2032';\n\t t['\\u2034'] = '\\u2032\\u2032\\u2032';\n\t t['\\u2036'] = '\\u2035\\u2035';\n\t t['\\u2037'] = '\\u2035\\u2035\\u2035';\n\t t['\\u203C'] = '\\u0021\\u0021';\n\t t['\\u203E'] = '\\u0020\\u0305';\n\t t['\\u2047'] = '\\u003F\\u003F';\n\t t['\\u2048'] = '\\u003F\\u0021';\n\t t['\\u2049'] = '\\u0021\\u003F';\n\t t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n\t t['\\u205F'] = '\\u0020';\n\t t['\\u20A8'] = '\\u0052\\u0073';\n\t t['\\u2100'] = '\\u0061\\u002F\\u0063';\n\t t['\\u2101'] = '\\u0061\\u002F\\u0073';\n\t t['\\u2103'] = '\\u00B0\\u0043';\n\t t['\\u2105'] = '\\u0063\\u002F\\u006F';\n\t t['\\u2106'] = '\\u0063\\u002F\\u0075';\n\t t['\\u2107'] = '\\u0190';\n\t t['\\u2109'] = '\\u00B0\\u0046';\n\t t['\\u2116'] = '\\u004E\\u006F';\n\t t['\\u2121'] = '\\u0054\\u0045\\u004C';\n\t t['\\u2135'] = '\\u05D0';\n\t t['\\u2136'] = '\\u05D1';\n\t t['\\u2137'] = '\\u05D2';\n\t t['\\u2138'] = '\\u05D3';\n\t t['\\u213B'] = '\\u0046\\u0041\\u0058';\n\t t['\\u2160'] = '\\u0049';\n\t t['\\u2161'] = '\\u0049\\u0049';\n\t t['\\u2162'] = '\\u0049\\u0049\\u0049';\n\t t['\\u2163'] = '\\u0049\\u0056';\n\t t['\\u2164'] = '\\u0056';\n\t t['\\u2165'] = '\\u0056\\u0049';\n\t t['\\u2166'] = '\\u0056\\u0049\\u0049';\n\t t['\\u2167'] = '\\u0056\\u0049\\u0049\\u0049';\n\t t['\\u2168'] = '\\u0049\\u0058';\n\t t['\\u2169'] = '\\u0058';\n\t t['\\u216A'] = '\\u0058\\u0049';\n\t t['\\u216B'] = '\\u0058\\u0049\\u0049';\n\t t['\\u216C'] = '\\u004C';\n\t t['\\u216D'] = '\\u0043';\n\t t['\\u216E'] = '\\u0044';\n\t t['\\u216F'] = '\\u004D';\n\t t['\\u2170'] = '\\u0069';\n\t t['\\u2171'] = '\\u0069\\u0069';\n\t t['\\u2172'] = '\\u0069\\u0069\\u0069';\n\t t['\\u2173'] = '\\u0069\\u0076';\n\t t['\\u2174'] = '\\u0076';\n\t t['\\u2175'] = '\\u0076\\u0069';\n\t t['\\u2176'] = '\\u0076\\u0069\\u0069';\n\t t['\\u2177'] = '\\u0076\\u0069\\u0069\\u0069';\n\t t['\\u2178'] = '\\u0069\\u0078';\n\t t['\\u2179'] = '\\u0078';\n\t t['\\u217A'] = '\\u0078\\u0069';\n\t t['\\u217B'] = '\\u0078\\u0069\\u0069';\n\t t['\\u217C'] = '\\u006C';\n\t t['\\u217D'] = '\\u0063';\n\t t['\\u217E'] = '\\u0064';\n\t t['\\u217F'] = '\\u006D';\n\t t['\\u222C'] = '\\u222B\\u222B';\n\t t['\\u222D'] = '\\u222B\\u222B\\u222B';\n\t t['\\u222F'] = '\\u222E\\u222E';\n\t t['\\u2230'] = '\\u222E\\u222E\\u222E';\n\t t['\\u2474'] = '\\u0028\\u0031\\u0029';\n\t t['\\u2475'] = '\\u0028\\u0032\\u0029';\n\t t['\\u2476'] = '\\u0028\\u0033\\u0029';\n\t t['\\u2477'] = '\\u0028\\u0034\\u0029';\n\t t['\\u2478'] = '\\u0028\\u0035\\u0029';\n\t t['\\u2479'] = '\\u0028\\u0036\\u0029';\n\t t['\\u247A'] = '\\u0028\\u0037\\u0029';\n\t t['\\u247B'] = '\\u0028\\u0038\\u0029';\n\t t['\\u247C'] = '\\u0028\\u0039\\u0029';\n\t t['\\u247D'] = '\\u0028\\u0031\\u0030\\u0029';\n\t t['\\u247E'] = '\\u0028\\u0031\\u0031\\u0029';\n\t t['\\u247F'] = '\\u0028\\u0031\\u0032\\u0029';\n\t t['\\u2480'] = '\\u0028\\u0031\\u0033\\u0029';\n\t t['\\u2481'] = '\\u0028\\u0031\\u0034\\u0029';\n\t t['\\u2482'] = '\\u0028\\u0031\\u0035\\u0029';\n\t t['\\u2483'] = '\\u0028\\u0031\\u0036\\u0029';\n\t t['\\u2484'] = '\\u0028\\u0031\\u0037\\u0029';\n\t t['\\u2485'] = '\\u0028\\u0031\\u0038\\u0029';\n\t t['\\u2486'] = '\\u0028\\u0031\\u0039\\u0029';\n\t t['\\u2487'] = '\\u0028\\u0032\\u0030\\u0029';\n\t t['\\u2488'] = '\\u0031\\u002E';\n\t t['\\u2489'] = '\\u0032\\u002E';\n\t t['\\u248A'] = '\\u0033\\u002E';\n\t t['\\u248B'] = '\\u0034\\u002E';\n\t t['\\u248C'] = '\\u0035\\u002E';\n\t t['\\u248D'] = '\\u0036\\u002E';\n\t t['\\u248E'] = '\\u0037\\u002E';\n\t t['\\u248F'] = '\\u0038\\u002E';\n\t t['\\u2490'] = '\\u0039\\u002E';\n\t t['\\u2491'] = '\\u0031\\u0030\\u002E';\n\t t['\\u2492'] = '\\u0031\\u0031\\u002E';\n\t t['\\u2493'] = '\\u0031\\u0032\\u002E';\n\t t['\\u2494'] = '\\u0031\\u0033\\u002E';\n\t t['\\u2495'] = '\\u0031\\u0034\\u002E';\n\t t['\\u2496'] = '\\u0031\\u0035\\u002E';\n\t t['\\u2497'] = '\\u0031\\u0036\\u002E';\n\t t['\\u2498'] = '\\u0031\\u0037\\u002E';\n\t t['\\u2499'] = '\\u0031\\u0038\\u002E';\n\t t['\\u249A'] = '\\u0031\\u0039\\u002E';\n\t t['\\u249B'] = '\\u0032\\u0030\\u002E';\n\t t['\\u249C'] = '\\u0028\\u0061\\u0029';\n\t t['\\u249D'] = '\\u0028\\u0062\\u0029';\n\t t['\\u249E'] = '\\u0028\\u0063\\u0029';\n\t t['\\u249F'] = '\\u0028\\u0064\\u0029';\n\t t['\\u24A0'] = '\\u0028\\u0065\\u0029';\n\t t['\\u24A1'] = '\\u0028\\u0066\\u0029';\n\t t['\\u24A2'] = '\\u0028\\u0067\\u0029';\n\t t['\\u24A3'] = '\\u0028\\u0068\\u0029';\n\t t['\\u24A4'] = '\\u0028\\u0069\\u0029';\n\t t['\\u24A5'] = '\\u0028\\u006A\\u0029';\n\t t['\\u24A6'] = '\\u0028\\u006B\\u0029';\n\t t['\\u24A7'] = '\\u0028\\u006C\\u0029';\n\t t['\\u24A8'] = '\\u0028\\u006D\\u0029';\n\t t['\\u24A9'] = '\\u0028\\u006E\\u0029';\n\t t['\\u24AA'] = '\\u0028\\u006F\\u0029';\n\t t['\\u24AB'] = '\\u0028\\u0070\\u0029';\n\t t['\\u24AC'] = '\\u0028\\u0071\\u0029';\n\t t['\\u24AD'] = '\\u0028\\u0072\\u0029';\n\t t['\\u24AE'] = '\\u0028\\u0073\\u0029';\n\t t['\\u24AF'] = '\\u0028\\u0074\\u0029';\n\t t['\\u24B0'] = '\\u0028\\u0075\\u0029';\n\t t['\\u24B1'] = '\\u0028\\u0076\\u0029';\n\t t['\\u24B2'] = '\\u0028\\u0077\\u0029';\n\t t['\\u24B3'] = '\\u0028\\u0078\\u0029';\n\t t['\\u24B4'] = '\\u0028\\u0079\\u0029';\n\t t['\\u24B5'] = '\\u0028\\u007A\\u0029';\n\t t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n\t t['\\u2A74'] = '\\u003A\\u003A\\u003D';\n\t t['\\u2A75'] = '\\u003D\\u003D';\n\t t['\\u2A76'] = '\\u003D\\u003D\\u003D';\n\t t['\\u2E9F'] = '\\u6BCD';\n\t t['\\u2EF3'] = '\\u9F9F';\n\t t['\\u2F00'] = '\\u4E00';\n\t t['\\u2F01'] = '\\u4E28';\n\t t['\\u2F02'] = '\\u4E36';\n\t t['\\u2F03'] = '\\u4E3F';\n\t t['\\u2F04'] = '\\u4E59';\n\t t['\\u2F05'] = '\\u4E85';\n\t t['\\u2F06'] = '\\u4E8C';\n\t t['\\u2F07'] = '\\u4EA0';\n\t t['\\u2F08'] = '\\u4EBA';\n\t t['\\u2F09'] = '\\u513F';\n\t t['\\u2F0A'] = '\\u5165';\n\t t['\\u2F0B'] = '\\u516B';\n\t t['\\u2F0C'] = '\\u5182';\n\t t['\\u2F0D'] = '\\u5196';\n\t t['\\u2F0E'] = '\\u51AB';\n\t t['\\u2F0F'] = '\\u51E0';\n\t t['\\u2F10'] = '\\u51F5';\n\t t['\\u2F11'] = '\\u5200';\n\t t['\\u2F12'] = '\\u529B';\n\t t['\\u2F13'] = '\\u52F9';\n\t t['\\u2F14'] = '\\u5315';\n\t t['\\u2F15'] = '\\u531A';\n\t t['\\u2F16'] = '\\u5338';\n\t t['\\u2F17'] = '\\u5341';\n\t t['\\u2F18'] = '\\u535C';\n\t t['\\u2F19'] = '\\u5369';\n\t t['\\u2F1A'] = '\\u5382';\n\t t['\\u2F1B'] = '\\u53B6';\n\t t['\\u2F1C'] = '\\u53C8';\n\t t['\\u2F1D'] = '\\u53E3';\n\t t['\\u2F1E'] = '\\u56D7';\n\t t['\\u2F1F'] = '\\u571F';\n\t t['\\u2F20'] = '\\u58EB';\n\t t['\\u2F21'] = '\\u5902';\n\t t['\\u2F22'] = '\\u590A';\n\t t['\\u2F23'] = '\\u5915';\n\t t['\\u2F24'] = '\\u5927';\n\t t['\\u2F25'] = '\\u5973';\n\t t['\\u2F26'] = '\\u5B50';\n\t t['\\u2F27'] = '\\u5B80';\n\t t['\\u2F28'] = '\\u5BF8';\n\t t['\\u2F29'] = '\\u5C0F';\n\t t['\\u2F2A'] = '\\u5C22';\n\t t['\\u2F2B'] = '\\u5C38';\n\t t['\\u2F2C'] = '\\u5C6E';\n\t t['\\u2F2D'] = '\\u5C71';\n\t t['\\u2F2E'] = '\\u5DDB';\n\t t['\\u2F2F'] = '\\u5DE5';\n\t t['\\u2F30'] = '\\u5DF1';\n\t t['\\u2F31'] = '\\u5DFE';\n\t t['\\u2F32'] = '\\u5E72';\n\t t['\\u2F33'] = '\\u5E7A';\n\t t['\\u2F34'] = '\\u5E7F';\n\t t['\\u2F35'] = '\\u5EF4';\n\t t['\\u2F36'] = '\\u5EFE';\n\t t['\\u2F37'] = '\\u5F0B';\n\t t['\\u2F38'] = '\\u5F13';\n\t t['\\u2F39'] = '\\u5F50';\n\t t['\\u2F3A'] = '\\u5F61';\n\t t['\\u2F3B'] = '\\u5F73';\n\t t['\\u2F3C'] = '\\u5FC3';\n\t t['\\u2F3D'] = '\\u6208';\n\t t['\\u2F3E'] = '\\u6236';\n\t t['\\u2F3F'] = '\\u624B';\n\t t['\\u2F40'] = '\\u652F';\n\t t['\\u2F41'] = '\\u6534';\n\t t['\\u2F42'] = '\\u6587';\n\t t['\\u2F43'] = '\\u6597';\n\t t['\\u2F44'] = '\\u65A4';\n\t t['\\u2F45'] = '\\u65B9';\n\t t['\\u2F46'] = '\\u65E0';\n\t t['\\u2F47'] = '\\u65E5';\n\t t['\\u2F48'] = '\\u66F0';\n\t t['\\u2F49'] = '\\u6708';\n\t t['\\u2F4A'] = '\\u6728';\n\t t['\\u2F4B'] = '\\u6B20';\n\t t['\\u2F4C'] = '\\u6B62';\n\t t['\\u2F4D'] = '\\u6B79';\n\t t['\\u2F4E'] = '\\u6BB3';\n\t t['\\u2F4F'] = '\\u6BCB';\n\t t['\\u2F50'] = '\\u6BD4';\n\t t['\\u2F51'] = '\\u6BDB';\n\t t['\\u2F52'] = '\\u6C0F';\n\t t['\\u2F53'] = '\\u6C14';\n\t t['\\u2F54'] = '\\u6C34';\n\t t['\\u2F55'] = '\\u706B';\n\t t['\\u2F56'] = '\\u722A';\n\t t['\\u2F57'] = '\\u7236';\n\t t['\\u2F58'] = '\\u723B';\n\t t['\\u2F59'] = '\\u723F';\n\t t['\\u2F5A'] = '\\u7247';\n\t t['\\u2F5B'] = '\\u7259';\n\t t['\\u2F5C'] = '\\u725B';\n\t t['\\u2F5D'] = '\\u72AC';\n\t t['\\u2F5E'] = '\\u7384';\n\t t['\\u2F5F'] = '\\u7389';\n\t t['\\u2F60'] = '\\u74DC';\n\t t['\\u2F61'] = '\\u74E6';\n\t t['\\u2F62'] = '\\u7518';\n\t t['\\u2F63'] = '\\u751F';\n\t t['\\u2F64'] = '\\u7528';\n\t t['\\u2F65'] = '\\u7530';\n\t t['\\u2F66'] = '\\u758B';\n\t t['\\u2F67'] = '\\u7592';\n\t t['\\u2F68'] = '\\u7676';\n\t t['\\u2F69'] = '\\u767D';\n\t t['\\u2F6A'] = '\\u76AE';\n\t t['\\u2F6B'] = '\\u76BF';\n\t t['\\u2F6C'] = '\\u76EE';\n\t t['\\u2F6D'] = '\\u77DB';\n\t t['\\u2F6E'] = '\\u77E2';\n\t t['\\u2F6F'] = '\\u77F3';\n\t t['\\u2F70'] = '\\u793A';\n\t t['\\u2F71'] = '\\u79B8';\n\t t['\\u2F72'] = '\\u79BE';\n\t t['\\u2F73'] = '\\u7A74';\n\t t['\\u2F74'] = '\\u7ACB';\n\t t['\\u2F75'] = '\\u7AF9';\n\t t['\\u2F76'] = '\\u7C73';\n\t t['\\u2F77'] = '\\u7CF8';\n\t t['\\u2F78'] = '\\u7F36';\n\t t['\\u2F79'] = '\\u7F51';\n\t t['\\u2F7A'] = '\\u7F8A';\n\t t['\\u2F7B'] = '\\u7FBD';\n\t t['\\u2F7C'] = '\\u8001';\n\t t['\\u2F7D'] = '\\u800C';\n\t t['\\u2F7E'] = '\\u8012';\n\t t['\\u2F7F'] = '\\u8033';\n\t t['\\u2F80'] = '\\u807F';\n\t t['\\u2F81'] = '\\u8089';\n\t t['\\u2F82'] = '\\u81E3';\n\t t['\\u2F83'] = '\\u81EA';\n\t t['\\u2F84'] = '\\u81F3';\n\t t['\\u2F85'] = '\\u81FC';\n\t t['\\u2F86'] = '\\u820C';\n\t t['\\u2F87'] = '\\u821B';\n\t t['\\u2F88'] = '\\u821F';\n\t t['\\u2F89'] = '\\u826E';\n\t t['\\u2F8A'] = '\\u8272';\n\t t['\\u2F8B'] = '\\u8278';\n\t t['\\u2F8C'] = '\\u864D';\n\t t['\\u2F8D'] = '\\u866B';\n\t t['\\u2F8E'] = '\\u8840';\n\t t['\\u2F8F'] = '\\u884C';\n\t t['\\u2F90'] = '\\u8863';\n\t t['\\u2F91'] = '\\u897E';\n\t t['\\u2F92'] = '\\u898B';\n\t t['\\u2F93'] = '\\u89D2';\n\t t['\\u2F94'] = '\\u8A00';\n\t t['\\u2F95'] = '\\u8C37';\n\t t['\\u2F96'] = '\\u8C46';\n\t t['\\u2F97'] = '\\u8C55';\n\t t['\\u2F98'] = '\\u8C78';\n\t t['\\u2F99'] = '\\u8C9D';\n\t t['\\u2F9A'] = '\\u8D64';\n\t t['\\u2F9B'] = '\\u8D70';\n\t t['\\u2F9C'] = '\\u8DB3';\n\t t['\\u2F9D'] = '\\u8EAB';\n\t t['\\u2F9E'] = '\\u8ECA';\n\t t['\\u2F9F'] = '\\u8F9B';\n\t t['\\u2FA0'] = '\\u8FB0';\n\t t['\\u2FA1'] = '\\u8FB5';\n\t t['\\u2FA2'] = '\\u9091';\n\t t['\\u2FA3'] = '\\u9149';\n\t t['\\u2FA4'] = '\\u91C6';\n\t t['\\u2FA5'] = '\\u91CC';\n\t t['\\u2FA6'] = '\\u91D1';\n\t t['\\u2FA7'] = '\\u9577';\n\t t['\\u2FA8'] = '\\u9580';\n\t t['\\u2FA9'] = '\\u961C';\n\t t['\\u2FAA'] = '\\u96B6';\n\t t['\\u2FAB'] = '\\u96B9';\n\t t['\\u2FAC'] = '\\u96E8';\n\t t['\\u2FAD'] = '\\u9751';\n\t t['\\u2FAE'] = '\\u975E';\n\t t['\\u2FAF'] = '\\u9762';\n\t t['\\u2FB0'] = '\\u9769';\n\t t['\\u2FB1'] = '\\u97CB';\n\t t['\\u2FB2'] = '\\u97ED';\n\t t['\\u2FB3'] = '\\u97F3';\n\t t['\\u2FB4'] = '\\u9801';\n\t t['\\u2FB5'] = '\\u98A8';\n\t t['\\u2FB6'] = '\\u98DB';\n\t t['\\u2FB7'] = '\\u98DF';\n\t t['\\u2FB8'] = '\\u9996';\n\t t['\\u2FB9'] = '\\u9999';\n\t t['\\u2FBA'] = '\\u99AC';\n\t t['\\u2FBB'] = '\\u9AA8';\n\t t['\\u2FBC'] = '\\u9AD8';\n\t t['\\u2FBD'] = '\\u9ADF';\n\t t['\\u2FBE'] = '\\u9B25';\n\t t['\\u2FBF'] = '\\u9B2F';\n\t t['\\u2FC0'] = '\\u9B32';\n\t t['\\u2FC1'] = '\\u9B3C';\n\t t['\\u2FC2'] = '\\u9B5A';\n\t t['\\u2FC3'] = '\\u9CE5';\n\t t['\\u2FC4'] = '\\u9E75';\n\t t['\\u2FC5'] = '\\u9E7F';\n\t t['\\u2FC6'] = '\\u9EA5';\n\t t['\\u2FC7'] = '\\u9EBB';\n\t t['\\u2FC8'] = '\\u9EC3';\n\t t['\\u2FC9'] = '\\u9ECD';\n\t t['\\u2FCA'] = '\\u9ED1';\n\t t['\\u2FCB'] = '\\u9EF9';\n\t t['\\u2FCC'] = '\\u9EFD';\n\t t['\\u2FCD'] = '\\u9F0E';\n\t t['\\u2FCE'] = '\\u9F13';\n\t t['\\u2FCF'] = '\\u9F20';\n\t t['\\u2FD0'] = '\\u9F3B';\n\t t['\\u2FD1'] = '\\u9F4A';\n\t t['\\u2FD2'] = '\\u9F52';\n\t t['\\u2FD3'] = '\\u9F8D';\n\t t['\\u2FD4'] = '\\u9F9C';\n\t t['\\u2FD5'] = '\\u9FA0';\n\t t['\\u3036'] = '\\u3012';\n\t t['\\u3038'] = '\\u5341';\n\t t['\\u3039'] = '\\u5344';\n\t t['\\u303A'] = '\\u5345';\n\t t['\\u309B'] = '\\u0020\\u3099';\n\t t['\\u309C'] = '\\u0020\\u309A';\n\t t['\\u3131'] = '\\u1100';\n\t t['\\u3132'] = '\\u1101';\n\t t['\\u3133'] = '\\u11AA';\n\t t['\\u3134'] = '\\u1102';\n\t t['\\u3135'] = '\\u11AC';\n\t t['\\u3136'] = '\\u11AD';\n\t t['\\u3137'] = '\\u1103';\n\t t['\\u3138'] = '\\u1104';\n\t t['\\u3139'] = '\\u1105';\n\t t['\\u313A'] = '\\u11B0';\n\t t['\\u313B'] = '\\u11B1';\n\t t['\\u313C'] = '\\u11B2';\n\t t['\\u313D'] = '\\u11B3';\n\t t['\\u313E'] = '\\u11B4';\n\t t['\\u313F'] = '\\u11B5';\n\t t['\\u3140'] = '\\u111A';\n\t t['\\u3141'] = '\\u1106';\n\t t['\\u3142'] = '\\u1107';\n\t t['\\u3143'] = '\\u1108';\n\t t['\\u3144'] = '\\u1121';\n\t t['\\u3145'] = '\\u1109';\n\t t['\\u3146'] = '\\u110A';\n\t t['\\u3147'] = '\\u110B';\n\t t['\\u3148'] = '\\u110C';\n\t t['\\u3149'] = '\\u110D';\n\t t['\\u314A'] = '\\u110E';\n\t t['\\u314B'] = '\\u110F';\n\t t['\\u314C'] = '\\u1110';\n\t t['\\u314D'] = '\\u1111';\n\t t['\\u314E'] = '\\u1112';\n\t t['\\u314F'] = '\\u1161';\n\t t['\\u3150'] = '\\u1162';\n\t t['\\u3151'] = '\\u1163';\n\t t['\\u3152'] = '\\u1164';\n\t t['\\u3153'] = '\\u1165';\n\t t['\\u3154'] = '\\u1166';\n\t t['\\u3155'] = '\\u1167';\n\t t['\\u3156'] = '\\u1168';\n\t t['\\u3157'] = '\\u1169';\n\t t['\\u3158'] = '\\u116A';\n\t t['\\u3159'] = '\\u116B';\n\t t['\\u315A'] = '\\u116C';\n\t t['\\u315B'] = '\\u116D';\n\t t['\\u315C'] = '\\u116E';\n\t t['\\u315D'] = '\\u116F';\n\t t['\\u315E'] = '\\u1170';\n\t t['\\u315F'] = '\\u1171';\n\t t['\\u3160'] = '\\u1172';\n\t t['\\u3161'] = '\\u1173';\n\t t['\\u3162'] = '\\u1174';\n\t t['\\u3163'] = '\\u1175';\n\t t['\\u3164'] = '\\u1160';\n\t t['\\u3165'] = '\\u1114';\n\t t['\\u3166'] = '\\u1115';\n\t t['\\u3167'] = '\\u11C7';\n\t t['\\u3168'] = '\\u11C8';\n\t t['\\u3169'] = '\\u11CC';\n\t t['\\u316A'] = '\\u11CE';\n\t t['\\u316B'] = '\\u11D3';\n\t t['\\u316C'] = '\\u11D7';\n\t t['\\u316D'] = '\\u11D9';\n\t t['\\u316E'] = '\\u111C';\n\t t['\\u316F'] = '\\u11DD';\n\t t['\\u3170'] = '\\u11DF';\n\t t['\\u3171'] = '\\u111D';\n\t t['\\u3172'] = '\\u111E';\n\t t['\\u3173'] = '\\u1120';\n\t t['\\u3174'] = '\\u1122';\n\t t['\\u3175'] = '\\u1123';\n\t t['\\u3176'] = '\\u1127';\n\t t['\\u3177'] = '\\u1129';\n\t t['\\u3178'] = '\\u112B';\n\t t['\\u3179'] = '\\u112C';\n\t t['\\u317A'] = '\\u112D';\n\t t['\\u317B'] = '\\u112E';\n\t t['\\u317C'] = '\\u112F';\n\t t['\\u317D'] = '\\u1132';\n\t t['\\u317E'] = '\\u1136';\n\t t['\\u317F'] = '\\u1140';\n\t t['\\u3180'] = '\\u1147';\n\t t['\\u3181'] = '\\u114C';\n\t t['\\u3182'] = '\\u11F1';\n\t t['\\u3183'] = '\\u11F2';\n\t t['\\u3184'] = '\\u1157';\n\t t['\\u3185'] = '\\u1158';\n\t t['\\u3186'] = '\\u1159';\n\t t['\\u3187'] = '\\u1184';\n\t t['\\u3188'] = '\\u1185';\n\t t['\\u3189'] = '\\u1188';\n\t t['\\u318A'] = '\\u1191';\n\t t['\\u318B'] = '\\u1192';\n\t t['\\u318C'] = '\\u1194';\n\t t['\\u318D'] = '\\u119E';\n\t t['\\u318E'] = '\\u11A1';\n\t t['\\u3200'] = '\\u0028\\u1100\\u0029';\n\t t['\\u3201'] = '\\u0028\\u1102\\u0029';\n\t t['\\u3202'] = '\\u0028\\u1103\\u0029';\n\t t['\\u3203'] = '\\u0028\\u1105\\u0029';\n\t t['\\u3204'] = '\\u0028\\u1106\\u0029';\n\t t['\\u3205'] = '\\u0028\\u1107\\u0029';\n\t t['\\u3206'] = '\\u0028\\u1109\\u0029';\n\t t['\\u3207'] = '\\u0028\\u110B\\u0029';\n\t t['\\u3208'] = '\\u0028\\u110C\\u0029';\n\t t['\\u3209'] = '\\u0028\\u110E\\u0029';\n\t t['\\u320A'] = '\\u0028\\u110F\\u0029';\n\t t['\\u320B'] = '\\u0028\\u1110\\u0029';\n\t t['\\u320C'] = '\\u0028\\u1111\\u0029';\n\t t['\\u320D'] = '\\u0028\\u1112\\u0029';\n\t t['\\u320E'] = '\\u0028\\u1100\\u1161\\u0029';\n\t t['\\u320F'] = '\\u0028\\u1102\\u1161\\u0029';\n\t t['\\u3210'] = '\\u0028\\u1103\\u1161\\u0029';\n\t t['\\u3211'] = '\\u0028\\u1105\\u1161\\u0029';\n\t t['\\u3212'] = '\\u0028\\u1106\\u1161\\u0029';\n\t t['\\u3213'] = '\\u0028\\u1107\\u1161\\u0029';\n\t t['\\u3214'] = '\\u0028\\u1109\\u1161\\u0029';\n\t t['\\u3215'] = '\\u0028\\u110B\\u1161\\u0029';\n\t t['\\u3216'] = '\\u0028\\u110C\\u1161\\u0029';\n\t t['\\u3217'] = '\\u0028\\u110E\\u1161\\u0029';\n\t t['\\u3218'] = '\\u0028\\u110F\\u1161\\u0029';\n\t t['\\u3219'] = '\\u0028\\u1110\\u1161\\u0029';\n\t t['\\u321A'] = '\\u0028\\u1111\\u1161\\u0029';\n\t t['\\u321B'] = '\\u0028\\u1112\\u1161\\u0029';\n\t t['\\u321C'] = '\\u0028\\u110C\\u116E\\u0029';\n\t t['\\u321D'] = '\\u0028\\u110B\\u1169\\u110C\\u1165\\u11AB\\u0029';\n\t t['\\u321E'] = '\\u0028\\u110B\\u1169\\u1112\\u116E\\u0029';\n\t t['\\u3220'] = '\\u0028\\u4E00\\u0029';\n\t t['\\u3221'] = '\\u0028\\u4E8C\\u0029';\n\t t['\\u3222'] = '\\u0028\\u4E09\\u0029';\n\t t['\\u3223'] = '\\u0028\\u56DB\\u0029';\n\t t['\\u3224'] = '\\u0028\\u4E94\\u0029';\n\t t['\\u3225'] = '\\u0028\\u516D\\u0029';\n\t t['\\u3226'] = '\\u0028\\u4E03\\u0029';\n\t t['\\u3227'] = '\\u0028\\u516B\\u0029';\n\t t['\\u3228'] = '\\u0028\\u4E5D\\u0029';\n\t t['\\u3229'] = '\\u0028\\u5341\\u0029';\n\t t['\\u322A'] = '\\u0028\\u6708\\u0029';\n\t t['\\u322B'] = '\\u0028\\u706B\\u0029';\n\t t['\\u322C'] = '\\u0028\\u6C34\\u0029';\n\t t['\\u322D'] = '\\u0028\\u6728\\u0029';\n\t t['\\u322E'] = '\\u0028\\u91D1\\u0029';\n\t t['\\u322F'] = '\\u0028\\u571F\\u0029';\n\t t['\\u3230'] = '\\u0028\\u65E5\\u0029';\n\t t['\\u3231'] = '\\u0028\\u682A\\u0029';\n\t t['\\u3232'] = '\\u0028\\u6709\\u0029';\n\t t['\\u3233'] = '\\u0028\\u793E\\u0029';\n\t t['\\u3234'] = '\\u0028\\u540D\\u0029';\n\t t['\\u3235'] = '\\u0028\\u7279\\u0029';\n\t t['\\u3236'] = '\\u0028\\u8CA1\\u0029';\n\t t['\\u3237'] = '\\u0028\\u795D\\u0029';\n\t t['\\u3238'] = '\\u0028\\u52B4\\u0029';\n\t t['\\u3239'] = '\\u0028\\u4EE3\\u0029';\n\t t['\\u323A'] = '\\u0028\\u547C\\u0029';\n\t t['\\u323B'] = '\\u0028\\u5B66\\u0029';\n\t t['\\u323C'] = '\\u0028\\u76E3\\u0029';\n\t t['\\u323D'] = '\\u0028\\u4F01\\u0029';\n\t t['\\u323E'] = '\\u0028\\u8CC7\\u0029';\n\t t['\\u323F'] = '\\u0028\\u5354\\u0029';\n\t t['\\u3240'] = '\\u0028\\u796D\\u0029';\n\t t['\\u3241'] = '\\u0028\\u4F11\\u0029';\n\t t['\\u3242'] = '\\u0028\\u81EA\\u0029';\n\t t['\\u3243'] = '\\u0028\\u81F3\\u0029';\n\t t['\\u32C0'] = '\\u0031\\u6708';\n\t t['\\u32C1'] = '\\u0032\\u6708';\n\t t['\\u32C2'] = '\\u0033\\u6708';\n\t t['\\u32C3'] = '\\u0034\\u6708';\n\t t['\\u32C4'] = '\\u0035\\u6708';\n\t t['\\u32C5'] = '\\u0036\\u6708';\n\t t['\\u32C6'] = '\\u0037\\u6708';\n\t t['\\u32C7'] = '\\u0038\\u6708';\n\t t['\\u32C8'] = '\\u0039\\u6708';\n\t t['\\u32C9'] = '\\u0031\\u0030\\u6708';\n\t t['\\u32CA'] = '\\u0031\\u0031\\u6708';\n\t t['\\u32CB'] = '\\u0031\\u0032\\u6708';\n\t t['\\u3358'] = '\\u0030\\u70B9';\n\t t['\\u3359'] = '\\u0031\\u70B9';\n\t t['\\u335A'] = '\\u0032\\u70B9';\n\t t['\\u335B'] = '\\u0033\\u70B9';\n\t t['\\u335C'] = '\\u0034\\u70B9';\n\t t['\\u335D'] = '\\u0035\\u70B9';\n\t t['\\u335E'] = '\\u0036\\u70B9';\n\t t['\\u335F'] = '\\u0037\\u70B9';\n\t t['\\u3360'] = '\\u0038\\u70B9';\n\t t['\\u3361'] = '\\u0039\\u70B9';\n\t t['\\u3362'] = '\\u0031\\u0030\\u70B9';\n\t t['\\u3363'] = '\\u0031\\u0031\\u70B9';\n\t t['\\u3364'] = '\\u0031\\u0032\\u70B9';\n\t t['\\u3365'] = '\\u0031\\u0033\\u70B9';\n\t t['\\u3366'] = '\\u0031\\u0034\\u70B9';\n\t t['\\u3367'] = '\\u0031\\u0035\\u70B9';\n\t t['\\u3368'] = '\\u0031\\u0036\\u70B9';\n\t t['\\u3369'] = '\\u0031\\u0037\\u70B9';\n\t t['\\u336A'] = '\\u0031\\u0038\\u70B9';\n\t t['\\u336B'] = '\\u0031\\u0039\\u70B9';\n\t t['\\u336C'] = '\\u0032\\u0030\\u70B9';\n\t t['\\u336D'] = '\\u0032\\u0031\\u70B9';\n\t t['\\u336E'] = '\\u0032\\u0032\\u70B9';\n\t t['\\u336F'] = '\\u0032\\u0033\\u70B9';\n\t t['\\u3370'] = '\\u0032\\u0034\\u70B9';\n\t t['\\u33E0'] = '\\u0031\\u65E5';\n\t t['\\u33E1'] = '\\u0032\\u65E5';\n\t t['\\u33E2'] = '\\u0033\\u65E5';\n\t t['\\u33E3'] = '\\u0034\\u65E5';\n\t t['\\u33E4'] = '\\u0035\\u65E5';\n\t t['\\u33E5'] = '\\u0036\\u65E5';\n\t t['\\u33E6'] = '\\u0037\\u65E5';\n\t t['\\u33E7'] = '\\u0038\\u65E5';\n\t t['\\u33E8'] = '\\u0039\\u65E5';\n\t t['\\u33E9'] = '\\u0031\\u0030\\u65E5';\n\t t['\\u33EA'] = '\\u0031\\u0031\\u65E5';\n\t t['\\u33EB'] = '\\u0031\\u0032\\u65E5';\n\t t['\\u33EC'] = '\\u0031\\u0033\\u65E5';\n\t t['\\u33ED'] = '\\u0031\\u0034\\u65E5';\n\t t['\\u33EE'] = '\\u0031\\u0035\\u65E5';\n\t t['\\u33EF'] = '\\u0031\\u0036\\u65E5';\n\t t['\\u33F0'] = '\\u0031\\u0037\\u65E5';\n\t t['\\u33F1'] = '\\u0031\\u0038\\u65E5';\n\t t['\\u33F2'] = '\\u0031\\u0039\\u65E5';\n\t t['\\u33F3'] = '\\u0032\\u0030\\u65E5';\n\t t['\\u33F4'] = '\\u0032\\u0031\\u65E5';\n\t t['\\u33F5'] = '\\u0032\\u0032\\u65E5';\n\t t['\\u33F6'] = '\\u0032\\u0033\\u65E5';\n\t t['\\u33F7'] = '\\u0032\\u0034\\u65E5';\n\t t['\\u33F8'] = '\\u0032\\u0035\\u65E5';\n\t t['\\u33F9'] = '\\u0032\\u0036\\u65E5';\n\t t['\\u33FA'] = '\\u0032\\u0037\\u65E5';\n\t t['\\u33FB'] = '\\u0032\\u0038\\u65E5';\n\t t['\\u33FC'] = '\\u0032\\u0039\\u65E5';\n\t t['\\u33FD'] = '\\u0033\\u0030\\u65E5';\n\t t['\\u33FE'] = '\\u0033\\u0031\\u65E5';\n\t t['\\uFB00'] = '\\u0066\\u0066';\n\t t['\\uFB01'] = '\\u0066\\u0069';\n\t t['\\uFB02'] = '\\u0066\\u006C';\n\t t['\\uFB03'] = '\\u0066\\u0066\\u0069';\n\t t['\\uFB04'] = '\\u0066\\u0066\\u006C';\n\t t['\\uFB05'] = '\\u017F\\u0074';\n\t t['\\uFB06'] = '\\u0073\\u0074';\n\t t['\\uFB13'] = '\\u0574\\u0576';\n\t t['\\uFB14'] = '\\u0574\\u0565';\n\t t['\\uFB15'] = '\\u0574\\u056B';\n\t t['\\uFB16'] = '\\u057E\\u0576';\n\t t['\\uFB17'] = '\\u0574\\u056D';\n\t t['\\uFB4F'] = '\\u05D0\\u05DC';\n\t t['\\uFB50'] = '\\u0671';\n\t t['\\uFB51'] = '\\u0671';\n\t t['\\uFB52'] = '\\u067B';\n\t t['\\uFB53'] = '\\u067B';\n\t t['\\uFB54'] = '\\u067B';\n\t t['\\uFB55'] = '\\u067B';\n\t t['\\uFB56'] = '\\u067E';\n\t t['\\uFB57'] = '\\u067E';\n\t t['\\uFB58'] = '\\u067E';\n\t t['\\uFB59'] = '\\u067E';\n\t t['\\uFB5A'] = '\\u0680';\n\t t['\\uFB5B'] = '\\u0680';\n\t t['\\uFB5C'] = '\\u0680';\n\t t['\\uFB5D'] = '\\u0680';\n\t t['\\uFB5E'] = '\\u067A';\n\t t['\\uFB5F'] = '\\u067A';\n\t t['\\uFB60'] = '\\u067A';\n\t t['\\uFB61'] = '\\u067A';\n\t t['\\uFB62'] = '\\u067F';\n\t t['\\uFB63'] = '\\u067F';\n\t t['\\uFB64'] = '\\u067F';\n\t t['\\uFB65'] = '\\u067F';\n\t t['\\uFB66'] = '\\u0679';\n\t t['\\uFB67'] = '\\u0679';\n\t t['\\uFB68'] = '\\u0679';\n\t t['\\uFB69'] = '\\u0679';\n\t t['\\uFB6A'] = '\\u06A4';\n\t t['\\uFB6B'] = '\\u06A4';\n\t t['\\uFB6C'] = '\\u06A4';\n\t t['\\uFB6D'] = '\\u06A4';\n\t t['\\uFB6E'] = '\\u06A6';\n\t t['\\uFB6F'] = '\\u06A6';\n\t t['\\uFB70'] = '\\u06A6';\n\t t['\\uFB71'] = '\\u06A6';\n\t t['\\uFB72'] = '\\u0684';\n\t t['\\uFB73'] = '\\u0684';\n\t t['\\uFB74'] = '\\u0684';\n\t t['\\uFB75'] = '\\u0684';\n\t t['\\uFB76'] = '\\u0683';\n\t t['\\uFB77'] = '\\u0683';\n\t t['\\uFB78'] = '\\u0683';\n\t t['\\uFB79'] = '\\u0683';\n\t t['\\uFB7A'] = '\\u0686';\n\t t['\\uFB7B'] = '\\u0686';\n\t t['\\uFB7C'] = '\\u0686';\n\t t['\\uFB7D'] = '\\u0686';\n\t t['\\uFB7E'] = '\\u0687';\n\t t['\\uFB7F'] = '\\u0687';\n\t t['\\uFB80'] = '\\u0687';\n\t t['\\uFB81'] = '\\u0687';\n\t t['\\uFB82'] = '\\u068D';\n\t t['\\uFB83'] = '\\u068D';\n\t t['\\uFB84'] = '\\u068C';\n\t t['\\uFB85'] = '\\u068C';\n\t t['\\uFB86'] = '\\u068E';\n\t t['\\uFB87'] = '\\u068E';\n\t t['\\uFB88'] = '\\u0688';\n\t t['\\uFB89'] = '\\u0688';\n\t t['\\uFB8A'] = '\\u0698';\n\t t['\\uFB8B'] = '\\u0698';\n\t t['\\uFB8C'] = '\\u0691';\n\t t['\\uFB8D'] = '\\u0691';\n\t t['\\uFB8E'] = '\\u06A9';\n\t t['\\uFB8F'] = '\\u06A9';\n\t t['\\uFB90'] = '\\u06A9';\n\t t['\\uFB91'] = '\\u06A9';\n\t t['\\uFB92'] = '\\u06AF';\n\t t['\\uFB93'] = '\\u06AF';\n\t t['\\uFB94'] = '\\u06AF';\n\t t['\\uFB95'] = '\\u06AF';\n\t t['\\uFB96'] = '\\u06B3';\n\t t['\\uFB97'] = '\\u06B3';\n\t t['\\uFB98'] = '\\u06B3';\n\t t['\\uFB99'] = '\\u06B3';\n\t t['\\uFB9A'] = '\\u06B1';\n\t t['\\uFB9B'] = '\\u06B1';\n\t t['\\uFB9C'] = '\\u06B1';\n\t t['\\uFB9D'] = '\\u06B1';\n\t t['\\uFB9E'] = '\\u06BA';\n\t t['\\uFB9F'] = '\\u06BA';\n\t t['\\uFBA0'] = '\\u06BB';\n\t t['\\uFBA1'] = '\\u06BB';\n\t t['\\uFBA2'] = '\\u06BB';\n\t t['\\uFBA3'] = '\\u06BB';\n\t t['\\uFBA4'] = '\\u06C0';\n\t t['\\uFBA5'] = '\\u06C0';\n\t t['\\uFBA6'] = '\\u06C1';\n\t t['\\uFBA7'] = '\\u06C1';\n\t t['\\uFBA8'] = '\\u06C1';\n\t t['\\uFBA9'] = '\\u06C1';\n\t t['\\uFBAA'] = '\\u06BE';\n\t t['\\uFBAB'] = '\\u06BE';\n\t t['\\uFBAC'] = '\\u06BE';\n\t t['\\uFBAD'] = '\\u06BE';\n\t t['\\uFBAE'] = '\\u06D2';\n\t t['\\uFBAF'] = '\\u06D2';\n\t t['\\uFBB0'] = '\\u06D3';\n\t t['\\uFBB1'] = '\\u06D3';\n\t t['\\uFBD3'] = '\\u06AD';\n\t t['\\uFBD4'] = '\\u06AD';\n\t t['\\uFBD5'] = '\\u06AD';\n\t t['\\uFBD6'] = '\\u06AD';\n\t t['\\uFBD7'] = '\\u06C7';\n\t t['\\uFBD8'] = '\\u06C7';\n\t t['\\uFBD9'] = '\\u06C6';\n\t t['\\uFBDA'] = '\\u06C6';\n\t t['\\uFBDB'] = '\\u06C8';\n\t t['\\uFBDC'] = '\\u06C8';\n\t t['\\uFBDD'] = '\\u0677';\n\t t['\\uFBDE'] = '\\u06CB';\n\t t['\\uFBDF'] = '\\u06CB';\n\t t['\\uFBE0'] = '\\u06C5';\n\t t['\\uFBE1'] = '\\u06C5';\n\t t['\\uFBE2'] = '\\u06C9';\n\t t['\\uFBE3'] = '\\u06C9';\n\t t['\\uFBE4'] = '\\u06D0';\n\t t['\\uFBE5'] = '\\u06D0';\n\t t['\\uFBE6'] = '\\u06D0';\n\t t['\\uFBE7'] = '\\u06D0';\n\t t['\\uFBE8'] = '\\u0649';\n\t t['\\uFBE9'] = '\\u0649';\n\t t['\\uFBEA'] = '\\u0626\\u0627';\n\t t['\\uFBEB'] = '\\u0626\\u0627';\n\t t['\\uFBEC'] = '\\u0626\\u06D5';\n\t t['\\uFBED'] = '\\u0626\\u06D5';\n\t t['\\uFBEE'] = '\\u0626\\u0648';\n\t t['\\uFBEF'] = '\\u0626\\u0648';\n\t t['\\uFBF0'] = '\\u0626\\u06C7';\n\t t['\\uFBF1'] = '\\u0626\\u06C7';\n\t t['\\uFBF2'] = '\\u0626\\u06C6';\n\t t['\\uFBF3'] = '\\u0626\\u06C6';\n\t t['\\uFBF4'] = '\\u0626\\u06C8';\n\t t['\\uFBF5'] = '\\u0626\\u06C8';\n\t t['\\uFBF6'] = '\\u0626\\u06D0';\n\t t['\\uFBF7'] = '\\u0626\\u06D0';\n\t t['\\uFBF8'] = '\\u0626\\u06D0';\n\t t['\\uFBF9'] = '\\u0626\\u0649';\n\t t['\\uFBFA'] = '\\u0626\\u0649';\n\t t['\\uFBFB'] = '\\u0626\\u0649';\n\t t['\\uFBFC'] = '\\u06CC';\n\t t['\\uFBFD'] = '\\u06CC';\n\t t['\\uFBFE'] = '\\u06CC';\n\t t['\\uFBFF'] = '\\u06CC';\n\t t['\\uFC00'] = '\\u0626\\u062C';\n\t t['\\uFC01'] = '\\u0626\\u062D';\n\t t['\\uFC02'] = '\\u0626\\u0645';\n\t t['\\uFC03'] = '\\u0626\\u0649';\n\t t['\\uFC04'] = '\\u0626\\u064A';\n\t t['\\uFC05'] = '\\u0628\\u062C';\n\t t['\\uFC06'] = '\\u0628\\u062D';\n\t t['\\uFC07'] = '\\u0628\\u062E';\n\t t['\\uFC08'] = '\\u0628\\u0645';\n\t t['\\uFC09'] = '\\u0628\\u0649';\n\t t['\\uFC0A'] = '\\u0628\\u064A';\n\t t['\\uFC0B'] = '\\u062A\\u062C';\n\t t['\\uFC0C'] = '\\u062A\\u062D';\n\t t['\\uFC0D'] = '\\u062A\\u062E';\n\t t['\\uFC0E'] = '\\u062A\\u0645';\n\t t['\\uFC0F'] = '\\u062A\\u0649';\n\t t['\\uFC10'] = '\\u062A\\u064A';\n\t t['\\uFC11'] = '\\u062B\\u062C';\n\t t['\\uFC12'] = '\\u062B\\u0645';\n\t t['\\uFC13'] = '\\u062B\\u0649';\n\t t['\\uFC14'] = '\\u062B\\u064A';\n\t t['\\uFC15'] = '\\u062C\\u062D';\n\t t['\\uFC16'] = '\\u062C\\u0645';\n\t t['\\uFC17'] = '\\u062D\\u062C';\n\t t['\\uFC18'] = '\\u062D\\u0645';\n\t t['\\uFC19'] = '\\u062E\\u062C';\n\t t['\\uFC1A'] = '\\u062E\\u062D';\n\t t['\\uFC1B'] = '\\u062E\\u0645';\n\t t['\\uFC1C'] = '\\u0633\\u062C';\n\t t['\\uFC1D'] = '\\u0633\\u062D';\n\t t['\\uFC1E'] = '\\u0633\\u062E';\n\t t['\\uFC1F'] = '\\u0633\\u0645';\n\t t['\\uFC20'] = '\\u0635\\u062D';\n\t t['\\uFC21'] = '\\u0635\\u0645';\n\t t['\\uFC22'] = '\\u0636\\u062C';\n\t t['\\uFC23'] = '\\u0636\\u062D';\n\t t['\\uFC24'] = '\\u0636\\u062E';\n\t t['\\uFC25'] = '\\u0636\\u0645';\n\t t['\\uFC26'] = '\\u0637\\u062D';\n\t t['\\uFC27'] = '\\u0637\\u0645';\n\t t['\\uFC28'] = '\\u0638\\u0645';\n\t t['\\uFC29'] = '\\u0639\\u062C';\n\t t['\\uFC2A'] = '\\u0639\\u0645';\n\t t['\\uFC2B'] = '\\u063A\\u062C';\n\t t['\\uFC2C'] = '\\u063A\\u0645';\n\t t['\\uFC2D'] = '\\u0641\\u062C';\n\t t['\\uFC2E'] = '\\u0641\\u062D';\n\t t['\\uFC2F'] = '\\u0641\\u062E';\n\t t['\\uFC30'] = '\\u0641\\u0645';\n\t t['\\uFC31'] = '\\u0641\\u0649';\n\t t['\\uFC32'] = '\\u0641\\u064A';\n\t t['\\uFC33'] = '\\u0642\\u062D';\n\t t['\\uFC34'] = '\\u0642\\u0645';\n\t t['\\uFC35'] = '\\u0642\\u0649';\n\t t['\\uFC36'] = '\\u0642\\u064A';\n\t t['\\uFC37'] = '\\u0643\\u0627';\n\t t['\\uFC38'] = '\\u0643\\u062C';\n\t t['\\uFC39'] = '\\u0643\\u062D';\n\t t['\\uFC3A'] = '\\u0643\\u062E';\n\t t['\\uFC3B'] = '\\u0643\\u0644';\n\t t['\\uFC3C'] = '\\u0643\\u0645';\n\t t['\\uFC3D'] = '\\u0643\\u0649';\n\t t['\\uFC3E'] = '\\u0643\\u064A';\n\t t['\\uFC3F'] = '\\u0644\\u062C';\n\t t['\\uFC40'] = '\\u0644\\u062D';\n\t t['\\uFC41'] = '\\u0644\\u062E';\n\t t['\\uFC42'] = '\\u0644\\u0645';\n\t t['\\uFC43'] = '\\u0644\\u0649';\n\t t['\\uFC44'] = '\\u0644\\u064A';\n\t t['\\uFC45'] = '\\u0645\\u062C';\n\t t['\\uFC46'] = '\\u0645\\u062D';\n\t t['\\uFC47'] = '\\u0645\\u062E';\n\t t['\\uFC48'] = '\\u0645\\u0645';\n\t t['\\uFC49'] = '\\u0645\\u0649';\n\t t['\\uFC4A'] = '\\u0645\\u064A';\n\t t['\\uFC4B'] = '\\u0646\\u062C';\n\t t['\\uFC4C'] = '\\u0646\\u062D';\n\t t['\\uFC4D'] = '\\u0646\\u062E';\n\t t['\\uFC4E'] = '\\u0646\\u0645';\n\t t['\\uFC4F'] = '\\u0646\\u0649';\n\t t['\\uFC50'] = '\\u0646\\u064A';\n\t t['\\uFC51'] = '\\u0647\\u062C';\n\t t['\\uFC52'] = '\\u0647\\u0645';\n\t t['\\uFC53'] = '\\u0647\\u0649';\n\t t['\\uFC54'] = '\\u0647\\u064A';\n\t t['\\uFC55'] = '\\u064A\\u062C';\n\t t['\\uFC56'] = '\\u064A\\u062D';\n\t t['\\uFC57'] = '\\u064A\\u062E';\n\t t['\\uFC58'] = '\\u064A\\u0645';\n\t t['\\uFC59'] = '\\u064A\\u0649';\n\t t['\\uFC5A'] = '\\u064A\\u064A';\n\t t['\\uFC5B'] = '\\u0630\\u0670';\n\t t['\\uFC5C'] = '\\u0631\\u0670';\n\t t['\\uFC5D'] = '\\u0649\\u0670';\n\t t['\\uFC5E'] = '\\u0020\\u064C\\u0651';\n\t t['\\uFC5F'] = '\\u0020\\u064D\\u0651';\n\t t['\\uFC60'] = '\\u0020\\u064E\\u0651';\n\t t['\\uFC61'] = '\\u0020\\u064F\\u0651';\n\t t['\\uFC62'] = '\\u0020\\u0650\\u0651';\n\t t['\\uFC63'] = '\\u0020\\u0651\\u0670';\n\t t['\\uFC64'] = '\\u0626\\u0631';\n\t t['\\uFC65'] = '\\u0626\\u0632';\n\t t['\\uFC66'] = '\\u0626\\u0645';\n\t t['\\uFC67'] = '\\u0626\\u0646';\n\t t['\\uFC68'] = '\\u0626\\u0649';\n\t t['\\uFC69'] = '\\u0626\\u064A';\n\t t['\\uFC6A'] = '\\u0628\\u0631';\n\t t['\\uFC6B'] = '\\u0628\\u0632';\n\t t['\\uFC6C'] = '\\u0628\\u0645';\n\t t['\\uFC6D'] = '\\u0628\\u0646';\n\t t['\\uFC6E'] = '\\u0628\\u0649';\n\t t['\\uFC6F'] = '\\u0628\\u064A';\n\t t['\\uFC70'] = '\\u062A\\u0631';\n\t t['\\uFC71'] = '\\u062A\\u0632';\n\t t['\\uFC72'] = '\\u062A\\u0645';\n\t t['\\uFC73'] = '\\u062A\\u0646';\n\t t['\\uFC74'] = '\\u062A\\u0649';\n\t t['\\uFC75'] = '\\u062A\\u064A';\n\t t['\\uFC76'] = '\\u062B\\u0631';\n\t t['\\uFC77'] = '\\u062B\\u0632';\n\t t['\\uFC78'] = '\\u062B\\u0645';\n\t t['\\uFC79'] = '\\u062B\\u0646';\n\t t['\\uFC7A'] = '\\u062B\\u0649';\n\t t['\\uFC7B'] = '\\u062B\\u064A';\n\t t['\\uFC7C'] = '\\u0641\\u0649';\n\t t['\\uFC7D'] = '\\u0641\\u064A';\n\t t['\\uFC7E'] = '\\u0642\\u0649';\n\t t['\\uFC7F'] = '\\u0642\\u064A';\n\t t['\\uFC80'] = '\\u0643\\u0627';\n\t t['\\uFC81'] = '\\u0643\\u0644';\n\t t['\\uFC82'] = '\\u0643\\u0645';\n\t t['\\uFC83'] = '\\u0643\\u0649';\n\t t['\\uFC84'] = '\\u0643\\u064A';\n\t t['\\uFC85'] = '\\u0644\\u0645';\n\t t['\\uFC86'] = '\\u0644\\u0649';\n\t t['\\uFC87'] = '\\u0644\\u064A';\n\t t['\\uFC88'] = '\\u0645\\u0627';\n\t t['\\uFC89'] = '\\u0645\\u0645';\n\t t['\\uFC8A'] = '\\u0646\\u0631';\n\t t['\\uFC8B'] = '\\u0646\\u0632';\n\t t['\\uFC8C'] = '\\u0646\\u0645';\n\t t['\\uFC8D'] = '\\u0646\\u0646';\n\t t['\\uFC8E'] = '\\u0646\\u0649';\n\t t['\\uFC8F'] = '\\u0646\\u064A';\n\t t['\\uFC90'] = '\\u0649\\u0670';\n\t t['\\uFC91'] = '\\u064A\\u0631';\n\t t['\\uFC92'] = '\\u064A\\u0632';\n\t t['\\uFC93'] = '\\u064A\\u0645';\n\t t['\\uFC94'] = '\\u064A\\u0646';\n\t t['\\uFC95'] = '\\u064A\\u0649';\n\t t['\\uFC96'] = '\\u064A\\u064A';\n\t t['\\uFC97'] = '\\u0626\\u062C';\n\t t['\\uFC98'] = '\\u0626\\u062D';\n\t t['\\uFC99'] = '\\u0626\\u062E';\n\t t['\\uFC9A'] = '\\u0626\\u0645';\n\t t['\\uFC9B'] = '\\u0626\\u0647';\n\t t['\\uFC9C'] = '\\u0628\\u062C';\n\t t['\\uFC9D'] = '\\u0628\\u062D';\n\t t['\\uFC9E'] = '\\u0628\\u062E';\n\t t['\\uFC9F'] = '\\u0628\\u0645';\n\t t['\\uFCA0'] = '\\u0628\\u0647';\n\t t['\\uFCA1'] = '\\u062A\\u062C';\n\t t['\\uFCA2'] = '\\u062A\\u062D';\n\t t['\\uFCA3'] = '\\u062A\\u062E';\n\t t['\\uFCA4'] = '\\u062A\\u0645';\n\t t['\\uFCA5'] = '\\u062A\\u0647';\n\t t['\\uFCA6'] = '\\u062B\\u0645';\n\t t['\\uFCA7'] = '\\u062C\\u062D';\n\t t['\\uFCA8'] = '\\u062C\\u0645';\n\t t['\\uFCA9'] = '\\u062D\\u062C';\n\t t['\\uFCAA'] = '\\u062D\\u0645';\n\t t['\\uFCAB'] = '\\u062E\\u062C';\n\t t['\\uFCAC'] = '\\u062E\\u0645';\n\t t['\\uFCAD'] = '\\u0633\\u062C';\n\t t['\\uFCAE'] = '\\u0633\\u062D';\n\t t['\\uFCAF'] = '\\u0633\\u062E';\n\t t['\\uFCB0'] = '\\u0633\\u0645';\n\t t['\\uFCB1'] = '\\u0635\\u062D';\n\t t['\\uFCB2'] = '\\u0635\\u062E';\n\t t['\\uFCB3'] = '\\u0635\\u0645';\n\t t['\\uFCB4'] = '\\u0636\\u062C';\n\t t['\\uFCB5'] = '\\u0636\\u062D';\n\t t['\\uFCB6'] = '\\u0636\\u062E';\n\t t['\\uFCB7'] = '\\u0636\\u0645';\n\t t['\\uFCB8'] = '\\u0637\\u062D';\n\t t['\\uFCB9'] = '\\u0638\\u0645';\n\t t['\\uFCBA'] = '\\u0639\\u062C';\n\t t['\\uFCBB'] = '\\u0639\\u0645';\n\t t['\\uFCBC'] = '\\u063A\\u062C';\n\t t['\\uFCBD'] = '\\u063A\\u0645';\n\t t['\\uFCBE'] = '\\u0641\\u062C';\n\t t['\\uFCBF'] = '\\u0641\\u062D';\n\t t['\\uFCC0'] = '\\u0641\\u062E';\n\t t['\\uFCC1'] = '\\u0641\\u0645';\n\t t['\\uFCC2'] = '\\u0642\\u062D';\n\t t['\\uFCC3'] = '\\u0642\\u0645';\n\t t['\\uFCC4'] = '\\u0643\\u062C';\n\t t['\\uFCC5'] = '\\u0643\\u062D';\n\t t['\\uFCC6'] = '\\u0643\\u062E';\n\t t['\\uFCC7'] = '\\u0643\\u0644';\n\t t['\\uFCC8'] = '\\u0643\\u0645';\n\t t['\\uFCC9'] = '\\u0644\\u062C';\n\t t['\\uFCCA'] = '\\u0644\\u062D';\n\t t['\\uFCCB'] = '\\u0644\\u062E';\n\t t['\\uFCCC'] = '\\u0644\\u0645';\n\t t['\\uFCCD'] = '\\u0644\\u0647';\n\t t['\\uFCCE'] = '\\u0645\\u062C';\n\t t['\\uFCCF'] = '\\u0645\\u062D';\n\t t['\\uFCD0'] = '\\u0645\\u062E';\n\t t['\\uFCD1'] = '\\u0645\\u0645';\n\t t['\\uFCD2'] = '\\u0646\\u062C';\n\t t['\\uFCD3'] = '\\u0646\\u062D';\n\t t['\\uFCD4'] = '\\u0646\\u062E';\n\t t['\\uFCD5'] = '\\u0646\\u0645';\n\t t['\\uFCD6'] = '\\u0646\\u0647';\n\t t['\\uFCD7'] = '\\u0647\\u062C';\n\t t['\\uFCD8'] = '\\u0647\\u0645';\n\t t['\\uFCD9'] = '\\u0647\\u0670';\n\t t['\\uFCDA'] = '\\u064A\\u062C';\n\t t['\\uFCDB'] = '\\u064A\\u062D';\n\t t['\\uFCDC'] = '\\u064A\\u062E';\n\t t['\\uFCDD'] = '\\u064A\\u0645';\n\t t['\\uFCDE'] = '\\u064A\\u0647';\n\t t['\\uFCDF'] = '\\u0626\\u0645';\n\t t['\\uFCE0'] = '\\u0626\\u0647';\n\t t['\\uFCE1'] = '\\u0628\\u0645';\n\t t['\\uFCE2'] = '\\u0628\\u0647';\n\t t['\\uFCE3'] = '\\u062A\\u0645';\n\t t['\\uFCE4'] = '\\u062A\\u0647';\n\t t['\\uFCE5'] = '\\u062B\\u0645';\n\t t['\\uFCE6'] = '\\u062B\\u0647';\n\t t['\\uFCE7'] = '\\u0633\\u0645';\n\t t['\\uFCE8'] = '\\u0633\\u0647';\n\t t['\\uFCE9'] = '\\u0634\\u0645';\n\t t['\\uFCEA'] = '\\u0634\\u0647';\n\t t['\\uFCEB'] = '\\u0643\\u0644';\n\t t['\\uFCEC'] = '\\u0643\\u0645';\n\t t['\\uFCED'] = '\\u0644\\u0645';\n\t t['\\uFCEE'] = '\\u0646\\u0645';\n\t t['\\uFCEF'] = '\\u0646\\u0647';\n\t t['\\uFCF0'] = '\\u064A\\u0645';\n\t t['\\uFCF1'] = '\\u064A\\u0647';\n\t t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n\t t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n\t t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n\t t['\\uFCF5'] = '\\u0637\\u0649';\n\t t['\\uFCF6'] = '\\u0637\\u064A';\n\t t['\\uFCF7'] = '\\u0639\\u0649';\n\t t['\\uFCF8'] = '\\u0639\\u064A';\n\t t['\\uFCF9'] = '\\u063A\\u0649';\n\t t['\\uFCFA'] = '\\u063A\\u064A';\n\t t['\\uFCFB'] = '\\u0633\\u0649';\n\t t['\\uFCFC'] = '\\u0633\\u064A';\n\t t['\\uFCFD'] = '\\u0634\\u0649';\n\t t['\\uFCFE'] = '\\u0634\\u064A';\n\t t['\\uFCFF'] = '\\u062D\\u0649';\n\t t['\\uFD00'] = '\\u062D\\u064A';\n\t t['\\uFD01'] = '\\u062C\\u0649';\n\t t['\\uFD02'] = '\\u062C\\u064A';\n\t t['\\uFD03'] = '\\u062E\\u0649';\n\t t['\\uFD04'] = '\\u062E\\u064A';\n\t t['\\uFD05'] = '\\u0635\\u0649';\n\t t['\\uFD06'] = '\\u0635\\u064A';\n\t t['\\uFD07'] = '\\u0636\\u0649';\n\t t['\\uFD08'] = '\\u0636\\u064A';\n\t t['\\uFD09'] = '\\u0634\\u062C';\n\t t['\\uFD0A'] = '\\u0634\\u062D';\n\t t['\\uFD0B'] = '\\u0634\\u062E';\n\t t['\\uFD0C'] = '\\u0634\\u0645';\n\t t['\\uFD0D'] = '\\u0634\\u0631';\n\t t['\\uFD0E'] = '\\u0633\\u0631';\n\t t['\\uFD0F'] = '\\u0635\\u0631';\n\t t['\\uFD10'] = '\\u0636\\u0631';\n\t t['\\uFD11'] = '\\u0637\\u0649';\n\t t['\\uFD12'] = '\\u0637\\u064A';\n\t t['\\uFD13'] = '\\u0639\\u0649';\n\t t['\\uFD14'] = '\\u0639\\u064A';\n\t t['\\uFD15'] = '\\u063A\\u0649';\n\t t['\\uFD16'] = '\\u063A\\u064A';\n\t t['\\uFD17'] = '\\u0633\\u0649';\n\t t['\\uFD18'] = '\\u0633\\u064A';\n\t t['\\uFD19'] = '\\u0634\\u0649';\n\t t['\\uFD1A'] = '\\u0634\\u064A';\n\t t['\\uFD1B'] = '\\u062D\\u0649';\n\t t['\\uFD1C'] = '\\u062D\\u064A';\n\t t['\\uFD1D'] = '\\u062C\\u0649';\n\t t['\\uFD1E'] = '\\u062C\\u064A';\n\t t['\\uFD1F'] = '\\u062E\\u0649';\n\t t['\\uFD20'] = '\\u062E\\u064A';\n\t t['\\uFD21'] = '\\u0635\\u0649';\n\t t['\\uFD22'] = '\\u0635\\u064A';\n\t t['\\uFD23'] = '\\u0636\\u0649';\n\t t['\\uFD24'] = '\\u0636\\u064A';\n\t t['\\uFD25'] = '\\u0634\\u062C';\n\t t['\\uFD26'] = '\\u0634\\u062D';\n\t t['\\uFD27'] = '\\u0634\\u062E';\n\t t['\\uFD28'] = '\\u0634\\u0645';\n\t t['\\uFD29'] = '\\u0634\\u0631';\n\t t['\\uFD2A'] = '\\u0633\\u0631';\n\t t['\\uFD2B'] = '\\u0635\\u0631';\n\t t['\\uFD2C'] = '\\u0636\\u0631';\n\t t['\\uFD2D'] = '\\u0634\\u062C';\n\t t['\\uFD2E'] = '\\u0634\\u062D';\n\t t['\\uFD2F'] = '\\u0634\\u062E';\n\t t['\\uFD30'] = '\\u0634\\u0645';\n\t t['\\uFD31'] = '\\u0633\\u0647';\n\t t['\\uFD32'] = '\\u0634\\u0647';\n\t t['\\uFD33'] = '\\u0637\\u0645';\n\t t['\\uFD34'] = '\\u0633\\u062C';\n\t t['\\uFD35'] = '\\u0633\\u062D';\n\t t['\\uFD36'] = '\\u0633\\u062E';\n\t t['\\uFD37'] = '\\u0634\\u062C';\n\t t['\\uFD38'] = '\\u0634\\u062D';\n\t t['\\uFD39'] = '\\u0634\\u062E';\n\t t['\\uFD3A'] = '\\u0637\\u0645';\n\t t['\\uFD3B'] = '\\u0638\\u0645';\n\t t['\\uFD3C'] = '\\u0627\\u064B';\n\t t['\\uFD3D'] = '\\u0627\\u064B';\n\t t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n\t t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n\t t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n\t t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n\t t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n\t t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n\t t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n\t t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n\t t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n\t t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n\t t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n\t t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n\t t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n\t t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n\t t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n\t t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n\t t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n\t t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n\t t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n\t t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n\t t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n\t t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n\t t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n\t t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n\t t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n\t t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n\t t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n\t t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n\t t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n\t t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n\t t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n\t t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n\t t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n\t t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n\t t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n\t t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n\t t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n\t t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n\t t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n\t t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n\t t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n\t t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n\t t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n\t t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n\t t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n\t t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n\t t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n\t t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n\t t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n\t t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n\t t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n\t t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n\t t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n\t t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n\t t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n\t t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n\t t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n\t t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n\t t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n\t t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n\t t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n\t t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n\t t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n\t t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n\t t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n\t t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n\t t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n\t t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n\t t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n\t t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n\t t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n\t t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n\t t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n\t t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n\t t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n\t t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n\t t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n\t t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n\t t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n\t t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n\t t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n\t t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n\t t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n\t t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n\t t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n\t t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n\t t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n\t t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n\t t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n\t t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n\t t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n\t t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n\t t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n\t t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n\t t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n\t t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n\t t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n\t t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n\t t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n\t t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n\t t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n\t t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n\t t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n\t t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n\t t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n\t t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n\t t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n\t t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n\t t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n\t t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n\t t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n\t t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n\t t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n\t t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n\t t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n\t t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n\t t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n\t t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n\t t['\\uFE49'] = '\\u203E';\n\t t['\\uFE4A'] = '\\u203E';\n\t t['\\uFE4B'] = '\\u203E';\n\t t['\\uFE4C'] = '\\u203E';\n\t t['\\uFE4D'] = '\\u005F';\n\t t['\\uFE4E'] = '\\u005F';\n\t t['\\uFE4F'] = '\\u005F';\n\t t['\\uFE80'] = '\\u0621';\n\t t['\\uFE81'] = '\\u0622';\n\t t['\\uFE82'] = '\\u0622';\n\t t['\\uFE83'] = '\\u0623';\n\t t['\\uFE84'] = '\\u0623';\n\t t['\\uFE85'] = '\\u0624';\n\t t['\\uFE86'] = '\\u0624';\n\t t['\\uFE87'] = '\\u0625';\n\t t['\\uFE88'] = '\\u0625';\n\t t['\\uFE89'] = '\\u0626';\n\t t['\\uFE8A'] = '\\u0626';\n\t t['\\uFE8B'] = '\\u0626';\n\t t['\\uFE8C'] = '\\u0626';\n\t t['\\uFE8D'] = '\\u0627';\n\t t['\\uFE8E'] = '\\u0627';\n\t t['\\uFE8F'] = '\\u0628';\n\t t['\\uFE90'] = '\\u0628';\n\t t['\\uFE91'] = '\\u0628';\n\t t['\\uFE92'] = '\\u0628';\n\t t['\\uFE93'] = '\\u0629';\n\t t['\\uFE94'] = '\\u0629';\n\t t['\\uFE95'] = '\\u062A';\n\t t['\\uFE96'] = '\\u062A';\n\t t['\\uFE97'] = '\\u062A';\n\t t['\\uFE98'] = '\\u062A';\n\t t['\\uFE99'] = '\\u062B';\n\t t['\\uFE9A'] = '\\u062B';\n\t t['\\uFE9B'] = '\\u062B';\n\t t['\\uFE9C'] = '\\u062B';\n\t t['\\uFE9D'] = '\\u062C';\n\t t['\\uFE9E'] = '\\u062C';\n\t t['\\uFE9F'] = '\\u062C';\n\t t['\\uFEA0'] = '\\u062C';\n\t t['\\uFEA1'] = '\\u062D';\n\t t['\\uFEA2'] = '\\u062D';\n\t t['\\uFEA3'] = '\\u062D';\n\t t['\\uFEA4'] = '\\u062D';\n\t t['\\uFEA5'] = '\\u062E';\n\t t['\\uFEA6'] = '\\u062E';\n\t t['\\uFEA7'] = '\\u062E';\n\t t['\\uFEA8'] = '\\u062E';\n\t t['\\uFEA9'] = '\\u062F';\n\t t['\\uFEAA'] = '\\u062F';\n\t t['\\uFEAB'] = '\\u0630';\n\t t['\\uFEAC'] = '\\u0630';\n\t t['\\uFEAD'] = '\\u0631';\n\t t['\\uFEAE'] = '\\u0631';\n\t t['\\uFEAF'] = '\\u0632';\n\t t['\\uFEB0'] = '\\u0632';\n\t t['\\uFEB1'] = '\\u0633';\n\t t['\\uFEB2'] = '\\u0633';\n\t t['\\uFEB3'] = '\\u0633';\n\t t['\\uFEB4'] = '\\u0633';\n\t t['\\uFEB5'] = '\\u0634';\n\t t['\\uFEB6'] = '\\u0634';\n\t t['\\uFEB7'] = '\\u0634';\n\t t['\\uFEB8'] = '\\u0634';\n\t t['\\uFEB9'] = '\\u0635';\n\t t['\\uFEBA'] = '\\u0635';\n\t t['\\uFEBB'] = '\\u0635';\n\t t['\\uFEBC'] = '\\u0635';\n\t t['\\uFEBD'] = '\\u0636';\n\t t['\\uFEBE'] = '\\u0636';\n\t t['\\uFEBF'] = '\\u0636';\n\t t['\\uFEC0'] = '\\u0636';\n\t t['\\uFEC1'] = '\\u0637';\n\t t['\\uFEC2'] = '\\u0637';\n\t t['\\uFEC3'] = '\\u0637';\n\t t['\\uFEC4'] = '\\u0637';\n\t t['\\uFEC5'] = '\\u0638';\n\t t['\\uFEC6'] = '\\u0638';\n\t t['\\uFEC7'] = '\\u0638';\n\t t['\\uFEC8'] = '\\u0638';\n\t t['\\uFEC9'] = '\\u0639';\n\t t['\\uFECA'] = '\\u0639';\n\t t['\\uFECB'] = '\\u0639';\n\t t['\\uFECC'] = '\\u0639';\n\t t['\\uFECD'] = '\\u063A';\n\t t['\\uFECE'] = '\\u063A';\n\t t['\\uFECF'] = '\\u063A';\n\t t['\\uFED0'] = '\\u063A';\n\t t['\\uFED1'] = '\\u0641';\n\t t['\\uFED2'] = '\\u0641';\n\t t['\\uFED3'] = '\\u0641';\n\t t['\\uFED4'] = '\\u0641';\n\t t['\\uFED5'] = '\\u0642';\n\t t['\\uFED6'] = '\\u0642';\n\t t['\\uFED7'] = '\\u0642';\n\t t['\\uFED8'] = '\\u0642';\n\t t['\\uFED9'] = '\\u0643';\n\t t['\\uFEDA'] = '\\u0643';\n\t t['\\uFEDB'] = '\\u0643';\n\t t['\\uFEDC'] = '\\u0643';\n\t t['\\uFEDD'] = '\\u0644';\n\t t['\\uFEDE'] = '\\u0644';\n\t t['\\uFEDF'] = '\\u0644';\n\t t['\\uFEE0'] = '\\u0644';\n\t t['\\uFEE1'] = '\\u0645';\n\t t['\\uFEE2'] = '\\u0645';\n\t t['\\uFEE3'] = '\\u0645';\n\t t['\\uFEE4'] = '\\u0645';\n\t t['\\uFEE5'] = '\\u0646';\n\t t['\\uFEE6'] = '\\u0646';\n\t t['\\uFEE7'] = '\\u0646';\n\t t['\\uFEE8'] = '\\u0646';\n\t t['\\uFEE9'] = '\\u0647';\n\t t['\\uFEEA'] = '\\u0647';\n\t t['\\uFEEB'] = '\\u0647';\n\t t['\\uFEEC'] = '\\u0647';\n\t t['\\uFEED'] = '\\u0648';\n\t t['\\uFEEE'] = '\\u0648';\n\t t['\\uFEEF'] = '\\u0649';\n\t t['\\uFEF0'] = '\\u0649';\n\t t['\\uFEF1'] = '\\u064A';\n\t t['\\uFEF2'] = '\\u064A';\n\t t['\\uFEF3'] = '\\u064A';\n\t t['\\uFEF4'] = '\\u064A';\n\t t['\\uFEF5'] = '\\u0644\\u0622';\n\t t['\\uFEF6'] = '\\u0644\\u0622';\n\t t['\\uFEF7'] = '\\u0644\\u0623';\n\t t['\\uFEF8'] = '\\u0644\\u0623';\n\t t['\\uFEF9'] = '\\u0644\\u0625';\n\t t['\\uFEFA'] = '\\u0644\\u0625';\n\t t['\\uFEFB'] = '\\u0644\\u0627';\n\t t['\\uFEFC'] = '\\u0644\\u0627';\n\t});\n\tfunction reverseIfRtl(chars) {\n\t var charsLength = chars.length;\n\t if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n\t  return chars;\n\t }\n\t var s = '';\n\t for (var ii = charsLength - 1; ii >= 0; ii--) {\n\t  s += chars[ii];\n\t }\n\t return s;\n\t}\n\texports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\n\texports.reverseIfRtl = reverseIfRtl;\n\texports.getUnicodeRangeFor = getUnicodeRangeFor;\n\texports.getNormalizedUnicodes = getNormalizedUnicodes;\n\texports.getUnicodeForGlyph = getUnicodeForGlyph;\n\t\n\t/***/ }),\n\t/* 81 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar _ps_parser = __w_pdfjs_require__(142);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar IsEvalSupportedCached = {\n\t  get value() {\n\t    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\n\t  }\n\t};\n\t\n\tvar PDFFunctionFactory = function () {\n\t  function PDFFunctionFactory(_ref) {\n\t    var xref = _ref.xref,\n\t        _ref$isEvalSupported = _ref.isEvalSupported,\n\t        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\n\t\n\t    _classCallCheck(this, PDFFunctionFactory);\n\t\n\t    this.xref = xref;\n\t    this.isEvalSupported = isEvalSupported !== false;\n\t  }\n\t\n\t  _createClass(PDFFunctionFactory, [{\n\t    key: 'create',\n\t    value: function create(fn) {\n\t      return PDFFunction.parse({\n\t        xref: this.xref,\n\t        isEvalSupported: this.isEvalSupported,\n\t        fn: fn\n\t      });\n\t    }\n\t  }, {\n\t    key: 'createFromArray',\n\t    value: function createFromArray(fnObj) {\n\t      return PDFFunction.parseArray({\n\t        xref: this.xref,\n\t        isEvalSupported: this.isEvalSupported,\n\t        fnObj: fnObj\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return PDFFunctionFactory;\n\t}();\n\t\n\tfunction toNumberArray(arr) {\n\t  if (!Array.isArray(arr)) {\n\t    return null;\n\t  }\n\t  var length = arr.length;\n\t  for (var i = 0; i < length; i++) {\n\t    if (typeof arr[i] !== 'number') {\n\t      var result = new Array(length);\n\t      for (var _i = 0; _i < length; _i++) {\n\t        result[_i] = +arr[_i];\n\t      }\n\t      return result;\n\t    }\n\t  }\n\t  return arr;\n\t}\n\tvar PDFFunction = function PDFFunctionClosure() {\n\t  var CONSTRUCT_SAMPLED = 0;\n\t  var CONSTRUCT_INTERPOLATED = 2;\n\t  var CONSTRUCT_STICHED = 3;\n\t  var CONSTRUCT_POSTSCRIPT = 4;\n\t  return {\n\t    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\n\t      var i, ii;\n\t      var length = 1;\n\t      for (i = 0, ii = size.length; i < ii; i++) {\n\t        length *= size[i];\n\t      }\n\t      length *= outputSize;\n\t      var array = new Array(length);\n\t      var codeSize = 0;\n\t      var codeBuf = 0;\n\t      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n\t      var strBytes = stream.getBytes((length * bps + 7) / 8);\n\t      var strIdx = 0;\n\t      for (i = 0; i < length; i++) {\n\t        while (codeSize < bps) {\n\t          codeBuf <<= 8;\n\t          codeBuf |= strBytes[strIdx++];\n\t          codeSize += 8;\n\t        }\n\t        codeSize -= bps;\n\t        array[i] = (codeBuf >> codeSize) * sampleMul;\n\t        codeBuf &= (1 << codeSize) - 1;\n\t      }\n\t      return array;\n\t    },\n\t    getIR: function getIR(_ref2) {\n\t      var xref = _ref2.xref,\n\t          isEvalSupported = _ref2.isEvalSupported,\n\t          fn = _ref2.fn;\n\t\n\t      var dict = fn.dict;\n\t      if (!dict) {\n\t        dict = fn;\n\t      }\n\t      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\n\t      var typeNum = dict.get('FunctionType');\n\t      var typeFn = types[typeNum];\n\t      if (!typeFn) {\n\t        throw new _util.FormatError('Unknown type of function');\n\t      }\n\t      return typeFn.call(this, {\n\t        xref: xref,\n\t        isEvalSupported: isEvalSupported,\n\t        fn: fn,\n\t        dict: dict\n\t      });\n\t    },\n\t    fromIR: function fromIR(_ref3) {\n\t      var xref = _ref3.xref,\n\t          isEvalSupported = _ref3.isEvalSupported,\n\t          IR = _ref3.IR;\n\t\n\t      var type = IR[0];\n\t      switch (type) {\n\t        case CONSTRUCT_SAMPLED:\n\t          return this.constructSampledFromIR({\n\t            xref: xref,\n\t            isEvalSupported: isEvalSupported,\n\t            IR: IR\n\t          });\n\t        case CONSTRUCT_INTERPOLATED:\n\t          return this.constructInterpolatedFromIR({\n\t            xref: xref,\n\t            isEvalSupported: isEvalSupported,\n\t            IR: IR\n\t          });\n\t        case CONSTRUCT_STICHED:\n\t          return this.constructStichedFromIR({\n\t            xref: xref,\n\t            isEvalSupported: isEvalSupported,\n\t            IR: IR\n\t          });\n\t        default:\n\t          return this.constructPostScriptFromIR({\n\t            xref: xref,\n\t            isEvalSupported: isEvalSupported,\n\t            IR: IR\n\t          });\n\t      }\n\t    },\n\t    parse: function parse(_ref4) {\n\t      var xref = _ref4.xref,\n\t          isEvalSupported = _ref4.isEvalSupported,\n\t          fn = _ref4.fn;\n\t\n\t      var IR = this.getIR({\n\t        xref: xref,\n\t        isEvalSupported: isEvalSupported,\n\t        fn: fn\n\t      });\n\t      return this.fromIR({\n\t        xref: xref,\n\t        isEvalSupported: isEvalSupported,\n\t        IR: IR\n\t      });\n\t    },\n\t    parseArray: function parseArray(_ref5) {\n\t      var xref = _ref5.xref,\n\t          isEvalSupported = _ref5.isEvalSupported,\n\t          fnObj = _ref5.fnObj;\n\t\n\t      if (!Array.isArray(fnObj)) {\n\t        return this.parse({\n\t          xref: xref,\n\t          isEvalSupported: isEvalSupported,\n\t          fn: fnObj\n\t        });\n\t      }\n\t      var fnArray = [];\n\t      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n\t        fnArray.push(this.parse({\n\t          xref: xref,\n\t          isEvalSupported: isEvalSupported,\n\t          fn: xref.fetchIfRef(fnObj[j])\n\t        }));\n\t      }\n\t      return function (src, srcOffset, dest, destOffset) {\n\t        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n\t          fnArray[i](src, srcOffset, dest, destOffset + i);\n\t        }\n\t      };\n\t    },\n\t    constructSampled: function constructSampled(_ref6) {\n\t      var xref = _ref6.xref,\n\t          isEvalSupported = _ref6.isEvalSupported,\n\t          fn = _ref6.fn,\n\t          dict = _ref6.dict;\n\t\n\t      function toMultiArray(arr) {\n\t        var inputLength = arr.length;\n\t        var out = [];\n\t        var index = 0;\n\t        for (var i = 0; i < inputLength; i += 2) {\n\t          out[index] = [arr[i], arr[i + 1]];\n\t          ++index;\n\t        }\n\t        return out;\n\t      }\n\t      var domain = toNumberArray(dict.getArray('Domain'));\n\t      var range = toNumberArray(dict.getArray('Range'));\n\t      if (!domain || !range) {\n\t        throw new _util.FormatError('No domain or range');\n\t      }\n\t      var inputSize = domain.length / 2;\n\t      var outputSize = range.length / 2;\n\t      domain = toMultiArray(domain);\n\t      range = toMultiArray(range);\n\t      var size = toNumberArray(dict.get('Size'));\n\t      var bps = dict.get('BitsPerSample');\n\t      var order = dict.get('Order') || 1;\n\t      if (order !== 1) {\n\t        (0, _util.info)('No support for cubic spline interpolation: ' + order);\n\t      }\n\t      var encode = toNumberArray(dict.getArray('Encode'));\n\t      if (!encode) {\n\t        encode = [];\n\t        for (var i = 0; i < inputSize; ++i) {\n\t          encode.push([0, size[i] - 1]);\n\t        }\n\t      } else {\n\t        encode = toMultiArray(encode);\n\t      }\n\t      var decode = toNumberArray(dict.getArray('Decode'));\n\t      if (!decode) {\n\t        decode = range;\n\t      } else {\n\t        decode = toMultiArray(decode);\n\t      }\n\t      var samples = this.getSampleArray(size, outputSize, bps, fn);\n\t      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\n\t    },\n\t    constructSampledFromIR: function constructSampledFromIR(_ref7) {\n\t      var xref = _ref7.xref,\n\t          isEvalSupported = _ref7.isEvalSupported,\n\t          IR = _ref7.IR;\n\t\n\t      function interpolate(x, xmin, xmax, ymin, ymax) {\n\t        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n\t      }\n\t      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n\t        var m = IR[1];\n\t        var domain = IR[2];\n\t        var encode = IR[3];\n\t        var decode = IR[4];\n\t        var samples = IR[5];\n\t        var size = IR[6];\n\t        var n = IR[7];\n\t        var range = IR[9];\n\t        var cubeVertices = 1 << m;\n\t        var cubeN = new Float64Array(cubeVertices);\n\t        var cubeVertex = new Uint32Array(cubeVertices);\n\t        var i, j;\n\t        for (j = 0; j < cubeVertices; j++) {\n\t          cubeN[j] = 1;\n\t        }\n\t        var k = n,\n\t            pos = 1;\n\t        for (i = 0; i < m; ++i) {\n\t          var domain_2i = domain[i][0];\n\t          var domain_2i_1 = domain[i][1];\n\t          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n\t          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n\t          var size_i = size[i];\n\t          e = Math.min(Math.max(e, 0), size_i - 1);\n\t          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n\t          var n0 = e0 + 1 - e;\n\t          var n1 = e - e0;\n\t          var offset0 = e0 * k;\n\t          var offset1 = offset0 + k;\n\t          for (j = 0; j < cubeVertices; j++) {\n\t            if (j & pos) {\n\t              cubeN[j] *= n1;\n\t              cubeVertex[j] += offset1;\n\t            } else {\n\t              cubeN[j] *= n0;\n\t              cubeVertex[j] += offset0;\n\t            }\n\t          }\n\t          k *= size_i;\n\t          pos <<= 1;\n\t        }\n\t        for (j = 0; j < n; ++j) {\n\t          var rj = 0;\n\t          for (i = 0; i < cubeVertices; i++) {\n\t            rj += samples[cubeVertex[i] + j] * cubeN[i];\n\t          }\n\t          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n\t          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n\t        }\n\t      };\n\t    },\n\t    constructInterpolated: function constructInterpolated(_ref8) {\n\t      var xref = _ref8.xref,\n\t          isEvalSupported = _ref8.isEvalSupported,\n\t          fn = _ref8.fn,\n\t          dict = _ref8.dict;\n\t\n\t      var c0 = toNumberArray(dict.getArray('C0')) || [0];\n\t      var c1 = toNumberArray(dict.getArray('C1')) || [1];\n\t      var n = dict.get('N');\n\t      var length = c0.length;\n\t      var diff = [];\n\t      for (var i = 0; i < length; ++i) {\n\t        diff.push(c1[i] - c0[i]);\n\t      }\n\t      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n\t    },\n\t    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\n\t      var xref = _ref9.xref,\n\t          isEvalSupported = _ref9.isEvalSupported,\n\t          IR = _ref9.IR;\n\t\n\t      var c0 = IR[1];\n\t      var diff = IR[2];\n\t      var n = IR[3];\n\t      var length = diff.length;\n\t      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n\t        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n\t        for (var j = 0; j < length; ++j) {\n\t          dest[destOffset + j] = c0[j] + x * diff[j];\n\t        }\n\t      };\n\t    },\n\t    constructStiched: function constructStiched(_ref10) {\n\t      var xref = _ref10.xref,\n\t          isEvalSupported = _ref10.isEvalSupported,\n\t          fn = _ref10.fn,\n\t          dict = _ref10.dict;\n\t\n\t      var domain = toNumberArray(dict.getArray('Domain'));\n\t      if (!domain) {\n\t        throw new _util.FormatError('No domain');\n\t      }\n\t      var inputSize = domain.length / 2;\n\t      if (inputSize !== 1) {\n\t        throw new _util.FormatError('Bad domain for stiched function');\n\t      }\n\t      var fnRefs = dict.get('Functions');\n\t      var fns = [];\n\t      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n\t        fns.push(this.parse({\n\t          xref: xref,\n\t          isEvalSupported: isEvalSupported,\n\t          fn: xref.fetchIfRef(fnRefs[i])\n\t        }));\n\t      }\n\t      var bounds = toNumberArray(dict.getArray('Bounds'));\n\t      var encode = toNumberArray(dict.getArray('Encode'));\n\t      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n\t    },\n\t    constructStichedFromIR: function constructStichedFromIR(_ref11) {\n\t      var xref = _ref11.xref,\n\t          isEvalSupported = _ref11.isEvalSupported,\n\t          IR = _ref11.IR;\n\t\n\t      var domain = IR[1];\n\t      var bounds = IR[2];\n\t      var encode = IR[3];\n\t      var fns = IR[4];\n\t      var tmpBuf = new Float32Array(1);\n\t      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n\t        var clip = function constructStichedFromIRClip(v, min, max) {\n\t          if (v > max) {\n\t            v = max;\n\t          } else if (v < min) {\n\t            v = min;\n\t          }\n\t          return v;\n\t        };\n\t        var v = clip(src[srcOffset], domain[0], domain[1]);\n\t        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n\t          if (v < bounds[i]) {\n\t            break;\n\t          }\n\t        }\n\t        var dmin = domain[0];\n\t        if (i > 0) {\n\t          dmin = bounds[i - 1];\n\t        }\n\t        var dmax = domain[1];\n\t        if (i < bounds.length) {\n\t          dmax = bounds[i];\n\t        }\n\t        var rmin = encode[2 * i];\n\t        var rmax = encode[2 * i + 1];\n\t        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n\t        fns[i](tmpBuf, 0, dest, destOffset);\n\t      };\n\t    },\n\t    constructPostScript: function constructPostScript(_ref12) {\n\t      var xref = _ref12.xref,\n\t          isEvalSupported = _ref12.isEvalSupported,\n\t          fn = _ref12.fn,\n\t          dict = _ref12.dict;\n\t\n\t      var domain = toNumberArray(dict.getArray('Domain'));\n\t      var range = toNumberArray(dict.getArray('Range'));\n\t      if (!domain) {\n\t        throw new _util.FormatError('No domain.');\n\t      }\n\t      if (!range) {\n\t        throw new _util.FormatError('No range.');\n\t      }\n\t      var lexer = new _ps_parser.PostScriptLexer(fn);\n\t      var parser = new _ps_parser.PostScriptParser(lexer);\n\t      var code = parser.parse();\n\t      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n\t    },\n\t    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\n\t      var xref = _ref13.xref,\n\t          isEvalSupported = _ref13.isEvalSupported,\n\t          IR = _ref13.IR;\n\t\n\t      var domain = IR[1];\n\t      var range = IR[2];\n\t      var code = IR[3];\n\t      if (isEvalSupported && IsEvalSupportedCached.value) {\n\t        var compiled = new PostScriptCompiler().compile(code, domain, range);\n\t        if (compiled) {\n\t          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n\t        }\n\t      }\n\t      (0, _util.info)('Unable to compile PS function');\n\t      var numOutputs = range.length >> 1;\n\t      var numInputs = domain.length >> 1;\n\t      var evaluator = new PostScriptEvaluator(code);\n\t      var cache = Object.create(null);\n\t      var MAX_CACHE_SIZE = 2048 * 4;\n\t      var cache_available = MAX_CACHE_SIZE;\n\t      var tmpBuf = new Float32Array(numInputs);\n\t      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n\t        var i, value;\n\t        var key = '';\n\t        var input = tmpBuf;\n\t        for (i = 0; i < numInputs; i++) {\n\t          value = src[srcOffset + i];\n\t          input[i] = value;\n\t          key += value + '_';\n\t        }\n\t        var cachedValue = cache[key];\n\t        if (cachedValue !== undefined) {\n\t          dest.set(cachedValue, destOffset);\n\t          return;\n\t        }\n\t        var output = new Float32Array(numOutputs);\n\t        var stack = evaluator.execute(input);\n\t        var stackIndex = stack.length - numOutputs;\n\t        for (i = 0; i < numOutputs; i++) {\n\t          value = stack[stackIndex + i];\n\t          var bound = range[i * 2];\n\t          if (value < bound) {\n\t            value = bound;\n\t          } else {\n\t            bound = range[i * 2 + 1];\n\t            if (value > bound) {\n\t              value = bound;\n\t            }\n\t          }\n\t          output[i] = value;\n\t        }\n\t        if (cache_available > 0) {\n\t          cache_available--;\n\t          cache[key] = output;\n\t        }\n\t        dest.set(output, destOffset);\n\t      };\n\t    }\n\t  };\n\t}();\n\tfunction isPDFFunction(v) {\n\t  var fnDict;\n\t  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\n\t    return false;\n\t  } else if ((0, _primitives.isDict)(v)) {\n\t    fnDict = v;\n\t  } else if ((0, _primitives.isStream)(v)) {\n\t    fnDict = v.dict;\n\t  } else {\n\t    return false;\n\t  }\n\t  return fnDict.has('FunctionType');\n\t}\n\tvar PostScriptStack = function PostScriptStackClosure() {\n\t  var MAX_STACK_SIZE = 100;\n\t  function PostScriptStack(initialStack) {\n\t    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n\t  }\n\t  PostScriptStack.prototype = {\n\t    push: function PostScriptStack_push(value) {\n\t      if (this.stack.length >= MAX_STACK_SIZE) {\n\t        throw new Error('PostScript function stack overflow.');\n\t      }\n\t      this.stack.push(value);\n\t    },\n\t    pop: function PostScriptStack_pop() {\n\t      if (this.stack.length <= 0) {\n\t        throw new Error('PostScript function stack underflow.');\n\t      }\n\t      return this.stack.pop();\n\t    },\n\t    copy: function PostScriptStack_copy(n) {\n\t      if (this.stack.length + n >= MAX_STACK_SIZE) {\n\t        throw new Error('PostScript function stack overflow.');\n\t      }\n\t      var stack = this.stack;\n\t      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n\t        stack.push(stack[i]);\n\t      }\n\t    },\n\t    index: function PostScriptStack_index(n) {\n\t      this.push(this.stack[this.stack.length - n - 1]);\n\t    },\n\t    roll: function PostScriptStack_roll(n, p) {\n\t      var stack = this.stack;\n\t      var l = stack.length - n;\n\t      var r = stack.length - 1,\n\t          c = l + (p - Math.floor(p / n) * n),\n\t          i,\n\t          j,\n\t          t;\n\t      for (i = l, j = r; i < j; i++, j--) {\n\t        t = stack[i];\n\t        stack[i] = stack[j];\n\t        stack[j] = t;\n\t      }\n\t      for (i = l, j = c - 1; i < j; i++, j--) {\n\t        t = stack[i];\n\t        stack[i] = stack[j];\n\t        stack[j] = t;\n\t      }\n\t      for (i = c, j = r; i < j; i++, j--) {\n\t        t = stack[i];\n\t        stack[i] = stack[j];\n\t        stack[j] = t;\n\t      }\n\t    }\n\t  };\n\t  return PostScriptStack;\n\t}();\n\tvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n\t  function PostScriptEvaluator(operators) {\n\t    this.operators = operators;\n\t  }\n\t  PostScriptEvaluator.prototype = {\n\t    execute: function PostScriptEvaluator_execute(initialStack) {\n\t      var stack = new PostScriptStack(initialStack);\n\t      var counter = 0;\n\t      var operators = this.operators;\n\t      var length = operators.length;\n\t      var operator, a, b;\n\t      while (counter < length) {\n\t        operator = operators[counter++];\n\t        if (typeof operator === 'number') {\n\t          stack.push(operator);\n\t          continue;\n\t        }\n\t        switch (operator) {\n\t          case 'jz':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            if (!a) {\n\t              counter = b;\n\t            }\n\t            break;\n\t          case 'j':\n\t            a = stack.pop();\n\t            counter = a;\n\t            break;\n\t          case 'abs':\n\t            a = stack.pop();\n\t            stack.push(Math.abs(a));\n\t            break;\n\t          case 'add':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a + b);\n\t            break;\n\t          case 'and':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n\t              stack.push(a && b);\n\t            } else {\n\t              stack.push(a & b);\n\t            }\n\t            break;\n\t          case 'atan':\n\t            a = stack.pop();\n\t            stack.push(Math.atan(a));\n\t            break;\n\t          case 'bitshift':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            if (a > 0) {\n\t              stack.push(a << b);\n\t            } else {\n\t              stack.push(a >> b);\n\t            }\n\t            break;\n\t          case 'ceiling':\n\t            a = stack.pop();\n\t            stack.push(Math.ceil(a));\n\t            break;\n\t          case 'copy':\n\t            a = stack.pop();\n\t            stack.copy(a);\n\t            break;\n\t          case 'cos':\n\t            a = stack.pop();\n\t            stack.push(Math.cos(a));\n\t            break;\n\t          case 'cvi':\n\t            a = stack.pop() | 0;\n\t            stack.push(a);\n\t            break;\n\t          case 'cvr':\n\t            break;\n\t          case 'div':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a / b);\n\t            break;\n\t          case 'dup':\n\t            stack.copy(1);\n\t            break;\n\t          case 'eq':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a === b);\n\t            break;\n\t          case 'exch':\n\t            stack.roll(2, 1);\n\t            break;\n\t          case 'exp':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(Math.pow(a, b));\n\t            break;\n\t          case 'false':\n\t            stack.push(false);\n\t            break;\n\t          case 'floor':\n\t            a = stack.pop();\n\t            stack.push(Math.floor(a));\n\t            break;\n\t          case 'ge':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a >= b);\n\t            break;\n\t          case 'gt':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a > b);\n\t            break;\n\t          case 'idiv':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a / b | 0);\n\t            break;\n\t          case 'index':\n\t            a = stack.pop();\n\t            stack.index(a);\n\t            break;\n\t          case 'le':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a <= b);\n\t            break;\n\t          case 'ln':\n\t            a = stack.pop();\n\t            stack.push(Math.log(a));\n\t            break;\n\t          case 'log':\n\t            a = stack.pop();\n\t            stack.push(Math.log(a) / Math.LN10);\n\t            break;\n\t          case 'lt':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a < b);\n\t            break;\n\t          case 'mod':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a % b);\n\t            break;\n\t          case 'mul':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a * b);\n\t            break;\n\t          case 'ne':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a !== b);\n\t            break;\n\t          case 'neg':\n\t            a = stack.pop();\n\t            stack.push(-a);\n\t            break;\n\t          case 'not':\n\t            a = stack.pop();\n\t            if ((0, _util.isBool)(a)) {\n\t              stack.push(!a);\n\t            } else {\n\t              stack.push(~a);\n\t            }\n\t            break;\n\t          case 'or':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n\t              stack.push(a || b);\n\t            } else {\n\t              stack.push(a | b);\n\t            }\n\t            break;\n\t          case 'pop':\n\t            stack.pop();\n\t            break;\n\t          case 'roll':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.roll(a, b);\n\t            break;\n\t          case 'round':\n\t            a = stack.pop();\n\t            stack.push(Math.round(a));\n\t            break;\n\t          case 'sin':\n\t            a = stack.pop();\n\t            stack.push(Math.sin(a));\n\t            break;\n\t          case 'sqrt':\n\t            a = stack.pop();\n\t            stack.push(Math.sqrt(a));\n\t            break;\n\t          case 'sub':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            stack.push(a - b);\n\t            break;\n\t          case 'true':\n\t            stack.push(true);\n\t            break;\n\t          case 'truncate':\n\t            a = stack.pop();\n\t            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n\t            stack.push(a);\n\t            break;\n\t          case 'xor':\n\t            b = stack.pop();\n\t            a = stack.pop();\n\t            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n\t              stack.push(a !== b);\n\t            } else {\n\t              stack.push(a ^ b);\n\t            }\n\t            break;\n\t          default:\n\t            throw new _util.FormatError('Unknown operator ' + operator);\n\t        }\n\t      }\n\t      return stack.stack;\n\t    }\n\t  };\n\t  return PostScriptEvaluator;\n\t}();\n\tvar PostScriptCompiler = function PostScriptCompilerClosure() {\n\t  function AstNode(type) {\n\t    this.type = type;\n\t  }\n\t  AstNode.prototype.visit = function (visitor) {\n\t    throw new Error('abstract method');\n\t  };\n\t  function AstArgument(index, min, max) {\n\t    AstNode.call(this, 'args');\n\t    this.index = index;\n\t    this.min = min;\n\t    this.max = max;\n\t  }\n\t  AstArgument.prototype = Object.create(AstNode.prototype);\n\t  AstArgument.prototype.visit = function (visitor) {\n\t    visitor.visitArgument(this);\n\t  };\n\t  function AstLiteral(number) {\n\t    AstNode.call(this, 'literal');\n\t    this.number = number;\n\t    this.min = number;\n\t    this.max = number;\n\t  }\n\t  AstLiteral.prototype = Object.create(AstNode.prototype);\n\t  AstLiteral.prototype.visit = function (visitor) {\n\t    visitor.visitLiteral(this);\n\t  };\n\t  function AstBinaryOperation(op, arg1, arg2, min, max) {\n\t    AstNode.call(this, 'binary');\n\t    this.op = op;\n\t    this.arg1 = arg1;\n\t    this.arg2 = arg2;\n\t    this.min = min;\n\t    this.max = max;\n\t  }\n\t  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n\t  AstBinaryOperation.prototype.visit = function (visitor) {\n\t    visitor.visitBinaryOperation(this);\n\t  };\n\t  function AstMin(arg, max) {\n\t    AstNode.call(this, 'max');\n\t    this.arg = arg;\n\t    this.min = arg.min;\n\t    this.max = max;\n\t  }\n\t  AstMin.prototype = Object.create(AstNode.prototype);\n\t  AstMin.prototype.visit = function (visitor) {\n\t    visitor.visitMin(this);\n\t  };\n\t  function AstVariable(index, min, max) {\n\t    AstNode.call(this, 'var');\n\t    this.index = index;\n\t    this.min = min;\n\t    this.max = max;\n\t  }\n\t  AstVariable.prototype = Object.create(AstNode.prototype);\n\t  AstVariable.prototype.visit = function (visitor) {\n\t    visitor.visitVariable(this);\n\t  };\n\t  function AstVariableDefinition(variable, arg) {\n\t    AstNode.call(this, 'definition');\n\t    this.variable = variable;\n\t    this.arg = arg;\n\t  }\n\t  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n\t  AstVariableDefinition.prototype.visit = function (visitor) {\n\t    visitor.visitVariableDefinition(this);\n\t  };\n\t  function ExpressionBuilderVisitor() {\n\t    this.parts = [];\n\t  }\n\t  ExpressionBuilderVisitor.prototype = {\n\t    visitArgument: function visitArgument(arg) {\n\t      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n\t    },\n\t    visitVariable: function visitVariable(variable) {\n\t      this.parts.push('v', variable.index);\n\t    },\n\t    visitLiteral: function visitLiteral(literal) {\n\t      this.parts.push(literal.number);\n\t    },\n\t    visitBinaryOperation: function visitBinaryOperation(operation) {\n\t      this.parts.push('(');\n\t      operation.arg1.visit(this);\n\t      this.parts.push(' ', operation.op, ' ');\n\t      operation.arg2.visit(this);\n\t      this.parts.push(')');\n\t    },\n\t    visitVariableDefinition: function visitVariableDefinition(definition) {\n\t      this.parts.push('var ');\n\t      definition.variable.visit(this);\n\t      this.parts.push(' = ');\n\t      definition.arg.visit(this);\n\t      this.parts.push(';');\n\t    },\n\t    visitMin: function visitMin(max) {\n\t      this.parts.push('Math.min(');\n\t      max.arg.visit(this);\n\t      this.parts.push(', ', max.max, ')');\n\t    },\n\t    toString: function toString() {\n\t      return this.parts.join('');\n\t    }\n\t  };\n\t  function buildAddOperation(num1, num2) {\n\t    if (num2.type === 'literal' && num2.number === 0) {\n\t      return num1;\n\t    }\n\t    if (num1.type === 'literal' && num1.number === 0) {\n\t      return num2;\n\t    }\n\t    if (num2.type === 'literal' && num1.type === 'literal') {\n\t      return new AstLiteral(num1.number + num2.number);\n\t    }\n\t    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n\t  }\n\t  function buildMulOperation(num1, num2) {\n\t    if (num2.type === 'literal') {\n\t      if (num2.number === 0) {\n\t        return new AstLiteral(0);\n\t      } else if (num2.number === 1) {\n\t        return num1;\n\t      } else if (num1.type === 'literal') {\n\t        return new AstLiteral(num1.number * num2.number);\n\t      }\n\t    }\n\t    if (num1.type === 'literal') {\n\t      if (num1.number === 0) {\n\t        return new AstLiteral(0);\n\t      } else if (num1.number === 1) {\n\t        return num2;\n\t      }\n\t    }\n\t    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n\t    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n\t    return new AstBinaryOperation('*', num1, num2, min, max);\n\t  }\n\t  function buildSubOperation(num1, num2) {\n\t    if (num2.type === 'literal') {\n\t      if (num2.number === 0) {\n\t        return num1;\n\t      } else if (num1.type === 'literal') {\n\t        return new AstLiteral(num1.number - num2.number);\n\t      }\n\t    }\n\t    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n\t      return num2.arg2;\n\t    }\n\t    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n\t  }\n\t  function buildMinOperation(num1, max) {\n\t    if (num1.min >= max) {\n\t      return new AstLiteral(max);\n\t    } else if (num1.max <= max) {\n\t      return num1;\n\t    }\n\t    return new AstMin(num1, max);\n\t  }\n\t  function PostScriptCompiler() {}\n\t  PostScriptCompiler.prototype = {\n\t    compile: function PostScriptCompiler_compile(code, domain, range) {\n\t      var stack = [];\n\t      var i, ii;\n\t      var instructions = [];\n\t      var inputSize = domain.length >> 1,\n\t          outputSize = range.length >> 1;\n\t      var lastRegister = 0;\n\t      var n, j;\n\t      var num1, num2, ast1, ast2, tmpVar, item;\n\t      for (i = 0; i < inputSize; i++) {\n\t        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n\t      }\n\t      for (i = 0, ii = code.length; i < ii; i++) {\n\t        item = code[i];\n\t        if (typeof item === 'number') {\n\t          stack.push(new AstLiteral(item));\n\t          continue;\n\t        }\n\t        switch (item) {\n\t          case 'add':\n\t            if (stack.length < 2) {\n\t              return null;\n\t            }\n\t            num2 = stack.pop();\n\t            num1 = stack.pop();\n\t            stack.push(buildAddOperation(num1, num2));\n\t            break;\n\t          case 'cvr':\n\t            if (stack.length < 1) {\n\t              return null;\n\t            }\n\t            break;\n\t          case 'mul':\n\t            if (stack.length < 2) {\n\t              return null;\n\t            }\n\t            num2 = stack.pop();\n\t            num1 = stack.pop();\n\t            stack.push(buildMulOperation(num1, num2));\n\t            break;\n\t          case 'sub':\n\t            if (stack.length < 2) {\n\t              return null;\n\t            }\n\t            num2 = stack.pop();\n\t            num1 = stack.pop();\n\t            stack.push(buildSubOperation(num1, num2));\n\t            break;\n\t          case 'exch':\n\t            if (stack.length < 2) {\n\t              return null;\n\t            }\n\t            ast1 = stack.pop();\n\t            ast2 = stack.pop();\n\t            stack.push(ast1, ast2);\n\t            break;\n\t          case 'pop':\n\t            if (stack.length < 1) {\n\t              return null;\n\t            }\n\t            stack.pop();\n\t            break;\n\t          case 'index':\n\t            if (stack.length < 1) {\n\t              return null;\n\t            }\n\t            num1 = stack.pop();\n\t            if (num1.type !== 'literal') {\n\t              return null;\n\t            }\n\t            n = num1.number;\n\t            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\n\t              return null;\n\t            }\n\t            ast1 = stack[stack.length - n - 1];\n\t            if (ast1.type === 'literal' || ast1.type === 'var') {\n\t              stack.push(ast1);\n\t              break;\n\t            }\n\t            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n\t            stack[stack.length - n - 1] = tmpVar;\n\t            stack.push(tmpVar);\n\t            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n\t            break;\n\t          case 'dup':\n\t            if (stack.length < 1) {\n\t              return null;\n\t            }\n\t            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n\t              num1 = stack.pop();\n\t              stack.push(buildMinOperation(num1, code[i + 1]));\n\t              i += 6;\n\t              break;\n\t            }\n\t            ast1 = stack[stack.length - 1];\n\t            if (ast1.type === 'literal' || ast1.type === 'var') {\n\t              stack.push(ast1);\n\t              break;\n\t            }\n\t            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n\t            stack[stack.length - 1] = tmpVar;\n\t            stack.push(tmpVar);\n\t            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n\t            break;\n\t          case 'roll':\n\t            if (stack.length < 2) {\n\t              return null;\n\t            }\n\t            num2 = stack.pop();\n\t            num1 = stack.pop();\n\t            if (num2.type !== 'literal' || num1.type !== 'literal') {\n\t              return null;\n\t            }\n\t            j = num2.number;\n\t            n = num1.number;\n\t            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\n\t              return null;\n\t            }\n\t            j = (j % n + n) % n;\n\t            if (j === 0) {\n\t              break;\n\t            }\n\t            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n\t            break;\n\t          default:\n\t            return null;\n\t        }\n\t      }\n\t      if (stack.length !== outputSize) {\n\t        return null;\n\t      }\n\t      var result = [];\n\t      instructions.forEach(function (instruction) {\n\t        var statementBuilder = new ExpressionBuilderVisitor();\n\t        instruction.visit(statementBuilder);\n\t        result.push(statementBuilder.toString());\n\t      });\n\t      stack.forEach(function (expr, i) {\n\t        var statementBuilder = new ExpressionBuilderVisitor();\n\t        expr.visit(statementBuilder);\n\t        var min = range[i * 2],\n\t            max = range[i * 2 + 1];\n\t        var out = [statementBuilder.toString()];\n\t        if (min > expr.min) {\n\t          out.unshift('Math.max(', min, ', ');\n\t          out.push(')');\n\t        }\n\t        if (max < expr.max) {\n\t          out.unshift('Math.min(', max, ', ');\n\t          out.push(')');\n\t        }\n\t        out.unshift('dest[destOffset + ', i, '] = ');\n\t        out.push(';');\n\t        result.push(out.join(''));\n\t      });\n\t      return result.join('\\n');\n\t    }\n\t  };\n\t  return PostScriptCompiler;\n\t}();\n\texports.isPDFFunction = isPDFFunction;\n\texports.PDFFunctionFactory = PDFFunctionFactory;\n\texports.PostScriptEvaluator = PostScriptEvaluator;\n\texports.PostScriptCompiler = PostScriptCompiler;\n\t\n\t/***/ }),\n\t/* 82 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar pdfjsVersion = '1.10.100';\n\tvar pdfjsBuild = 'ea29ec83';\n\tvar pdfjsCoreWorker = __w_pdfjs_require__(83);\n\texports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;\n\t\n\t/***/ }),\n\t/* 83 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.WorkerMessageHandler = exports.WorkerTask = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _pdf_manager = __w_pdfjs_require__(127);\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar WorkerTask = function WorkerTaskClosure() {\n\t  function WorkerTask(name) {\n\t    this.name = name;\n\t    this.terminated = false;\n\t    this._capability = (0, _util.createPromiseCapability)();\n\t  }\n\t  WorkerTask.prototype = {\n\t    get finished() {\n\t      return this._capability.promise;\n\t    },\n\t    finish: function finish() {\n\t      this._capability.resolve();\n\t    },\n\t    terminate: function terminate() {\n\t      this.terminated = true;\n\t    },\n\t    ensureNotTerminated: function ensureNotTerminated() {\n\t      if (this.terminated) {\n\t        throw new Error('Worker task was terminated');\n\t      }\n\t    }\n\t  };\n\t  return WorkerTask;\n\t}();\n\t;\n\tvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n\t  function PDFWorkerStream(msgHandler) {\n\t    this._msgHandler = msgHandler;\n\t    this._contentLength = null;\n\t    this._fullRequestReader = null;\n\t    this._rangeRequestReaders = [];\n\t  }\n\t  PDFWorkerStream.prototype = {\n\t    getFullReader: function getFullReader() {\n\t      (0, _util.assert)(!this._fullRequestReader);\n\t      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\n\t      return this._fullRequestReader;\n\t    },\n\t    getRangeReader: function getRangeReader(begin, end) {\n\t      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\n\t      this._rangeRequestReaders.push(reader);\n\t      return reader;\n\t    },\n\t    cancelAllRequests: function cancelAllRequests(reason) {\n\t      if (this._fullRequestReader) {\n\t        this._fullRequestReader.cancel(reason);\n\t      }\n\t      var readers = this._rangeRequestReaders.slice(0);\n\t      readers.forEach(function (reader) {\n\t        reader.cancel(reason);\n\t      });\n\t    }\n\t  };\n\t  function PDFWorkerStreamReader(msgHandler) {\n\t    var _this = this;\n\t\n\t    this._msgHandler = msgHandler;\n\t    this._contentLength = null;\n\t    this._isRangeSupported = false;\n\t    this._isStreamingSupported = false;\n\t    var readableStream = this._msgHandler.sendWithStream('GetReader');\n\t    this._reader = readableStream.getReader();\n\t    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\n\t      _this._isStreamingSupported = data.isStreamingSupported;\n\t      _this._isRangeSupported = data.isRangeSupported;\n\t      _this._contentLength = data.contentLength;\n\t    });\n\t  }\n\t  PDFWorkerStreamReader.prototype = {\n\t    get headersReady() {\n\t      return this._headersReady;\n\t    },\n\t    get contentLength() {\n\t      return this._contentLength;\n\t    },\n\t    get isStreamingSupported() {\n\t      return this._isStreamingSupported;\n\t    },\n\t    get isRangeSupported() {\n\t      return this._isRangeSupported;\n\t    },\n\t    read: function read() {\n\t      return this._reader.read().then(function (_ref) {\n\t        var value = _ref.value,\n\t            done = _ref.done;\n\t\n\t        if (done) {\n\t          return {\n\t            value: undefined,\n\t            done: true\n\t          };\n\t        }\n\t        return {\n\t          value: value.buffer,\n\t          done: false\n\t        };\n\t      });\n\t    },\n\t    cancel: function cancel(reason) {\n\t      this._reader.cancel(reason);\n\t    }\n\t  };\n\t  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\n\t    this._msgHandler = msgHandler;\n\t    this.onProgress = null;\n\t    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\n\t      begin: begin,\n\t      end: end\n\t    });\n\t    this._reader = readableStream.getReader();\n\t  }\n\t  PDFWorkerStreamRangeReader.prototype = {\n\t    get isStreamingSupported() {\n\t      return false;\n\t    },\n\t    read: function read() {\n\t      return this._reader.read().then(function (_ref2) {\n\t        var value = _ref2.value,\n\t            done = _ref2.done;\n\t\n\t        if (done) {\n\t          return {\n\t            value: undefined,\n\t            done: true\n\t          };\n\t        }\n\t        return {\n\t          value: value.buffer,\n\t          done: false\n\t        };\n\t      });\n\t    },\n\t    cancel: function cancel(reason) {\n\t      this._reader.cancel(reason);\n\t    }\n\t  };\n\t  return PDFWorkerStream;\n\t}();\n\tvar WorkerMessageHandler = {\n\t  setup: function setup(handler, port) {\n\t    var testMessageProcessed = false;\n\t    handler.on('test', function wphSetupTest(data) {\n\t      if (testMessageProcessed) {\n\t        return;\n\t      }\n\t      testMessageProcessed = true;\n\t      if (!(data instanceof Uint8Array)) {\n\t        handler.send('test', 'main', false);\n\t        return;\n\t      }\n\t      var supportTransfers = data[0] === 255;\n\t      handler.postMessageTransfers = supportTransfers;\n\t      var xhr = new XMLHttpRequest();\n\t      var responseExists = 'response' in xhr;\n\t      try {\n\t        xhr.responseType;\n\t      } catch (e) {\n\t        responseExists = false;\n\t      }\n\t      if (!responseExists) {\n\t        handler.send('test', false);\n\t        return;\n\t      }\n\t      handler.send('test', {\n\t        supportTypedArray: true,\n\t        supportTransfers: supportTransfers\n\t      });\n\t    });\n\t    handler.on('configure', function wphConfigure(data) {\n\t      (0, _util.setVerbosityLevel)(data.verbosity);\n\t    });\n\t    handler.on('GetDocRequest', function wphSetupDoc(data) {\n\t      return WorkerMessageHandler.createDocumentHandler(data, port);\n\t    });\n\t  },\n\t  createDocumentHandler: function createDocumentHandler(docParams, port) {\n\t    var pdfManager;\n\t    var terminated = false;\n\t    var cancelXHRs = null;\n\t    var WorkerTasks = [];\n\t    var apiVersion = docParams.apiVersion;\n\t    var workerVersion = '1.10.100';\n\t    if (apiVersion !== null && apiVersion !== workerVersion) {\n\t      throw new Error('The API version \"' + apiVersion + '\" does not match ' + ('the Worker version \"' + workerVersion + '\".'));\n\t    }\n\t    var docId = docParams.docId;\n\t    var docBaseUrl = docParams.docBaseUrl;\n\t    var workerHandlerName = docParams.docId + '_worker';\n\t    var handler = new _util.MessageHandler(workerHandlerName, docId, port);\n\t    handler.postMessageTransfers = docParams.postMessageTransfers;\n\t    function ensureNotTerminated() {\n\t      if (terminated) {\n\t        throw new Error('Worker was terminated');\n\t      }\n\t    }\n\t    function startWorkerTask(task) {\n\t      WorkerTasks.push(task);\n\t    }\n\t    function finishWorkerTask(task) {\n\t      task.finish();\n\t      var i = WorkerTasks.indexOf(task);\n\t      WorkerTasks.splice(i, 1);\n\t    }\n\t    function loadDocument(recoveryMode) {\n\t      var loadDocumentCapability = (0, _util.createPromiseCapability)();\n\t      var parseSuccess = function parseSuccess() {\n\t        var numPagesPromise = pdfManager.ensureDoc('numPages');\n\t        var fingerprintPromise = pdfManager.ensureDoc('fingerprint');\n\t        var encryptedPromise = pdfManager.ensureXRef('encrypt');\n\t        Promise.all([numPagesPromise, fingerprintPromise, encryptedPromise]).then(function onDocReady(results) {\n\t          var doc = {\n\t            numPages: results[0],\n\t            fingerprint: results[1],\n\t            encrypted: !!results[2]\n\t          };\n\t          loadDocumentCapability.resolve(doc);\n\t        }, parseFailure);\n\t      };\n\t      var parseFailure = function parseFailure(e) {\n\t        loadDocumentCapability.reject(e);\n\t      };\n\t      pdfManager.ensureDoc('checkHeader', []).then(function () {\n\t        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n\t          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n\t        }, parseFailure);\n\t      }, parseFailure);\n\t      return loadDocumentCapability.promise;\n\t    }\n\t    function getPdfManager(data, evaluatorOptions) {\n\t      var pdfManagerCapability = (0, _util.createPromiseCapability)();\n\t      var pdfManager;\n\t      var source = data.source;\n\t      if (source.data) {\n\t        try {\n\t          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n\t          pdfManagerCapability.resolve(pdfManager);\n\t        } catch (ex) {\n\t          pdfManagerCapability.reject(ex);\n\t        }\n\t        return pdfManagerCapability.promise;\n\t      }\n\t      var pdfStream,\n\t          cachedChunks = [];\n\t      try {\n\t        pdfStream = new PDFWorkerStream(handler);\n\t      } catch (ex) {\n\t        pdfManagerCapability.reject(ex);\n\t        return pdfManagerCapability.promise;\n\t      }\n\t      var fullRequest = pdfStream.getFullReader();\n\t      fullRequest.headersReady.then(function () {\n\t        if (!fullRequest.isRangeSupported) {\n\t          return;\n\t        }\n\t        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n\t        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\n\t          msgHandler: handler,\n\t          url: source.url,\n\t          password: source.password,\n\t          length: fullRequest.contentLength,\n\t          disableAutoFetch: disableAutoFetch,\n\t          rangeChunkSize: source.rangeChunkSize\n\t        }, evaluatorOptions, docBaseUrl);\n\t        for (var i = 0; i < cachedChunks.length; i++) {\n\t          pdfManager.sendProgressiveData(cachedChunks[i]);\n\t        }\n\t        cachedChunks = [];\n\t        pdfManagerCapability.resolve(pdfManager);\n\t        cancelXHRs = null;\n\t      }).catch(function (reason) {\n\t        pdfManagerCapability.reject(reason);\n\t        cancelXHRs = null;\n\t      });\n\t      var loaded = 0;\n\t      var flushChunks = function flushChunks() {\n\t        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\n\t        if (source.length && pdfFile.length !== source.length) {\n\t          (0, _util.warn)('reported HTTP length is different from actual');\n\t        }\n\t        try {\n\t          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n\t          pdfManagerCapability.resolve(pdfManager);\n\t        } catch (ex) {\n\t          pdfManagerCapability.reject(ex);\n\t        }\n\t        cachedChunks = [];\n\t      };\n\t      var readPromise = new Promise(function (resolve, reject) {\n\t        var readChunk = function readChunk(chunk) {\n\t          try {\n\t            ensureNotTerminated();\n\t            if (chunk.done) {\n\t              if (!pdfManager) {\n\t                flushChunks();\n\t              }\n\t              cancelXHRs = null;\n\t              return;\n\t            }\n\t            var data = chunk.value;\n\t            loaded += (0, _util.arrayByteLength)(data);\n\t            if (!fullRequest.isStreamingSupported) {\n\t              handler.send('DocProgress', {\n\t                loaded: loaded,\n\t                total: Math.max(loaded, fullRequest.contentLength || 0)\n\t              });\n\t            }\n\t            if (pdfManager) {\n\t              pdfManager.sendProgressiveData(data);\n\t            } else {\n\t              cachedChunks.push(data);\n\t            }\n\t            fullRequest.read().then(readChunk, reject);\n\t          } catch (e) {\n\t            reject(e);\n\t          }\n\t        };\n\t        fullRequest.read().then(readChunk, reject);\n\t      });\n\t      readPromise.catch(function (e) {\n\t        pdfManagerCapability.reject(e);\n\t        cancelXHRs = null;\n\t      });\n\t      cancelXHRs = function cancelXHRs() {\n\t        pdfStream.cancelAllRequests('abort');\n\t      };\n\t      return pdfManagerCapability.promise;\n\t    }\n\t    function setupDoc(data) {\n\t      function onSuccess(doc) {\n\t        ensureNotTerminated();\n\t        handler.send('GetDoc', { pdfInfo: doc });\n\t      }\n\t      function onFailure(e) {\n\t        ensureNotTerminated();\n\t        if (e instanceof _util.PasswordException) {\n\t          var task = new WorkerTask('PasswordException: response ' + e.code);\n\t          startWorkerTask(task);\n\t          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n\t            finishWorkerTask(task);\n\t            pdfManager.updatePassword(data.password);\n\t            pdfManagerReady();\n\t          }).catch(function (ex) {\n\t            finishWorkerTask(task);\n\t            handler.send('PasswordException', ex);\n\t          }.bind(null, e));\n\t        } else if (e instanceof _util.InvalidPDFException) {\n\t          handler.send('InvalidPDF', e);\n\t        } else if (e instanceof _util.MissingPDFException) {\n\t          handler.send('MissingPDF', e);\n\t        } else if (e instanceof _util.UnexpectedResponseException) {\n\t          handler.send('UnexpectedResponse', e);\n\t        } else {\n\t          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\n\t        }\n\t      }\n\t      function pdfManagerReady() {\n\t        ensureNotTerminated();\n\t        loadDocument(false).then(onSuccess, function loadFailure(ex) {\n\t          ensureNotTerminated();\n\t          if (!(ex instanceof _util.XRefParseException)) {\n\t            onFailure(ex);\n\t            return;\n\t          }\n\t          pdfManager.requestLoadedStream();\n\t          pdfManager.onLoadedStream().then(function () {\n\t            ensureNotTerminated();\n\t            loadDocument(true).then(onSuccess, onFailure);\n\t          });\n\t        }, onFailure);\n\t      }\n\t      ensureNotTerminated();\n\t      var evaluatorOptions = {\n\t        forceDataSchema: data.disableCreateObjectURL,\n\t        maxImageSize: data.maxImageSize === undefined ? -1 : data.maxImageSize,\n\t        disableFontFace: data.disableFontFace,\n\t        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\n\t        ignoreErrors: data.ignoreErrors,\n\t        isEvalSupported: data.isEvalSupported\n\t      };\n\t      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n\t        if (terminated) {\n\t          newPdfManager.terminate();\n\t          throw new Error('Worker was terminated');\n\t        }\n\t        pdfManager = newPdfManager;\n\t        handler.send('PDFManagerReady', null);\n\t        pdfManager.onLoadedStream().then(function (stream) {\n\t          handler.send('DataLoaded', { length: stream.bytes.byteLength });\n\t        });\n\t      }).then(pdfManagerReady, onFailure);\n\t    }\n\t    handler.on('GetPage', function wphSetupGetPage(data) {\n\t      return pdfManager.getPage(data.pageIndex).then(function (page) {\n\t        var rotatePromise = pdfManager.ensure(page, 'rotate');\n\t        var refPromise = pdfManager.ensure(page, 'ref');\n\t        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n\t        var viewPromise = pdfManager.ensure(page, 'view');\n\t        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\n\t          return {\n\t            rotate: results[0],\n\t            ref: results[1],\n\t            userUnit: results[2],\n\t            view: results[3]\n\t          };\n\t        });\n\t      });\n\t    });\n\t    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n\t      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\n\t      var catalog = pdfManager.pdfDocument.catalog;\n\t      return catalog.getPageIndex(ref);\n\t    });\n\t    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n\t      return pdfManager.ensureCatalog('destinations');\n\t    });\n\t    handler.on('GetDestination', function wphSetupGetDestination(data) {\n\t      return pdfManager.ensureCatalog('getDestination', [data.id]);\n\t    });\n\t    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n\t      return pdfManager.ensureCatalog('pageLabels');\n\t    });\n\t    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\n\t      return pdfManager.ensureCatalog('pageMode');\n\t    });\n\t    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n\t      return pdfManager.ensureCatalog('attachments');\n\t    });\n\t    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n\t      return pdfManager.ensureCatalog('javaScript');\n\t    });\n\t    handler.on('GetOutline', function wphSetupGetOutline(data) {\n\t      return pdfManager.ensureCatalog('documentOutline');\n\t    });\n\t    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n\t      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\n\t    });\n\t    handler.on('GetData', function wphSetupGetData(data) {\n\t      pdfManager.requestLoadedStream();\n\t      return pdfManager.onLoadedStream().then(function (stream) {\n\t        return stream.bytes;\n\t      });\n\t    });\n\t    handler.on('GetStats', function wphSetupGetStats(data) {\n\t      return pdfManager.pdfDocument.xref.stats;\n\t    });\n\t    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n\t      return pdfManager.getPage(data.pageIndex).then(function (page) {\n\t        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n\t      });\n\t    });\n\t    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n\t      var pageIndex = data.pageIndex;\n\t      pdfManager.getPage(pageIndex).then(function (page) {\n\t        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n\t        startWorkerTask(task);\n\t        var pageNum = pageIndex + 1;\n\t        var start = Date.now();\n\t        page.getOperatorList({\n\t          handler: handler,\n\t          task: task,\n\t          intent: data.intent,\n\t          renderInteractiveForms: data.renderInteractiveForms\n\t        }).then(function (operatorList) {\n\t          finishWorkerTask(task);\n\t          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n\t        }, function (e) {\n\t          finishWorkerTask(task);\n\t          if (task.terminated) {\n\t            return;\n\t          }\n\t          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n\t          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n\t          var wrappedException;\n\t          if (typeof e === 'string') {\n\t            wrappedException = {\n\t              message: e,\n\t              stack: minimumStackMessage\n\t            };\n\t          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\n\t            wrappedException = {\n\t              message: e.message || e.toString(),\n\t              stack: e.stack || minimumStackMessage\n\t            };\n\t          } else {\n\t            wrappedException = {\n\t              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\n\t              stack: minimumStackMessage\n\t            };\n\t          }\n\t          handler.send('PageError', {\n\t            pageNum: pageNum,\n\t            error: wrappedException,\n\t            intent: data.intent\n\t          });\n\t        });\n\t      });\n\t    }, this);\n\t    handler.on('GetTextContent', function wphExtractText(data, sink) {\n\t      var pageIndex = data.pageIndex;\n\t      sink.onPull = function (desiredSize) {};\n\t      sink.onCancel = function (reason) {};\n\t      pdfManager.getPage(pageIndex).then(function (page) {\n\t        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n\t        startWorkerTask(task);\n\t        var pageNum = pageIndex + 1;\n\t        var start = Date.now();\n\t        page.extractTextContent({\n\t          handler: handler,\n\t          task: task,\n\t          sink: sink,\n\t          normalizeWhitespace: data.normalizeWhitespace,\n\t          combineTextItems: data.combineTextItems\n\t        }).then(function () {\n\t          finishWorkerTask(task);\n\t          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n\t          sink.close();\n\t        }, function (reason) {\n\t          finishWorkerTask(task);\n\t          if (task.terminated) {\n\t            return;\n\t          }\n\t          sink.error(reason);\n\t          throw reason;\n\t        });\n\t      });\n\t    });\n\t    handler.on('Cleanup', function wphCleanup(data) {\n\t      return pdfManager.cleanup();\n\t    });\n\t    handler.on('Terminate', function wphTerminate(data) {\n\t      terminated = true;\n\t      if (pdfManager) {\n\t        pdfManager.terminate();\n\t        pdfManager = null;\n\t      }\n\t      if (cancelXHRs) {\n\t        cancelXHRs();\n\t      }\n\t      var waitOn = [];\n\t      WorkerTasks.forEach(function (task) {\n\t        waitOn.push(task.finished);\n\t        task.terminate();\n\t      });\n\t      return Promise.all(waitOn).then(function () {\n\t        handler.destroy();\n\t        handler = null;\n\t      });\n\t    });\n\t    handler.on('Ready', function wphReady(data) {\n\t      setupDoc(docParams);\n\t      docParams = null;\n\t    });\n\t    return workerHandlerName;\n\t  },\n\t  initializeFromPort: function initializeFromPort(port) {\n\t    var handler = new _util.MessageHandler('worker', 'main', port);\n\t    WorkerMessageHandler.setup(handler, port);\n\t    handler.send('ready', null);\n\t  }\n\t};\n\tfunction isMessagePort(maybePort) {\n\t  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\n\t}\n\tif (typeof window === 'undefined' && !(0, _util.isNodeJS)() && typeof self !== 'undefined' && isMessagePort(self)) {\n\t  WorkerMessageHandler.initializeFromPort(self);\n\t}\n\texports.WorkerTask = WorkerTask;\n\texports.WorkerMessageHandler = WorkerMessageHandler;\n\t\n\t/***/ }),\n\t/* 84 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tif (typeof PDFJS === 'undefined' || !PDFJS.compatibilityChecked) {\n\t  var globalScope = __w_pdfjs_require__(85);\n\t  var userAgent = typeof navigator !== 'undefined' && navigator.userAgent || '';\n\t  var isAndroid = /Android/.test(userAgent);\n\t  var isAndroidPre3 = /Android\\s[0-2][^\\d]/.test(userAgent);\n\t  var isAndroidPre5 = /Android\\s[0-4][^\\d]/.test(userAgent);\n\t  var isChrome = userAgent.indexOf('Chrom') >= 0;\n\t  var isChromeWithRangeBug = /Chrome\\/(39|40)\\./.test(userAgent);\n\t  var isIOSChrome = userAgent.indexOf('CriOS') >= 0;\n\t  var isIE = userAgent.indexOf('Trident') >= 0;\n\t  var isIOS = /\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent);\n\t  var isOpera = userAgent.indexOf('Opera') >= 0;\n\t  var isSafari = /Safari\\//.test(userAgent) && !/(Chrome\\/|Android\\s)/.test(userAgent);\n\t  var hasDOM = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && (typeof document === 'undefined' ? 'undefined' : _typeof(document)) === 'object';\n\t  if (typeof PDFJS === 'undefined') {\n\t    globalScope.PDFJS = {};\n\t  }\n\t  PDFJS.compatibilityChecked = true;\n\t  (function checkTypedArrayCompatibility() {\n\t    if (typeof Uint8ClampedArray === 'undefined') {\n\t      globalScope.Uint8ClampedArray = __w_pdfjs_require__(86);\n\t    }\n\t    if (typeof Uint8Array !== 'undefined') {\n\t      if (typeof Uint8Array.prototype.subarray === 'undefined') {\n\t        Uint8Array.prototype.subarray = function subarray(start, end) {\n\t          return new Uint8Array(this.slice(start, end));\n\t        };\n\t        Float32Array.prototype.subarray = function subarray(start, end) {\n\t          return new Float32Array(this.slice(start, end));\n\t        };\n\t      }\n\t      if (typeof Float64Array === 'undefined') {\n\t        globalScope.Float64Array = Float32Array;\n\t      }\n\t      return;\n\t    }\n\t    function subarray(start, end) {\n\t      return new TypedArray(this.slice(start, end));\n\t    }\n\t    function setArrayOffset(array, offset) {\n\t      if (arguments.length < 2) {\n\t        offset = 0;\n\t      }\n\t      for (var i = 0, n = array.length; i < n; ++i, ++offset) {\n\t        this[offset] = array[i] & 0xFF;\n\t      }\n\t    }\n\t    function Uint32ArrayView(buffer, length) {\n\t      this.buffer = buffer;\n\t      this.byteLength = buffer.length;\n\t      this.length = length;\n\t      ensureUint32ArrayViewProps(this.length);\n\t    }\n\t    Uint32ArrayView.prototype = Object.create(null);\n\t    var uint32ArrayViewSetters = 0;\n\t    function createUint32ArrayProp(index) {\n\t      return {\n\t        get: function get() {\n\t          var buffer = this.buffer,\n\t              offset = index << 2;\n\t          return (buffer[offset] | buffer[offset + 1] << 8 | buffer[offset + 2] << 16 | buffer[offset + 3] << 24) >>> 0;\n\t        },\n\t        set: function set(value) {\n\t          var buffer = this.buffer,\n\t              offset = index << 2;\n\t          buffer[offset] = value & 255;\n\t          buffer[offset + 1] = value >> 8 & 255;\n\t          buffer[offset + 2] = value >> 16 & 255;\n\t          buffer[offset + 3] = value >>> 24 & 255;\n\t        }\n\t      };\n\t    }\n\t    function ensureUint32ArrayViewProps(length) {\n\t      while (uint32ArrayViewSetters < length) {\n\t        Object.defineProperty(Uint32ArrayView.prototype, uint32ArrayViewSetters, createUint32ArrayProp(uint32ArrayViewSetters));\n\t        uint32ArrayViewSetters++;\n\t      }\n\t    }\n\t    function TypedArray(arg1) {\n\t      var result, i, n;\n\t      if (typeof arg1 === 'number') {\n\t        result = [];\n\t        for (i = 0; i < arg1; ++i) {\n\t          result[i] = 0;\n\t        }\n\t      } else if ('slice' in arg1) {\n\t        result = arg1.slice(0);\n\t      } else {\n\t        result = [];\n\t        for (i = 0, n = arg1.length; i < n; ++i) {\n\t          result[i] = arg1[i];\n\t        }\n\t      }\n\t      result.subarray = subarray;\n\t      result.buffer = result;\n\t      result.byteLength = result.length;\n\t      result.set = setArrayOffset;\n\t      if ((typeof arg1 === 'undefined' ? 'undefined' : _typeof(arg1)) === 'object' && arg1.buffer) {\n\t        result.buffer = arg1.buffer;\n\t      }\n\t      return result;\n\t    }\n\t    globalScope.Uint8Array = TypedArray;\n\t    globalScope.Int8Array = TypedArray;\n\t    globalScope.Int32Array = TypedArray;\n\t    globalScope.Uint16Array = TypedArray;\n\t    globalScope.Float32Array = TypedArray;\n\t    globalScope.Float64Array = TypedArray;\n\t    globalScope.Uint32Array = function () {\n\t      if (arguments.length === 3) {\n\t        if (arguments[1] !== 0) {\n\t          throw new Error('offset !== 0 is not supported');\n\t        }\n\t        return new Uint32ArrayView(arguments[0], arguments[2]);\n\t      }\n\t      return TypedArray.apply(this, arguments);\n\t    };\n\t  })();\n\t  (function canvasPixelArrayBuffer() {\n\t    if (!hasDOM || !window.CanvasPixelArray) {\n\t      return;\n\t    }\n\t    var cpaProto = window.CanvasPixelArray.prototype;\n\t    if ('buffer' in cpaProto) {\n\t      return;\n\t    }\n\t    Object.defineProperty(cpaProto, 'buffer', {\n\t      get: function get() {\n\t        return this;\n\t      },\n\t\n\t      enumerable: false,\n\t      configurable: true\n\t    });\n\t    Object.defineProperty(cpaProto, 'byteLength', {\n\t      get: function get() {\n\t        return this.length;\n\t      },\n\t\n\t      enumerable: false,\n\t      configurable: true\n\t    });\n\t  })();\n\t  (function normalizeURLObject() {\n\t    if (!globalScope.URL) {\n\t      globalScope.URL = globalScope.webkitURL;\n\t    }\n\t  })();\n\t  (function checkObjectDefinePropertyCompatibility() {\n\t    if (typeof Object.defineProperty !== 'undefined') {\n\t      var definePropertyPossible = true;\n\t      try {\n\t        if (hasDOM) {\n\t          Object.defineProperty(new Image(), 'id', { value: 'test' });\n\t        }\n\t        var Test = function Test() {};\n\t        Test.prototype = {\n\t          get id() {}\n\t        };\n\t        Object.defineProperty(new Test(), 'id', {\n\t          value: '',\n\t          configurable: true,\n\t          enumerable: true,\n\t          writable: false\n\t        });\n\t      } catch (e) {\n\t        definePropertyPossible = false;\n\t      }\n\t      if (definePropertyPossible) {\n\t        return;\n\t      }\n\t    }\n\t    Object.defineProperty = function objectDefineProperty(obj, name, def) {\n\t      delete obj[name];\n\t      if ('get' in def) {\n\t        obj.__defineGetter__(name, def['get']);\n\t      }\n\t      if ('set' in def) {\n\t        obj.__defineSetter__(name, def['set']);\n\t      }\n\t      if ('value' in def) {\n\t        obj.__defineSetter__(name, function objectDefinePropertySetter(value) {\n\t          this.__defineGetter__(name, function objectDefinePropertyGetter() {\n\t            return value;\n\t          });\n\t          return value;\n\t        });\n\t        obj[name] = def.value;\n\t      }\n\t    };\n\t  })();\n\t  (function checkXMLHttpRequestResponseCompatibility() {\n\t    if (typeof XMLHttpRequest === 'undefined') {\n\t      return;\n\t    }\n\t    var xhrPrototype = XMLHttpRequest.prototype;\n\t    var xhr = new XMLHttpRequest();\n\t    if (!('overrideMimeType' in xhr)) {\n\t      Object.defineProperty(xhrPrototype, 'overrideMimeType', {\n\t        value: function xmlHttpRequestOverrideMimeType(mimeType) {}\n\t      });\n\t    }\n\t    if ('responseType' in xhr) {\n\t      return;\n\t    }\n\t    Object.defineProperty(xhrPrototype, 'responseType', {\n\t      get: function xmlHttpRequestGetResponseType() {\n\t        return this._responseType || 'text';\n\t      },\n\t      set: function xmlHttpRequestSetResponseType(value) {\n\t        if (value === 'text' || value === 'arraybuffer') {\n\t          this._responseType = value;\n\t          if (value === 'arraybuffer' && typeof this.overrideMimeType === 'function') {\n\t            this.overrideMimeType('text/plain; charset=x-user-defined');\n\t          }\n\t        }\n\t      }\n\t    });\n\t    if (typeof VBArray !== 'undefined') {\n\t      Object.defineProperty(xhrPrototype, 'response', {\n\t        get: function xmlHttpRequestResponseGet() {\n\t          if (this.responseType === 'arraybuffer') {\n\t            return new Uint8Array(new VBArray(this.responseBody).toArray());\n\t          }\n\t          return this.responseText;\n\t        }\n\t      });\n\t      return;\n\t    }\n\t    Object.defineProperty(xhrPrototype, 'response', {\n\t      get: function xmlHttpRequestResponseGet() {\n\t        if (this.responseType !== 'arraybuffer') {\n\t          return this.responseText;\n\t        }\n\t        var text = this.responseText;\n\t        var i,\n\t            n = text.length;\n\t        var result = new Uint8Array(n);\n\t        for (i = 0; i < n; ++i) {\n\t          result[i] = text.charCodeAt(i) & 0xFF;\n\t        }\n\t        return result.buffer;\n\t      }\n\t    });\n\t  })();\n\t  (function checkWindowBtoaCompatibility() {\n\t    if ('btoa' in globalScope) {\n\t      return;\n\t    }\n\t    var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\t    globalScope.btoa = function (chars) {\n\t      var buffer = '';\n\t      var i, n;\n\t      for (i = 0, n = chars.length; i < n; i += 3) {\n\t        var b1 = chars.charCodeAt(i) & 0xFF;\n\t        var b2 = chars.charCodeAt(i + 1) & 0xFF;\n\t        var b3 = chars.charCodeAt(i + 2) & 0xFF;\n\t        var d1 = b1 >> 2,\n\t            d2 = (b1 & 3) << 4 | b2 >> 4;\n\t        var d3 = i + 1 < n ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\n\t        var d4 = i + 2 < n ? b3 & 0x3F : 64;\n\t        buffer += digits.charAt(d1) + digits.charAt(d2) + digits.charAt(d3) + digits.charAt(d4);\n\t      }\n\t      return buffer;\n\t    };\n\t  })();\n\t  (function checkWindowAtobCompatibility() {\n\t    if ('atob' in globalScope) {\n\t      return;\n\t    }\n\t    var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\t    globalScope.atob = function (input) {\n\t      input = input.replace(/=+$/, '');\n\t      if (input.length % 4 === 1) {\n\t        throw new Error('bad atob input');\n\t      }\n\t      for (var bc = 0, bs, buffer, idx = 0, output = ''; buffer = input.charAt(idx++); ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n\t        buffer = digits.indexOf(buffer);\n\t      }\n\t      return output;\n\t    };\n\t  })();\n\t  (function checkFunctionPrototypeBindCompatibility() {\n\t    if (typeof Function.prototype.bind !== 'undefined') {\n\t      return;\n\t    }\n\t    Function.prototype.bind = function functionPrototypeBind(obj) {\n\t      var fn = this,\n\t          headArgs = Array.prototype.slice.call(arguments, 1);\n\t      var bound = function functionPrototypeBindBound() {\n\t        var args = headArgs.concat(Array.prototype.slice.call(arguments));\n\t        return fn.apply(obj, args);\n\t      };\n\t      return bound;\n\t    };\n\t  })();\n\t  (function checkDatasetProperty() {\n\t    if (!hasDOM) {\n\t      return;\n\t    }\n\t    var div = document.createElement('div');\n\t    if ('dataset' in div) {\n\t      return;\n\t    }\n\t    Object.defineProperty(HTMLElement.prototype, 'dataset', {\n\t      get: function get() {\n\t        if (this._dataset) {\n\t          return this._dataset;\n\t        }\n\t        var dataset = {};\n\t        for (var j = 0, jj = this.attributes.length; j < jj; j++) {\n\t          var attribute = this.attributes[j];\n\t          if (attribute.name.substring(0, 5) !== 'data-') {\n\t            continue;\n\t          }\n\t          var key = attribute.name.substring(5).replace(/\\-([a-z])/g, function (all, ch) {\n\t            return ch.toUpperCase();\n\t          });\n\t          dataset[key] = attribute.value;\n\t        }\n\t        Object.defineProperty(this, '_dataset', {\n\t          value: dataset,\n\t          writable: false,\n\t          enumerable: false\n\t        });\n\t        return dataset;\n\t      },\n\t\n\t      enumerable: true\n\t    });\n\t  })();\n\t  (function checkClassListProperty() {\n\t    function changeList(element, itemName, add, remove) {\n\t      var s = element.className || '';\n\t      var list = s.split(/\\s+/g);\n\t      if (list[0] === '') {\n\t        list.shift();\n\t      }\n\t      var index = list.indexOf(itemName);\n\t      if (index < 0 && add) {\n\t        list.push(itemName);\n\t      }\n\t      if (index >= 0 && remove) {\n\t        list.splice(index, 1);\n\t      }\n\t      element.className = list.join(' ');\n\t      return index >= 0;\n\t    }\n\t    if (!hasDOM) {\n\t      return;\n\t    }\n\t    var div = document.createElement('div');\n\t    if ('classList' in div) {\n\t      return;\n\t    }\n\t    var classListPrototype = {\n\t      add: function add(name) {\n\t        changeList(this.element, name, true, false);\n\t      },\n\t      contains: function contains(name) {\n\t        return changeList(this.element, name, false, false);\n\t      },\n\t      remove: function remove(name) {\n\t        changeList(this.element, name, false, true);\n\t      },\n\t      toggle: function toggle(name) {\n\t        changeList(this.element, name, true, true);\n\t      }\n\t    };\n\t    Object.defineProperty(HTMLElement.prototype, 'classList', {\n\t      get: function get() {\n\t        if (this._classList) {\n\t          return this._classList;\n\t        }\n\t        var classList = Object.create(classListPrototype, {\n\t          element: {\n\t            value: this,\n\t            writable: false,\n\t            enumerable: true\n\t          }\n\t        });\n\t        Object.defineProperty(this, '_classList', {\n\t          value: classList,\n\t          writable: false,\n\t          enumerable: false\n\t        });\n\t        return classList;\n\t      },\n\t\n\t      enumerable: true\n\t    });\n\t  })();\n\t  (function checkWorkerConsoleCompatibility() {\n\t    if (typeof importScripts === 'undefined' || 'console' in globalScope) {\n\t      return;\n\t    }\n\t    var consoleTimer = {};\n\t    var workerConsole = {\n\t      log: function log() {\n\t        var args = Array.prototype.slice.call(arguments);\n\t        globalScope.postMessage({\n\t          targetName: 'main',\n\t          action: 'console_log',\n\t          data: args\n\t        });\n\t      },\n\t      error: function error() {\n\t        var args = Array.prototype.slice.call(arguments);\n\t        globalScope.postMessage({\n\t          targetName: 'main',\n\t          action: 'console_error',\n\t          data: args\n\t        });\n\t      },\n\t      time: function time(name) {\n\t        consoleTimer[name] = Date.now();\n\t      },\n\t      timeEnd: function timeEnd(name) {\n\t        var time = consoleTimer[name];\n\t        if (!time) {\n\t          throw new Error('Unknown timer name ' + name);\n\t        }\n\t        this.log('Timer:', name, Date.now() - time);\n\t      }\n\t    };\n\t    globalScope.console = workerConsole;\n\t  })();\n\t  (function checkConsoleCompatibility() {\n\t    if (!hasDOM) {\n\t      return;\n\t    }\n\t    if (!('console' in window)) {\n\t      window.console = {\n\t        log: function log() {},\n\t        error: function error() {},\n\t        warn: function warn() {}\n\t      };\n\t      return;\n\t    }\n\t    if (!('bind' in console.log)) {\n\t      console.log = function (fn) {\n\t        return function (msg) {\n\t          return fn(msg);\n\t        };\n\t      }(console.log);\n\t      console.error = function (fn) {\n\t        return function (msg) {\n\t          return fn(msg);\n\t        };\n\t      }(console.error);\n\t      console.warn = function (fn) {\n\t        return function (msg) {\n\t          return fn(msg);\n\t        };\n\t      }(console.warn);\n\t      return;\n\t    }\n\t  })();\n\t  (function checkOnClickCompatibility() {\n\t    function ignoreIfTargetDisabled(event) {\n\t      if (isDisabled(event.target)) {\n\t        event.stopPropagation();\n\t      }\n\t    }\n\t    function isDisabled(node) {\n\t      return node.disabled || node.parentNode && isDisabled(node.parentNode);\n\t    }\n\t    if (isOpera) {\n\t      document.addEventListener('click', ignoreIfTargetDisabled, true);\n\t    }\n\t  })();\n\t  (function checkOnBlobSupport() {\n\t    if (isIE || isIOSChrome) {\n\t      PDFJS.disableCreateObjectURL = true;\n\t    }\n\t  })();\n\t  (function checkNavigatorLanguage() {\n\t    if (typeof navigator === 'undefined') {\n\t      return;\n\t    }\n\t    if ('language' in navigator) {\n\t      return;\n\t    }\n\t    PDFJS.locale = navigator.userLanguage || 'en-US';\n\t  })();\n\t  (function checkRangeRequests() {\n\t    if (isSafari || isAndroidPre3 || isChromeWithRangeBug || isIOS) {\n\t      PDFJS.disableRange = true;\n\t      PDFJS.disableStream = true;\n\t    }\n\t  })();\n\t  (function checkHistoryManipulation() {\n\t    if (!hasDOM) {\n\t      return;\n\t    }\n\t    if (!history.pushState || isAndroidPre3) {\n\t      PDFJS.disableHistory = true;\n\t    }\n\t  })();\n\t  (function checkSetPresenceInImageData() {\n\t    if (!hasDOM) {\n\t      return;\n\t    }\n\t    if (window.CanvasPixelArray) {\n\t      if (typeof window.CanvasPixelArray.prototype.set !== 'function') {\n\t        window.CanvasPixelArray.prototype.set = function (arr) {\n\t          for (var i = 0, ii = this.length; i < ii; i++) {\n\t            this[i] = arr[i];\n\t          }\n\t        };\n\t      }\n\t    } else {\n\t      var polyfill = false,\n\t          versionMatch;\n\t      if (isChrome) {\n\t        versionMatch = userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n\t        polyfill = versionMatch && parseInt(versionMatch[2]) < 21;\n\t      } else if (isAndroid) {\n\t        polyfill = isAndroidPre5;\n\t      } else if (isSafari) {\n\t        versionMatch = userAgent.match(/Version\\/([0-9]+)\\.([0-9]+)\\.([0-9]+) Safari\\//);\n\t        polyfill = versionMatch && parseInt(versionMatch[1]) < 6;\n\t      }\n\t      if (polyfill) {\n\t        var contextPrototype = window.CanvasRenderingContext2D.prototype;\n\t        var createImageData = contextPrototype.createImageData;\n\t        contextPrototype.createImageData = function (w, h) {\n\t          var imageData = createImageData.call(this, w, h);\n\t          imageData.data.set = function (arr) {\n\t            for (var i = 0, ii = this.length; i < ii; i++) {\n\t              this[i] = arr[i];\n\t            }\n\t          };\n\t          return imageData;\n\t        };\n\t        contextPrototype = null;\n\t      }\n\t    }\n\t  })();\n\t  (function checkRequestAnimationFrame() {\n\t    function installFakeAnimationFrameFunctions() {\n\t      window.requestAnimationFrame = function (callback) {\n\t        return window.setTimeout(callback, 20);\n\t      };\n\t      window.cancelAnimationFrame = function (timeoutID) {\n\t        window.clearTimeout(timeoutID);\n\t      };\n\t    }\n\t    if (!hasDOM) {\n\t      return;\n\t    }\n\t    if (isIOS) {\n\t      installFakeAnimationFrameFunctions();\n\t      return;\n\t    }\n\t    if ('requestAnimationFrame' in window) {\n\t      return;\n\t    }\n\t    window.requestAnimationFrame = window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame;\n\t    if (window.requestAnimationFrame) {\n\t      return;\n\t    }\n\t    installFakeAnimationFrameFunctions();\n\t  })();\n\t  (function checkCanvasSizeLimitation() {\n\t    if (isIOS || isAndroid) {\n\t      PDFJS.maxCanvasPixels = 5242880;\n\t    }\n\t  })();\n\t  (function checkFullscreenSupport() {\n\t    if (!hasDOM) {\n\t      return;\n\t    }\n\t    if (isIE && window.parent !== window) {\n\t      PDFJS.disableFullscreen = true;\n\t    }\n\t  })();\n\t  (function checkCurrentScript() {\n\t    if (!hasDOM) {\n\t      return;\n\t    }\n\t    if ('currentScript' in document) {\n\t      return;\n\t    }\n\t    Object.defineProperty(document, 'currentScript', {\n\t      get: function get() {\n\t        var scripts = document.getElementsByTagName('script');\n\t        return scripts[scripts.length - 1];\n\t      },\n\t\n\t      enumerable: true,\n\t      configurable: true\n\t    });\n\t  })();\n\t  (function checkInputTypeNumberAssign() {\n\t    if (!hasDOM) {\n\t      return;\n\t    }\n\t    var el = document.createElement('input');\n\t    try {\n\t      el.type = 'number';\n\t    } catch (ex) {\n\t      var inputProto = el.constructor.prototype;\n\t      var typeProperty = Object.getOwnPropertyDescriptor(inputProto, 'type');\n\t      Object.defineProperty(inputProto, 'type', {\n\t        get: function get() {\n\t          return typeProperty.get.call(this);\n\t        },\n\t        set: function set(value) {\n\t          typeProperty.set.call(this, value === 'number' ? 'text' : value);\n\t        },\n\t\n\t        enumerable: true,\n\t        configurable: true\n\t      });\n\t    }\n\t  })();\n\t  (function checkDocumentReadyState() {\n\t    if (!hasDOM) {\n\t      return;\n\t    }\n\t    if (!document.attachEvent) {\n\t      return;\n\t    }\n\t    var documentProto = document.constructor.prototype;\n\t    var readyStateProto = Object.getOwnPropertyDescriptor(documentProto, 'readyState');\n\t    Object.defineProperty(documentProto, 'readyState', {\n\t      get: function get() {\n\t        var value = readyStateProto.get.call(this);\n\t        return value === 'interactive' ? 'loading' : value;\n\t      },\n\t      set: function set(value) {\n\t        readyStateProto.set.call(this, value);\n\t      },\n\t\n\t      enumerable: true,\n\t      configurable: true\n\t    });\n\t  })();\n\t  (function checkChildNodeRemove() {\n\t    if (!hasDOM) {\n\t      return;\n\t    }\n\t    if (typeof Element.prototype.remove !== 'undefined') {\n\t      return;\n\t    }\n\t    Element.prototype.remove = function () {\n\t      if (this.parentNode) {\n\t        this.parentNode.removeChild(this);\n\t      }\n\t    };\n\t  })();\n\t  (function checkNumberIsNaN() {\n\t    if (Number.isNaN) {\n\t      return;\n\t    }\n\t    Number.isNaN = __w_pdfjs_require__(98);\n\t  })();\n\t  (function checkNumberIsInteger() {\n\t    if (Number.isInteger) {\n\t      return;\n\t    }\n\t    Number.isInteger = __w_pdfjs_require__(100);\n\t  })();\n\t  (function checkPromise() {\n\t    if (globalScope.Promise) {\n\t      return;\n\t    }\n\t    globalScope.Promise = __w_pdfjs_require__(103);\n\t  })();\n\t  (function checkWeakMap() {\n\t    if (globalScope.WeakMap) {\n\t      return;\n\t    }\n\t    globalScope.WeakMap = __w_pdfjs_require__(113);\n\t  })();\n\t  (function checkURLConstructor() {\n\t    var hasWorkingUrl = false;\n\t    try {\n\t      if (typeof URL === 'function' && _typeof(URL.prototype) === 'object' && 'origin' in URL.prototype) {\n\t        var u = new URL('b', 'http://a');\n\t        u.pathname = 'c%20d';\n\t        hasWorkingUrl = u.href === 'http://a/c%20d';\n\t      }\n\t    } catch (e) {}\n\t    if (hasWorkingUrl) {\n\t      return;\n\t    }\n\t    var relative = Object.create(null);\n\t    relative['ftp'] = 21;\n\t    relative['file'] = 0;\n\t    relative['gopher'] = 70;\n\t    relative['http'] = 80;\n\t    relative['https'] = 443;\n\t    relative['ws'] = 80;\n\t    relative['wss'] = 443;\n\t    var relativePathDotMapping = Object.create(null);\n\t    relativePathDotMapping['%2e'] = '.';\n\t    relativePathDotMapping['.%2e'] = '..';\n\t    relativePathDotMapping['%2e.'] = '..';\n\t    relativePathDotMapping['%2e%2e'] = '..';\n\t    function isRelativeScheme(scheme) {\n\t      return relative[scheme] !== undefined;\n\t    }\n\t    function invalid() {\n\t      clear.call(this);\n\t      this._isInvalid = true;\n\t    }\n\t    function IDNAToASCII(h) {\n\t      if (h === '') {\n\t        invalid.call(this);\n\t      }\n\t      return h.toLowerCase();\n\t    }\n\t    function percentEscape(c) {\n\t      var unicode = c.charCodeAt(0);\n\t      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x3F, 0x60].indexOf(unicode) === -1) {\n\t        return c;\n\t      }\n\t      return encodeURIComponent(c);\n\t    }\n\t    function percentEscapeQuery(c) {\n\t      var unicode = c.charCodeAt(0);\n\t      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x60].indexOf(unicode) === -1) {\n\t        return c;\n\t      }\n\t      return encodeURIComponent(c);\n\t    }\n\t    var EOF,\n\t        ALPHA = /[a-zA-Z]/,\n\t        ALPHANUMERIC = /[a-zA-Z0-9\\+\\-\\.]/;\n\t    function parse(input, stateOverride, base) {\n\t      function err(message) {\n\t        errors.push(message);\n\t      }\n\t      var state = stateOverride || 'scheme start',\n\t          cursor = 0,\n\t          buffer = '',\n\t          seenAt = false,\n\t          seenBracket = false,\n\t          errors = [];\n\t      loop: while ((input[cursor - 1] !== EOF || cursor === 0) && !this._isInvalid) {\n\t        var c = input[cursor];\n\t        switch (state) {\n\t          case 'scheme start':\n\t            if (c && ALPHA.test(c)) {\n\t              buffer += c.toLowerCase();\n\t              state = 'scheme';\n\t            } else if (!stateOverride) {\n\t              buffer = '';\n\t              state = 'no scheme';\n\t              continue;\n\t            } else {\n\t              err('Invalid scheme.');\n\t              break loop;\n\t            }\n\t            break;\n\t          case 'scheme':\n\t            if (c && ALPHANUMERIC.test(c)) {\n\t              buffer += c.toLowerCase();\n\t            } else if (c === ':') {\n\t              this._scheme = buffer;\n\t              buffer = '';\n\t              if (stateOverride) {\n\t                break loop;\n\t              }\n\t              if (isRelativeScheme(this._scheme)) {\n\t                this._isRelative = true;\n\t              }\n\t              if (this._scheme === 'file') {\n\t                state = 'relative';\n\t              } else if (this._isRelative && base && base._scheme === this._scheme) {\n\t                state = 'relative or authority';\n\t              } else if (this._isRelative) {\n\t                state = 'authority first slash';\n\t              } else {\n\t                state = 'scheme data';\n\t              }\n\t            } else if (!stateOverride) {\n\t              buffer = '';\n\t              cursor = 0;\n\t              state = 'no scheme';\n\t              continue;\n\t            } else if (c === EOF) {\n\t              break loop;\n\t            } else {\n\t              err('Code point not allowed in scheme: ' + c);\n\t              break loop;\n\t            }\n\t            break;\n\t          case 'scheme data':\n\t            if (c === '?') {\n\t              this._query = '?';\n\t              state = 'query';\n\t            } else if (c === '#') {\n\t              this._fragment = '#';\n\t              state = 'fragment';\n\t            } else {\n\t              if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n\t                this._schemeData += percentEscape(c);\n\t              }\n\t            }\n\t            break;\n\t          case 'no scheme':\n\t            if (!base || !isRelativeScheme(base._scheme)) {\n\t              err('Missing scheme.');\n\t              invalid.call(this);\n\t            } else {\n\t              state = 'relative';\n\t              continue;\n\t            }\n\t            break;\n\t          case 'relative or authority':\n\t            if (c === '/' && input[cursor + 1] === '/') {\n\t              state = 'authority ignore slashes';\n\t            } else {\n\t              err('Expected /, got: ' + c);\n\t              state = 'relative';\n\t              continue;\n\t            }\n\t            break;\n\t          case 'relative':\n\t            this._isRelative = true;\n\t            if (this._scheme !== 'file') {\n\t              this._scheme = base._scheme;\n\t            }\n\t            if (c === EOF) {\n\t              this._host = base._host;\n\t              this._port = base._port;\n\t              this._path = base._path.slice();\n\t              this._query = base._query;\n\t              this._username = base._username;\n\t              this._password = base._password;\n\t              break loop;\n\t            } else if (c === '/' || c === '\\\\') {\n\t              if (c === '\\\\') {\n\t                err('\\\\ is an invalid code point.');\n\t              }\n\t              state = 'relative slash';\n\t            } else if (c === '?') {\n\t              this._host = base._host;\n\t              this._port = base._port;\n\t              this._path = base._path.slice();\n\t              this._query = '?';\n\t              this._username = base._username;\n\t              this._password = base._password;\n\t              state = 'query';\n\t            } else if (c === '#') {\n\t              this._host = base._host;\n\t              this._port = base._port;\n\t              this._path = base._path.slice();\n\t              this._query = base._query;\n\t              this._fragment = '#';\n\t              this._username = base._username;\n\t              this._password = base._password;\n\t              state = 'fragment';\n\t            } else {\n\t              var nextC = input[cursor + 1];\n\t              var nextNextC = input[cursor + 2];\n\t              if (this._scheme !== 'file' || !ALPHA.test(c) || nextC !== ':' && nextC !== '|' || nextNextC !== EOF && nextNextC !== '/' && nextNextC !== '\\\\' && nextNextC !== '?' && nextNextC !== '#') {\n\t                this._host = base._host;\n\t                this._port = base._port;\n\t                this._username = base._username;\n\t                this._password = base._password;\n\t                this._path = base._path.slice();\n\t                this._path.pop();\n\t              }\n\t              state = 'relative path';\n\t              continue;\n\t            }\n\t            break;\n\t          case 'relative slash':\n\t            if (c === '/' || c === '\\\\') {\n\t              if (c === '\\\\') {\n\t                err('\\\\ is an invalid code point.');\n\t              }\n\t              if (this._scheme === 'file') {\n\t                state = 'file host';\n\t              } else {\n\t                state = 'authority ignore slashes';\n\t              }\n\t            } else {\n\t              if (this._scheme !== 'file') {\n\t                this._host = base._host;\n\t                this._port = base._port;\n\t                this._username = base._username;\n\t                this._password = base._password;\n\t              }\n\t              state = 'relative path';\n\t              continue;\n\t            }\n\t            break;\n\t          case 'authority first slash':\n\t            if (c === '/') {\n\t              state = 'authority second slash';\n\t            } else {\n\t              err('Expected \\'/\\', got: ' + c);\n\t              state = 'authority ignore slashes';\n\t              continue;\n\t            }\n\t            break;\n\t          case 'authority second slash':\n\t            state = 'authority ignore slashes';\n\t            if (c !== '/') {\n\t              err('Expected \\'/\\', got: ' + c);\n\t              continue;\n\t            }\n\t            break;\n\t          case 'authority ignore slashes':\n\t            if (c !== '/' && c !== '\\\\') {\n\t              state = 'authority';\n\t              continue;\n\t            } else {\n\t              err('Expected authority, got: ' + c);\n\t            }\n\t            break;\n\t          case 'authority':\n\t            if (c === '@') {\n\t              if (seenAt) {\n\t                err('@ already seen.');\n\t                buffer += '%40';\n\t              }\n\t              seenAt = true;\n\t              for (var i = 0; i < buffer.length; i++) {\n\t                var cp = buffer[i];\n\t                if (cp === '\\t' || cp === '\\n' || cp === '\\r') {\n\t                  err('Invalid whitespace in authority.');\n\t                  continue;\n\t                }\n\t                if (cp === ':' && this._password === null) {\n\t                  this._password = '';\n\t                  continue;\n\t                }\n\t                var tempC = percentEscape(cp);\n\t                if (this._password !== null) {\n\t                  this._password += tempC;\n\t                } else {\n\t                  this._username += tempC;\n\t                }\n\t              }\n\t              buffer = '';\n\t            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n\t              cursor -= buffer.length;\n\t              buffer = '';\n\t              state = 'host';\n\t              continue;\n\t            } else {\n\t              buffer += c;\n\t            }\n\t            break;\n\t          case 'file host':\n\t            if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n\t              if (buffer.length === 2 && ALPHA.test(buffer[0]) && (buffer[1] === ':' || buffer[1] === '|')) {\n\t                state = 'relative path';\n\t              } else if (buffer.length === 0) {\n\t                state = 'relative path start';\n\t              } else {\n\t                this._host = IDNAToASCII.call(this, buffer);\n\t                buffer = '';\n\t                state = 'relative path start';\n\t              }\n\t              continue;\n\t            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n\t              err('Invalid whitespace in file host.');\n\t            } else {\n\t              buffer += c;\n\t            }\n\t            break;\n\t          case 'host':\n\t          case 'hostname':\n\t            if (c === ':' && !seenBracket) {\n\t              this._host = IDNAToASCII.call(this, buffer);\n\t              buffer = '';\n\t              state = 'port';\n\t              if (stateOverride === 'hostname') {\n\t                break loop;\n\t              }\n\t            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n\t              this._host = IDNAToASCII.call(this, buffer);\n\t              buffer = '';\n\t              state = 'relative path start';\n\t              if (stateOverride) {\n\t                break loop;\n\t              }\n\t              continue;\n\t            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n\t              if (c === '[') {\n\t                seenBracket = true;\n\t              } else if (c === ']') {\n\t                seenBracket = false;\n\t              }\n\t              buffer += c;\n\t            } else {\n\t              err('Invalid code point in host/hostname: ' + c);\n\t            }\n\t            break;\n\t          case 'port':\n\t            if (/[0-9]/.test(c)) {\n\t              buffer += c;\n\t            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#' || stateOverride) {\n\t              if (buffer !== '') {\n\t                var temp = parseInt(buffer, 10);\n\t                if (temp !== relative[this._scheme]) {\n\t                  this._port = temp + '';\n\t                }\n\t                buffer = '';\n\t              }\n\t              if (stateOverride) {\n\t                break loop;\n\t              }\n\t              state = 'relative path start';\n\t              continue;\n\t            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n\t              err('Invalid code point in port: ' + c);\n\t            } else {\n\t              invalid.call(this);\n\t            }\n\t            break;\n\t          case 'relative path start':\n\t            if (c === '\\\\') {\n\t              err('\\'\\\\\\' not allowed in path.');\n\t            }\n\t            state = 'relative path';\n\t            if (c !== '/' && c !== '\\\\') {\n\t              continue;\n\t            }\n\t            break;\n\t          case 'relative path':\n\t            if (c === EOF || c === '/' || c === '\\\\' || !stateOverride && (c === '?' || c === '#')) {\n\t              if (c === '\\\\') {\n\t                err('\\\\ not allowed in relative path.');\n\t              }\n\t              var tmp;\n\t              if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {\n\t                buffer = tmp;\n\t              }\n\t              if (buffer === '..') {\n\t                this._path.pop();\n\t                if (c !== '/' && c !== '\\\\') {\n\t                  this._path.push('');\n\t                }\n\t              } else if (buffer === '.' && c !== '/' && c !== '\\\\') {\n\t                this._path.push('');\n\t              } else if (buffer !== '.') {\n\t                if (this._scheme === 'file' && this._path.length === 0 && buffer.length === 2 && ALPHA.test(buffer[0]) && buffer[1] === '|') {\n\t                  buffer = buffer[0] + ':';\n\t                }\n\t                this._path.push(buffer);\n\t              }\n\t              buffer = '';\n\t              if (c === '?') {\n\t                this._query = '?';\n\t                state = 'query';\n\t              } else if (c === '#') {\n\t                this._fragment = '#';\n\t                state = 'fragment';\n\t              }\n\t            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n\t              buffer += percentEscape(c);\n\t            }\n\t            break;\n\t          case 'query':\n\t            if (!stateOverride && c === '#') {\n\t              this._fragment = '#';\n\t              state = 'fragment';\n\t            } else if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n\t              this._query += percentEscapeQuery(c);\n\t            }\n\t            break;\n\t          case 'fragment':\n\t            if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n\t              this._fragment += c;\n\t            }\n\t            break;\n\t        }\n\t        cursor++;\n\t      }\n\t    }\n\t    function clear() {\n\t      this._scheme = '';\n\t      this._schemeData = '';\n\t      this._username = '';\n\t      this._password = null;\n\t      this._host = '';\n\t      this._port = '';\n\t      this._path = [];\n\t      this._query = '';\n\t      this._fragment = '';\n\t      this._isInvalid = false;\n\t      this._isRelative = false;\n\t    }\n\t    function JURL(url, base) {\n\t      if (base !== undefined && !(base instanceof JURL)) {\n\t        base = new JURL(String(base));\n\t      }\n\t      this._url = url;\n\t      clear.call(this);\n\t      var input = url.replace(/^[ \\t\\r\\n\\f]+|[ \\t\\r\\n\\f]+$/g, '');\n\t      parse.call(this, input, null, base);\n\t    }\n\t    JURL.prototype = {\n\t      toString: function toString() {\n\t        return this.href;\n\t      },\n\t\n\t      get href() {\n\t        if (this._isInvalid) {\n\t          return this._url;\n\t        }\n\t        var authority = '';\n\t        if (this._username !== '' || this._password !== null) {\n\t          authority = this._username + (this._password !== null ? ':' + this._password : '') + '@';\n\t        }\n\t        return this.protocol + (this._isRelative ? '//' + authority + this.host : '') + this.pathname + this._query + this._fragment;\n\t      },\n\t      set href(value) {\n\t        clear.call(this);\n\t        parse.call(this, value);\n\t      },\n\t      get protocol() {\n\t        return this._scheme + ':';\n\t      },\n\t      set protocol(value) {\n\t        if (this._isInvalid) {\n\t          return;\n\t        }\n\t        parse.call(this, value + ':', 'scheme start');\n\t      },\n\t      get host() {\n\t        return this._isInvalid ? '' : this._port ? this._host + ':' + this._port : this._host;\n\t      },\n\t      set host(value) {\n\t        if (this._isInvalid || !this._isRelative) {\n\t          return;\n\t        }\n\t        parse.call(this, value, 'host');\n\t      },\n\t      get hostname() {\n\t        return this._host;\n\t      },\n\t      set hostname(value) {\n\t        if (this._isInvalid || !this._isRelative) {\n\t          return;\n\t        }\n\t        parse.call(this, value, 'hostname');\n\t      },\n\t      get port() {\n\t        return this._port;\n\t      },\n\t      set port(value) {\n\t        if (this._isInvalid || !this._isRelative) {\n\t          return;\n\t        }\n\t        parse.call(this, value, 'port');\n\t      },\n\t      get pathname() {\n\t        return this._isInvalid ? '' : this._isRelative ? '/' + this._path.join('/') : this._schemeData;\n\t      },\n\t      set pathname(value) {\n\t        if (this._isInvalid || !this._isRelative) {\n\t          return;\n\t        }\n\t        this._path = [];\n\t        parse.call(this, value, 'relative path start');\n\t      },\n\t      get search() {\n\t        return this._isInvalid || !this._query || this._query === '?' ? '' : this._query;\n\t      },\n\t      set search(value) {\n\t        if (this._isInvalid || !this._isRelative) {\n\t          return;\n\t        }\n\t        this._query = '?';\n\t        if (value[0] === '?') {\n\t          value = value.slice(1);\n\t        }\n\t        parse.call(this, value, 'query');\n\t      },\n\t      get hash() {\n\t        return this._isInvalid || !this._fragment || this._fragment === '#' ? '' : this._fragment;\n\t      },\n\t      set hash(value) {\n\t        if (this._isInvalid) {\n\t          return;\n\t        }\n\t        this._fragment = '#';\n\t        if (value[0] === '#') {\n\t          value = value.slice(1);\n\t        }\n\t        parse.call(this, value, 'fragment');\n\t      },\n\t      get origin() {\n\t        var host;\n\t        if (this._isInvalid || !this._scheme) {\n\t          return '';\n\t        }\n\t        switch (this._scheme) {\n\t          case 'data':\n\t          case 'file':\n\t          case 'javascript':\n\t          case 'mailto':\n\t            return 'null';\n\t          case 'blob':\n\t            try {\n\t              return new JURL(this._schemeData).origin || 'null';\n\t            } catch (_) {}\n\t            return 'null';\n\t        }\n\t        host = this.host;\n\t        if (!host) {\n\t          return '';\n\t        }\n\t        return this._scheme + '://' + host;\n\t      }\n\t    };\n\t    var OriginalURL = globalScope.URL;\n\t    if (OriginalURL) {\n\t      JURL.createObjectURL = function (blob) {\n\t        return OriginalURL.createObjectURL.apply(OriginalURL, arguments);\n\t      };\n\t      JURL.revokeObjectURL = function (url) {\n\t        OriginalURL.revokeObjectURL(url);\n\t      };\n\t    }\n\t    globalScope.URL = JURL;\n\t  })();\n\t}\n\t\n\t/***/ }),\n\t/* 85 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tmodule.exports = typeof window !== 'undefined' && window.Math === Math ? window : typeof global !== 'undefined' && global.Math === Math ? global : typeof self !== 'undefined' && self.Math === Math ? self : {};\n\t\n\t/***/ }),\n\t/* 86 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\t__w_pdfjs_require__(87);\n\tmodule.exports = __w_pdfjs_require__(6).Uint8ClampedArray;\n\t\n\t/***/ }),\n\t/* 87 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\t__w_pdfjs_require__(88)('Uint8', 1, function (init) {\n\t  return function Uint8ClampedArray(data, byteOffset, length) {\n\t    return init(this, data, byteOffset, length);\n\t  };\n\t}, true);\n\t\n\t/***/ }),\n\t/* 88 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tif (__w_pdfjs_require__(10)) {\n\t  var LIBRARY = __w_pdfjs_require__(21);\n\t  var global = __w_pdfjs_require__(1);\n\t  var fails = __w_pdfjs_require__(11);\n\t  var $export = __w_pdfjs_require__(7);\n\t  var $typed = __w_pdfjs_require__(49);\n\t  var $buffer = __w_pdfjs_require__(89);\n\t  var ctx = __w_pdfjs_require__(13);\n\t  var anInstance = __w_pdfjs_require__(24);\n\t  var propertyDesc = __w_pdfjs_require__(29);\n\t  var hide = __w_pdfjs_require__(8);\n\t  var redefineAll = __w_pdfjs_require__(23);\n\t  var toInteger = __w_pdfjs_require__(18);\n\t  var toLength = __w_pdfjs_require__(14);\n\t  var toIndex = __w_pdfjs_require__(50);\n\t  var toAbsoluteIndex = __w_pdfjs_require__(31);\n\t  var toPrimitive = __w_pdfjs_require__(36);\n\t  var has = __w_pdfjs_require__(12);\n\t  var classof = __w_pdfjs_require__(32);\n\t  var isObject = __w_pdfjs_require__(3);\n\t  var toObject = __w_pdfjs_require__(19);\n\t  var isArrayIter = __w_pdfjs_require__(56);\n\t  var create = __w_pdfjs_require__(57);\n\t  var getPrototypeOf = __w_pdfjs_require__(59);\n\t  var gOPN = __w_pdfjs_require__(51).f;\n\t  var getIterFn = __w_pdfjs_require__(60);\n\t  var uid = __w_pdfjs_require__(17);\n\t  var wks = __w_pdfjs_require__(4);\n\t  var createArrayMethod = __w_pdfjs_require__(42);\n\t  var createArrayIncludes = __w_pdfjs_require__(53);\n\t  var speciesConstructor = __w_pdfjs_require__(43);\n\t  var ArrayIterators = __w_pdfjs_require__(61);\n\t  var Iterators = __w_pdfjs_require__(20);\n\t  var $iterDetect = __w_pdfjs_require__(44);\n\t  var setSpecies = __w_pdfjs_require__(63);\n\t  var arrayFill = __w_pdfjs_require__(55);\n\t  var arrayCopyWithin = __w_pdfjs_require__(97);\n\t  var $DP = __w_pdfjs_require__(15);\n\t  var $GOPD = __w_pdfjs_require__(64);\n\t  var dP = $DP.f;\n\t  var gOPD = $GOPD.f;\n\t  var RangeError = global.RangeError;\n\t  var TypeError = global.TypeError;\n\t  var Uint8Array = global.Uint8Array;\n\t  var ARRAY_BUFFER = 'ArrayBuffer';\n\t  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;\n\t  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\n\t  var PROTOTYPE = 'prototype';\n\t  var ArrayProto = Array[PROTOTYPE];\n\t  var $ArrayBuffer = $buffer.ArrayBuffer;\n\t  var $DataView = $buffer.DataView;\n\t  var arrayForEach = createArrayMethod(0);\n\t  var arrayFilter = createArrayMethod(2);\n\t  var arraySome = createArrayMethod(3);\n\t  var arrayEvery = createArrayMethod(4);\n\t  var arrayFind = createArrayMethod(5);\n\t  var arrayFindIndex = createArrayMethod(6);\n\t  var arrayIncludes = createArrayIncludes(true);\n\t  var arrayIndexOf = createArrayIncludes(false);\n\t  var arrayValues = ArrayIterators.values;\n\t  var arrayKeys = ArrayIterators.keys;\n\t  var arrayEntries = ArrayIterators.entries;\n\t  var arrayLastIndexOf = ArrayProto.lastIndexOf;\n\t  var arrayReduce = ArrayProto.reduce;\n\t  var arrayReduceRight = ArrayProto.reduceRight;\n\t  var arrayJoin = ArrayProto.join;\n\t  var arraySort = ArrayProto.sort;\n\t  var arraySlice = ArrayProto.slice;\n\t  var arrayToString = ArrayProto.toString;\n\t  var arrayToLocaleString = ArrayProto.toLocaleString;\n\t  var ITERATOR = wks('iterator');\n\t  var TAG = wks('toStringTag');\n\t  var TYPED_CONSTRUCTOR = uid('typed_constructor');\n\t  var DEF_CONSTRUCTOR = uid('def_constructor');\n\t  var ALL_CONSTRUCTORS = $typed.CONSTR;\n\t  var TYPED_ARRAY = $typed.TYPED;\n\t  var VIEW = $typed.VIEW;\n\t  var WRONG_LENGTH = 'Wrong length!';\n\t  var $map = createArrayMethod(1, function (O, length) {\n\t    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);\n\t  });\n\t  var LITTLE_ENDIAN = fails(function () {\n\t    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;\n\t  });\n\t  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {\n\t    new Uint8Array(1).set({});\n\t  });\n\t  var toOffset = function toOffset(it, BYTES) {\n\t    var offset = toInteger(it);\n\t    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');\n\t    return offset;\n\t  };\n\t  var validate = function validate(it) {\n\t    if (isObject(it) && TYPED_ARRAY in it) return it;\n\t    throw TypeError(it + ' is not a typed array!');\n\t  };\n\t  var allocate = function allocate(C, length) {\n\t    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {\n\t      throw TypeError('It is not a typed array constructor!');\n\t    }\n\t    return new C(length);\n\t  };\n\t  var speciesFromList = function speciesFromList(O, list) {\n\t    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);\n\t  };\n\t  var fromList = function fromList(C, list) {\n\t    var index = 0;\n\t    var length = list.length;\n\t    var result = allocate(C, length);\n\t    while (length > index) {\n\t      result[index] = list[index++];\n\t    }return result;\n\t  };\n\t  var addGetter = function addGetter(it, key, internal) {\n\t    dP(it, key, {\n\t      get: function get() {\n\t        return this._d[internal];\n\t      }\n\t    });\n\t  };\n\t  var $from = function from(source) {\n\t    var O = toObject(source);\n\t    var aLen = arguments.length;\n\t    var mapfn = aLen > 1 ? arguments[1] : undefined;\n\t    var mapping = mapfn !== undefined;\n\t    var iterFn = getIterFn(O);\n\t    var i, length, values, result, step, iterator;\n\t    if (iterFn != undefined && !isArrayIter(iterFn)) {\n\t      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {\n\t        values.push(step.value);\n\t      }\n\t      O = values;\n\t    }\n\t    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);\n\t    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {\n\t      result[i] = mapping ? mapfn(O[i], i) : O[i];\n\t    }\n\t    return result;\n\t  };\n\t  var $of = function of() {\n\t    var index = 0;\n\t    var length = arguments.length;\n\t    var result = allocate(this, length);\n\t    while (length > index) {\n\t      result[index] = arguments[index++];\n\t    }return result;\n\t  };\n\t  var TO_LOCALE_BUG = !!Uint8Array && fails(function () {\n\t    arrayToLocaleString.call(new Uint8Array(1));\n\t  });\n\t  var $toLocaleString = function toLocaleString() {\n\t    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);\n\t  };\n\t  var proto = {\n\t    copyWithin: function copyWithin(target, start) {\n\t      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n\t    },\n\t    every: function every(callbackfn) {\n\t      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    fill: function fill(value) {\n\t      return arrayFill.apply(validate(this), arguments);\n\t    },\n\t    filter: function filter(callbackfn) {\n\t      return speciesFromList(this, arrayFilter(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined));\n\t    },\n\t    find: function find(predicate) {\n\t      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    findIndex: function findIndex(predicate) {\n\t      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    forEach: function forEach(callbackfn) {\n\t      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    indexOf: function indexOf(searchElement) {\n\t      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    includes: function includes(searchElement) {\n\t      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    join: function join(separator) {\n\t      return arrayJoin.apply(validate(this), arguments);\n\t    },\n\t    lastIndexOf: function lastIndexOf(searchElement) {\n\t      return arrayLastIndexOf.apply(validate(this), arguments);\n\t    },\n\t    map: function map(mapfn) {\n\t      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    reduce: function reduce(callbackfn) {\n\t      return arrayReduce.apply(validate(this), arguments);\n\t    },\n\t    reduceRight: function reduceRight(callbackfn) {\n\t      return arrayReduceRight.apply(validate(this), arguments);\n\t    },\n\t    reverse: function reverse() {\n\t      var that = this;\n\t      var length = validate(that).length;\n\t      var middle = Math.floor(length / 2);\n\t      var index = 0;\n\t      var value;\n\t      while (index < middle) {\n\t        value = that[index];\n\t        that[index++] = that[--length];\n\t        that[length] = value;\n\t      }\n\t      return that;\n\t    },\n\t    some: function some(callbackfn) {\n\t      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n\t    },\n\t    sort: function sort(comparefn) {\n\t      return arraySort.call(validate(this), comparefn);\n\t    },\n\t    subarray: function subarray(begin, end) {\n\t      var O = validate(this);\n\t      var length = O.length;\n\t      var $begin = toAbsoluteIndex(begin, length);\n\t      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(O.buffer, O.byteOffset + $begin * O.BYTES_PER_ELEMENT, toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin));\n\t    }\n\t  };\n\t  var $slice = function slice(start, end) {\n\t    return speciesFromList(this, arraySlice.call(validate(this), start, end));\n\t  };\n\t  var $set = function set(arrayLike) {\n\t    validate(this);\n\t    var offset = toOffset(arguments[1], 1);\n\t    var length = this.length;\n\t    var src = toObject(arrayLike);\n\t    var len = toLength(src.length);\n\t    var index = 0;\n\t    if (len + offset > length) throw RangeError(WRONG_LENGTH);\n\t    while (index < len) {\n\t      this[offset + index] = src[index++];\n\t    }\n\t  };\n\t  var $iterators = {\n\t    entries: function entries() {\n\t      return arrayEntries.call(validate(this));\n\t    },\n\t    keys: function keys() {\n\t      return arrayKeys.call(validate(this));\n\t    },\n\t    values: function values() {\n\t      return arrayValues.call(validate(this));\n\t    }\n\t  };\n\t  var isTAIndex = function isTAIndex(target, key) {\n\t    return isObject(target) && target[TYPED_ARRAY] && (typeof key === 'undefined' ? 'undefined' : _typeof(key)) != 'symbol' && key in target && String(+key) == String(key);\n\t  };\n\t  var $getDesc = function getOwnPropertyDescriptor(target, key) {\n\t    return isTAIndex(target, key = toPrimitive(key, true)) ? propertyDesc(2, target[key]) : gOPD(target, key);\n\t  };\n\t  var $setDesc = function defineProperty(target, key, desc) {\n\t    if (isTAIndex(target, key = toPrimitive(key, true)) && isObject(desc) && has(desc, 'value') && !has(desc, 'get') && !has(desc, 'set') && !desc.configurable && (!has(desc, 'writable') || desc.writable) && (!has(desc, 'enumerable') || desc.enumerable)) {\n\t      target[key] = desc.value;\n\t      return target;\n\t    }\n\t    return dP(target, key, desc);\n\t  };\n\t  if (!ALL_CONSTRUCTORS) {\n\t    $GOPD.f = $getDesc;\n\t    $DP.f = $setDesc;\n\t  }\n\t  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {\n\t    getOwnPropertyDescriptor: $getDesc,\n\t    defineProperty: $setDesc\n\t  });\n\t  if (fails(function () {\n\t    arrayToString.call({});\n\t  })) {\n\t    arrayToString = arrayToLocaleString = function toString() {\n\t      return arrayJoin.call(this);\n\t    };\n\t  }\n\t  var $TypedArrayPrototype$ = redefineAll({}, proto);\n\t  redefineAll($TypedArrayPrototype$, $iterators);\n\t  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);\n\t  redefineAll($TypedArrayPrototype$, {\n\t    slice: $slice,\n\t    set: $set,\n\t    constructor: function constructor() {},\n\t    toString: arrayToString,\n\t    toLocaleString: $toLocaleString\n\t  });\n\t  addGetter($TypedArrayPrototype$, 'buffer', 'b');\n\t  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');\n\t  addGetter($TypedArrayPrototype$, 'byteLength', 'l');\n\t  addGetter($TypedArrayPrototype$, 'length', 'e');\n\t  dP($TypedArrayPrototype$, TAG, {\n\t    get: function get() {\n\t      return this[TYPED_ARRAY];\n\t    }\n\t  });\n\t  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {\n\t    CLAMPED = !!CLAMPED;\n\t    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';\n\t    var GETTER = 'get' + KEY;\n\t    var SETTER = 'set' + KEY;\n\t    var TypedArray = global[NAME];\n\t    var Base = TypedArray || {};\n\t    var TAC = TypedArray && getPrototypeOf(TypedArray);\n\t    var FORCED = !TypedArray || !$typed.ABV;\n\t    var O = {};\n\t    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];\n\t    var getter = function getter(that, index) {\n\t      var data = that._d;\n\t      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);\n\t    };\n\t    var setter = function setter(that, index, value) {\n\t      var data = that._d;\n\t      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;\n\t      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);\n\t    };\n\t    var addElement = function addElement(that, index) {\n\t      dP(that, index, {\n\t        get: function get() {\n\t          return getter(this, index);\n\t        },\n\t        set: function set(value) {\n\t          return setter(this, index, value);\n\t        },\n\t        enumerable: true\n\t      });\n\t    };\n\t    if (FORCED) {\n\t      TypedArray = wrapper(function (that, data, $offset, $length) {\n\t        anInstance(that, TypedArray, NAME, '_d');\n\t        var index = 0;\n\t        var offset = 0;\n\t        var buffer, byteLength, length, klass;\n\t        if (!isObject(data)) {\n\t          length = toIndex(data);\n\t          byteLength = length * BYTES;\n\t          buffer = new $ArrayBuffer(byteLength);\n\t        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n\t          buffer = data;\n\t          offset = toOffset($offset, BYTES);\n\t          var $len = data.byteLength;\n\t          if ($length === undefined) {\n\t            if ($len % BYTES) throw RangeError(WRONG_LENGTH);\n\t            byteLength = $len - offset;\n\t            if (byteLength < 0) throw RangeError(WRONG_LENGTH);\n\t          } else {\n\t            byteLength = toLength($length) * BYTES;\n\t            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);\n\t          }\n\t          length = byteLength / BYTES;\n\t        } else if (TYPED_ARRAY in data) {\n\t          return fromList(TypedArray, data);\n\t        } else {\n\t          return $from.call(TypedArray, data);\n\t        }\n\t        hide(that, '_d', {\n\t          b: buffer,\n\t          o: offset,\n\t          l: byteLength,\n\t          e: length,\n\t          v: new $DataView(buffer)\n\t        });\n\t        while (index < length) {\n\t          addElement(that, index++);\n\t        }\n\t      });\n\t      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);\n\t      hide(TypedArrayPrototype, 'constructor', TypedArray);\n\t    } else if (!fails(function () {\n\t      TypedArray(1);\n\t    }) || !fails(function () {\n\t      new TypedArray(-1);\n\t    }) || !$iterDetect(function (iter) {\n\t      new TypedArray();\n\t      new TypedArray(null);\n\t      new TypedArray(1.5);\n\t      new TypedArray(iter);\n\t    }, true)) {\n\t      TypedArray = wrapper(function (that, data, $offset, $length) {\n\t        anInstance(that, TypedArray, NAME);\n\t        var klass;\n\t        if (!isObject(data)) return new Base(toIndex(data));\n\t        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n\t          return $length !== undefined ? new Base(data, toOffset($offset, BYTES), $length) : $offset !== undefined ? new Base(data, toOffset($offset, BYTES)) : new Base(data);\n\t        }\n\t        if (TYPED_ARRAY in data) return fromList(TypedArray, data);\n\t        return $from.call(TypedArray, data);\n\t      });\n\t      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {\n\t        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);\n\t      });\n\t      TypedArray[PROTOTYPE] = TypedArrayPrototype;\n\t      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;\n\t    }\n\t    var $nativeIterator = TypedArrayPrototype[ITERATOR];\n\t    var CORRECT_ITER_NAME = !!$nativeIterator && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);\n\t    var $iterator = $iterators.values;\n\t    hide(TypedArray, TYPED_CONSTRUCTOR, true);\n\t    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);\n\t    hide(TypedArrayPrototype, VIEW, true);\n\t    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);\n\t    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {\n\t      dP(TypedArrayPrototype, TAG, {\n\t        get: function get() {\n\t          return NAME;\n\t        }\n\t      });\n\t    }\n\t    O[NAME] = TypedArray;\n\t    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);\n\t    $export($export.S, NAME, { BYTES_PER_ELEMENT: BYTES });\n\t    $export($export.S + $export.F * fails(function () {\n\t      Base.of.call(TypedArray, 1);\n\t    }), NAME, {\n\t      from: $from,\n\t      of: $of\n\t    });\n\t    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);\n\t    $export($export.P, NAME, proto);\n\t    setSpecies(NAME);\n\t    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });\n\t    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);\n\t    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;\n\t    $export($export.P + $export.F * fails(function () {\n\t      new TypedArray(1).slice();\n\t    }), NAME, { slice: $slice });\n\t    $export($export.P + $export.F * (fails(function () {\n\t      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();\n\t    }) || !fails(function () {\n\t      TypedArrayPrototype.toLocaleString.call([1, 2]);\n\t    })), NAME, { toLocaleString: $toLocaleString });\n\t    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;\n\t    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);\n\t  };\n\t} else module.exports = function () {};\n\t\n\t/***/ }),\n\t/* 89 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar global = __w_pdfjs_require__(1);\n\tvar DESCRIPTORS = __w_pdfjs_require__(10);\n\tvar LIBRARY = __w_pdfjs_require__(21);\n\tvar $typed = __w_pdfjs_require__(49);\n\tvar hide = __w_pdfjs_require__(8);\n\tvar redefineAll = __w_pdfjs_require__(23);\n\tvar fails = __w_pdfjs_require__(11);\n\tvar anInstance = __w_pdfjs_require__(24);\n\tvar toInteger = __w_pdfjs_require__(18);\n\tvar toLength = __w_pdfjs_require__(14);\n\tvar toIndex = __w_pdfjs_require__(50);\n\tvar gOPN = __w_pdfjs_require__(51).f;\n\tvar dP = __w_pdfjs_require__(15).f;\n\tvar arrayFill = __w_pdfjs_require__(55);\n\tvar setToStringTag = __w_pdfjs_require__(26);\n\tvar ARRAY_BUFFER = 'ArrayBuffer';\n\tvar DATA_VIEW = 'DataView';\n\tvar PROTOTYPE = 'prototype';\n\tvar WRONG_LENGTH = 'Wrong length!';\n\tvar WRONG_INDEX = 'Wrong index!';\n\tvar $ArrayBuffer = global[ARRAY_BUFFER];\n\tvar $DataView = global[DATA_VIEW];\n\tvar Math = global.Math;\n\tvar RangeError = global.RangeError;\n\tvar Infinity = global.Infinity;\n\tvar BaseBuffer = $ArrayBuffer;\n\tvar abs = Math.abs;\n\tvar pow = Math.pow;\n\tvar floor = Math.floor;\n\tvar log = Math.log;\n\tvar LN2 = Math.LN2;\n\tvar BUFFER = 'buffer';\n\tvar BYTE_LENGTH = 'byteLength';\n\tvar BYTE_OFFSET = 'byteOffset';\n\tvar $BUFFER = DESCRIPTORS ? '_b' : BUFFER;\n\tvar $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;\n\tvar $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;\n\tfunction packIEEE754(value, mLen, nBytes) {\n\t  var buffer = new Array(nBytes);\n\t  var eLen = nBytes * 8 - mLen - 1;\n\t  var eMax = (1 << eLen) - 1;\n\t  var eBias = eMax >> 1;\n\t  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;\n\t  var i = 0;\n\t  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n\t  var e, m, c;\n\t  value = abs(value);\n\t  if (value != value || value === Infinity) {\n\t    m = value != value ? 1 : 0;\n\t    e = eMax;\n\t  } else {\n\t    e = floor(log(value) / LN2);\n\t    if (value * (c = pow(2, -e)) < 1) {\n\t      e--;\n\t      c *= 2;\n\t    }\n\t    if (e + eBias >= 1) {\n\t      value += rt / c;\n\t    } else {\n\t      value += rt * pow(2, 1 - eBias);\n\t    }\n\t    if (value * c >= 2) {\n\t      e++;\n\t      c /= 2;\n\t    }\n\t    if (e + eBias >= eMax) {\n\t      m = 0;\n\t      e = eMax;\n\t    } else if (e + eBias >= 1) {\n\t      m = (value * c - 1) * pow(2, mLen);\n\t      e = e + eBias;\n\t    } else {\n\t      m = value * pow(2, eBias - 1) * pow(2, mLen);\n\t      e = 0;\n\t    }\n\t  }\n\t  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8) {}\n\t  e = e << mLen | m;\n\t  eLen += mLen;\n\t  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8) {}\n\t  buffer[--i] |= s * 128;\n\t  return buffer;\n\t}\n\tfunction unpackIEEE754(buffer, mLen, nBytes) {\n\t  var eLen = nBytes * 8 - mLen - 1;\n\t  var eMax = (1 << eLen) - 1;\n\t  var eBias = eMax >> 1;\n\t  var nBits = eLen - 7;\n\t  var i = nBytes - 1;\n\t  var s = buffer[i--];\n\t  var e = s & 127;\n\t  var m;\n\t  s >>= 7;\n\t  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8) {}\n\t  m = e & (1 << -nBits) - 1;\n\t  e >>= -nBits;\n\t  nBits += mLen;\n\t  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8) {}\n\t  if (e === 0) {\n\t    e = 1 - eBias;\n\t  } else if (e === eMax) {\n\t    return m ? NaN : s ? -Infinity : Infinity;\n\t  } else {\n\t    m = m + pow(2, mLen);\n\t    e = e - eBias;\n\t  }\n\t  return (s ? -1 : 1) * m * pow(2, e - mLen);\n\t}\n\tfunction unpackI32(bytes) {\n\t  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];\n\t}\n\tfunction packI8(it) {\n\t  return [it & 0xff];\n\t}\n\tfunction packI16(it) {\n\t  return [it & 0xff, it >> 8 & 0xff];\n\t}\n\tfunction packI32(it) {\n\t  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];\n\t}\n\tfunction packF64(it) {\n\t  return packIEEE754(it, 52, 8);\n\t}\n\tfunction packF32(it) {\n\t  return packIEEE754(it, 23, 4);\n\t}\n\tfunction addGetter(C, key, internal) {\n\t  dP(C[PROTOTYPE], key, {\n\t    get: function get() {\n\t      return this[internal];\n\t    }\n\t  });\n\t}\n\tfunction get(view, bytes, index, isLittleEndian) {\n\t  var numIndex = +index;\n\t  var intIndex = toIndex(numIndex);\n\t  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n\t  var store = view[$BUFFER]._b;\n\t  var start = intIndex + view[$OFFSET];\n\t  var pack = store.slice(start, start + bytes);\n\t  return isLittleEndian ? pack : pack.reverse();\n\t}\n\tfunction set(view, bytes, index, conversion, value, isLittleEndian) {\n\t  var numIndex = +index;\n\t  var intIndex = toIndex(numIndex);\n\t  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n\t  var store = view[$BUFFER]._b;\n\t  var start = intIndex + view[$OFFSET];\n\t  var pack = conversion(+value);\n\t  for (var i = 0; i < bytes; i++) {\n\t    store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];\n\t  }\n\t}\n\tif (!$typed.ABV) {\n\t  $ArrayBuffer = function ArrayBuffer(length) {\n\t    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);\n\t    var byteLength = toIndex(length);\n\t    this._b = arrayFill.call(new Array(byteLength), 0);\n\t    this[$LENGTH] = byteLength;\n\t  };\n\t  $DataView = function DataView(buffer, byteOffset, byteLength) {\n\t    anInstance(this, $DataView, DATA_VIEW);\n\t    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\n\t    var bufferLength = buffer[$LENGTH];\n\t    var offset = toInteger(byteOffset);\n\t    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');\n\t    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\n\t    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);\n\t    this[$BUFFER] = buffer;\n\t    this[$OFFSET] = offset;\n\t    this[$LENGTH] = byteLength;\n\t  };\n\t  if (DESCRIPTORS) {\n\t    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');\n\t    addGetter($DataView, BUFFER, '_b');\n\t    addGetter($DataView, BYTE_LENGTH, '_l');\n\t    addGetter($DataView, BYTE_OFFSET, '_o');\n\t  }\n\t  redefineAll($DataView[PROTOTYPE], {\n\t    getInt8: function getInt8(byteOffset) {\n\t      return get(this, 1, byteOffset)[0] << 24 >> 24;\n\t    },\n\t    getUint8: function getUint8(byteOffset) {\n\t      return get(this, 1, byteOffset)[0];\n\t    },\n\t    getInt16: function getInt16(byteOffset) {\n\t      var bytes = get(this, 2, byteOffset, arguments[1]);\n\t      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\n\t    },\n\t    getUint16: function getUint16(byteOffset) {\n\t      var bytes = get(this, 2, byteOffset, arguments[1]);\n\t      return bytes[1] << 8 | bytes[0];\n\t    },\n\t    getInt32: function getInt32(byteOffset) {\n\t      return unpackI32(get(this, 4, byteOffset, arguments[1]));\n\t    },\n\t    getUint32: function getUint32(byteOffset) {\n\t      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;\n\t    },\n\t    getFloat32: function getFloat32(byteOffset) {\n\t      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);\n\t    },\n\t    getFloat64: function getFloat64(byteOffset) {\n\t      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);\n\t    },\n\t    setInt8: function setInt8(byteOffset, value) {\n\t      set(this, 1, byteOffset, packI8, value);\n\t    },\n\t    setUint8: function setUint8(byteOffset, value) {\n\t      set(this, 1, byteOffset, packI8, value);\n\t    },\n\t    setInt16: function setInt16(byteOffset, value) {\n\t      set(this, 2, byteOffset, packI16, value, arguments[2]);\n\t    },\n\t    setUint16: function setUint16(byteOffset, value) {\n\t      set(this, 2, byteOffset, packI16, value, arguments[2]);\n\t    },\n\t    setInt32: function setInt32(byteOffset, value) {\n\t      set(this, 4, byteOffset, packI32, value, arguments[2]);\n\t    },\n\t    setUint32: function setUint32(byteOffset, value) {\n\t      set(this, 4, byteOffset, packI32, value, arguments[2]);\n\t    },\n\t    setFloat32: function setFloat32(byteOffset, value) {\n\t      set(this, 4, byteOffset, packF32, value, arguments[2]);\n\t    },\n\t    setFloat64: function setFloat64(byteOffset, value) {\n\t      set(this, 8, byteOffset, packF64, value, arguments[2]);\n\t    }\n\t  });\n\t} else {\n\t  if (!fails(function () {\n\t    $ArrayBuffer(1);\n\t  }) || !fails(function () {\n\t    new $ArrayBuffer(-1);\n\t  }) || fails(function () {\n\t    new $ArrayBuffer();\n\t    new $ArrayBuffer(1.5);\n\t    new $ArrayBuffer(NaN);\n\t    return $ArrayBuffer.name != ARRAY_BUFFER;\n\t  })) {\n\t    $ArrayBuffer = function ArrayBuffer(length) {\n\t      anInstance(this, $ArrayBuffer);\n\t      return new BaseBuffer(toIndex(length));\n\t    };\n\t    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];\n\t    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {\n\t      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);\n\t    }\n\t    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;\n\t  }\n\t  var view = new $DataView(new $ArrayBuffer(2));\n\t  var $setInt8 = $DataView[PROTOTYPE].setInt8;\n\t  view.setInt8(0, 2147483648);\n\t  view.setInt8(1, 2147483649);\n\t  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {\n\t    setInt8: function setInt8(byteOffset, value) {\n\t      $setInt8.call(this, byteOffset, value << 24 >> 24);\n\t    },\n\t    setUint8: function setUint8(byteOffset, value) {\n\t      $setInt8.call(this, byteOffset, value << 24 >> 24);\n\t    }\n\t  }, true);\n\t}\n\tsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\n\tsetToStringTag($DataView, DATA_VIEW);\n\thide($DataView[PROTOTYPE], $typed.VIEW, true);\n\texports[ARRAY_BUFFER] = $ArrayBuffer;\n\texports[DATA_VIEW] = $DataView;\n\t\n\t/***/ }),\n\t/* 90 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar dP = __w_pdfjs_require__(15);\n\tvar anObject = __w_pdfjs_require__(9);\n\tvar getKeys = __w_pdfjs_require__(41);\n\tmodule.exports = __w_pdfjs_require__(10) ? Object.defineProperties : function defineProperties(O, Properties) {\n\t  anObject(O);\n\t  var keys = getKeys(Properties);\n\t  var length = keys.length;\n\t  var i = 0;\n\t  var P;\n\t  while (length > i) {\n\t    dP.f(O, P = keys[i++], Properties[P]);\n\t  }return O;\n\t};\n\t\n\t/***/ }),\n\t/* 91 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar speciesConstructor = __w_pdfjs_require__(92);\n\tmodule.exports = function (original, length) {\n\t  return new (speciesConstructor(original))(length);\n\t};\n\t\n\t/***/ }),\n\t/* 92 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar isObject = __w_pdfjs_require__(3);\n\tvar isArray = __w_pdfjs_require__(93);\n\tvar SPECIES = __w_pdfjs_require__(4)('species');\n\tmodule.exports = function (original) {\n\t  var C;\n\t  if (isArray(original)) {\n\t    C = original.constructor;\n\t    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n\t    if (isObject(C)) {\n\t      C = C[SPECIES];\n\t      if (C === null) C = undefined;\n\t    }\n\t  }\n\t  return C === undefined ? Array : C;\n\t};\n\t\n\t/***/ }),\n\t/* 93 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar cof = __w_pdfjs_require__(25);\n\tmodule.exports = Array.isArray || function isArray(arg) {\n\t  return cof(arg) == 'Array';\n\t};\n\t\n\t/***/ }),\n\t/* 94 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar UNSCOPABLES = __w_pdfjs_require__(4)('unscopables');\n\tvar ArrayProto = Array.prototype;\n\tif (ArrayProto[UNSCOPABLES] == undefined) __w_pdfjs_require__(8)(ArrayProto, UNSCOPABLES, {});\n\tmodule.exports = function (key) {\n\t  ArrayProto[UNSCOPABLES][key] = true;\n\t};\n\t\n\t/***/ }),\n\t/* 95 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tmodule.exports = function (done, value) {\n\t  return {\n\t    value: value,\n\t    done: !!done\n\t  };\n\t};\n\t\n\t/***/ }),\n\t/* 96 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar create = __w_pdfjs_require__(57);\n\tvar descriptor = __w_pdfjs_require__(29);\n\tvar setToStringTag = __w_pdfjs_require__(26);\n\tvar IteratorPrototype = {};\n\t__w_pdfjs_require__(8)(IteratorPrototype, __w_pdfjs_require__(4)('iterator'), function () {\n\t  return this;\n\t});\n\tmodule.exports = function (Constructor, NAME, next) {\n\t  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n\t  setToStringTag(Constructor, NAME + ' Iterator');\n\t};\n\t\n\t/***/ }),\n\t/* 97 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar toObject = __w_pdfjs_require__(19);\n\tvar toAbsoluteIndex = __w_pdfjs_require__(31);\n\tvar toLength = __w_pdfjs_require__(14);\n\tmodule.exports = [].copyWithin || function copyWithin(target, start) {\n\t  var O = toObject(this);\n\t  var len = toLength(O.length);\n\t  var to = toAbsoluteIndex(target, len);\n\t  var from = toAbsoluteIndex(start, len);\n\t  var end = arguments.length > 2 ? arguments[2] : undefined;\n\t  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\n\t  var inc = 1;\n\t  if (from < to && to < from + count) {\n\t    inc = -1;\n\t    from += count - 1;\n\t    to += count - 1;\n\t  }\n\t  while (count-- > 0) {\n\t    if (from in O) O[to] = O[from];else delete O[to];\n\t    to += inc;\n\t    from += inc;\n\t  }\n\t  return O;\n\t};\n\t\n\t/***/ }),\n\t/* 98 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\t__w_pdfjs_require__(99);\n\tmodule.exports = __w_pdfjs_require__(6).Number.isNaN;\n\t\n\t/***/ }),\n\t/* 99 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar $export = __w_pdfjs_require__(7);\n\t$export($export.S, 'Number', {\n\t  isNaN: function isNaN(number) {\n\t    return number != number;\n\t  }\n\t});\n\t\n\t/***/ }),\n\t/* 100 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\t__w_pdfjs_require__(101);\n\tmodule.exports = __w_pdfjs_require__(6).Number.isInteger;\n\t\n\t/***/ }),\n\t/* 101 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar $export = __w_pdfjs_require__(7);\n\t$export($export.S, 'Number', { isInteger: __w_pdfjs_require__(102) });\n\t\n\t/***/ }),\n\t/* 102 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar isObject = __w_pdfjs_require__(3);\n\tvar floor = Math.floor;\n\tmodule.exports = function isInteger(it) {\n\t  return !isObject(it) && isFinite(it) && floor(it) === it;\n\t};\n\t\n\t/***/ }),\n\t/* 103 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\t__w_pdfjs_require__(66);\n\t__w_pdfjs_require__(104);\n\t__w_pdfjs_require__(67);\n\t__w_pdfjs_require__(106);\n\t__w_pdfjs_require__(111);\n\t__w_pdfjs_require__(112);\n\tmodule.exports = __w_pdfjs_require__(6).Promise;\n\t\n\t/***/ }),\n\t/* 104 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar $at = __w_pdfjs_require__(105)(true);\n\t__w_pdfjs_require__(62)(String, 'String', function (iterated) {\n\t  this._t = String(iterated);\n\t  this._i = 0;\n\t}, function () {\n\t  var O = this._t;\n\t  var index = this._i;\n\t  var point;\n\t  if (index >= O.length) return {\n\t    value: undefined,\n\t    done: true\n\t  };\n\t  point = $at(O, index);\n\t  this._i += point.length;\n\t  return {\n\t    value: point,\n\t    done: false\n\t  };\n\t});\n\t\n\t/***/ }),\n\t/* 105 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar toInteger = __w_pdfjs_require__(18);\n\tvar defined = __w_pdfjs_require__(38);\n\tmodule.exports = function (TO_STRING) {\n\t  return function (that, pos) {\n\t    var s = String(defined(that));\n\t    var i = toInteger(pos);\n\t    var l = s.length;\n\t    var a, b;\n\t    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n\t    a = s.charCodeAt(i);\n\t    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n\t  };\n\t};\n\t\n\t/***/ }),\n\t/* 106 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar LIBRARY = __w_pdfjs_require__(21);\n\tvar global = __w_pdfjs_require__(1);\n\tvar ctx = __w_pdfjs_require__(13);\n\tvar classof = __w_pdfjs_require__(32);\n\tvar $export = __w_pdfjs_require__(7);\n\tvar isObject = __w_pdfjs_require__(3);\n\tvar aFunction = __w_pdfjs_require__(22);\n\tvar anInstance = __w_pdfjs_require__(24);\n\tvar forOf = __w_pdfjs_require__(33);\n\tvar speciesConstructor = __w_pdfjs_require__(43);\n\tvar task = __w_pdfjs_require__(68).set;\n\tvar microtask = __w_pdfjs_require__(109)();\n\tvar newPromiseCapabilityModule = __w_pdfjs_require__(45);\n\tvar perform = __w_pdfjs_require__(69);\n\tvar userAgent = __w_pdfjs_require__(110);\n\tvar promiseResolve = __w_pdfjs_require__(70);\n\tvar PROMISE = 'Promise';\n\tvar TypeError = global.TypeError;\n\tvar process = global.process;\n\tvar versions = process && process.versions;\n\tvar v8 = versions && versions.v8 || '';\n\tvar $Promise = global[PROMISE];\n\tvar isNode = classof(process) == 'process';\n\tvar empty = function empty() {};\n\tvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\n\tvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\tvar USE_NATIVE = !!function () {\n\t  try {\n\t    var promise = $Promise.resolve(1);\n\t    var FakePromise = (promise.constructor = {})[__w_pdfjs_require__(4)('species')] = function (exec) {\n\t      exec(empty, empty);\n\t    };\n\t    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise && v8.indexOf('6.6') !== 0 && userAgent.indexOf('Chrome/66') === -1;\n\t  } catch (e) {}\n\t}();\n\tvar isThenable = function isThenable(it) {\n\t  var then;\n\t  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n\t};\n\tvar notify = function notify(promise, isReject) {\n\t  if (promise._n) return;\n\t  promise._n = true;\n\t  var chain = promise._c;\n\t  microtask(function () {\n\t    var value = promise._v;\n\t    var ok = promise._s == 1;\n\t    var i = 0;\n\t    var run = function run(reaction) {\n\t      var handler = ok ? reaction.ok : reaction.fail;\n\t      var resolve = reaction.resolve;\n\t      var reject = reaction.reject;\n\t      var domain = reaction.domain;\n\t      var result, then, exited;\n\t      try {\n\t        if (handler) {\n\t          if (!ok) {\n\t            if (promise._h == 2) onHandleUnhandled(promise);\n\t            promise._h = 1;\n\t          }\n\t          if (handler === true) result = value;else {\n\t            if (domain) domain.enter();\n\t            result = handler(value);\n\t            if (domain) {\n\t              domain.exit();\n\t              exited = true;\n\t            }\n\t          }\n\t          if (result === reaction.promise) {\n\t            reject(TypeError('Promise-chain cycle'));\n\t          } else if (then = isThenable(result)) {\n\t            then.call(result, resolve, reject);\n\t          } else resolve(result);\n\t        } else reject(value);\n\t      } catch (e) {\n\t        if (domain && !exited) domain.exit();\n\t        reject(e);\n\t      }\n\t    };\n\t    while (chain.length > i) {\n\t      run(chain[i++]);\n\t    }promise._c = [];\n\t    promise._n = false;\n\t    if (isReject && !promise._h) onUnhandled(promise);\n\t  });\n\t};\n\tvar onUnhandled = function onUnhandled(promise) {\n\t  task.call(global, function () {\n\t    var value = promise._v;\n\t    var unhandled = isUnhandled(promise);\n\t    var result, handler, console;\n\t    if (unhandled) {\n\t      result = perform(function () {\n\t        if (isNode) {\n\t          process.emit('unhandledRejection', value, promise);\n\t        } else if (handler = global.onunhandledrejection) {\n\t          handler({\n\t            promise: promise,\n\t            reason: value\n\t          });\n\t        } else if ((console = global.console) && console.error) {\n\t          console.error('Unhandled promise rejection', value);\n\t        }\n\t      });\n\t      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n\t    }\n\t    promise._a = undefined;\n\t    if (unhandled && result.e) throw result.v;\n\t  });\n\t};\n\tvar isUnhandled = function isUnhandled(promise) {\n\t  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n\t};\n\tvar onHandleUnhandled = function onHandleUnhandled(promise) {\n\t  task.call(global, function () {\n\t    var handler;\n\t    if (isNode) {\n\t      process.emit('rejectionHandled', promise);\n\t    } else if (handler = global.onrejectionhandled) {\n\t      handler({\n\t        promise: promise,\n\t        reason: promise._v\n\t      });\n\t    }\n\t  });\n\t};\n\tvar $reject = function $reject(value) {\n\t  var promise = this;\n\t  if (promise._d) return;\n\t  promise._d = true;\n\t  promise = promise._w || promise;\n\t  promise._v = value;\n\t  promise._s = 2;\n\t  if (!promise._a) promise._a = promise._c.slice();\n\t  notify(promise, true);\n\t};\n\tvar $resolve = function $resolve(value) {\n\t  var promise = this;\n\t  var then;\n\t  if (promise._d) return;\n\t  promise._d = true;\n\t  promise = promise._w || promise;\n\t  try {\n\t    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n\t    if (then = isThenable(value)) {\n\t      microtask(function () {\n\t        var wrapper = {\n\t          _w: promise,\n\t          _d: false\n\t        };\n\t        try {\n\t          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n\t        } catch (e) {\n\t          $reject.call(wrapper, e);\n\t        }\n\t      });\n\t    } else {\n\t      promise._v = value;\n\t      promise._s = 1;\n\t      notify(promise, false);\n\t    }\n\t  } catch (e) {\n\t    $reject.call({\n\t      _w: promise,\n\t      _d: false\n\t    }, e);\n\t  }\n\t};\n\tif (!USE_NATIVE) {\n\t  $Promise = function Promise(executor) {\n\t    anInstance(this, $Promise, PROMISE, '_h');\n\t    aFunction(executor);\n\t    Internal.call(this);\n\t    try {\n\t      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n\t    } catch (err) {\n\t      $reject.call(this, err);\n\t    }\n\t  };\n\t  Internal = function Promise(executor) {\n\t    this._c = [];\n\t    this._a = undefined;\n\t    this._s = 0;\n\t    this._d = false;\n\t    this._v = undefined;\n\t    this._h = 0;\n\t    this._n = false;\n\t  };\n\t  Internal.prototype = __w_pdfjs_require__(23)($Promise.prototype, {\n\t    then: function then(onFulfilled, onRejected) {\n\t      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n\t      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n\t      reaction.fail = typeof onRejected == 'function' && onRejected;\n\t      reaction.domain = isNode ? process.domain : undefined;\n\t      this._c.push(reaction);\n\t      if (this._a) this._a.push(reaction);\n\t      if (this._s) notify(this, false);\n\t      return reaction.promise;\n\t    },\n\t    'catch': function _catch(onRejected) {\n\t      return this.then(undefined, onRejected);\n\t    }\n\t  });\n\t  OwnPromiseCapability = function OwnPromiseCapability() {\n\t    var promise = new Internal();\n\t    this.promise = promise;\n\t    this.resolve = ctx($resolve, promise, 1);\n\t    this.reject = ctx($reject, promise, 1);\n\t  };\n\t  newPromiseCapabilityModule.f = newPromiseCapability = function newPromiseCapability(C) {\n\t    return C === $Promise || C === Wrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);\n\t  };\n\t}\n\t$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\n\t__w_pdfjs_require__(26)($Promise, PROMISE);\n\t__w_pdfjs_require__(63)(PROMISE);\n\tWrapper = __w_pdfjs_require__(6)[PROMISE];\n\t$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n\t  reject: function reject(r) {\n\t    var capability = newPromiseCapability(this);\n\t    var $$reject = capability.reject;\n\t    $$reject(r);\n\t    return capability.promise;\n\t  }\n\t});\n\t$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n\t  resolve: function resolve(x) {\n\t    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n\t  }\n\t});\n\t$export($export.S + $export.F * !(USE_NATIVE && __w_pdfjs_require__(44)(function (iter) {\n\t  $Promise.all(iter)['catch'](empty);\n\t})), PROMISE, {\n\t  all: function all(iterable) {\n\t    var C = this;\n\t    var capability = newPromiseCapability(C);\n\t    var resolve = capability.resolve;\n\t    var reject = capability.reject;\n\t    var result = perform(function () {\n\t      var values = [];\n\t      var index = 0;\n\t      var remaining = 1;\n\t      forOf(iterable, false, function (promise) {\n\t        var $index = index++;\n\t        var alreadyCalled = false;\n\t        values.push(undefined);\n\t        remaining++;\n\t        C.resolve(promise).then(function (value) {\n\t          if (alreadyCalled) return;\n\t          alreadyCalled = true;\n\t          values[$index] = value;\n\t          --remaining || resolve(values);\n\t        }, reject);\n\t      });\n\t      --remaining || resolve(values);\n\t    });\n\t    if (result.e) reject(result.v);\n\t    return capability.promise;\n\t  },\n\t  race: function race(iterable) {\n\t    var C = this;\n\t    var capability = newPromiseCapability(C);\n\t    var reject = capability.reject;\n\t    var result = perform(function () {\n\t      forOf(iterable, false, function (promise) {\n\t        C.resolve(promise).then(capability.resolve, reject);\n\t      });\n\t    });\n\t    if (result.e) reject(result.v);\n\t    return capability.promise;\n\t  }\n\t});\n\t\n\t/***/ }),\n\t/* 107 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar anObject = __w_pdfjs_require__(9);\n\tmodule.exports = function (iterator, fn, value, entries) {\n\t  try {\n\t    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n\t  } catch (e) {\n\t    var ret = iterator['return'];\n\t    if (ret !== undefined) anObject(ret.call(iterator));\n\t    throw e;\n\t  }\n\t};\n\t\n\t/***/ }),\n\t/* 108 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tmodule.exports = function (fn, args, that) {\n\t  var un = that === undefined;\n\t  switch (args.length) {\n\t    case 0:\n\t      return un ? fn() : fn.call(that);\n\t    case 1:\n\t      return un ? fn(args[0]) : fn.call(that, args[0]);\n\t    case 2:\n\t      return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);\n\t    case 3:\n\t      return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);\n\t    case 4:\n\t      return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);\n\t  }\n\t  return fn.apply(that, args);\n\t};\n\t\n\t/***/ }),\n\t/* 109 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar global = __w_pdfjs_require__(1);\n\tvar macrotask = __w_pdfjs_require__(68).set;\n\tvar Observer = global.MutationObserver || global.WebKitMutationObserver;\n\tvar process = global.process;\n\tvar Promise = global.Promise;\n\tvar isNode = __w_pdfjs_require__(25)(process) == 'process';\n\tmodule.exports = function () {\n\t  var head, last, notify;\n\t  var flush = function flush() {\n\t    var parent, fn;\n\t    if (isNode && (parent = process.domain)) parent.exit();\n\t    while (head) {\n\t      fn = head.fn;\n\t      head = head.next;\n\t      try {\n\t        fn();\n\t      } catch (e) {\n\t        if (head) notify();else last = undefined;\n\t        throw e;\n\t      }\n\t    }\n\t    last = undefined;\n\t    if (parent) parent.enter();\n\t  };\n\t  if (isNode) {\n\t    notify = function notify() {\n\t      process.nextTick(flush);\n\t    };\n\t  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n\t    var toggle = true;\n\t    var node = document.createTextNode('');\n\t    new Observer(flush).observe(node, { characterData: true });\n\t    notify = function notify() {\n\t      node.data = toggle = !toggle;\n\t    };\n\t  } else if (Promise && Promise.resolve) {\n\t    var promise = Promise.resolve(undefined);\n\t    notify = function notify() {\n\t      promise.then(flush);\n\t    };\n\t  } else {\n\t    notify = function notify() {\n\t      macrotask.call(global, flush);\n\t    };\n\t  }\n\t  return function (fn) {\n\t    var task = {\n\t      fn: fn,\n\t      next: undefined\n\t    };\n\t    if (last) last.next = task;\n\t    if (!head) {\n\t      head = task;\n\t      notify();\n\t    }\n\t    last = task;\n\t  };\n\t};\n\t\n\t/***/ }),\n\t/* 110 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar global = __w_pdfjs_require__(1);\n\tvar navigator = global.navigator;\n\tmodule.exports = navigator && navigator.userAgent || '';\n\t\n\t/***/ }),\n\t/* 111 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar $export = __w_pdfjs_require__(7);\n\tvar core = __w_pdfjs_require__(6);\n\tvar global = __w_pdfjs_require__(1);\n\tvar speciesConstructor = __w_pdfjs_require__(43);\n\tvar promiseResolve = __w_pdfjs_require__(70);\n\t$export($export.P + $export.R, 'Promise', {\n\t  'finally': function _finally(onFinally) {\n\t    var C = speciesConstructor(this, core.Promise || global.Promise);\n\t    var isFunction = typeof onFinally == 'function';\n\t    return this.then(isFunction ? function (x) {\n\t      return promiseResolve(C, onFinally()).then(function () {\n\t        return x;\n\t      });\n\t    } : onFinally, isFunction ? function (e) {\n\t      return promiseResolve(C, onFinally()).then(function () {\n\t        throw e;\n\t      });\n\t    } : onFinally);\n\t  }\n\t});\n\t\n\t/***/ }),\n\t/* 112 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar $export = __w_pdfjs_require__(7);\n\tvar newPromiseCapability = __w_pdfjs_require__(45);\n\tvar perform = __w_pdfjs_require__(69);\n\t$export($export.S, 'Promise', {\n\t  'try': function _try(callbackfn) {\n\t    var promiseCapability = newPromiseCapability.f(this);\n\t    var result = perform(callbackfn);\n\t    (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n\t    return promiseCapability.promise;\n\t  }\n\t});\n\t\n\t/***/ }),\n\t/* 113 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\t__w_pdfjs_require__(66);\n\t__w_pdfjs_require__(67);\n\t__w_pdfjs_require__(114);\n\t__w_pdfjs_require__(121);\n\t__w_pdfjs_require__(123);\n\tmodule.exports = __w_pdfjs_require__(6).WeakMap;\n\t\n\t/***/ }),\n\t/* 114 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar each = __w_pdfjs_require__(42)(0);\n\tvar redefine = __w_pdfjs_require__(16);\n\tvar meta = __w_pdfjs_require__(46);\n\tvar assign = __w_pdfjs_require__(115);\n\tvar weak = __w_pdfjs_require__(117);\n\tvar isObject = __w_pdfjs_require__(3);\n\tvar fails = __w_pdfjs_require__(11);\n\tvar validate = __w_pdfjs_require__(71);\n\tvar WEAK_MAP = 'WeakMap';\n\tvar getWeak = meta.getWeak;\n\tvar isExtensible = Object.isExtensible;\n\tvar uncaughtFrozenStore = weak.ufstore;\n\tvar tmp = {};\n\tvar InternalMap;\n\tvar wrapper = function wrapper(get) {\n\t  return function WeakMap() {\n\t    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n\t  };\n\t};\n\tvar methods = {\n\t  get: function get(key) {\n\t    if (isObject(key)) {\n\t      var data = getWeak(key);\n\t      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);\n\t      return data ? data[this._i] : undefined;\n\t    }\n\t  },\n\t  set: function set(key, value) {\n\t    return weak.def(validate(this, WEAK_MAP), key, value);\n\t  }\n\t};\n\tvar $WeakMap = module.exports = __w_pdfjs_require__(118)(WEAK_MAP, wrapper, methods, weak, true, true);\n\tif (fails(function () {\n\t  return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7;\n\t})) {\n\t  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);\n\t  assign(InternalMap.prototype, methods);\n\t  meta.NEED = true;\n\t  each(['delete', 'has', 'get', 'set'], function (key) {\n\t    var proto = $WeakMap.prototype;\n\t    var method = proto[key];\n\t    redefine(proto, key, function (a, b) {\n\t      if (isObject(a) && !isExtensible(a)) {\n\t        if (!this._f) this._f = new InternalMap();\n\t        var result = this._f[key](a, b);\n\t        return key == 'set' ? this : result;\n\t      }\n\t      return method.call(this, a, b);\n\t    });\n\t  });\n\t}\n\t\n\t/***/ }),\n\t/* 115 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar getKeys = __w_pdfjs_require__(41);\n\tvar gOPS = __w_pdfjs_require__(116);\n\tvar pIE = __w_pdfjs_require__(65);\n\tvar toObject = __w_pdfjs_require__(19);\n\tvar IObject = __w_pdfjs_require__(37);\n\tvar $assign = Object.assign;\n\tmodule.exports = !$assign || __w_pdfjs_require__(11)(function () {\n\t  var A = {};\n\t  var B = {};\n\t  var S = Symbol();\n\t  var K = 'abcdefghijklmnopqrst';\n\t  A[S] = 7;\n\t  K.split('').forEach(function (k) {\n\t    B[k] = k;\n\t  });\n\t  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n\t}) ? function assign(target, source) {\n\t  var T = toObject(target);\n\t  var aLen = arguments.length;\n\t  var index = 1;\n\t  var getSymbols = gOPS.f;\n\t  var isEnum = pIE.f;\n\t  while (aLen > index) {\n\t    var S = IObject(arguments[index++]);\n\t    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n\t    var length = keys.length;\n\t    var j = 0;\n\t    var key;\n\t    while (length > j) {\n\t      if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n\t    }\n\t  }\n\t  return T;\n\t} : $assign;\n\t\n\t/***/ }),\n\t/* 116 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\texports.f = Object.getOwnPropertySymbols;\n\t\n\t/***/ }),\n\t/* 117 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar redefineAll = __w_pdfjs_require__(23);\n\tvar getWeak = __w_pdfjs_require__(46).getWeak;\n\tvar anObject = __w_pdfjs_require__(9);\n\tvar isObject = __w_pdfjs_require__(3);\n\tvar anInstance = __w_pdfjs_require__(24);\n\tvar forOf = __w_pdfjs_require__(33);\n\tvar createArrayMethod = __w_pdfjs_require__(42);\n\tvar $has = __w_pdfjs_require__(12);\n\tvar validate = __w_pdfjs_require__(71);\n\tvar arrayFind = createArrayMethod(5);\n\tvar arrayFindIndex = createArrayMethod(6);\n\tvar id = 0;\n\tvar uncaughtFrozenStore = function uncaughtFrozenStore(that) {\n\t  return that._l || (that._l = new UncaughtFrozenStore());\n\t};\n\tvar UncaughtFrozenStore = function UncaughtFrozenStore() {\n\t  this.a = [];\n\t};\n\tvar findUncaughtFrozen = function findUncaughtFrozen(store, key) {\n\t  return arrayFind(store.a, function (it) {\n\t    return it[0] === key;\n\t  });\n\t};\n\tUncaughtFrozenStore.prototype = {\n\t  get: function get(key) {\n\t    var entry = findUncaughtFrozen(this, key);\n\t    if (entry) return entry[1];\n\t  },\n\t  has: function has(key) {\n\t    return !!findUncaughtFrozen(this, key);\n\t  },\n\t  set: function set(key, value) {\n\t    var entry = findUncaughtFrozen(this, key);\n\t    if (entry) entry[1] = value;else this.a.push([key, value]);\n\t  },\n\t  'delete': function _delete(key) {\n\t    var index = arrayFindIndex(this.a, function (it) {\n\t      return it[0] === key;\n\t    });\n\t    if (~index) this.a.splice(index, 1);\n\t    return !!~index;\n\t  }\n\t};\n\tmodule.exports = {\n\t  getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {\n\t    var C = wrapper(function (that, iterable) {\n\t      anInstance(that, C, NAME, '_i');\n\t      that._t = NAME;\n\t      that._i = id++;\n\t      that._l = undefined;\n\t      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n\t    });\n\t    redefineAll(C.prototype, {\n\t      'delete': function _delete(key) {\n\t        if (!isObject(key)) return false;\n\t        var data = getWeak(key);\n\t        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);\n\t        return data && $has(data, this._i) && delete data[this._i];\n\t      },\n\t      has: function has(key) {\n\t        if (!isObject(key)) return false;\n\t        var data = getWeak(key);\n\t        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);\n\t        return data && $has(data, this._i);\n\t      }\n\t    });\n\t    return C;\n\t  },\n\t  def: function def(that, key, value) {\n\t    var data = getWeak(anObject(key), true);\n\t    if (data === true) uncaughtFrozenStore(that).set(key, value);else data[that._i] = value;\n\t    return that;\n\t  },\n\t  ufstore: uncaughtFrozenStore\n\t};\n\t\n\t/***/ }),\n\t/* 118 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar global = __w_pdfjs_require__(1);\n\tvar $export = __w_pdfjs_require__(7);\n\tvar redefine = __w_pdfjs_require__(16);\n\tvar redefineAll = __w_pdfjs_require__(23);\n\tvar meta = __w_pdfjs_require__(46);\n\tvar forOf = __w_pdfjs_require__(33);\n\tvar anInstance = __w_pdfjs_require__(24);\n\tvar isObject = __w_pdfjs_require__(3);\n\tvar fails = __w_pdfjs_require__(11);\n\tvar $iterDetect = __w_pdfjs_require__(44);\n\tvar setToStringTag = __w_pdfjs_require__(26);\n\tvar inheritIfRequired = __w_pdfjs_require__(119);\n\tmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n\t  var Base = global[NAME];\n\t  var C = Base;\n\t  var ADDER = IS_MAP ? 'set' : 'add';\n\t  var proto = C && C.prototype;\n\t  var O = {};\n\t  var fixMethod = function fixMethod(KEY) {\n\t    var fn = proto[KEY];\n\t    redefine(proto, KEY, KEY == 'delete' ? function (a) {\n\t      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n\t    } : KEY == 'has' ? function has(a) {\n\t      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n\t    } : KEY == 'get' ? function get(a) {\n\t      return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n\t    } : KEY == 'add' ? function add(a) {\n\t      fn.call(this, a === 0 ? 0 : a);\n\t      return this;\n\t    } : function set(a, b) {\n\t      fn.call(this, a === 0 ? 0 : a, b);\n\t      return this;\n\t    });\n\t  };\n\t  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n\t    new C().entries().next();\n\t  }))) {\n\t    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n\t    redefineAll(C.prototype, methods);\n\t    meta.NEED = true;\n\t  } else {\n\t    var instance = new C();\n\t    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n\t    var THROWS_ON_PRIMITIVES = fails(function () {\n\t      instance.has(1);\n\t    });\n\t    var ACCEPT_ITERABLES = $iterDetect(function (iter) {\n\t      new C(iter);\n\t    });\n\t    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n\t      var $instance = new C();\n\t      var index = 5;\n\t      while (index--) {\n\t        $instance[ADDER](index, index);\n\t      }return !$instance.has(-0);\n\t    });\n\t    if (!ACCEPT_ITERABLES) {\n\t      C = wrapper(function (target, iterable) {\n\t        anInstance(target, C, NAME);\n\t        var that = inheritIfRequired(new Base(), target, C);\n\t        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n\t        return that;\n\t      });\n\t      C.prototype = proto;\n\t      proto.constructor = C;\n\t    }\n\t    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n\t      fixMethod('delete');\n\t      fixMethod('has');\n\t      IS_MAP && fixMethod('get');\n\t    }\n\t    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n\t    if (IS_WEAK && proto.clear) delete proto.clear;\n\t  }\n\t  setToStringTag(C, NAME);\n\t  O[NAME] = C;\n\t  $export($export.G + $export.W + $export.F * (C != Base), O);\n\t  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n\t  return C;\n\t};\n\t\n\t/***/ }),\n\t/* 119 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar isObject = __w_pdfjs_require__(3);\n\tvar setPrototypeOf = __w_pdfjs_require__(120).set;\n\tmodule.exports = function (that, target, C) {\n\t  var S = target.constructor;\n\t  var P;\n\t  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n\t    setPrototypeOf(that, P);\n\t  }\n\t  return that;\n\t};\n\t\n\t/***/ }),\n\t/* 120 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar isObject = __w_pdfjs_require__(3);\n\tvar anObject = __w_pdfjs_require__(9);\n\tvar check = function check(O, proto) {\n\t  anObject(O);\n\t  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n\t};\n\tmodule.exports = {\n\t  set: Object.setPrototypeOf || ('__proto__' in {} ? function (test, buggy, set) {\n\t    try {\n\t      set = __w_pdfjs_require__(13)(Function.call, __w_pdfjs_require__(64).f(Object.prototype, '__proto__').set, 2);\n\t      set(test, []);\n\t      buggy = !(test instanceof Array);\n\t    } catch (e) {\n\t      buggy = true;\n\t    }\n\t    return function setPrototypeOf(O, proto) {\n\t      check(O, proto);\n\t      if (buggy) O.__proto__ = proto;else set(O, proto);\n\t      return O;\n\t    };\n\t  }({}, false) : undefined),\n\t  check: check\n\t};\n\t\n\t/***/ }),\n\t/* 121 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\t__w_pdfjs_require__(122)('WeakMap');\n\t\n\t/***/ }),\n\t/* 122 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar $export = __w_pdfjs_require__(7);\n\tmodule.exports = function (COLLECTION) {\n\t  $export($export.S, COLLECTION, {\n\t    of: function of() {\n\t      var length = arguments.length;\n\t      var A = new Array(length);\n\t      while (length--) {\n\t        A[length] = arguments[length];\n\t      }return new this(A);\n\t    }\n\t  });\n\t};\n\t\n\t/***/ }),\n\t/* 123 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\t__w_pdfjs_require__(124)('WeakMap');\n\t\n\t/***/ }),\n\t/* 124 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar $export = __w_pdfjs_require__(7);\n\tvar aFunction = __w_pdfjs_require__(22);\n\tvar ctx = __w_pdfjs_require__(13);\n\tvar forOf = __w_pdfjs_require__(33);\n\tmodule.exports = function (COLLECTION) {\n\t  $export($export.S, COLLECTION, {\n\t    from: function from(source) {\n\t      var mapFn = arguments[1];\n\t      var mapping, A, n, cb;\n\t      aFunction(this);\n\t      mapping = mapFn !== undefined;\n\t      if (mapping) aFunction(mapFn);\n\t      if (source == undefined) return new this();\n\t      A = [];\n\t      if (mapping) {\n\t        n = 0;\n\t        cb = ctx(mapFn, arguments[2], 2);\n\t        forOf(source, false, function (nextItem) {\n\t          A.push(cb(nextItem, n++));\n\t        });\n\t      } else {\n\t        forOf(source, false, A.push, A);\n\t      }\n\t      return new this(A);\n\t    }\n\t  });\n\t};\n\t\n\t/***/ }),\n\t/* 125 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar isReadableStreamSupported = false;\n\tif (typeof ReadableStream !== 'undefined') {\n\t  try {\n\t    new ReadableStream({\n\t      start: function start(controller) {\n\t        controller.close();\n\t      }\n\t    });\n\t    isReadableStreamSupported = true;\n\t  } catch (e) {}\n\t}\n\tif (isReadableStreamSupported) {\n\t  exports.ReadableStream = ReadableStream;\n\t} else {\n\t  exports.ReadableStream = __w_pdfjs_require__(126).ReadableStream;\n\t}\n\t\n\t/***/ }),\n\t/* 126 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t(function (e, a) {\n\t  for (var i in a) {\n\t    e[i] = a[i];\n\t  }\n\t})(exports, function (modules) {\n\t  var installedModules = {};\n\t  function __w_pdfjs_require__(moduleId) {\n\t    if (installedModules[moduleId]) return installedModules[moduleId].exports;\n\t    var module = installedModules[moduleId] = {\n\t      i: moduleId,\n\t      l: false,\n\t      exports: {}\n\t    };\n\t    modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n\t    module.l = true;\n\t    return module.exports;\n\t  }\n\t  __w_pdfjs_require__.m = modules;\n\t  __w_pdfjs_require__.c = installedModules;\n\t  __w_pdfjs_require__.i = function (value) {\n\t    return value;\n\t  };\n\t  __w_pdfjs_require__.d = function (exports, name, getter) {\n\t    if (!__w_pdfjs_require__.o(exports, name)) {\n\t      Object.defineProperty(exports, name, {\n\t        configurable: false,\n\t        enumerable: true,\n\t        get: getter\n\t      });\n\t    }\n\t  };\n\t  __w_pdfjs_require__.n = function (module) {\n\t    var getter = module && module.__esModule ? function getDefault() {\n\t      return module['default'];\n\t    } : function getModuleExports() {\n\t      return module;\n\t    };\n\t    __w_pdfjs_require__.d(getter, 'a', getter);\n\t    return getter;\n\t  };\n\t  __w_pdfjs_require__.o = function (object, property) {\n\t    return Object.prototype.hasOwnProperty.call(object, property);\n\t  };\n\t  __w_pdfjs_require__.p = \"\";\n\t  return __w_pdfjs_require__(__w_pdfjs_require__.s = 7);\n\t}([function (module, exports, __w_pdfjs_require__) {\n\t  \"use strict\";\n\t\n\t  var _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n\t    return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n\t  } : function (obj) {\n\t    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n\t  };\n\t  var _require = __w_pdfjs_require__(1),\n\t      assert = _require.assert;\n\t  function IsPropertyKey(argument) {\n\t    return typeof argument === 'string' || (typeof argument === 'undefined' ? 'undefined' : _typeof(argument)) === 'symbol';\n\t  }\n\t  exports.typeIsObject = function (x) {\n\t    return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x !== null || typeof x === 'function';\n\t  };\n\t  exports.createDataProperty = function (o, p, v) {\n\t    assert(exports.typeIsObject(o));\n\t    Object.defineProperty(o, p, {\n\t      value: v,\n\t      writable: true,\n\t      enumerable: true,\n\t      configurable: true\n\t    });\n\t  };\n\t  exports.createArrayFromList = function (elements) {\n\t    return elements.slice();\n\t  };\n\t  exports.ArrayBufferCopy = function (dest, destOffset, src, srcOffset, n) {\n\t    new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n\t  };\n\t  exports.CreateIterResultObject = function (value, done) {\n\t    assert(typeof done === 'boolean');\n\t    var obj = {};\n\t    Object.defineProperty(obj, 'value', {\n\t      value: value,\n\t      enumerable: true,\n\t      writable: true,\n\t      configurable: true\n\t    });\n\t    Object.defineProperty(obj, 'done', {\n\t      value: done,\n\t      enumerable: true,\n\t      writable: true,\n\t      configurable: true\n\t    });\n\t    return obj;\n\t  };\n\t  exports.IsFiniteNonNegativeNumber = function (v) {\n\t    if (Number.isNaN(v)) {\n\t      return false;\n\t    }\n\t    if (v === Infinity) {\n\t      return false;\n\t    }\n\t    if (v < 0) {\n\t      return false;\n\t    }\n\t    return true;\n\t  };\n\t  function Call(F, V, args) {\n\t    if (typeof F !== 'function') {\n\t      throw new TypeError('Argument is not a function');\n\t    }\n\t    return Function.prototype.apply.call(F, V, args);\n\t  }\n\t  exports.InvokeOrNoop = function (O, P, args) {\n\t    assert(O !== undefined);\n\t    assert(IsPropertyKey(P));\n\t    assert(Array.isArray(args));\n\t    var method = O[P];\n\t    if (method === undefined) {\n\t      return undefined;\n\t    }\n\t    return Call(method, O, args);\n\t  };\n\t  exports.PromiseInvokeOrNoop = function (O, P, args) {\n\t    assert(O !== undefined);\n\t    assert(IsPropertyKey(P));\n\t    assert(Array.isArray(args));\n\t    try {\n\t      return Promise.resolve(exports.InvokeOrNoop(O, P, args));\n\t    } catch (returnValueE) {\n\t      return Promise.reject(returnValueE);\n\t    }\n\t  };\n\t  exports.PromiseInvokeOrPerformFallback = function (O, P, args, F, argsF) {\n\t    assert(O !== undefined);\n\t    assert(IsPropertyKey(P));\n\t    assert(Array.isArray(args));\n\t    assert(Array.isArray(argsF));\n\t    var method = void 0;\n\t    try {\n\t      method = O[P];\n\t    } catch (methodE) {\n\t      return Promise.reject(methodE);\n\t    }\n\t    if (method === undefined) {\n\t      return F.apply(null, argsF);\n\t    }\n\t    try {\n\t      return Promise.resolve(Call(method, O, args));\n\t    } catch (e) {\n\t      return Promise.reject(e);\n\t    }\n\t  };\n\t  exports.TransferArrayBuffer = function (O) {\n\t    return O.slice();\n\t  };\n\t  exports.ValidateAndNormalizeHighWaterMark = function (highWaterMark) {\n\t    highWaterMark = Number(highWaterMark);\n\t    if (Number.isNaN(highWaterMark) || highWaterMark < 0) {\n\t      throw new RangeError('highWaterMark property of a queuing strategy must be non-negative and non-NaN');\n\t    }\n\t    return highWaterMark;\n\t  };\n\t  exports.ValidateAndNormalizeQueuingStrategy = function (size, highWaterMark) {\n\t    if (size !== undefined && typeof size !== 'function') {\n\t      throw new TypeError('size property of a queuing strategy must be a function');\n\t    }\n\t    highWaterMark = exports.ValidateAndNormalizeHighWaterMark(highWaterMark);\n\t    return {\n\t      size: size,\n\t      highWaterMark: highWaterMark\n\t    };\n\t  };\n\t}, function (module, exports, __w_pdfjs_require__) {\n\t  \"use strict\";\n\t\n\t  function rethrowAssertionErrorRejection(e) {\n\t    if (e && e.constructor === AssertionError) {\n\t      setTimeout(function () {\n\t        throw e;\n\t      }, 0);\n\t    }\n\t  }\n\t  function AssertionError(message) {\n\t    this.name = 'AssertionError';\n\t    this.message = message || '';\n\t    this.stack = new Error().stack;\n\t  }\n\t  AssertionError.prototype = Object.create(Error.prototype);\n\t  AssertionError.prototype.constructor = AssertionError;\n\t  function assert(value, message) {\n\t    if (!value) {\n\t      throw new AssertionError(message);\n\t    }\n\t  }\n\t  module.exports = {\n\t    rethrowAssertionErrorRejection: rethrowAssertionErrorRejection,\n\t    AssertionError: AssertionError,\n\t    assert: assert\n\t  };\n\t}, function (module, exports, __w_pdfjs_require__) {\n\t  \"use strict\";\n\t\n\t  var _createClass = function () {\n\t    function defineProperties(target, props) {\n\t      for (var i = 0; i < props.length; i++) {\n\t        var descriptor = props[i];\n\t        descriptor.enumerable = descriptor.enumerable || false;\n\t        descriptor.configurable = true;\n\t        if (\"value\" in descriptor) descriptor.writable = true;\n\t        Object.defineProperty(target, descriptor.key, descriptor);\n\t      }\n\t    }\n\t    return function (Constructor, protoProps, staticProps) {\n\t      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n\t      if (staticProps) defineProperties(Constructor, staticProps);\n\t      return Constructor;\n\t    };\n\t  }();\n\t  function _classCallCheck(instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  }\n\t  var _require = __w_pdfjs_require__(0),\n\t      InvokeOrNoop = _require.InvokeOrNoop,\n\t      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n\t      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n\t      typeIsObject = _require.typeIsObject;\n\t  var _require2 = __w_pdfjs_require__(1),\n\t      assert = _require2.assert,\n\t      rethrowAssertionErrorRejection = _require2.rethrowAssertionErrorRejection;\n\t  var _require3 = __w_pdfjs_require__(3),\n\t      DequeueValue = _require3.DequeueValue,\n\t      EnqueueValueWithSize = _require3.EnqueueValueWithSize,\n\t      PeekQueueValue = _require3.PeekQueueValue,\n\t      ResetQueue = _require3.ResetQueue;\n\t  var WritableStream = function () {\n\t    function WritableStream() {\n\t      var underlyingSink = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t          size = _ref.size,\n\t          _ref$highWaterMark = _ref.highWaterMark,\n\t          highWaterMark = _ref$highWaterMark === undefined ? 1 : _ref$highWaterMark;\n\t      _classCallCheck(this, WritableStream);\n\t      this._state = 'writable';\n\t      this._storedError = undefined;\n\t      this._writer = undefined;\n\t      this._writableStreamController = undefined;\n\t      this._writeRequests = [];\n\t      this._inFlightWriteRequest = undefined;\n\t      this._closeRequest = undefined;\n\t      this._inFlightCloseRequest = undefined;\n\t      this._pendingAbortRequest = undefined;\n\t      this._backpressure = false;\n\t      var type = underlyingSink.type;\n\t      if (type !== undefined) {\n\t        throw new RangeError('Invalid type is specified');\n\t      }\n\t      this._writableStreamController = new WritableStreamDefaultController(this, underlyingSink, size, highWaterMark);\n\t      this._writableStreamController.__startSteps();\n\t    }\n\t    _createClass(WritableStream, [{\n\t      key: 'abort',\n\t      value: function abort(reason) {\n\t        if (IsWritableStream(this) === false) {\n\t          return Promise.reject(streamBrandCheckException('abort'));\n\t        }\n\t        if (IsWritableStreamLocked(this) === true) {\n\t          return Promise.reject(new TypeError('Cannot abort a stream that already has a writer'));\n\t        }\n\t        return WritableStreamAbort(this, reason);\n\t      }\n\t    }, {\n\t      key: 'getWriter',\n\t      value: function getWriter() {\n\t        if (IsWritableStream(this) === false) {\n\t          throw streamBrandCheckException('getWriter');\n\t        }\n\t        return AcquireWritableStreamDefaultWriter(this);\n\t      }\n\t    }, {\n\t      key: 'locked',\n\t      get: function get() {\n\t        if (IsWritableStream(this) === false) {\n\t          throw streamBrandCheckException('locked');\n\t        }\n\t        return IsWritableStreamLocked(this);\n\t      }\n\t    }]);\n\t    return WritableStream;\n\t  }();\n\t  module.exports = {\n\t    AcquireWritableStreamDefaultWriter: AcquireWritableStreamDefaultWriter,\n\t    IsWritableStream: IsWritableStream,\n\t    IsWritableStreamLocked: IsWritableStreamLocked,\n\t    WritableStream: WritableStream,\n\t    WritableStreamAbort: WritableStreamAbort,\n\t    WritableStreamDefaultControllerError: WritableStreamDefaultControllerError,\n\t    WritableStreamDefaultWriterCloseWithErrorPropagation: WritableStreamDefaultWriterCloseWithErrorPropagation,\n\t    WritableStreamDefaultWriterRelease: WritableStreamDefaultWriterRelease,\n\t    WritableStreamDefaultWriterWrite: WritableStreamDefaultWriterWrite,\n\t    WritableStreamCloseQueuedOrInFlight: WritableStreamCloseQueuedOrInFlight\n\t  };\n\t  function AcquireWritableStreamDefaultWriter(stream) {\n\t    return new WritableStreamDefaultWriter(stream);\n\t  }\n\t  function IsWritableStream(x) {\n\t    if (!typeIsObject(x)) {\n\t      return false;\n\t    }\n\t    if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function IsWritableStreamLocked(stream) {\n\t    assert(IsWritableStream(stream) === true, 'IsWritableStreamLocked should only be used on known writable streams');\n\t    if (stream._writer === undefined) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function WritableStreamAbort(stream, reason) {\n\t    var state = stream._state;\n\t    if (state === 'closed') {\n\t      return Promise.resolve(undefined);\n\t    }\n\t    if (state === 'errored') {\n\t      return Promise.reject(stream._storedError);\n\t    }\n\t    var error = new TypeError('Requested to abort');\n\t    if (stream._pendingAbortRequest !== undefined) {\n\t      return Promise.reject(error);\n\t    }\n\t    assert(state === 'writable' || state === 'erroring', 'state must be writable or erroring');\n\t    var wasAlreadyErroring = false;\n\t    if (state === 'erroring') {\n\t      wasAlreadyErroring = true;\n\t      reason = undefined;\n\t    }\n\t    var promise = new Promise(function (resolve, reject) {\n\t      stream._pendingAbortRequest = {\n\t        _resolve: resolve,\n\t        _reject: reject,\n\t        _reason: reason,\n\t        _wasAlreadyErroring: wasAlreadyErroring\n\t      };\n\t    });\n\t    if (wasAlreadyErroring === false) {\n\t      WritableStreamStartErroring(stream, error);\n\t    }\n\t    return promise;\n\t  }\n\t  function WritableStreamAddWriteRequest(stream) {\n\t    assert(IsWritableStreamLocked(stream) === true);\n\t    assert(stream._state === 'writable');\n\t    var promise = new Promise(function (resolve, reject) {\n\t      var writeRequest = {\n\t        _resolve: resolve,\n\t        _reject: reject\n\t      };\n\t      stream._writeRequests.push(writeRequest);\n\t    });\n\t    return promise;\n\t  }\n\t  function WritableStreamDealWithRejection(stream, error) {\n\t    var state = stream._state;\n\t    if (state === 'writable') {\n\t      WritableStreamStartErroring(stream, error);\n\t      return;\n\t    }\n\t    assert(state === 'erroring');\n\t    WritableStreamFinishErroring(stream);\n\t  }\n\t  function WritableStreamStartErroring(stream, reason) {\n\t    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n\t    assert(stream._state === 'writable', 'state must be writable');\n\t    var controller = stream._writableStreamController;\n\t    assert(controller !== undefined, 'controller must not be undefined');\n\t    stream._state = 'erroring';\n\t    stream._storedError = reason;\n\t    var writer = stream._writer;\n\t    if (writer !== undefined) {\n\t      WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n\t    }\n\t    if (WritableStreamHasOperationMarkedInFlight(stream) === false && controller._started === true) {\n\t      WritableStreamFinishErroring(stream);\n\t    }\n\t  }\n\t  function WritableStreamFinishErroring(stream) {\n\t    assert(stream._state === 'erroring', 'stream._state === erroring');\n\t    assert(WritableStreamHasOperationMarkedInFlight(stream) === false, 'WritableStreamHasOperationMarkedInFlight(stream) === false');\n\t    stream._state = 'errored';\n\t    stream._writableStreamController.__errorSteps();\n\t    var storedError = stream._storedError;\n\t    for (var i = 0; i < stream._writeRequests.length; i++) {\n\t      var writeRequest = stream._writeRequests[i];\n\t      writeRequest._reject(storedError);\n\t    }\n\t    stream._writeRequests = [];\n\t    if (stream._pendingAbortRequest === undefined) {\n\t      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n\t      return;\n\t    }\n\t    var abortRequest = stream._pendingAbortRequest;\n\t    stream._pendingAbortRequest = undefined;\n\t    if (abortRequest._wasAlreadyErroring === true) {\n\t      abortRequest._reject(storedError);\n\t      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n\t      return;\n\t    }\n\t    var promise = stream._writableStreamController.__abortSteps(abortRequest._reason);\n\t    promise.then(function () {\n\t      abortRequest._resolve();\n\t      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n\t    }, function (reason) {\n\t      abortRequest._reject(reason);\n\t      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n\t    });\n\t  }\n\t  function WritableStreamFinishInFlightWrite(stream) {\n\t    assert(stream._inFlightWriteRequest !== undefined);\n\t    stream._inFlightWriteRequest._resolve(undefined);\n\t    stream._inFlightWriteRequest = undefined;\n\t  }\n\t  function WritableStreamFinishInFlightWriteWithError(stream, error) {\n\t    assert(stream._inFlightWriteRequest !== undefined);\n\t    stream._inFlightWriteRequest._reject(error);\n\t    stream._inFlightWriteRequest = undefined;\n\t    assert(stream._state === 'writable' || stream._state === 'erroring');\n\t    WritableStreamDealWithRejection(stream, error);\n\t  }\n\t  function WritableStreamFinishInFlightClose(stream) {\n\t    assert(stream._inFlightCloseRequest !== undefined);\n\t    stream._inFlightCloseRequest._resolve(undefined);\n\t    stream._inFlightCloseRequest = undefined;\n\t    var state = stream._state;\n\t    assert(state === 'writable' || state === 'erroring');\n\t    if (state === 'erroring') {\n\t      stream._storedError = undefined;\n\t      if (stream._pendingAbortRequest !== undefined) {\n\t        stream._pendingAbortRequest._resolve();\n\t        stream._pendingAbortRequest = undefined;\n\t      }\n\t    }\n\t    stream._state = 'closed';\n\t    var writer = stream._writer;\n\t    if (writer !== undefined) {\n\t      defaultWriterClosedPromiseResolve(writer);\n\t    }\n\t    assert(stream._pendingAbortRequest === undefined, 'stream._pendingAbortRequest === undefined');\n\t    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n\t  }\n\t  function WritableStreamFinishInFlightCloseWithError(stream, error) {\n\t    assert(stream._inFlightCloseRequest !== undefined);\n\t    stream._inFlightCloseRequest._reject(error);\n\t    stream._inFlightCloseRequest = undefined;\n\t    assert(stream._state === 'writable' || stream._state === 'erroring');\n\t    if (stream._pendingAbortRequest !== undefined) {\n\t      stream._pendingAbortRequest._reject(error);\n\t      stream._pendingAbortRequest = undefined;\n\t    }\n\t    WritableStreamDealWithRejection(stream, error);\n\t  }\n\t  function WritableStreamCloseQueuedOrInFlight(stream) {\n\t    if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function WritableStreamHasOperationMarkedInFlight(stream) {\n\t    if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function WritableStreamMarkCloseRequestInFlight(stream) {\n\t    assert(stream._inFlightCloseRequest === undefined);\n\t    assert(stream._closeRequest !== undefined);\n\t    stream._inFlightCloseRequest = stream._closeRequest;\n\t    stream._closeRequest = undefined;\n\t  }\n\t  function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n\t    assert(stream._inFlightWriteRequest === undefined, 'there must be no pending write request');\n\t    assert(stream._writeRequests.length !== 0, 'writeRequests must not be empty');\n\t    stream._inFlightWriteRequest = stream._writeRequests.shift();\n\t  }\n\t  function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n\t    assert(stream._state === 'errored', '_stream_.[[state]] is `\"errored\"`');\n\t    if (stream._closeRequest !== undefined) {\n\t      assert(stream._inFlightCloseRequest === undefined);\n\t      stream._closeRequest._reject(stream._storedError);\n\t      stream._closeRequest = undefined;\n\t    }\n\t    var writer = stream._writer;\n\t    if (writer !== undefined) {\n\t      defaultWriterClosedPromiseReject(writer, stream._storedError);\n\t      writer._closedPromise.catch(function () {});\n\t    }\n\t  }\n\t  function WritableStreamUpdateBackpressure(stream, backpressure) {\n\t    assert(stream._state === 'writable');\n\t    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n\t    var writer = stream._writer;\n\t    if (writer !== undefined && backpressure !== stream._backpressure) {\n\t      if (backpressure === true) {\n\t        defaultWriterReadyPromiseReset(writer);\n\t      } else {\n\t        assert(backpressure === false);\n\t        defaultWriterReadyPromiseResolve(writer);\n\t      }\n\t    }\n\t    stream._backpressure = backpressure;\n\t  }\n\t  var WritableStreamDefaultWriter = function () {\n\t    function WritableStreamDefaultWriter(stream) {\n\t      _classCallCheck(this, WritableStreamDefaultWriter);\n\t      if (IsWritableStream(stream) === false) {\n\t        throw new TypeError('WritableStreamDefaultWriter can only be constructed with a WritableStream instance');\n\t      }\n\t      if (IsWritableStreamLocked(stream) === true) {\n\t        throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n\t      }\n\t      this._ownerWritableStream = stream;\n\t      stream._writer = this;\n\t      var state = stream._state;\n\t      if (state === 'writable') {\n\t        if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._backpressure === true) {\n\t          defaultWriterReadyPromiseInitialize(this);\n\t        } else {\n\t          defaultWriterReadyPromiseInitializeAsResolved(this);\n\t        }\n\t        defaultWriterClosedPromiseInitialize(this);\n\t      } else if (state === 'erroring') {\n\t        defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n\t        this._readyPromise.catch(function () {});\n\t        defaultWriterClosedPromiseInitialize(this);\n\t      } else if (state === 'closed') {\n\t        defaultWriterReadyPromiseInitializeAsResolved(this);\n\t        defaultWriterClosedPromiseInitializeAsResolved(this);\n\t      } else {\n\t        assert(state === 'errored', 'state must be errored');\n\t        var storedError = stream._storedError;\n\t        defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n\t        this._readyPromise.catch(function () {});\n\t        defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n\t        this._closedPromise.catch(function () {});\n\t      }\n\t    }\n\t    _createClass(WritableStreamDefaultWriter, [{\n\t      key: 'abort',\n\t      value: function abort(reason) {\n\t        if (IsWritableStreamDefaultWriter(this) === false) {\n\t          return Promise.reject(defaultWriterBrandCheckException('abort'));\n\t        }\n\t        if (this._ownerWritableStream === undefined) {\n\t          return Promise.reject(defaultWriterLockException('abort'));\n\t        }\n\t        return WritableStreamDefaultWriterAbort(this, reason);\n\t      }\n\t    }, {\n\t      key: 'close',\n\t      value: function close() {\n\t        if (IsWritableStreamDefaultWriter(this) === false) {\n\t          return Promise.reject(defaultWriterBrandCheckException('close'));\n\t        }\n\t        var stream = this._ownerWritableStream;\n\t        if (stream === undefined) {\n\t          return Promise.reject(defaultWriterLockException('close'));\n\t        }\n\t        if (WritableStreamCloseQueuedOrInFlight(stream) === true) {\n\t          return Promise.reject(new TypeError('cannot close an already-closing stream'));\n\t        }\n\t        return WritableStreamDefaultWriterClose(this);\n\t      }\n\t    }, {\n\t      key: 'releaseLock',\n\t      value: function releaseLock() {\n\t        if (IsWritableStreamDefaultWriter(this) === false) {\n\t          throw defaultWriterBrandCheckException('releaseLock');\n\t        }\n\t        var stream = this._ownerWritableStream;\n\t        if (stream === undefined) {\n\t          return;\n\t        }\n\t        assert(stream._writer !== undefined);\n\t        WritableStreamDefaultWriterRelease(this);\n\t      }\n\t    }, {\n\t      key: 'write',\n\t      value: function write(chunk) {\n\t        if (IsWritableStreamDefaultWriter(this) === false) {\n\t          return Promise.reject(defaultWriterBrandCheckException('write'));\n\t        }\n\t        if (this._ownerWritableStream === undefined) {\n\t          return Promise.reject(defaultWriterLockException('write to'));\n\t        }\n\t        return WritableStreamDefaultWriterWrite(this, chunk);\n\t      }\n\t    }, {\n\t      key: 'closed',\n\t      get: function get() {\n\t        if (IsWritableStreamDefaultWriter(this) === false) {\n\t          return Promise.reject(defaultWriterBrandCheckException('closed'));\n\t        }\n\t        return this._closedPromise;\n\t      }\n\t    }, {\n\t      key: 'desiredSize',\n\t      get: function get() {\n\t        if (IsWritableStreamDefaultWriter(this) === false) {\n\t          throw defaultWriterBrandCheckException('desiredSize');\n\t        }\n\t        if (this._ownerWritableStream === undefined) {\n\t          throw defaultWriterLockException('desiredSize');\n\t        }\n\t        return WritableStreamDefaultWriterGetDesiredSize(this);\n\t      }\n\t    }, {\n\t      key: 'ready',\n\t      get: function get() {\n\t        if (IsWritableStreamDefaultWriter(this) === false) {\n\t          return Promise.reject(defaultWriterBrandCheckException('ready'));\n\t        }\n\t        return this._readyPromise;\n\t      }\n\t    }]);\n\t    return WritableStreamDefaultWriter;\n\t  }();\n\t  function IsWritableStreamDefaultWriter(x) {\n\t    if (!typeIsObject(x)) {\n\t      return false;\n\t    }\n\t    if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function WritableStreamDefaultWriterAbort(writer, reason) {\n\t    var stream = writer._ownerWritableStream;\n\t    assert(stream !== undefined);\n\t    return WritableStreamAbort(stream, reason);\n\t  }\n\t  function WritableStreamDefaultWriterClose(writer) {\n\t    var stream = writer._ownerWritableStream;\n\t    assert(stream !== undefined);\n\t    var state = stream._state;\n\t    if (state === 'closed' || state === 'errored') {\n\t      return Promise.reject(new TypeError('The stream (in ' + state + ' state) is not in the writable state and cannot be closed'));\n\t    }\n\t    assert(state === 'writable' || state === 'erroring');\n\t    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n\t    var promise = new Promise(function (resolve, reject) {\n\t      var closeRequest = {\n\t        _resolve: resolve,\n\t        _reject: reject\n\t      };\n\t      stream._closeRequest = closeRequest;\n\t    });\n\t    if (stream._backpressure === true && state === 'writable') {\n\t      defaultWriterReadyPromiseResolve(writer);\n\t    }\n\t    WritableStreamDefaultControllerClose(stream._writableStreamController);\n\t    return promise;\n\t  }\n\t  function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n\t    var stream = writer._ownerWritableStream;\n\t    assert(stream !== undefined);\n\t    var state = stream._state;\n\t    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n\t      return Promise.resolve();\n\t    }\n\t    if (state === 'errored') {\n\t      return Promise.reject(stream._storedError);\n\t    }\n\t    assert(state === 'writable' || state === 'erroring');\n\t    return WritableStreamDefaultWriterClose(writer);\n\t  }\n\t  function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n\t    if (writer._closedPromiseState === 'pending') {\n\t      defaultWriterClosedPromiseReject(writer, error);\n\t    } else {\n\t      defaultWriterClosedPromiseResetToRejected(writer, error);\n\t    }\n\t    writer._closedPromise.catch(function () {});\n\t  }\n\t  function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n\t    if (writer._readyPromiseState === 'pending') {\n\t      defaultWriterReadyPromiseReject(writer, error);\n\t    } else {\n\t      defaultWriterReadyPromiseResetToRejected(writer, error);\n\t    }\n\t    writer._readyPromise.catch(function () {});\n\t  }\n\t  function WritableStreamDefaultWriterGetDesiredSize(writer) {\n\t    var stream = writer._ownerWritableStream;\n\t    var state = stream._state;\n\t    if (state === 'errored' || state === 'erroring') {\n\t      return null;\n\t    }\n\t    if (state === 'closed') {\n\t      return 0;\n\t    }\n\t    return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n\t  }\n\t  function WritableStreamDefaultWriterRelease(writer) {\n\t    var stream = writer._ownerWritableStream;\n\t    assert(stream !== undefined);\n\t    assert(stream._writer === writer);\n\t    var releasedError = new TypeError('Writer was released and can no longer be used to monitor the stream\\'s closedness');\n\t    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n\t    WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n\t    stream._writer = undefined;\n\t    writer._ownerWritableStream = undefined;\n\t  }\n\t  function WritableStreamDefaultWriterWrite(writer, chunk) {\n\t    var stream = writer._ownerWritableStream;\n\t    assert(stream !== undefined);\n\t    var controller = stream._writableStreamController;\n\t    var chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n\t    if (stream !== writer._ownerWritableStream) {\n\t      return Promise.reject(defaultWriterLockException('write to'));\n\t    }\n\t    var state = stream._state;\n\t    if (state === 'errored') {\n\t      return Promise.reject(stream._storedError);\n\t    }\n\t    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n\t      return Promise.reject(new TypeError('The stream is closing or closed and cannot be written to'));\n\t    }\n\t    if (state === 'erroring') {\n\t      return Promise.reject(stream._storedError);\n\t    }\n\t    assert(state === 'writable');\n\t    var promise = WritableStreamAddWriteRequest(stream);\n\t    WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n\t    return promise;\n\t  }\n\t  var WritableStreamDefaultController = function () {\n\t    function WritableStreamDefaultController(stream, underlyingSink, size, highWaterMark) {\n\t      _classCallCheck(this, WritableStreamDefaultController);\n\t      if (IsWritableStream(stream) === false) {\n\t        throw new TypeError('WritableStreamDefaultController can only be constructed with a WritableStream instance');\n\t      }\n\t      if (stream._writableStreamController !== undefined) {\n\t        throw new TypeError('WritableStreamDefaultController instances can only be created by the WritableStream constructor');\n\t      }\n\t      this._controlledWritableStream = stream;\n\t      this._underlyingSink = underlyingSink;\n\t      this._queue = undefined;\n\t      this._queueTotalSize = undefined;\n\t      ResetQueue(this);\n\t      this._started = false;\n\t      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n\t      this._strategySize = normalizedStrategy.size;\n\t      this._strategyHWM = normalizedStrategy.highWaterMark;\n\t      var backpressure = WritableStreamDefaultControllerGetBackpressure(this);\n\t      WritableStreamUpdateBackpressure(stream, backpressure);\n\t    }\n\t    _createClass(WritableStreamDefaultController, [{\n\t      key: 'error',\n\t      value: function error(e) {\n\t        if (IsWritableStreamDefaultController(this) === false) {\n\t          throw new TypeError('WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController');\n\t        }\n\t        var state = this._controlledWritableStream._state;\n\t        if (state !== 'writable') {\n\t          return;\n\t        }\n\t        WritableStreamDefaultControllerError(this, e);\n\t      }\n\t    }, {\n\t      key: '__abortSteps',\n\t      value: function __abortSteps(reason) {\n\t        return PromiseInvokeOrNoop(this._underlyingSink, 'abort', [reason]);\n\t      }\n\t    }, {\n\t      key: '__errorSteps',\n\t      value: function __errorSteps() {\n\t        ResetQueue(this);\n\t      }\n\t    }, {\n\t      key: '__startSteps',\n\t      value: function __startSteps() {\n\t        var _this = this;\n\t        var startResult = InvokeOrNoop(this._underlyingSink, 'start', [this]);\n\t        var stream = this._controlledWritableStream;\n\t        Promise.resolve(startResult).then(function () {\n\t          assert(stream._state === 'writable' || stream._state === 'erroring');\n\t          _this._started = true;\n\t          WritableStreamDefaultControllerAdvanceQueueIfNeeded(_this);\n\t        }, function (r) {\n\t          assert(stream._state === 'writable' || stream._state === 'erroring');\n\t          _this._started = true;\n\t          WritableStreamDealWithRejection(stream, r);\n\t        }).catch(rethrowAssertionErrorRejection);\n\t      }\n\t    }]);\n\t    return WritableStreamDefaultController;\n\t  }();\n\t  function WritableStreamDefaultControllerClose(controller) {\n\t    EnqueueValueWithSize(controller, 'close', 0);\n\t    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n\t  }\n\t  function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n\t    var strategySize = controller._strategySize;\n\t    if (strategySize === undefined) {\n\t      return 1;\n\t    }\n\t    try {\n\t      return strategySize(chunk);\n\t    } catch (chunkSizeE) {\n\t      WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n\t      return 1;\n\t    }\n\t  }\n\t  function WritableStreamDefaultControllerGetDesiredSize(controller) {\n\t    return controller._strategyHWM - controller._queueTotalSize;\n\t  }\n\t  function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n\t    var writeRecord = { chunk: chunk };\n\t    try {\n\t      EnqueueValueWithSize(controller, writeRecord, chunkSize);\n\t    } catch (enqueueE) {\n\t      WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n\t      return;\n\t    }\n\t    var stream = controller._controlledWritableStream;\n\t    if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._state === 'writable') {\n\t      var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n\t      WritableStreamUpdateBackpressure(stream, backpressure);\n\t    }\n\t    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n\t  }\n\t  function IsWritableStreamDefaultController(x) {\n\t    if (!typeIsObject(x)) {\n\t      return false;\n\t    }\n\t    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSink')) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n\t    var stream = controller._controlledWritableStream;\n\t    if (controller._started === false) {\n\t      return;\n\t    }\n\t    if (stream._inFlightWriteRequest !== undefined) {\n\t      return;\n\t    }\n\t    var state = stream._state;\n\t    if (state === 'closed' || state === 'errored') {\n\t      return;\n\t    }\n\t    if (state === 'erroring') {\n\t      WritableStreamFinishErroring(stream);\n\t      return;\n\t    }\n\t    if (controller._queue.length === 0) {\n\t      return;\n\t    }\n\t    var writeRecord = PeekQueueValue(controller);\n\t    if (writeRecord === 'close') {\n\t      WritableStreamDefaultControllerProcessClose(controller);\n\t    } else {\n\t      WritableStreamDefaultControllerProcessWrite(controller, writeRecord.chunk);\n\t    }\n\t  }\n\t  function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n\t    if (controller._controlledWritableStream._state === 'writable') {\n\t      WritableStreamDefaultControllerError(controller, error);\n\t    }\n\t  }\n\t  function WritableStreamDefaultControllerProcessClose(controller) {\n\t    var stream = controller._controlledWritableStream;\n\t    WritableStreamMarkCloseRequestInFlight(stream);\n\t    DequeueValue(controller);\n\t    assert(controller._queue.length === 0, 'queue must be empty once the final write record is dequeued');\n\t    var sinkClosePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'close', []);\n\t    sinkClosePromise.then(function () {\n\t      WritableStreamFinishInFlightClose(stream);\n\t    }, function (reason) {\n\t      WritableStreamFinishInFlightCloseWithError(stream, reason);\n\t    }).catch(rethrowAssertionErrorRejection);\n\t  }\n\t  function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n\t    var stream = controller._controlledWritableStream;\n\t    WritableStreamMarkFirstWriteRequestInFlight(stream);\n\t    var sinkWritePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'write', [chunk, controller]);\n\t    sinkWritePromise.then(function () {\n\t      WritableStreamFinishInFlightWrite(stream);\n\t      var state = stream._state;\n\t      assert(state === 'writable' || state === 'erroring');\n\t      DequeueValue(controller);\n\t      if (WritableStreamCloseQueuedOrInFlight(stream) === false && state === 'writable') {\n\t        var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n\t        WritableStreamUpdateBackpressure(stream, backpressure);\n\t      }\n\t      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n\t    }, function (reason) {\n\t      WritableStreamFinishInFlightWriteWithError(stream, reason);\n\t    }).catch(rethrowAssertionErrorRejection);\n\t  }\n\t  function WritableStreamDefaultControllerGetBackpressure(controller) {\n\t    var desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n\t    return desiredSize <= 0;\n\t  }\n\t  function WritableStreamDefaultControllerError(controller, error) {\n\t    var stream = controller._controlledWritableStream;\n\t    assert(stream._state === 'writable');\n\t    WritableStreamStartErroring(stream, error);\n\t  }\n\t  function streamBrandCheckException(name) {\n\t    return new TypeError('WritableStream.prototype.' + name + ' can only be used on a WritableStream');\n\t  }\n\t  function defaultWriterBrandCheckException(name) {\n\t    return new TypeError('WritableStreamDefaultWriter.prototype.' + name + ' can only be used on a WritableStreamDefaultWriter');\n\t  }\n\t  function defaultWriterLockException(name) {\n\t    return new TypeError('Cannot ' + name + ' a stream using a released writer');\n\t  }\n\t  function defaultWriterClosedPromiseInitialize(writer) {\n\t    writer._closedPromise = new Promise(function (resolve, reject) {\n\t      writer._closedPromise_resolve = resolve;\n\t      writer._closedPromise_reject = reject;\n\t      writer._closedPromiseState = 'pending';\n\t    });\n\t  }\n\t  function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n\t    writer._closedPromise = Promise.reject(reason);\n\t    writer._closedPromise_resolve = undefined;\n\t    writer._closedPromise_reject = undefined;\n\t    writer._closedPromiseState = 'rejected';\n\t  }\n\t  function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n\t    writer._closedPromise = Promise.resolve(undefined);\n\t    writer._closedPromise_resolve = undefined;\n\t    writer._closedPromise_reject = undefined;\n\t    writer._closedPromiseState = 'resolved';\n\t  }\n\t  function defaultWriterClosedPromiseReject(writer, reason) {\n\t    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n\t    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n\t    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n\t    writer._closedPromise_reject(reason);\n\t    writer._closedPromise_resolve = undefined;\n\t    writer._closedPromise_reject = undefined;\n\t    writer._closedPromiseState = 'rejected';\n\t  }\n\t  function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n\t    assert(writer._closedPromise_resolve === undefined, 'writer._closedPromise_resolve === undefined');\n\t    assert(writer._closedPromise_reject === undefined, 'writer._closedPromise_reject === undefined');\n\t    assert(writer._closedPromiseState !== 'pending', 'writer._closedPromiseState is not pending');\n\t    writer._closedPromise = Promise.reject(reason);\n\t    writer._closedPromiseState = 'rejected';\n\t  }\n\t  function defaultWriterClosedPromiseResolve(writer) {\n\t    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n\t    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n\t    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n\t    writer._closedPromise_resolve(undefined);\n\t    writer._closedPromise_resolve = undefined;\n\t    writer._closedPromise_reject = undefined;\n\t    writer._closedPromiseState = 'resolved';\n\t  }\n\t  function defaultWriterReadyPromiseInitialize(writer) {\n\t    writer._readyPromise = new Promise(function (resolve, reject) {\n\t      writer._readyPromise_resolve = resolve;\n\t      writer._readyPromise_reject = reject;\n\t    });\n\t    writer._readyPromiseState = 'pending';\n\t  }\n\t  function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n\t    writer._readyPromise = Promise.reject(reason);\n\t    writer._readyPromise_resolve = undefined;\n\t    writer._readyPromise_reject = undefined;\n\t    writer._readyPromiseState = 'rejected';\n\t  }\n\t  function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n\t    writer._readyPromise = Promise.resolve(undefined);\n\t    writer._readyPromise_resolve = undefined;\n\t    writer._readyPromise_reject = undefined;\n\t    writer._readyPromiseState = 'fulfilled';\n\t  }\n\t  function defaultWriterReadyPromiseReject(writer, reason) {\n\t    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n\t    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n\t    writer._readyPromise_reject(reason);\n\t    writer._readyPromise_resolve = undefined;\n\t    writer._readyPromise_reject = undefined;\n\t    writer._readyPromiseState = 'rejected';\n\t  }\n\t  function defaultWriterReadyPromiseReset(writer) {\n\t    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n\t    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n\t    writer._readyPromise = new Promise(function (resolve, reject) {\n\t      writer._readyPromise_resolve = resolve;\n\t      writer._readyPromise_reject = reject;\n\t    });\n\t    writer._readyPromiseState = 'pending';\n\t  }\n\t  function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n\t    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n\t    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n\t    writer._readyPromise = Promise.reject(reason);\n\t    writer._readyPromiseState = 'rejected';\n\t  }\n\t  function defaultWriterReadyPromiseResolve(writer) {\n\t    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n\t    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n\t    writer._readyPromise_resolve(undefined);\n\t    writer._readyPromise_resolve = undefined;\n\t    writer._readyPromise_reject = undefined;\n\t    writer._readyPromiseState = 'fulfilled';\n\t  }\n\t}, function (module, exports, __w_pdfjs_require__) {\n\t  \"use strict\";\n\t\n\t  var _require = __w_pdfjs_require__(0),\n\t      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber;\n\t  var _require2 = __w_pdfjs_require__(1),\n\t      assert = _require2.assert;\n\t  exports.DequeueValue = function (container) {\n\t    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: DequeueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n\t    assert(container._queue.length > 0, 'Spec-level failure: should never dequeue from an empty queue.');\n\t    var pair = container._queue.shift();\n\t    container._queueTotalSize -= pair.size;\n\t    if (container._queueTotalSize < 0) {\n\t      container._queueTotalSize = 0;\n\t    }\n\t    return pair.value;\n\t  };\n\t  exports.EnqueueValueWithSize = function (container, value, size) {\n\t    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: EnqueueValueWithSize should only be used on containers with [[queue]] and ' + '[[queueTotalSize]].');\n\t    size = Number(size);\n\t    if (!IsFiniteNonNegativeNumber(size)) {\n\t      throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n\t    }\n\t    container._queue.push({\n\t      value: value,\n\t      size: size\n\t    });\n\t    container._queueTotalSize += size;\n\t  };\n\t  exports.PeekQueueValue = function (container) {\n\t    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: PeekQueueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n\t    assert(container._queue.length > 0, 'Spec-level failure: should never peek at an empty queue.');\n\t    var pair = container._queue[0];\n\t    return pair.value;\n\t  };\n\t  exports.ResetQueue = function (container) {\n\t    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: ResetQueue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n\t    container._queue = [];\n\t    container._queueTotalSize = 0;\n\t  };\n\t}, function (module, exports, __w_pdfjs_require__) {\n\t  \"use strict\";\n\t\n\t  var _createClass = function () {\n\t    function defineProperties(target, props) {\n\t      for (var i = 0; i < props.length; i++) {\n\t        var descriptor = props[i];\n\t        descriptor.enumerable = descriptor.enumerable || false;\n\t        descriptor.configurable = true;\n\t        if (\"value\" in descriptor) descriptor.writable = true;\n\t        Object.defineProperty(target, descriptor.key, descriptor);\n\t      }\n\t    }\n\t    return function (Constructor, protoProps, staticProps) {\n\t      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n\t      if (staticProps) defineProperties(Constructor, staticProps);\n\t      return Constructor;\n\t    };\n\t  }();\n\t  function _classCallCheck(instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  }\n\t  var _require = __w_pdfjs_require__(0),\n\t      ArrayBufferCopy = _require.ArrayBufferCopy,\n\t      CreateIterResultObject = _require.CreateIterResultObject,\n\t      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber,\n\t      InvokeOrNoop = _require.InvokeOrNoop,\n\t      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n\t      TransferArrayBuffer = _require.TransferArrayBuffer,\n\t      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n\t      ValidateAndNormalizeHighWaterMark = _require.ValidateAndNormalizeHighWaterMark;\n\t  var _require2 = __w_pdfjs_require__(0),\n\t      createArrayFromList = _require2.createArrayFromList,\n\t      createDataProperty = _require2.createDataProperty,\n\t      typeIsObject = _require2.typeIsObject;\n\t  var _require3 = __w_pdfjs_require__(1),\n\t      assert = _require3.assert,\n\t      rethrowAssertionErrorRejection = _require3.rethrowAssertionErrorRejection;\n\t  var _require4 = __w_pdfjs_require__(3),\n\t      DequeueValue = _require4.DequeueValue,\n\t      EnqueueValueWithSize = _require4.EnqueueValueWithSize,\n\t      ResetQueue = _require4.ResetQueue;\n\t  var _require5 = __w_pdfjs_require__(2),\n\t      AcquireWritableStreamDefaultWriter = _require5.AcquireWritableStreamDefaultWriter,\n\t      IsWritableStream = _require5.IsWritableStream,\n\t      IsWritableStreamLocked = _require5.IsWritableStreamLocked,\n\t      WritableStreamAbort = _require5.WritableStreamAbort,\n\t      WritableStreamDefaultWriterCloseWithErrorPropagation = _require5.WritableStreamDefaultWriterCloseWithErrorPropagation,\n\t      WritableStreamDefaultWriterRelease = _require5.WritableStreamDefaultWriterRelease,\n\t      WritableStreamDefaultWriterWrite = _require5.WritableStreamDefaultWriterWrite,\n\t      WritableStreamCloseQueuedOrInFlight = _require5.WritableStreamCloseQueuedOrInFlight;\n\t  var ReadableStream = function () {\n\t    function ReadableStream() {\n\t      var underlyingSource = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t          size = _ref.size,\n\t          highWaterMark = _ref.highWaterMark;\n\t      _classCallCheck(this, ReadableStream);\n\t      this._state = 'readable';\n\t      this._reader = undefined;\n\t      this._storedError = undefined;\n\t      this._disturbed = false;\n\t      this._readableStreamController = undefined;\n\t      var type = underlyingSource.type;\n\t      var typeString = String(type);\n\t      if (typeString === 'bytes') {\n\t        if (highWaterMark === undefined) {\n\t          highWaterMark = 0;\n\t        }\n\t        this._readableStreamController = new ReadableByteStreamController(this, underlyingSource, highWaterMark);\n\t      } else if (type === undefined) {\n\t        if (highWaterMark === undefined) {\n\t          highWaterMark = 1;\n\t        }\n\t        this._readableStreamController = new ReadableStreamDefaultController(this, underlyingSource, size, highWaterMark);\n\t      } else {\n\t        throw new RangeError('Invalid type is specified');\n\t      }\n\t    }\n\t    _createClass(ReadableStream, [{\n\t      key: 'cancel',\n\t      value: function cancel(reason) {\n\t        if (IsReadableStream(this) === false) {\n\t          return Promise.reject(streamBrandCheckException('cancel'));\n\t        }\n\t        if (IsReadableStreamLocked(this) === true) {\n\t          return Promise.reject(new TypeError('Cannot cancel a stream that already has a reader'));\n\t        }\n\t        return ReadableStreamCancel(this, reason);\n\t      }\n\t    }, {\n\t      key: 'getReader',\n\t      value: function getReader() {\n\t        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n\t            mode = _ref2.mode;\n\t        if (IsReadableStream(this) === false) {\n\t          throw streamBrandCheckException('getReader');\n\t        }\n\t        if (mode === undefined) {\n\t          return AcquireReadableStreamDefaultReader(this);\n\t        }\n\t        mode = String(mode);\n\t        if (mode === 'byob') {\n\t          return AcquireReadableStreamBYOBReader(this);\n\t        }\n\t        throw new RangeError('Invalid mode is specified');\n\t      }\n\t    }, {\n\t      key: 'pipeThrough',\n\t      value: function pipeThrough(_ref3, options) {\n\t        var writable = _ref3.writable,\n\t            readable = _ref3.readable;\n\t        var promise = this.pipeTo(writable, options);\n\t        ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise);\n\t        return readable;\n\t      }\n\t    }, {\n\t      key: 'pipeTo',\n\t      value: function pipeTo(dest) {\n\t        var _this = this;\n\t        var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t            preventClose = _ref4.preventClose,\n\t            preventAbort = _ref4.preventAbort,\n\t            preventCancel = _ref4.preventCancel;\n\t        if (IsReadableStream(this) === false) {\n\t          return Promise.reject(streamBrandCheckException('pipeTo'));\n\t        }\n\t        if (IsWritableStream(dest) === false) {\n\t          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo\\'s first argument must be a WritableStream'));\n\t        }\n\t        preventClose = Boolean(preventClose);\n\t        preventAbort = Boolean(preventAbort);\n\t        preventCancel = Boolean(preventCancel);\n\t        if (IsReadableStreamLocked(this) === true) {\n\t          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n\t        }\n\t        if (IsWritableStreamLocked(dest) === true) {\n\t          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n\t        }\n\t        var reader = AcquireReadableStreamDefaultReader(this);\n\t        var writer = AcquireWritableStreamDefaultWriter(dest);\n\t        var shuttingDown = false;\n\t        var currentWrite = Promise.resolve();\n\t        return new Promise(function (resolve, reject) {\n\t          function pipeLoop() {\n\t            currentWrite = Promise.resolve();\n\t            if (shuttingDown === true) {\n\t              return Promise.resolve();\n\t            }\n\t            return writer._readyPromise.then(function () {\n\t              return ReadableStreamDefaultReaderRead(reader).then(function (_ref5) {\n\t                var value = _ref5.value,\n\t                    done = _ref5.done;\n\t                if (done === true) {\n\t                  return;\n\t                }\n\t                currentWrite = WritableStreamDefaultWriterWrite(writer, value).catch(function () {});\n\t              });\n\t            }).then(pipeLoop);\n\t          }\n\t          isOrBecomesErrored(_this, reader._closedPromise, function (storedError) {\n\t            if (preventAbort === false) {\n\t              shutdownWithAction(function () {\n\t                return WritableStreamAbort(dest, storedError);\n\t              }, true, storedError);\n\t            } else {\n\t              shutdown(true, storedError);\n\t            }\n\t          });\n\t          isOrBecomesErrored(dest, writer._closedPromise, function (storedError) {\n\t            if (preventCancel === false) {\n\t              shutdownWithAction(function () {\n\t                return ReadableStreamCancel(_this, storedError);\n\t              }, true, storedError);\n\t            } else {\n\t              shutdown(true, storedError);\n\t            }\n\t          });\n\t          isOrBecomesClosed(_this, reader._closedPromise, function () {\n\t            if (preventClose === false) {\n\t              shutdownWithAction(function () {\n\t                return WritableStreamDefaultWriterCloseWithErrorPropagation(writer);\n\t              });\n\t            } else {\n\t              shutdown();\n\t            }\n\t          });\n\t          if (WritableStreamCloseQueuedOrInFlight(dest) === true || dest._state === 'closed') {\n\t            var destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n\t            if (preventCancel === false) {\n\t              shutdownWithAction(function () {\n\t                return ReadableStreamCancel(_this, destClosed);\n\t              }, true, destClosed);\n\t            } else {\n\t              shutdown(true, destClosed);\n\t            }\n\t          }\n\t          pipeLoop().catch(function (err) {\n\t            currentWrite = Promise.resolve();\n\t            rethrowAssertionErrorRejection(err);\n\t          });\n\t          function waitForWritesToFinish() {\n\t            var oldCurrentWrite = currentWrite;\n\t            return currentWrite.then(function () {\n\t              return oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined;\n\t            });\n\t          }\n\t          function isOrBecomesErrored(stream, promise, action) {\n\t            if (stream._state === 'errored') {\n\t              action(stream._storedError);\n\t            } else {\n\t              promise.catch(action).catch(rethrowAssertionErrorRejection);\n\t            }\n\t          }\n\t          function isOrBecomesClosed(stream, promise, action) {\n\t            if (stream._state === 'closed') {\n\t              action();\n\t            } else {\n\t              promise.then(action).catch(rethrowAssertionErrorRejection);\n\t            }\n\t          }\n\t          function shutdownWithAction(action, originalIsError, originalError) {\n\t            if (shuttingDown === true) {\n\t              return;\n\t            }\n\t            shuttingDown = true;\n\t            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n\t              waitForWritesToFinish().then(doTheRest);\n\t            } else {\n\t              doTheRest();\n\t            }\n\t            function doTheRest() {\n\t              action().then(function () {\n\t                return finalize(originalIsError, originalError);\n\t              }, function (newError) {\n\t                return finalize(true, newError);\n\t              }).catch(rethrowAssertionErrorRejection);\n\t            }\n\t          }\n\t          function shutdown(isError, error) {\n\t            if (shuttingDown === true) {\n\t              return;\n\t            }\n\t            shuttingDown = true;\n\t            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n\t              waitForWritesToFinish().then(function () {\n\t                return finalize(isError, error);\n\t              }).catch(rethrowAssertionErrorRejection);\n\t            } else {\n\t              finalize(isError, error);\n\t            }\n\t          }\n\t          function finalize(isError, error) {\n\t            WritableStreamDefaultWriterRelease(writer);\n\t            ReadableStreamReaderGenericRelease(reader);\n\t            if (isError) {\n\t              reject(error);\n\t            } else {\n\t              resolve(undefined);\n\t            }\n\t          }\n\t        });\n\t      }\n\t    }, {\n\t      key: 'tee',\n\t      value: function tee() {\n\t        if (IsReadableStream(this) === false) {\n\t          throw streamBrandCheckException('tee');\n\t        }\n\t        var branches = ReadableStreamTee(this, false);\n\t        return createArrayFromList(branches);\n\t      }\n\t    }, {\n\t      key: 'locked',\n\t      get: function get() {\n\t        if (IsReadableStream(this) === false) {\n\t          throw streamBrandCheckException('locked');\n\t        }\n\t        return IsReadableStreamLocked(this);\n\t      }\n\t    }]);\n\t    return ReadableStream;\n\t  }();\n\t  module.exports = {\n\t    ReadableStream: ReadableStream,\n\t    IsReadableStreamDisturbed: IsReadableStreamDisturbed,\n\t    ReadableStreamDefaultControllerClose: ReadableStreamDefaultControllerClose,\n\t    ReadableStreamDefaultControllerEnqueue: ReadableStreamDefaultControllerEnqueue,\n\t    ReadableStreamDefaultControllerError: ReadableStreamDefaultControllerError,\n\t    ReadableStreamDefaultControllerGetDesiredSize: ReadableStreamDefaultControllerGetDesiredSize\n\t  };\n\t  function AcquireReadableStreamBYOBReader(stream) {\n\t    return new ReadableStreamBYOBReader(stream);\n\t  }\n\t  function AcquireReadableStreamDefaultReader(stream) {\n\t    return new ReadableStreamDefaultReader(stream);\n\t  }\n\t  function IsReadableStream(x) {\n\t    if (!typeIsObject(x)) {\n\t      return false;\n\t    }\n\t    if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function IsReadableStreamDisturbed(stream) {\n\t    assert(IsReadableStream(stream) === true, 'IsReadableStreamDisturbed should only be used on known readable streams');\n\t    return stream._disturbed;\n\t  }\n\t  function IsReadableStreamLocked(stream) {\n\t    assert(IsReadableStream(stream) === true, 'IsReadableStreamLocked should only be used on known readable streams');\n\t    if (stream._reader === undefined) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function ReadableStreamTee(stream, cloneForBranch2) {\n\t    assert(IsReadableStream(stream) === true);\n\t    assert(typeof cloneForBranch2 === 'boolean');\n\t    var reader = AcquireReadableStreamDefaultReader(stream);\n\t    var teeState = {\n\t      closedOrErrored: false,\n\t      canceled1: false,\n\t      canceled2: false,\n\t      reason1: undefined,\n\t      reason2: undefined\n\t    };\n\t    teeState.promise = new Promise(function (resolve) {\n\t      teeState._resolve = resolve;\n\t    });\n\t    var pull = create_ReadableStreamTeePullFunction();\n\t    pull._reader = reader;\n\t    pull._teeState = teeState;\n\t    pull._cloneForBranch2 = cloneForBranch2;\n\t    var cancel1 = create_ReadableStreamTeeBranch1CancelFunction();\n\t    cancel1._stream = stream;\n\t    cancel1._teeState = teeState;\n\t    var cancel2 = create_ReadableStreamTeeBranch2CancelFunction();\n\t    cancel2._stream = stream;\n\t    cancel2._teeState = teeState;\n\t    var underlyingSource1 = Object.create(Object.prototype);\n\t    createDataProperty(underlyingSource1, 'pull', pull);\n\t    createDataProperty(underlyingSource1, 'cancel', cancel1);\n\t    var branch1Stream = new ReadableStream(underlyingSource1);\n\t    var underlyingSource2 = Object.create(Object.prototype);\n\t    createDataProperty(underlyingSource2, 'pull', pull);\n\t    createDataProperty(underlyingSource2, 'cancel', cancel2);\n\t    var branch2Stream = new ReadableStream(underlyingSource2);\n\t    pull._branch1 = branch1Stream._readableStreamController;\n\t    pull._branch2 = branch2Stream._readableStreamController;\n\t    reader._closedPromise.catch(function (r) {\n\t      if (teeState.closedOrErrored === true) {\n\t        return;\n\t      }\n\t      ReadableStreamDefaultControllerError(pull._branch1, r);\n\t      ReadableStreamDefaultControllerError(pull._branch2, r);\n\t      teeState.closedOrErrored = true;\n\t    });\n\t    return [branch1Stream, branch2Stream];\n\t  }\n\t  function create_ReadableStreamTeePullFunction() {\n\t    function f() {\n\t      var reader = f._reader,\n\t          branch1 = f._branch1,\n\t          branch2 = f._branch2,\n\t          teeState = f._teeState;\n\t      return ReadableStreamDefaultReaderRead(reader).then(function (result) {\n\t        assert(typeIsObject(result));\n\t        var value = result.value;\n\t        var done = result.done;\n\t        assert(typeof done === 'boolean');\n\t        if (done === true && teeState.closedOrErrored === false) {\n\t          if (teeState.canceled1 === false) {\n\t            ReadableStreamDefaultControllerClose(branch1);\n\t          }\n\t          if (teeState.canceled2 === false) {\n\t            ReadableStreamDefaultControllerClose(branch2);\n\t          }\n\t          teeState.closedOrErrored = true;\n\t        }\n\t        if (teeState.closedOrErrored === true) {\n\t          return;\n\t        }\n\t        var value1 = value;\n\t        var value2 = value;\n\t        if (teeState.canceled1 === false) {\n\t          ReadableStreamDefaultControllerEnqueue(branch1, value1);\n\t        }\n\t        if (teeState.canceled2 === false) {\n\t          ReadableStreamDefaultControllerEnqueue(branch2, value2);\n\t        }\n\t      });\n\t    }\n\t    return f;\n\t  }\n\t  function create_ReadableStreamTeeBranch1CancelFunction() {\n\t    function f(reason) {\n\t      var stream = f._stream,\n\t          teeState = f._teeState;\n\t      teeState.canceled1 = true;\n\t      teeState.reason1 = reason;\n\t      if (teeState.canceled2 === true) {\n\t        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n\t        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n\t        teeState._resolve(cancelResult);\n\t      }\n\t      return teeState.promise;\n\t    }\n\t    return f;\n\t  }\n\t  function create_ReadableStreamTeeBranch2CancelFunction() {\n\t    function f(reason) {\n\t      var stream = f._stream,\n\t          teeState = f._teeState;\n\t      teeState.canceled2 = true;\n\t      teeState.reason2 = reason;\n\t      if (teeState.canceled1 === true) {\n\t        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n\t        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n\t        teeState._resolve(cancelResult);\n\t      }\n\t      return teeState.promise;\n\t    }\n\t    return f;\n\t  }\n\t  function ReadableStreamAddReadIntoRequest(stream) {\n\t    assert(IsReadableStreamBYOBReader(stream._reader) === true);\n\t    assert(stream._state === 'readable' || stream._state === 'closed');\n\t    var promise = new Promise(function (resolve, reject) {\n\t      var readIntoRequest = {\n\t        _resolve: resolve,\n\t        _reject: reject\n\t      };\n\t      stream._reader._readIntoRequests.push(readIntoRequest);\n\t    });\n\t    return promise;\n\t  }\n\t  function ReadableStreamAddReadRequest(stream) {\n\t    assert(IsReadableStreamDefaultReader(stream._reader) === true);\n\t    assert(stream._state === 'readable');\n\t    var promise = new Promise(function (resolve, reject) {\n\t      var readRequest = {\n\t        _resolve: resolve,\n\t        _reject: reject\n\t      };\n\t      stream._reader._readRequests.push(readRequest);\n\t    });\n\t    return promise;\n\t  }\n\t  function ReadableStreamCancel(stream, reason) {\n\t    stream._disturbed = true;\n\t    if (stream._state === 'closed') {\n\t      return Promise.resolve(undefined);\n\t    }\n\t    if (stream._state === 'errored') {\n\t      return Promise.reject(stream._storedError);\n\t    }\n\t    ReadableStreamClose(stream);\n\t    var sourceCancelPromise = stream._readableStreamController.__cancelSteps(reason);\n\t    return sourceCancelPromise.then(function () {\n\t      return undefined;\n\t    });\n\t  }\n\t  function ReadableStreamClose(stream) {\n\t    assert(stream._state === 'readable');\n\t    stream._state = 'closed';\n\t    var reader = stream._reader;\n\t    if (reader === undefined) {\n\t      return undefined;\n\t    }\n\t    if (IsReadableStreamDefaultReader(reader) === true) {\n\t      for (var i = 0; i < reader._readRequests.length; i++) {\n\t        var _resolve = reader._readRequests[i]._resolve;\n\t        _resolve(CreateIterResultObject(undefined, true));\n\t      }\n\t      reader._readRequests = [];\n\t    }\n\t    defaultReaderClosedPromiseResolve(reader);\n\t    return undefined;\n\t  }\n\t  function ReadableStreamError(stream, e) {\n\t    assert(IsReadableStream(stream) === true, 'stream must be ReadableStream');\n\t    assert(stream._state === 'readable', 'state must be readable');\n\t    stream._state = 'errored';\n\t    stream._storedError = e;\n\t    var reader = stream._reader;\n\t    if (reader === undefined) {\n\t      return undefined;\n\t    }\n\t    if (IsReadableStreamDefaultReader(reader) === true) {\n\t      for (var i = 0; i < reader._readRequests.length; i++) {\n\t        var readRequest = reader._readRequests[i];\n\t        readRequest._reject(e);\n\t      }\n\t      reader._readRequests = [];\n\t    } else {\n\t      assert(IsReadableStreamBYOBReader(reader), 'reader must be ReadableStreamBYOBReader');\n\t      for (var _i = 0; _i < reader._readIntoRequests.length; _i++) {\n\t        var readIntoRequest = reader._readIntoRequests[_i];\n\t        readIntoRequest._reject(e);\n\t      }\n\t      reader._readIntoRequests = [];\n\t    }\n\t    defaultReaderClosedPromiseReject(reader, e);\n\t    reader._closedPromise.catch(function () {});\n\t  }\n\t  function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n\t    var reader = stream._reader;\n\t    assert(reader._readIntoRequests.length > 0);\n\t    var readIntoRequest = reader._readIntoRequests.shift();\n\t    readIntoRequest._resolve(CreateIterResultObject(chunk, done));\n\t  }\n\t  function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n\t    var reader = stream._reader;\n\t    assert(reader._readRequests.length > 0);\n\t    var readRequest = reader._readRequests.shift();\n\t    readRequest._resolve(CreateIterResultObject(chunk, done));\n\t  }\n\t  function ReadableStreamGetNumReadIntoRequests(stream) {\n\t    return stream._reader._readIntoRequests.length;\n\t  }\n\t  function ReadableStreamGetNumReadRequests(stream) {\n\t    return stream._reader._readRequests.length;\n\t  }\n\t  function ReadableStreamHasBYOBReader(stream) {\n\t    var reader = stream._reader;\n\t    if (reader === undefined) {\n\t      return false;\n\t    }\n\t    if (IsReadableStreamBYOBReader(reader) === false) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function ReadableStreamHasDefaultReader(stream) {\n\t    var reader = stream._reader;\n\t    if (reader === undefined) {\n\t      return false;\n\t    }\n\t    if (IsReadableStreamDefaultReader(reader) === false) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  var ReadableStreamDefaultReader = function () {\n\t    function ReadableStreamDefaultReader(stream) {\n\t      _classCallCheck(this, ReadableStreamDefaultReader);\n\t      if (IsReadableStream(stream) === false) {\n\t        throw new TypeError('ReadableStreamDefaultReader can only be constructed with a ReadableStream instance');\n\t      }\n\t      if (IsReadableStreamLocked(stream) === true) {\n\t        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n\t      }\n\t      ReadableStreamReaderGenericInitialize(this, stream);\n\t      this._readRequests = [];\n\t    }\n\t    _createClass(ReadableStreamDefaultReader, [{\n\t      key: 'cancel',\n\t      value: function cancel(reason) {\n\t        if (IsReadableStreamDefaultReader(this) === false) {\n\t          return Promise.reject(defaultReaderBrandCheckException('cancel'));\n\t        }\n\t        if (this._ownerReadableStream === undefined) {\n\t          return Promise.reject(readerLockException('cancel'));\n\t        }\n\t        return ReadableStreamReaderGenericCancel(this, reason);\n\t      }\n\t    }, {\n\t      key: 'read',\n\t      value: function read() {\n\t        if (IsReadableStreamDefaultReader(this) === false) {\n\t          return Promise.reject(defaultReaderBrandCheckException('read'));\n\t        }\n\t        if (this._ownerReadableStream === undefined) {\n\t          return Promise.reject(readerLockException('read from'));\n\t        }\n\t        return ReadableStreamDefaultReaderRead(this);\n\t      }\n\t    }, {\n\t      key: 'releaseLock',\n\t      value: function releaseLock() {\n\t        if (IsReadableStreamDefaultReader(this) === false) {\n\t          throw defaultReaderBrandCheckException('releaseLock');\n\t        }\n\t        if (this._ownerReadableStream === undefined) {\n\t          return;\n\t        }\n\t        if (this._readRequests.length > 0) {\n\t          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n\t        }\n\t        ReadableStreamReaderGenericRelease(this);\n\t      }\n\t    }, {\n\t      key: 'closed',\n\t      get: function get() {\n\t        if (IsReadableStreamDefaultReader(this) === false) {\n\t          return Promise.reject(defaultReaderBrandCheckException('closed'));\n\t        }\n\t        return this._closedPromise;\n\t      }\n\t    }]);\n\t    return ReadableStreamDefaultReader;\n\t  }();\n\t  var ReadableStreamBYOBReader = function () {\n\t    function ReadableStreamBYOBReader(stream) {\n\t      _classCallCheck(this, ReadableStreamBYOBReader);\n\t      if (!IsReadableStream(stream)) {\n\t        throw new TypeError('ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a ' + 'byte source');\n\t      }\n\t      if (IsReadableByteStreamController(stream._readableStreamController) === false) {\n\t        throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' + 'source');\n\t      }\n\t      if (IsReadableStreamLocked(stream)) {\n\t        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n\t      }\n\t      ReadableStreamReaderGenericInitialize(this, stream);\n\t      this._readIntoRequests = [];\n\t    }\n\t    _createClass(ReadableStreamBYOBReader, [{\n\t      key: 'cancel',\n\t      value: function cancel(reason) {\n\t        if (!IsReadableStreamBYOBReader(this)) {\n\t          return Promise.reject(byobReaderBrandCheckException('cancel'));\n\t        }\n\t        if (this._ownerReadableStream === undefined) {\n\t          return Promise.reject(readerLockException('cancel'));\n\t        }\n\t        return ReadableStreamReaderGenericCancel(this, reason);\n\t      }\n\t    }, {\n\t      key: 'read',\n\t      value: function read(view) {\n\t        if (!IsReadableStreamBYOBReader(this)) {\n\t          return Promise.reject(byobReaderBrandCheckException('read'));\n\t        }\n\t        if (this._ownerReadableStream === undefined) {\n\t          return Promise.reject(readerLockException('read from'));\n\t        }\n\t        if (!ArrayBuffer.isView(view)) {\n\t          return Promise.reject(new TypeError('view must be an array buffer view'));\n\t        }\n\t        if (view.byteLength === 0) {\n\t          return Promise.reject(new TypeError('view must have non-zero byteLength'));\n\t        }\n\t        return ReadableStreamBYOBReaderRead(this, view);\n\t      }\n\t    }, {\n\t      key: 'releaseLock',\n\t      value: function releaseLock() {\n\t        if (!IsReadableStreamBYOBReader(this)) {\n\t          throw byobReaderBrandCheckException('releaseLock');\n\t        }\n\t        if (this._ownerReadableStream === undefined) {\n\t          return;\n\t        }\n\t        if (this._readIntoRequests.length > 0) {\n\t          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n\t        }\n\t        ReadableStreamReaderGenericRelease(this);\n\t      }\n\t    }, {\n\t      key: 'closed',\n\t      get: function get() {\n\t        if (!IsReadableStreamBYOBReader(this)) {\n\t          return Promise.reject(byobReaderBrandCheckException('closed'));\n\t        }\n\t        return this._closedPromise;\n\t      }\n\t    }]);\n\t    return ReadableStreamBYOBReader;\n\t  }();\n\t  function IsReadableStreamBYOBReader(x) {\n\t    if (!typeIsObject(x)) {\n\t      return false;\n\t    }\n\t    if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function IsReadableStreamDefaultReader(x) {\n\t    if (!typeIsObject(x)) {\n\t      return false;\n\t    }\n\t    if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function ReadableStreamReaderGenericInitialize(reader, stream) {\n\t    reader._ownerReadableStream = stream;\n\t    stream._reader = reader;\n\t    if (stream._state === 'readable') {\n\t      defaultReaderClosedPromiseInitialize(reader);\n\t    } else if (stream._state === 'closed') {\n\t      defaultReaderClosedPromiseInitializeAsResolved(reader);\n\t    } else {\n\t      assert(stream._state === 'errored', 'state must be errored');\n\t      defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n\t      reader._closedPromise.catch(function () {});\n\t    }\n\t  }\n\t  function ReadableStreamReaderGenericCancel(reader, reason) {\n\t    var stream = reader._ownerReadableStream;\n\t    assert(stream !== undefined);\n\t    return ReadableStreamCancel(stream, reason);\n\t  }\n\t  function ReadableStreamReaderGenericRelease(reader) {\n\t    assert(reader._ownerReadableStream !== undefined);\n\t    assert(reader._ownerReadableStream._reader === reader);\n\t    if (reader._ownerReadableStream._state === 'readable') {\n\t      defaultReaderClosedPromiseReject(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n\t    } else {\n\t      defaultReaderClosedPromiseResetToRejected(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n\t    }\n\t    reader._closedPromise.catch(function () {});\n\t    reader._ownerReadableStream._reader = undefined;\n\t    reader._ownerReadableStream = undefined;\n\t  }\n\t  function ReadableStreamBYOBReaderRead(reader, view) {\n\t    var stream = reader._ownerReadableStream;\n\t    assert(stream !== undefined);\n\t    stream._disturbed = true;\n\t    if (stream._state === 'errored') {\n\t      return Promise.reject(stream._storedError);\n\t    }\n\t    return ReadableByteStreamControllerPullInto(stream._readableStreamController, view);\n\t  }\n\t  function ReadableStreamDefaultReaderRead(reader) {\n\t    var stream = reader._ownerReadableStream;\n\t    assert(stream !== undefined);\n\t    stream._disturbed = true;\n\t    if (stream._state === 'closed') {\n\t      return Promise.resolve(CreateIterResultObject(undefined, true));\n\t    }\n\t    if (stream._state === 'errored') {\n\t      return Promise.reject(stream._storedError);\n\t    }\n\t    assert(stream._state === 'readable');\n\t    return stream._readableStreamController.__pullSteps();\n\t  }\n\t  var ReadableStreamDefaultController = function () {\n\t    function ReadableStreamDefaultController(stream, underlyingSource, size, highWaterMark) {\n\t      _classCallCheck(this, ReadableStreamDefaultController);\n\t      if (IsReadableStream(stream) === false) {\n\t        throw new TypeError('ReadableStreamDefaultController can only be constructed with a ReadableStream instance');\n\t      }\n\t      if (stream._readableStreamController !== undefined) {\n\t        throw new TypeError('ReadableStreamDefaultController instances can only be created by the ReadableStream constructor');\n\t      }\n\t      this._controlledReadableStream = stream;\n\t      this._underlyingSource = underlyingSource;\n\t      this._queue = undefined;\n\t      this._queueTotalSize = undefined;\n\t      ResetQueue(this);\n\t      this._started = false;\n\t      this._closeRequested = false;\n\t      this._pullAgain = false;\n\t      this._pulling = false;\n\t      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n\t      this._strategySize = normalizedStrategy.size;\n\t      this._strategyHWM = normalizedStrategy.highWaterMark;\n\t      var controller = this;\n\t      var startResult = InvokeOrNoop(underlyingSource, 'start', [this]);\n\t      Promise.resolve(startResult).then(function () {\n\t        controller._started = true;\n\t        assert(controller._pulling === false);\n\t        assert(controller._pullAgain === false);\n\t        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n\t      }, function (r) {\n\t        ReadableStreamDefaultControllerErrorIfNeeded(controller, r);\n\t      }).catch(rethrowAssertionErrorRejection);\n\t    }\n\t    _createClass(ReadableStreamDefaultController, [{\n\t      key: 'close',\n\t      value: function close() {\n\t        if (IsReadableStreamDefaultController(this) === false) {\n\t          throw defaultControllerBrandCheckException('close');\n\t        }\n\t        if (this._closeRequested === true) {\n\t          throw new TypeError('The stream has already been closed; do not close it again!');\n\t        }\n\t        var state = this._controlledReadableStream._state;\n\t        if (state !== 'readable') {\n\t          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n\t        }\n\t        ReadableStreamDefaultControllerClose(this);\n\t      }\n\t    }, {\n\t      key: 'enqueue',\n\t      value: function enqueue(chunk) {\n\t        if (IsReadableStreamDefaultController(this) === false) {\n\t          throw defaultControllerBrandCheckException('enqueue');\n\t        }\n\t        if (this._closeRequested === true) {\n\t          throw new TypeError('stream is closed or draining');\n\t        }\n\t        var state = this._controlledReadableStream._state;\n\t        if (state !== 'readable') {\n\t          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n\t        }\n\t        return ReadableStreamDefaultControllerEnqueue(this, chunk);\n\t      }\n\t    }, {\n\t      key: 'error',\n\t      value: function error(e) {\n\t        if (IsReadableStreamDefaultController(this) === false) {\n\t          throw defaultControllerBrandCheckException('error');\n\t        }\n\t        var stream = this._controlledReadableStream;\n\t        if (stream._state !== 'readable') {\n\t          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n\t        }\n\t        ReadableStreamDefaultControllerError(this, e);\n\t      }\n\t    }, {\n\t      key: '__cancelSteps',\n\t      value: function __cancelSteps(reason) {\n\t        ResetQueue(this);\n\t        return PromiseInvokeOrNoop(this._underlyingSource, 'cancel', [reason]);\n\t      }\n\t    }, {\n\t      key: '__pullSteps',\n\t      value: function __pullSteps() {\n\t        var stream = this._controlledReadableStream;\n\t        if (this._queue.length > 0) {\n\t          var chunk = DequeueValue(this);\n\t          if (this._closeRequested === true && this._queue.length === 0) {\n\t            ReadableStreamClose(stream);\n\t          } else {\n\t            ReadableStreamDefaultControllerCallPullIfNeeded(this);\n\t          }\n\t          return Promise.resolve(CreateIterResultObject(chunk, false));\n\t        }\n\t        var pendingPromise = ReadableStreamAddReadRequest(stream);\n\t        ReadableStreamDefaultControllerCallPullIfNeeded(this);\n\t        return pendingPromise;\n\t      }\n\t    }, {\n\t      key: 'desiredSize',\n\t      get: function get() {\n\t        if (IsReadableStreamDefaultController(this) === false) {\n\t          throw defaultControllerBrandCheckException('desiredSize');\n\t        }\n\t        return ReadableStreamDefaultControllerGetDesiredSize(this);\n\t      }\n\t    }]);\n\t    return ReadableStreamDefaultController;\n\t  }();\n\t  function IsReadableStreamDefaultController(x) {\n\t    if (!typeIsObject(x)) {\n\t      return false;\n\t    }\n\t    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSource')) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n\t    var shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n\t    if (shouldPull === false) {\n\t      return undefined;\n\t    }\n\t    if (controller._pulling === true) {\n\t      controller._pullAgain = true;\n\t      return undefined;\n\t    }\n\t    assert(controller._pullAgain === false);\n\t    controller._pulling = true;\n\t    var pullPromise = PromiseInvokeOrNoop(controller._underlyingSource, 'pull', [controller]);\n\t    pullPromise.then(function () {\n\t      controller._pulling = false;\n\t      if (controller._pullAgain === true) {\n\t        controller._pullAgain = false;\n\t        return ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n\t      }\n\t      return undefined;\n\t    }, function (e) {\n\t      ReadableStreamDefaultControllerErrorIfNeeded(controller, e);\n\t    }).catch(rethrowAssertionErrorRejection);\n\t    return undefined;\n\t  }\n\t  function ReadableStreamDefaultControllerShouldCallPull(controller) {\n\t    var stream = controller._controlledReadableStream;\n\t    if (stream._state === 'closed' || stream._state === 'errored') {\n\t      return false;\n\t    }\n\t    if (controller._closeRequested === true) {\n\t      return false;\n\t    }\n\t    if (controller._started === false) {\n\t      return false;\n\t    }\n\t    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n\t      return true;\n\t    }\n\t    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n\t    if (desiredSize > 0) {\n\t      return true;\n\t    }\n\t    return false;\n\t  }\n\t  function ReadableStreamDefaultControllerClose(controller) {\n\t    var stream = controller._controlledReadableStream;\n\t    assert(controller._closeRequested === false);\n\t    assert(stream._state === 'readable');\n\t    controller._closeRequested = true;\n\t    if (controller._queue.length === 0) {\n\t      ReadableStreamClose(stream);\n\t    }\n\t  }\n\t  function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n\t    var stream = controller._controlledReadableStream;\n\t    assert(controller._closeRequested === false);\n\t    assert(stream._state === 'readable');\n\t    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n\t      ReadableStreamFulfillReadRequest(stream, chunk, false);\n\t    } else {\n\t      var chunkSize = 1;\n\t      if (controller._strategySize !== undefined) {\n\t        var strategySize = controller._strategySize;\n\t        try {\n\t          chunkSize = strategySize(chunk);\n\t        } catch (chunkSizeE) {\n\t          ReadableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n\t          throw chunkSizeE;\n\t        }\n\t      }\n\t      try {\n\t        EnqueueValueWithSize(controller, chunk, chunkSize);\n\t      } catch (enqueueE) {\n\t        ReadableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n\t        throw enqueueE;\n\t      }\n\t    }\n\t    ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n\t    return undefined;\n\t  }\n\t  function ReadableStreamDefaultControllerError(controller, e) {\n\t    var stream = controller._controlledReadableStream;\n\t    assert(stream._state === 'readable');\n\t    ResetQueue(controller);\n\t    ReadableStreamError(stream, e);\n\t  }\n\t  function ReadableStreamDefaultControllerErrorIfNeeded(controller, e) {\n\t    if (controller._controlledReadableStream._state === 'readable') {\n\t      ReadableStreamDefaultControllerError(controller, e);\n\t    }\n\t  }\n\t  function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n\t    var stream = controller._controlledReadableStream;\n\t    var state = stream._state;\n\t    if (state === 'errored') {\n\t      return null;\n\t    }\n\t    if (state === 'closed') {\n\t      return 0;\n\t    }\n\t    return controller._strategyHWM - controller._queueTotalSize;\n\t  }\n\t  var ReadableStreamBYOBRequest = function () {\n\t    function ReadableStreamBYOBRequest(controller, view) {\n\t      _classCallCheck(this, ReadableStreamBYOBRequest);\n\t      this._associatedReadableByteStreamController = controller;\n\t      this._view = view;\n\t    }\n\t    _createClass(ReadableStreamBYOBRequest, [{\n\t      key: 'respond',\n\t      value: function respond(bytesWritten) {\n\t        if (IsReadableStreamBYOBRequest(this) === false) {\n\t          throw byobRequestBrandCheckException('respond');\n\t        }\n\t        if (this._associatedReadableByteStreamController === undefined) {\n\t          throw new TypeError('This BYOB request has been invalidated');\n\t        }\n\t        ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n\t      }\n\t    }, {\n\t      key: 'respondWithNewView',\n\t      value: function respondWithNewView(view) {\n\t        if (IsReadableStreamBYOBRequest(this) === false) {\n\t          throw byobRequestBrandCheckException('respond');\n\t        }\n\t        if (this._associatedReadableByteStreamController === undefined) {\n\t          throw new TypeError('This BYOB request has been invalidated');\n\t        }\n\t        if (!ArrayBuffer.isView(view)) {\n\t          throw new TypeError('You can only respond with array buffer views');\n\t        }\n\t        ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n\t      }\n\t    }, {\n\t      key: 'view',\n\t      get: function get() {\n\t        return this._view;\n\t      }\n\t    }]);\n\t    return ReadableStreamBYOBRequest;\n\t  }();\n\t  var ReadableByteStreamController = function () {\n\t    function ReadableByteStreamController(stream, underlyingByteSource, highWaterMark) {\n\t      _classCallCheck(this, ReadableByteStreamController);\n\t      if (IsReadableStream(stream) === false) {\n\t        throw new TypeError('ReadableByteStreamController can only be constructed with a ReadableStream instance given ' + 'a byte source');\n\t      }\n\t      if (stream._readableStreamController !== undefined) {\n\t        throw new TypeError('ReadableByteStreamController instances can only be created by the ReadableStream constructor given a byte ' + 'source');\n\t      }\n\t      this._controlledReadableStream = stream;\n\t      this._underlyingByteSource = underlyingByteSource;\n\t      this._pullAgain = false;\n\t      this._pulling = false;\n\t      ReadableByteStreamControllerClearPendingPullIntos(this);\n\t      this._queue = this._queueTotalSize = undefined;\n\t      ResetQueue(this);\n\t      this._closeRequested = false;\n\t      this._started = false;\n\t      this._strategyHWM = ValidateAndNormalizeHighWaterMark(highWaterMark);\n\t      var autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n\t      if (autoAllocateChunkSize !== undefined) {\n\t        if (Number.isInteger(autoAllocateChunkSize) === false || autoAllocateChunkSize <= 0) {\n\t          throw new RangeError('autoAllocateChunkSize must be a positive integer');\n\t        }\n\t      }\n\t      this._autoAllocateChunkSize = autoAllocateChunkSize;\n\t      this._pendingPullIntos = [];\n\t      var controller = this;\n\t      var startResult = InvokeOrNoop(underlyingByteSource, 'start', [this]);\n\t      Promise.resolve(startResult).then(function () {\n\t        controller._started = true;\n\t        assert(controller._pulling === false);\n\t        assert(controller._pullAgain === false);\n\t        ReadableByteStreamControllerCallPullIfNeeded(controller);\n\t      }, function (r) {\n\t        if (stream._state === 'readable') {\n\t          ReadableByteStreamControllerError(controller, r);\n\t        }\n\t      }).catch(rethrowAssertionErrorRejection);\n\t    }\n\t    _createClass(ReadableByteStreamController, [{\n\t      key: 'close',\n\t      value: function close() {\n\t        if (IsReadableByteStreamController(this) === false) {\n\t          throw byteStreamControllerBrandCheckException('close');\n\t        }\n\t        if (this._closeRequested === true) {\n\t          throw new TypeError('The stream has already been closed; do not close it again!');\n\t        }\n\t        var state = this._controlledReadableStream._state;\n\t        if (state !== 'readable') {\n\t          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n\t        }\n\t        ReadableByteStreamControllerClose(this);\n\t      }\n\t    }, {\n\t      key: 'enqueue',\n\t      value: function enqueue(chunk) {\n\t        if (IsReadableByteStreamController(this) === false) {\n\t          throw byteStreamControllerBrandCheckException('enqueue');\n\t        }\n\t        if (this._closeRequested === true) {\n\t          throw new TypeError('stream is closed or draining');\n\t        }\n\t        var state = this._controlledReadableStream._state;\n\t        if (state !== 'readable') {\n\t          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n\t        }\n\t        if (!ArrayBuffer.isView(chunk)) {\n\t          throw new TypeError('You can only enqueue array buffer views when using a ReadableByteStreamController');\n\t        }\n\t        ReadableByteStreamControllerEnqueue(this, chunk);\n\t      }\n\t    }, {\n\t      key: 'error',\n\t      value: function error(e) {\n\t        if (IsReadableByteStreamController(this) === false) {\n\t          throw byteStreamControllerBrandCheckException('error');\n\t        }\n\t        var stream = this._controlledReadableStream;\n\t        if (stream._state !== 'readable') {\n\t          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n\t        }\n\t        ReadableByteStreamControllerError(this, e);\n\t      }\n\t    }, {\n\t      key: '__cancelSteps',\n\t      value: function __cancelSteps(reason) {\n\t        if (this._pendingPullIntos.length > 0) {\n\t          var firstDescriptor = this._pendingPullIntos[0];\n\t          firstDescriptor.bytesFilled = 0;\n\t        }\n\t        ResetQueue(this);\n\t        return PromiseInvokeOrNoop(this._underlyingByteSource, 'cancel', [reason]);\n\t      }\n\t    }, {\n\t      key: '__pullSteps',\n\t      value: function __pullSteps() {\n\t        var stream = this._controlledReadableStream;\n\t        assert(ReadableStreamHasDefaultReader(stream) === true);\n\t        if (this._queueTotalSize > 0) {\n\t          assert(ReadableStreamGetNumReadRequests(stream) === 0);\n\t          var entry = this._queue.shift();\n\t          this._queueTotalSize -= entry.byteLength;\n\t          ReadableByteStreamControllerHandleQueueDrain(this);\n\t          var view = void 0;\n\t          try {\n\t            view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n\t          } catch (viewE) {\n\t            return Promise.reject(viewE);\n\t          }\n\t          return Promise.resolve(CreateIterResultObject(view, false));\n\t        }\n\t        var autoAllocateChunkSize = this._autoAllocateChunkSize;\n\t        if (autoAllocateChunkSize !== undefined) {\n\t          var buffer = void 0;\n\t          try {\n\t            buffer = new ArrayBuffer(autoAllocateChunkSize);\n\t          } catch (bufferE) {\n\t            return Promise.reject(bufferE);\n\t          }\n\t          var pullIntoDescriptor = {\n\t            buffer: buffer,\n\t            byteOffset: 0,\n\t            byteLength: autoAllocateChunkSize,\n\t            bytesFilled: 0,\n\t            elementSize: 1,\n\t            ctor: Uint8Array,\n\t            readerType: 'default'\n\t          };\n\t          this._pendingPullIntos.push(pullIntoDescriptor);\n\t        }\n\t        var promise = ReadableStreamAddReadRequest(stream);\n\t        ReadableByteStreamControllerCallPullIfNeeded(this);\n\t        return promise;\n\t      }\n\t    }, {\n\t      key: 'byobRequest',\n\t      get: function get() {\n\t        if (IsReadableByteStreamController(this) === false) {\n\t          throw byteStreamControllerBrandCheckException('byobRequest');\n\t        }\n\t        if (this._byobRequest === undefined && this._pendingPullIntos.length > 0) {\n\t          var firstDescriptor = this._pendingPullIntos[0];\n\t          var view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n\t          this._byobRequest = new ReadableStreamBYOBRequest(this, view);\n\t        }\n\t        return this._byobRequest;\n\t      }\n\t    }, {\n\t      key: 'desiredSize',\n\t      get: function get() {\n\t        if (IsReadableByteStreamController(this) === false) {\n\t          throw byteStreamControllerBrandCheckException('desiredSize');\n\t        }\n\t        return ReadableByteStreamControllerGetDesiredSize(this);\n\t      }\n\t    }]);\n\t    return ReadableByteStreamController;\n\t  }();\n\t  function IsReadableByteStreamController(x) {\n\t    if (!typeIsObject(x)) {\n\t      return false;\n\t    }\n\t    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingByteSource')) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function IsReadableStreamBYOBRequest(x) {\n\t    if (!typeIsObject(x)) {\n\t      return false;\n\t    }\n\t    if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n\t    var shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n\t    if (shouldPull === false) {\n\t      return undefined;\n\t    }\n\t    if (controller._pulling === true) {\n\t      controller._pullAgain = true;\n\t      return undefined;\n\t    }\n\t    assert(controller._pullAgain === false);\n\t    controller._pulling = true;\n\t    var pullPromise = PromiseInvokeOrNoop(controller._underlyingByteSource, 'pull', [controller]);\n\t    pullPromise.then(function () {\n\t      controller._pulling = false;\n\t      if (controller._pullAgain === true) {\n\t        controller._pullAgain = false;\n\t        ReadableByteStreamControllerCallPullIfNeeded(controller);\n\t      }\n\t    }, function (e) {\n\t      if (controller._controlledReadableStream._state === 'readable') {\n\t        ReadableByteStreamControllerError(controller, e);\n\t      }\n\t    }).catch(rethrowAssertionErrorRejection);\n\t    return undefined;\n\t  }\n\t  function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n\t    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n\t    controller._pendingPullIntos = [];\n\t  }\n\t  function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n\t    assert(stream._state !== 'errored', 'state must not be errored');\n\t    var done = false;\n\t    if (stream._state === 'closed') {\n\t      assert(pullIntoDescriptor.bytesFilled === 0);\n\t      done = true;\n\t    }\n\t    var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n\t    if (pullIntoDescriptor.readerType === 'default') {\n\t      ReadableStreamFulfillReadRequest(stream, filledView, done);\n\t    } else {\n\t      assert(pullIntoDescriptor.readerType === 'byob');\n\t      ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n\t    }\n\t  }\n\t  function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n\t    var bytesFilled = pullIntoDescriptor.bytesFilled;\n\t    var elementSize = pullIntoDescriptor.elementSize;\n\t    assert(bytesFilled <= pullIntoDescriptor.byteLength);\n\t    assert(bytesFilled % elementSize === 0);\n\t    return new pullIntoDescriptor.ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n\t  }\n\t  function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n\t    controller._queue.push({\n\t      buffer: buffer,\n\t      byteOffset: byteOffset,\n\t      byteLength: byteLength\n\t    });\n\t    controller._queueTotalSize += byteLength;\n\t  }\n\t  function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n\t    var elementSize = pullIntoDescriptor.elementSize;\n\t    var currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n\t    var maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n\t    var maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n\t    var maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n\t    var totalBytesToCopyRemaining = maxBytesToCopy;\n\t    var ready = false;\n\t    if (maxAlignedBytes > currentAlignedBytes) {\n\t      totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n\t      ready = true;\n\t    }\n\t    var queue = controller._queue;\n\t    while (totalBytesToCopyRemaining > 0) {\n\t      var headOfQueue = queue[0];\n\t      var bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n\t      var destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n\t      ArrayBufferCopy(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n\t      if (headOfQueue.byteLength === bytesToCopy) {\n\t        queue.shift();\n\t      } else {\n\t        headOfQueue.byteOffset += bytesToCopy;\n\t        headOfQueue.byteLength -= bytesToCopy;\n\t      }\n\t      controller._queueTotalSize -= bytesToCopy;\n\t      ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n\t      totalBytesToCopyRemaining -= bytesToCopy;\n\t    }\n\t    if (ready === false) {\n\t      assert(controller._queueTotalSize === 0, 'queue must be empty');\n\t      assert(pullIntoDescriptor.bytesFilled > 0);\n\t      assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);\n\t    }\n\t    return ready;\n\t  }\n\t  function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n\t    assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos[0] === pullIntoDescriptor);\n\t    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n\t    pullIntoDescriptor.bytesFilled += size;\n\t  }\n\t  function ReadableByteStreamControllerHandleQueueDrain(controller) {\n\t    assert(controller._controlledReadableStream._state === 'readable');\n\t    if (controller._queueTotalSize === 0 && controller._closeRequested === true) {\n\t      ReadableStreamClose(controller._controlledReadableStream);\n\t    } else {\n\t      ReadableByteStreamControllerCallPullIfNeeded(controller);\n\t    }\n\t  }\n\t  function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n\t    if (controller._byobRequest === undefined) {\n\t      return;\n\t    }\n\t    controller._byobRequest._associatedReadableByteStreamController = undefined;\n\t    controller._byobRequest._view = undefined;\n\t    controller._byobRequest = undefined;\n\t  }\n\t  function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n\t    assert(controller._closeRequested === false);\n\t    while (controller._pendingPullIntos.length > 0) {\n\t      if (controller._queueTotalSize === 0) {\n\t        return;\n\t      }\n\t      var pullIntoDescriptor = controller._pendingPullIntos[0];\n\t      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n\t        ReadableByteStreamControllerShiftPendingPullInto(controller);\n\t        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n\t      }\n\t    }\n\t  }\n\t  function ReadableByteStreamControllerPullInto(controller, view) {\n\t    var stream = controller._controlledReadableStream;\n\t    var elementSize = 1;\n\t    if (view.constructor !== DataView) {\n\t      elementSize = view.constructor.BYTES_PER_ELEMENT;\n\t    }\n\t    var ctor = view.constructor;\n\t    var pullIntoDescriptor = {\n\t      buffer: view.buffer,\n\t      byteOffset: view.byteOffset,\n\t      byteLength: view.byteLength,\n\t      bytesFilled: 0,\n\t      elementSize: elementSize,\n\t      ctor: ctor,\n\t      readerType: 'byob'\n\t    };\n\t    if (controller._pendingPullIntos.length > 0) {\n\t      pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n\t      controller._pendingPullIntos.push(pullIntoDescriptor);\n\t      return ReadableStreamAddReadIntoRequest(stream);\n\t    }\n\t    if (stream._state === 'closed') {\n\t      var emptyView = new view.constructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n\t      return Promise.resolve(CreateIterResultObject(emptyView, true));\n\t    }\n\t    if (controller._queueTotalSize > 0) {\n\t      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n\t        var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n\t        ReadableByteStreamControllerHandleQueueDrain(controller);\n\t        return Promise.resolve(CreateIterResultObject(filledView, false));\n\t      }\n\t      if (controller._closeRequested === true) {\n\t        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n\t        ReadableByteStreamControllerError(controller, e);\n\t        return Promise.reject(e);\n\t      }\n\t    }\n\t    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n\t    controller._pendingPullIntos.push(pullIntoDescriptor);\n\t    var promise = ReadableStreamAddReadIntoRequest(stream);\n\t    ReadableByteStreamControllerCallPullIfNeeded(controller);\n\t    return promise;\n\t  }\n\t  function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n\t    firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n\t    assert(firstDescriptor.bytesFilled === 0, 'bytesFilled must be 0');\n\t    var stream = controller._controlledReadableStream;\n\t    if (ReadableStreamHasBYOBReader(stream) === true) {\n\t      while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n\t        var pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n\t        ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n\t      }\n\t    }\n\t  }\n\t  function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n\t    if (pullIntoDescriptor.bytesFilled + bytesWritten > pullIntoDescriptor.byteLength) {\n\t      throw new RangeError('bytesWritten out of range');\n\t    }\n\t    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n\t    if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n\t      return;\n\t    }\n\t    ReadableByteStreamControllerShiftPendingPullInto(controller);\n\t    var remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n\t    if (remainderSize > 0) {\n\t      var end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n\t      var remainder = pullIntoDescriptor.buffer.slice(end - remainderSize, end);\n\t      ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n\t    }\n\t    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n\t    pullIntoDescriptor.bytesFilled -= remainderSize;\n\t    ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n\t    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n\t  }\n\t  function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n\t    var firstDescriptor = controller._pendingPullIntos[0];\n\t    var stream = controller._controlledReadableStream;\n\t    if (stream._state === 'closed') {\n\t      if (bytesWritten !== 0) {\n\t        throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n\t      }\n\t      ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n\t    } else {\n\t      assert(stream._state === 'readable');\n\t      ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n\t    }\n\t  }\n\t  function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n\t    var descriptor = controller._pendingPullIntos.shift();\n\t    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n\t    return descriptor;\n\t  }\n\t  function ReadableByteStreamControllerShouldCallPull(controller) {\n\t    var stream = controller._controlledReadableStream;\n\t    if (stream._state !== 'readable') {\n\t      return false;\n\t    }\n\t    if (controller._closeRequested === true) {\n\t      return false;\n\t    }\n\t    if (controller._started === false) {\n\t      return false;\n\t    }\n\t    if (ReadableStreamHasDefaultReader(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n\t      return true;\n\t    }\n\t    if (ReadableStreamHasBYOBReader(stream) === true && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n\t      return true;\n\t    }\n\t    if (ReadableByteStreamControllerGetDesiredSize(controller) > 0) {\n\t      return true;\n\t    }\n\t    return false;\n\t  }\n\t  function ReadableByteStreamControllerClose(controller) {\n\t    var stream = controller._controlledReadableStream;\n\t    assert(controller._closeRequested === false);\n\t    assert(stream._state === 'readable');\n\t    if (controller._queueTotalSize > 0) {\n\t      controller._closeRequested = true;\n\t      return;\n\t    }\n\t    if (controller._pendingPullIntos.length > 0) {\n\t      var firstPendingPullInto = controller._pendingPullIntos[0];\n\t      if (firstPendingPullInto.bytesFilled > 0) {\n\t        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n\t        ReadableByteStreamControllerError(controller, e);\n\t        throw e;\n\t      }\n\t    }\n\t    ReadableStreamClose(stream);\n\t  }\n\t  function ReadableByteStreamControllerEnqueue(controller, chunk) {\n\t    var stream = controller._controlledReadableStream;\n\t    assert(controller._closeRequested === false);\n\t    assert(stream._state === 'readable');\n\t    var buffer = chunk.buffer;\n\t    var byteOffset = chunk.byteOffset;\n\t    var byteLength = chunk.byteLength;\n\t    var transferredBuffer = TransferArrayBuffer(buffer);\n\t    if (ReadableStreamHasDefaultReader(stream) === true) {\n\t      if (ReadableStreamGetNumReadRequests(stream) === 0) {\n\t        ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n\t      } else {\n\t        assert(controller._queue.length === 0);\n\t        var transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n\t        ReadableStreamFulfillReadRequest(stream, transferredView, false);\n\t      }\n\t    } else if (ReadableStreamHasBYOBReader(stream) === true) {\n\t      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n\t      ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n\t    } else {\n\t      assert(IsReadableStreamLocked(stream) === false, 'stream must not be locked');\n\t      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n\t    }\n\t  }\n\t  function ReadableByteStreamControllerError(controller, e) {\n\t    var stream = controller._controlledReadableStream;\n\t    assert(stream._state === 'readable');\n\t    ReadableByteStreamControllerClearPendingPullIntos(controller);\n\t    ResetQueue(controller);\n\t    ReadableStreamError(stream, e);\n\t  }\n\t  function ReadableByteStreamControllerGetDesiredSize(controller) {\n\t    var stream = controller._controlledReadableStream;\n\t    var state = stream._state;\n\t    if (state === 'errored') {\n\t      return null;\n\t    }\n\t    if (state === 'closed') {\n\t      return 0;\n\t    }\n\t    return controller._strategyHWM - controller._queueTotalSize;\n\t  }\n\t  function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n\t    bytesWritten = Number(bytesWritten);\n\t    if (IsFiniteNonNegativeNumber(bytesWritten) === false) {\n\t      throw new RangeError('bytesWritten must be a finite');\n\t    }\n\t    assert(controller._pendingPullIntos.length > 0);\n\t    ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n\t  }\n\t  function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n\t    assert(controller._pendingPullIntos.length > 0);\n\t    var firstDescriptor = controller._pendingPullIntos[0];\n\t    if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n\t      throw new RangeError('The region specified by view does not match byobRequest');\n\t    }\n\t    if (firstDescriptor.byteLength !== view.byteLength) {\n\t      throw new RangeError('The buffer of view has different capacity than byobRequest');\n\t    }\n\t    firstDescriptor.buffer = view.buffer;\n\t    ReadableByteStreamControllerRespondInternal(controller, view.byteLength);\n\t  }\n\t  function streamBrandCheckException(name) {\n\t    return new TypeError('ReadableStream.prototype.' + name + ' can only be used on a ReadableStream');\n\t  }\n\t  function readerLockException(name) {\n\t    return new TypeError('Cannot ' + name + ' a stream using a released reader');\n\t  }\n\t  function defaultReaderBrandCheckException(name) {\n\t    return new TypeError('ReadableStreamDefaultReader.prototype.' + name + ' can only be used on a ReadableStreamDefaultReader');\n\t  }\n\t  function defaultReaderClosedPromiseInitialize(reader) {\n\t    reader._closedPromise = new Promise(function (resolve, reject) {\n\t      reader._closedPromise_resolve = resolve;\n\t      reader._closedPromise_reject = reject;\n\t    });\n\t  }\n\t  function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n\t    reader._closedPromise = Promise.reject(reason);\n\t    reader._closedPromise_resolve = undefined;\n\t    reader._closedPromise_reject = undefined;\n\t  }\n\t  function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n\t    reader._closedPromise = Promise.resolve(undefined);\n\t    reader._closedPromise_resolve = undefined;\n\t    reader._closedPromise_reject = undefined;\n\t  }\n\t  function defaultReaderClosedPromiseReject(reader, reason) {\n\t    assert(reader._closedPromise_resolve !== undefined);\n\t    assert(reader._closedPromise_reject !== undefined);\n\t    reader._closedPromise_reject(reason);\n\t    reader._closedPromise_resolve = undefined;\n\t    reader._closedPromise_reject = undefined;\n\t  }\n\t  function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n\t    assert(reader._closedPromise_resolve === undefined);\n\t    assert(reader._closedPromise_reject === undefined);\n\t    reader._closedPromise = Promise.reject(reason);\n\t  }\n\t  function defaultReaderClosedPromiseResolve(reader) {\n\t    assert(reader._closedPromise_resolve !== undefined);\n\t    assert(reader._closedPromise_reject !== undefined);\n\t    reader._closedPromise_resolve(undefined);\n\t    reader._closedPromise_resolve = undefined;\n\t    reader._closedPromise_reject = undefined;\n\t  }\n\t  function byobReaderBrandCheckException(name) {\n\t    return new TypeError('ReadableStreamBYOBReader.prototype.' + name + ' can only be used on a ReadableStreamBYOBReader');\n\t  }\n\t  function defaultControllerBrandCheckException(name) {\n\t    return new TypeError('ReadableStreamDefaultController.prototype.' + name + ' can only be used on a ReadableStreamDefaultController');\n\t  }\n\t  function byobRequestBrandCheckException(name) {\n\t    return new TypeError('ReadableStreamBYOBRequest.prototype.' + name + ' can only be used on a ReadableStreamBYOBRequest');\n\t  }\n\t  function byteStreamControllerBrandCheckException(name) {\n\t    return new TypeError('ReadableByteStreamController.prototype.' + name + ' can only be used on a ReadableByteStreamController');\n\t  }\n\t  function ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise) {\n\t    try {\n\t      Promise.prototype.then.call(promise, undefined, function () {});\n\t    } catch (e) {}\n\t  }\n\t}, function (module, exports, __w_pdfjs_require__) {\n\t  \"use strict\";\n\t\n\t  var transformStream = __w_pdfjs_require__(6);\n\t  var readableStream = __w_pdfjs_require__(4);\n\t  var writableStream = __w_pdfjs_require__(2);\n\t  exports.TransformStream = transformStream.TransformStream;\n\t  exports.ReadableStream = readableStream.ReadableStream;\n\t  exports.IsReadableStreamDisturbed = readableStream.IsReadableStreamDisturbed;\n\t  exports.ReadableStreamDefaultControllerClose = readableStream.ReadableStreamDefaultControllerClose;\n\t  exports.ReadableStreamDefaultControllerEnqueue = readableStream.ReadableStreamDefaultControllerEnqueue;\n\t  exports.ReadableStreamDefaultControllerError = readableStream.ReadableStreamDefaultControllerError;\n\t  exports.ReadableStreamDefaultControllerGetDesiredSize = readableStream.ReadableStreamDefaultControllerGetDesiredSize;\n\t  exports.AcquireWritableStreamDefaultWriter = writableStream.AcquireWritableStreamDefaultWriter;\n\t  exports.IsWritableStream = writableStream.IsWritableStream;\n\t  exports.IsWritableStreamLocked = writableStream.IsWritableStreamLocked;\n\t  exports.WritableStream = writableStream.WritableStream;\n\t  exports.WritableStreamAbort = writableStream.WritableStreamAbort;\n\t  exports.WritableStreamDefaultControllerError = writableStream.WritableStreamDefaultControllerError;\n\t  exports.WritableStreamDefaultWriterCloseWithErrorPropagation = writableStream.WritableStreamDefaultWriterCloseWithErrorPropagation;\n\t  exports.WritableStreamDefaultWriterRelease = writableStream.WritableStreamDefaultWriterRelease;\n\t  exports.WritableStreamDefaultWriterWrite = writableStream.WritableStreamDefaultWriterWrite;\n\t}, function (module, exports, __w_pdfjs_require__) {\n\t  \"use strict\";\n\t\n\t  var _createClass = function () {\n\t    function defineProperties(target, props) {\n\t      for (var i = 0; i < props.length; i++) {\n\t        var descriptor = props[i];\n\t        descriptor.enumerable = descriptor.enumerable || false;\n\t        descriptor.configurable = true;\n\t        if (\"value\" in descriptor) descriptor.writable = true;\n\t        Object.defineProperty(target, descriptor.key, descriptor);\n\t      }\n\t    }\n\t    return function (Constructor, protoProps, staticProps) {\n\t      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n\t      if (staticProps) defineProperties(Constructor, staticProps);\n\t      return Constructor;\n\t    };\n\t  }();\n\t  function _classCallCheck(instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  }\n\t  var _require = __w_pdfjs_require__(1),\n\t      assert = _require.assert;\n\t  var _require2 = __w_pdfjs_require__(0),\n\t      InvokeOrNoop = _require2.InvokeOrNoop,\n\t      PromiseInvokeOrPerformFallback = _require2.PromiseInvokeOrPerformFallback,\n\t      PromiseInvokeOrNoop = _require2.PromiseInvokeOrNoop,\n\t      typeIsObject = _require2.typeIsObject;\n\t  var _require3 = __w_pdfjs_require__(4),\n\t      ReadableStream = _require3.ReadableStream,\n\t      ReadableStreamDefaultControllerClose = _require3.ReadableStreamDefaultControllerClose,\n\t      ReadableStreamDefaultControllerEnqueue = _require3.ReadableStreamDefaultControllerEnqueue,\n\t      ReadableStreamDefaultControllerError = _require3.ReadableStreamDefaultControllerError,\n\t      ReadableStreamDefaultControllerGetDesiredSize = _require3.ReadableStreamDefaultControllerGetDesiredSize;\n\t  var _require4 = __w_pdfjs_require__(2),\n\t      WritableStream = _require4.WritableStream,\n\t      WritableStreamDefaultControllerError = _require4.WritableStreamDefaultControllerError;\n\t  function TransformStreamCloseReadable(transformStream) {\n\t    if (transformStream._errored === true) {\n\t      throw new TypeError('TransformStream is already errored');\n\t    }\n\t    if (transformStream._readableClosed === true) {\n\t      throw new TypeError('Readable side is already closed');\n\t    }\n\t    TransformStreamCloseReadableInternal(transformStream);\n\t  }\n\t  function TransformStreamEnqueueToReadable(transformStream, chunk) {\n\t    if (transformStream._errored === true) {\n\t      throw new TypeError('TransformStream is already errored');\n\t    }\n\t    if (transformStream._readableClosed === true) {\n\t      throw new TypeError('Readable side is already closed');\n\t    }\n\t    var controller = transformStream._readableController;\n\t    try {\n\t      ReadableStreamDefaultControllerEnqueue(controller, chunk);\n\t    } catch (e) {\n\t      transformStream._readableClosed = true;\n\t      TransformStreamErrorIfNeeded(transformStream, e);\n\t      throw transformStream._storedError;\n\t    }\n\t    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n\t    var maybeBackpressure = desiredSize <= 0;\n\t    if (maybeBackpressure === true && transformStream._backpressure === false) {\n\t      TransformStreamSetBackpressure(transformStream, true);\n\t    }\n\t  }\n\t  function TransformStreamError(transformStream, e) {\n\t    if (transformStream._errored === true) {\n\t      throw new TypeError('TransformStream is already errored');\n\t    }\n\t    TransformStreamErrorInternal(transformStream, e);\n\t  }\n\t  function TransformStreamCloseReadableInternal(transformStream) {\n\t    assert(transformStream._errored === false);\n\t    assert(transformStream._readableClosed === false);\n\t    try {\n\t      ReadableStreamDefaultControllerClose(transformStream._readableController);\n\t    } catch (e) {\n\t      assert(false);\n\t    }\n\t    transformStream._readableClosed = true;\n\t  }\n\t  function TransformStreamErrorIfNeeded(transformStream, e) {\n\t    if (transformStream._errored === false) {\n\t      TransformStreamErrorInternal(transformStream, e);\n\t    }\n\t  }\n\t  function TransformStreamErrorInternal(transformStream, e) {\n\t    assert(transformStream._errored === false);\n\t    transformStream._errored = true;\n\t    transformStream._storedError = e;\n\t    if (transformStream._writableDone === false) {\n\t      WritableStreamDefaultControllerError(transformStream._writableController, e);\n\t    }\n\t    if (transformStream._readableClosed === false) {\n\t      ReadableStreamDefaultControllerError(transformStream._readableController, e);\n\t    }\n\t  }\n\t  function TransformStreamReadableReadyPromise(transformStream) {\n\t    assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n\t    if (transformStream._backpressure === false) {\n\t      return Promise.resolve();\n\t    }\n\t    assert(transformStream._backpressure === true, '_backpressure should have been initialized');\n\t    return transformStream._backpressureChangePromise;\n\t  }\n\t  function TransformStreamSetBackpressure(transformStream, backpressure) {\n\t    assert(transformStream._backpressure !== backpressure, 'TransformStreamSetBackpressure() should be called only when backpressure is changed');\n\t    if (transformStream._backpressureChangePromise !== undefined) {\n\t      transformStream._backpressureChangePromise_resolve(backpressure);\n\t    }\n\t    transformStream._backpressureChangePromise = new Promise(function (resolve) {\n\t      transformStream._backpressureChangePromise_resolve = resolve;\n\t    });\n\t    transformStream._backpressureChangePromise.then(function (resolution) {\n\t      assert(resolution !== backpressure, '_backpressureChangePromise should be fulfilled only when backpressure is changed');\n\t    });\n\t    transformStream._backpressure = backpressure;\n\t  }\n\t  function TransformStreamDefaultTransform(chunk, transformStreamController) {\n\t    var transformStream = transformStreamController._controlledTransformStream;\n\t    TransformStreamEnqueueToReadable(transformStream, chunk);\n\t    return Promise.resolve();\n\t  }\n\t  function TransformStreamTransform(transformStream, chunk) {\n\t    assert(transformStream._errored === false);\n\t    assert(transformStream._transforming === false);\n\t    assert(transformStream._backpressure === false);\n\t    transformStream._transforming = true;\n\t    var transformer = transformStream._transformer;\n\t    var controller = transformStream._transformStreamController;\n\t    var transformPromise = PromiseInvokeOrPerformFallback(transformer, 'transform', [chunk, controller], TransformStreamDefaultTransform, [chunk, controller]);\n\t    return transformPromise.then(function () {\n\t      transformStream._transforming = false;\n\t      return TransformStreamReadableReadyPromise(transformStream);\n\t    }, function (e) {\n\t      TransformStreamErrorIfNeeded(transformStream, e);\n\t      return Promise.reject(e);\n\t    });\n\t  }\n\t  function IsTransformStreamDefaultController(x) {\n\t    if (!typeIsObject(x)) {\n\t      return false;\n\t    }\n\t    if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  function IsTransformStream(x) {\n\t    if (!typeIsObject(x)) {\n\t      return false;\n\t    }\n\t    if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n\t      return false;\n\t    }\n\t    return true;\n\t  }\n\t  var TransformStreamSink = function () {\n\t    function TransformStreamSink(transformStream, startPromise) {\n\t      _classCallCheck(this, TransformStreamSink);\n\t      this._transformStream = transformStream;\n\t      this._startPromise = startPromise;\n\t    }\n\t    _createClass(TransformStreamSink, [{\n\t      key: 'start',\n\t      value: function start(c) {\n\t        var transformStream = this._transformStream;\n\t        transformStream._writableController = c;\n\t        return this._startPromise.then(function () {\n\t          return TransformStreamReadableReadyPromise(transformStream);\n\t        });\n\t      }\n\t    }, {\n\t      key: 'write',\n\t      value: function write(chunk) {\n\t        var transformStream = this._transformStream;\n\t        return TransformStreamTransform(transformStream, chunk);\n\t      }\n\t    }, {\n\t      key: 'abort',\n\t      value: function abort() {\n\t        var transformStream = this._transformStream;\n\t        transformStream._writableDone = true;\n\t        TransformStreamErrorInternal(transformStream, new TypeError('Writable side aborted'));\n\t      }\n\t    }, {\n\t      key: 'close',\n\t      value: function close() {\n\t        var transformStream = this._transformStream;\n\t        assert(transformStream._transforming === false);\n\t        transformStream._writableDone = true;\n\t        var flushPromise = PromiseInvokeOrNoop(transformStream._transformer, 'flush', [transformStream._transformStreamController]);\n\t        return flushPromise.then(function () {\n\t          if (transformStream._errored === true) {\n\t            return Promise.reject(transformStream._storedError);\n\t          }\n\t          if (transformStream._readableClosed === false) {\n\t            TransformStreamCloseReadableInternal(transformStream);\n\t          }\n\t          return Promise.resolve();\n\t        }).catch(function (r) {\n\t          TransformStreamErrorIfNeeded(transformStream, r);\n\t          return Promise.reject(transformStream._storedError);\n\t        });\n\t      }\n\t    }]);\n\t    return TransformStreamSink;\n\t  }();\n\t  var TransformStreamSource = function () {\n\t    function TransformStreamSource(transformStream, startPromise) {\n\t      _classCallCheck(this, TransformStreamSource);\n\t      this._transformStream = transformStream;\n\t      this._startPromise = startPromise;\n\t    }\n\t    _createClass(TransformStreamSource, [{\n\t      key: 'start',\n\t      value: function start(c) {\n\t        var transformStream = this._transformStream;\n\t        transformStream._readableController = c;\n\t        return this._startPromise.then(function () {\n\t          assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n\t          if (transformStream._backpressure === true) {\n\t            return Promise.resolve();\n\t          }\n\t          assert(transformStream._backpressure === false, '_backpressure should have been initialized');\n\t          return transformStream._backpressureChangePromise;\n\t        });\n\t      }\n\t    }, {\n\t      key: 'pull',\n\t      value: function pull() {\n\t        var transformStream = this._transformStream;\n\t        assert(transformStream._backpressure === true, 'pull() should be never called while _backpressure is false');\n\t        assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n\t        TransformStreamSetBackpressure(transformStream, false);\n\t        return transformStream._backpressureChangePromise;\n\t      }\n\t    }, {\n\t      key: 'cancel',\n\t      value: function cancel() {\n\t        var transformStream = this._transformStream;\n\t        transformStream._readableClosed = true;\n\t        TransformStreamErrorInternal(transformStream, new TypeError('Readable side canceled'));\n\t      }\n\t    }]);\n\t    return TransformStreamSource;\n\t  }();\n\t  var TransformStreamDefaultController = function () {\n\t    function TransformStreamDefaultController(transformStream) {\n\t      _classCallCheck(this, TransformStreamDefaultController);\n\t      if (IsTransformStream(transformStream) === false) {\n\t        throw new TypeError('TransformStreamDefaultController can only be ' + 'constructed with a TransformStream instance');\n\t      }\n\t      if (transformStream._transformStreamController !== undefined) {\n\t        throw new TypeError('TransformStreamDefaultController instances can ' + 'only be created by the TransformStream constructor');\n\t      }\n\t      this._controlledTransformStream = transformStream;\n\t    }\n\t    _createClass(TransformStreamDefaultController, [{\n\t      key: 'enqueue',\n\t      value: function enqueue(chunk) {\n\t        if (IsTransformStreamDefaultController(this) === false) {\n\t          throw defaultControllerBrandCheckException('enqueue');\n\t        }\n\t        TransformStreamEnqueueToReadable(this._controlledTransformStream, chunk);\n\t      }\n\t    }, {\n\t      key: 'close',\n\t      value: function close() {\n\t        if (IsTransformStreamDefaultController(this) === false) {\n\t          throw defaultControllerBrandCheckException('close');\n\t        }\n\t        TransformStreamCloseReadable(this._controlledTransformStream);\n\t      }\n\t    }, {\n\t      key: 'error',\n\t      value: function error(reason) {\n\t        if (IsTransformStreamDefaultController(this) === false) {\n\t          throw defaultControllerBrandCheckException('error');\n\t        }\n\t        TransformStreamError(this._controlledTransformStream, reason);\n\t      }\n\t    }, {\n\t      key: 'desiredSize',\n\t      get: function get() {\n\t        if (IsTransformStreamDefaultController(this) === false) {\n\t          throw defaultControllerBrandCheckException('desiredSize');\n\t        }\n\t        var transformStream = this._controlledTransformStream;\n\t        var readableController = transformStream._readableController;\n\t        return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n\t      }\n\t    }]);\n\t    return TransformStreamDefaultController;\n\t  }();\n\t  var TransformStream = function () {\n\t    function TransformStream() {\n\t      var transformer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t      _classCallCheck(this, TransformStream);\n\t      this._transformer = transformer;\n\t      var readableStrategy = transformer.readableStrategy,\n\t          writableStrategy = transformer.writableStrategy;\n\t      this._transforming = false;\n\t      this._errored = false;\n\t      this._storedError = undefined;\n\t      this._writableController = undefined;\n\t      this._readableController = undefined;\n\t      this._transformStreamController = undefined;\n\t      this._writableDone = false;\n\t      this._readableClosed = false;\n\t      this._backpressure = undefined;\n\t      this._backpressureChangePromise = undefined;\n\t      this._backpressureChangePromise_resolve = undefined;\n\t      this._transformStreamController = new TransformStreamDefaultController(this);\n\t      var startPromise_resolve = void 0;\n\t      var startPromise = new Promise(function (resolve) {\n\t        startPromise_resolve = resolve;\n\t      });\n\t      var source = new TransformStreamSource(this, startPromise);\n\t      this._readable = new ReadableStream(source, readableStrategy);\n\t      var sink = new TransformStreamSink(this, startPromise);\n\t      this._writable = new WritableStream(sink, writableStrategy);\n\t      assert(this._writableController !== undefined);\n\t      assert(this._readableController !== undefined);\n\t      var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(this._readableController);\n\t      TransformStreamSetBackpressure(this, desiredSize <= 0);\n\t      var transformStream = this;\n\t      var startResult = InvokeOrNoop(transformer, 'start', [transformStream._transformStreamController]);\n\t      startPromise_resolve(startResult);\n\t      startPromise.catch(function (e) {\n\t        if (transformStream._errored === false) {\n\t          transformStream._errored = true;\n\t          transformStream._storedError = e;\n\t        }\n\t      });\n\t    }\n\t    _createClass(TransformStream, [{\n\t      key: 'readable',\n\t      get: function get() {\n\t        if (IsTransformStream(this) === false) {\n\t          throw streamBrandCheckException('readable');\n\t        }\n\t        return this._readable;\n\t      }\n\t    }, {\n\t      key: 'writable',\n\t      get: function get() {\n\t        if (IsTransformStream(this) === false) {\n\t          throw streamBrandCheckException('writable');\n\t        }\n\t        return this._writable;\n\t      }\n\t    }]);\n\t    return TransformStream;\n\t  }();\n\t  module.exports = { TransformStream: TransformStream };\n\t  function defaultControllerBrandCheckException(name) {\n\t    return new TypeError('TransformStreamDefaultController.prototype.' + name + ' can only be used on a TransformStreamDefaultController');\n\t  }\n\t  function streamBrandCheckException(name) {\n\t    return new TypeError('TransformStream.prototype.' + name + ' can only be used on a TransformStream');\n\t  }\n\t}, function (module, exports, __w_pdfjs_require__) {\n\t  module.exports = __w_pdfjs_require__(5);\n\t}]));\n\t\n\t/***/ }),\n\t/* 127 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.NetworkPdfManager = exports.LocalPdfManager = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _chunked_stream = __w_pdfjs_require__(72);\n\t\n\tvar _document = __w_pdfjs_require__(128);\n\t\n\tvar _stream = __w_pdfjs_require__(5);\n\t\n\tvar BasePdfManager = function BasePdfManagerClosure() {\n\t  function BasePdfManager() {\n\t    throw new Error('Cannot initialize BaseManagerManager');\n\t  }\n\t  BasePdfManager.prototype = {\n\t    get docId() {\n\t      return this._docId;\n\t    },\n\t    get password() {\n\t      return this._password;\n\t    },\n\t    get docBaseUrl() {\n\t      var docBaseUrl = null;\n\t      if (this._docBaseUrl) {\n\t        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\n\t        if (absoluteUrl) {\n\t          docBaseUrl = absoluteUrl.href;\n\t        } else {\n\t          (0, _util.warn)('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\n\t    },\n\t    onLoadedStream: function BasePdfManager_onLoadedStream() {\n\t      throw new _util.NotImplementedException();\n\t    },\n\t    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n\t      return this.ensure(this.pdfDocument, prop, args);\n\t    },\n\t    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n\t      return this.ensure(this.pdfDocument.xref, prop, args);\n\t    },\n\t    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n\t      return this.ensure(this.pdfDocument.catalog, prop, args);\n\t    },\n\t    getPage: function BasePdfManager_getPage(pageIndex) {\n\t      return this.pdfDocument.getPage(pageIndex);\n\t    },\n\t    cleanup: function BasePdfManager_cleanup() {\n\t      return this.pdfDocument.cleanup();\n\t    },\n\t    ensure: function BasePdfManager_ensure(obj, prop, args) {\n\t      return new _util.NotImplementedException();\n\t    },\n\t    requestRange: function BasePdfManager_requestRange(begin, end) {\n\t      return new _util.NotImplementedException();\n\t    },\n\t    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n\t      return new _util.NotImplementedException();\n\t    },\n\t    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n\t      return new _util.NotImplementedException();\n\t    },\n\t    updatePassword: function BasePdfManager_updatePassword(password) {\n\t      this._password = password;\n\t    },\n\t    terminate: function BasePdfManager_terminate() {\n\t      return new _util.NotImplementedException();\n\t    }\n\t  };\n\t  return BasePdfManager;\n\t}();\n\tvar LocalPdfManager = function LocalPdfManagerClosure() {\n\t  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n\t    this._docId = docId;\n\t    this._password = password;\n\t    this._docBaseUrl = docBaseUrl;\n\t    this.evaluatorOptions = evaluatorOptions;\n\t    var stream = new _stream.Stream(data);\n\t    this.pdfDocument = new _document.PDFDocument(this, stream);\n\t    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n\t    this._loadedStreamCapability.resolve(stream);\n\t  }\n\t  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\n\t    ensure: function LocalPdfManager_ensure(obj, prop, args) {\n\t      return new Promise(function (resolve, reject) {\n\t        try {\n\t          var value = obj[prop];\n\t          var result;\n\t          if (typeof value === 'function') {\n\t            result = value.apply(obj, args);\n\t          } else {\n\t            result = value;\n\t          }\n\t          resolve(result);\n\t        } catch (e) {\n\t          reject(e);\n\t        }\n\t      });\n\t    },\n\t    requestRange: function LocalPdfManager_requestRange(begin, end) {\n\t      return Promise.resolve();\n\t    },\n\t    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\n\t    onLoadedStream: function LocalPdfManager_onLoadedStream() {\n\t      return this._loadedStreamCapability.promise;\n\t    },\n\t    terminate: function LocalPdfManager_terminate() {}\n\t  });\n\t  return LocalPdfManager;\n\t}();\n\tvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n\t  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n\t    this._docId = docId;\n\t    this._password = args.password;\n\t    this._docBaseUrl = docBaseUrl;\n\t    this.msgHandler = args.msgHandler;\n\t    this.evaluatorOptions = evaluatorOptions;\n\t    var params = {\n\t      msgHandler: args.msgHandler,\n\t      url: args.url,\n\t      length: args.length,\n\t      disableAutoFetch: args.disableAutoFetch,\n\t      rangeChunkSize: args.rangeChunkSize\n\t    };\n\t    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\n\t    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\n\t  }\n\t  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\n\t    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n\t      var pdfManager = this;\n\t      return new Promise(function (resolve, reject) {\n\t        function ensureHelper() {\n\t          try {\n\t            var result;\n\t            var value = obj[prop];\n\t            if (typeof value === 'function') {\n\t              result = value.apply(obj, args);\n\t            } else {\n\t              result = value;\n\t            }\n\t            resolve(result);\n\t          } catch (e) {\n\t            if (!(e instanceof _util.MissingDataException)) {\n\t              reject(e);\n\t              return;\n\t            }\n\t            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n\t          }\n\t        }\n\t        ensureHelper();\n\t      });\n\t    },\n\t    requestRange: function NetworkPdfManager_requestRange(begin, end) {\n\t      return this.streamManager.requestRange(begin, end);\n\t    },\n\t    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n\t      this.streamManager.requestAllChunks();\n\t    },\n\t    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n\t      this.streamManager.onReceiveData({ chunk: chunk });\n\t    },\n\t    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n\t      return this.streamManager.onLoadedStream();\n\t    },\n\t    terminate: function NetworkPdfManager_terminate() {\n\t      this.streamManager.abort();\n\t    }\n\t  });\n\t  return NetworkPdfManager;\n\t}();\n\texports.LocalPdfManager = LocalPdfManager;\n\texports.NetworkPdfManager = NetworkPdfManager;\n\t\n\t/***/ }),\n\t/* 128 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.PDFDocument = exports.Page = undefined;\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _obj = __w_pdfjs_require__(73);\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _stream = __w_pdfjs_require__(5);\n\t\n\tvar _evaluator = __w_pdfjs_require__(77);\n\t\n\tvar _annotation = __w_pdfjs_require__(145);\n\t\n\tvar _crypto = __w_pdfjs_require__(76);\n\t\n\tvar _parser = __w_pdfjs_require__(34);\n\t\n\tvar _function = __w_pdfjs_require__(81);\n\t\n\tvar Page = function PageClosure() {\n\t  var DEFAULT_USER_UNIT = 1.0;\n\t  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n\t  function isAnnotationRenderable(annotation, intent) {\n\t    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n\t  }\n\t  function Page(_ref) {\n\t    var pdfManager = _ref.pdfManager,\n\t        xref = _ref.xref,\n\t        pageIndex = _ref.pageIndex,\n\t        pageDict = _ref.pageDict,\n\t        ref = _ref.ref,\n\t        fontCache = _ref.fontCache,\n\t        builtInCMapCache = _ref.builtInCMapCache,\n\t        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\t\n\t    this.pdfManager = pdfManager;\n\t    this.pageIndex = pageIndex;\n\t    this.pageDict = pageDict;\n\t    this.xref = xref;\n\t    this.ref = ref;\n\t    this.fontCache = fontCache;\n\t    this.builtInCMapCache = builtInCMapCache;\n\t    this.pdfFunctionFactory = pdfFunctionFactory;\n\t    this.evaluatorOptions = pdfManager.evaluatorOptions;\n\t    this.resourcesPromise = null;\n\t    var uniquePrefix = 'p' + this.pageIndex + '_';\n\t    var idCounters = { obj: 0 };\n\t    this.idFactory = {\n\t      createObjId: function createObjId() {\n\t        return uniquePrefix + ++idCounters.obj;\n\t      }\n\t    };\n\t  }\n\t  Page.prototype = {\n\t    getPageProp: function Page_getPageProp(key) {\n\t      return this.pageDict.get(key);\n\t    },\n\t    getInheritedPageProp: function Page_getInheritedPageProp(key, getArray) {\n\t      var dict = this.pageDict,\n\t          valueArray = null,\n\t          loopCount = 0;\n\t      var MAX_LOOP_COUNT = 100;\n\t      getArray = getArray || false;\n\t      while (dict) {\n\t        var value = getArray ? dict.getArray(key) : dict.get(key);\n\t        if (value !== undefined) {\n\t          if (!valueArray) {\n\t            valueArray = [];\n\t          }\n\t          valueArray.push(value);\n\t        }\n\t        if (++loopCount > MAX_LOOP_COUNT) {\n\t          (0, _util.warn)('getInheritedPageProp: maximum loop count exceeded for ' + key);\n\t          return valueArray ? valueArray[0] : undefined;\n\t        }\n\t        dict = dict.get('Parent');\n\t      }\n\t      if (!valueArray) {\n\t        return undefined;\n\t      }\n\t      if (valueArray.length === 1 || !(0, _primitives.isDict)(valueArray[0])) {\n\t        return valueArray[0];\n\t      }\n\t      return _primitives.Dict.merge(this.xref, valueArray);\n\t    },\n\t    get content() {\n\t      return this.getPageProp('Contents');\n\t    },\n\t    get resources() {\n\t      return (0, _util.shadow)(this, 'resources', this.getInheritedPageProp('Resources') || _primitives.Dict.empty);\n\t    },\n\t    get mediaBox() {\n\t      var mediaBox = this.getInheritedPageProp('MediaBox', true);\n\t      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\n\t        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n\t      }\n\t      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\n\t    },\n\t    get cropBox() {\n\t      var cropBox = this.getInheritedPageProp('CropBox', true);\n\t      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\n\t        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\n\t      }\n\t      return (0, _util.shadow)(this, 'cropBox', cropBox);\n\t    },\n\t    get userUnit() {\n\t      var obj = this.getPageProp('UserUnit');\n\t      if (!(0, _util.isNum)(obj) || obj <= 0) {\n\t        obj = DEFAULT_USER_UNIT;\n\t      }\n\t      return (0, _util.shadow)(this, 'userUnit', obj);\n\t    },\n\t    get view() {\n\t      var mediaBox = this.mediaBox,\n\t          cropBox = this.cropBox;\n\t      if (mediaBox === cropBox) {\n\t        return (0, _util.shadow)(this, 'view', mediaBox);\n\t      }\n\t      var intersection = _util.Util.intersect(cropBox, mediaBox);\n\t      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\n\t    },\n\t    get rotate() {\n\t      var rotate = this.getInheritedPageProp('Rotate') || 0;\n\t      if (rotate % 90 !== 0) {\n\t        rotate = 0;\n\t      } else if (rotate >= 360) {\n\t        rotate = rotate % 360;\n\t      } else if (rotate < 0) {\n\t        rotate = (rotate % 360 + 360) % 360;\n\t      }\n\t      return (0, _util.shadow)(this, 'rotate', rotate);\n\t    },\n\t    getContentStream: function Page_getContentStream() {\n\t      var content = this.content;\n\t      var stream;\n\t      if (Array.isArray(content)) {\n\t        var xref = this.xref;\n\t        var i,\n\t            n = content.length;\n\t        var streams = [];\n\t        for (i = 0; i < n; ++i) {\n\t          streams.push(xref.fetchIfRef(content[i]));\n\t        }\n\t        stream = new _stream.StreamsSequenceStream(streams);\n\t      } else if ((0, _primitives.isStream)(content)) {\n\t        stream = content;\n\t      } else {\n\t        stream = new _stream.NullStream();\n\t      }\n\t      return stream;\n\t    },\n\t    loadResources: function Page_loadResources(keys) {\n\t      var _this = this;\n\t\n\t      if (!this.resourcesPromise) {\n\t        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n\t      }\n\t      return this.resourcesPromise.then(function () {\n\t        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\n\t        return objectLoader.load();\n\t      });\n\t    },\n\t    getOperatorList: function getOperatorList(_ref2) {\n\t      var _this2 = this;\n\t\n\t      var handler = _ref2.handler,\n\t          task = _ref2.task,\n\t          intent = _ref2.intent,\n\t          renderInteractiveForms = _ref2.renderInteractiveForms;\n\t\n\t      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n\t      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n\t      var partialEvaluator = new _evaluator.PartialEvaluator({\n\t        pdfManager: this.pdfManager,\n\t        xref: this.xref,\n\t        handler: handler,\n\t        pageIndex: this.pageIndex,\n\t        idFactory: this.idFactory,\n\t        fontCache: this.fontCache,\n\t        builtInCMapCache: this.builtInCMapCache,\n\t        options: this.evaluatorOptions,\n\t        pdfFunctionFactory: this.pdfFunctionFactory\n\t      });\n\t      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n\t      var pageListPromise = dataPromises.then(function (_ref3) {\n\t        var _ref4 = _slicedToArray(_ref3, 1),\n\t            contentStream = _ref4[0];\n\t\n\t        var opList = new _evaluator.OperatorList(intent, handler, _this2.pageIndex);\n\t        handler.send('StartRenderPage', {\n\t          transparency: partialEvaluator.hasBlendModes(_this2.resources),\n\t          pageIndex: _this2.pageIndex,\n\t          intent: intent\n\t        });\n\t        return partialEvaluator.getOperatorList({\n\t          stream: contentStream,\n\t          task: task,\n\t          resources: _this2.resources,\n\t          operatorList: opList\n\t        }).then(function () {\n\t          return opList;\n\t        });\n\t      });\n\t      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\n\t      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\n\t        var _ref6 = _slicedToArray(_ref5, 2),\n\t            pageOpList = _ref6[0],\n\t            annotations = _ref6[1];\n\t\n\t        if (annotations.length === 0) {\n\t          pageOpList.flush(true);\n\t          return pageOpList;\n\t        }\n\t        var i,\n\t            ii,\n\t            opListPromises = [];\n\t        for (i = 0, ii = annotations.length; i < ii; i++) {\n\t          if (isAnnotationRenderable(annotations[i], intent)) {\n\t            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n\t          }\n\t        }\n\t        return Promise.all(opListPromises).then(function (opLists) {\n\t          pageOpList.addOp(_util.OPS.beginAnnotations, []);\n\t          for (i = 0, ii = opLists.length; i < ii; i++) {\n\t            pageOpList.addOpList(opLists[i]);\n\t          }\n\t          pageOpList.addOp(_util.OPS.endAnnotations, []);\n\t          pageOpList.flush(true);\n\t          return pageOpList;\n\t        });\n\t      });\n\t    },\n\t    extractTextContent: function extractTextContent(_ref7) {\n\t      var _this3 = this;\n\t\n\t      var handler = _ref7.handler,\n\t          task = _ref7.task,\n\t          normalizeWhitespace = _ref7.normalizeWhitespace,\n\t          sink = _ref7.sink,\n\t          combineTextItems = _ref7.combineTextItems;\n\t\n\t      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n\t      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\n\t      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n\t      return dataPromises.then(function (_ref8) {\n\t        var _ref9 = _slicedToArray(_ref8, 1),\n\t            contentStream = _ref9[0];\n\t\n\t        var partialEvaluator = new _evaluator.PartialEvaluator({\n\t          pdfManager: _this3.pdfManager,\n\t          xref: _this3.xref,\n\t          handler: handler,\n\t          pageIndex: _this3.pageIndex,\n\t          idFactory: _this3.idFactory,\n\t          fontCache: _this3.fontCache,\n\t          builtInCMapCache: _this3.builtInCMapCache,\n\t          options: _this3.evaluatorOptions,\n\t          pdfFunctionFactory: _this3.pdfFunctionFactory\n\t        });\n\t        return partialEvaluator.getTextContent({\n\t          stream: contentStream,\n\t          task: task,\n\t          resources: _this3.resources,\n\t          normalizeWhitespace: normalizeWhitespace,\n\t          combineTextItems: combineTextItems,\n\t          sink: sink\n\t        });\n\t      });\n\t    },\n\t\n\t    getAnnotationsData: function Page_getAnnotationsData(intent) {\n\t      var annotations = this.annotations;\n\t      var annotationsData = [];\n\t      for (var i = 0, n = annotations.length; i < n; ++i) {\n\t        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n\t          annotationsData.push(annotations[i].data);\n\t        }\n\t      }\n\t      return annotationsData;\n\t    },\n\t    get annotations() {\n\t      var annotations = [];\n\t      var annotationRefs = this.getInheritedPageProp('Annots') || [];\n\t      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n\t        var annotationRef = annotationRefs[i];\n\t        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n\t        if (annotation) {\n\t          annotations.push(annotation);\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'annotations', annotations);\n\t    }\n\t  };\n\t  return Page;\n\t}();\n\tvar PDFDocument = function PDFDocumentClosure() {\n\t  var FINGERPRINT_FIRST_BYTES = 1024;\n\t  var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n\t  function PDFDocument(pdfManager, arg) {\n\t    var stream;\n\t    if ((0, _primitives.isStream)(arg)) {\n\t      stream = arg;\n\t    } else if ((0, _util.isArrayBuffer)(arg)) {\n\t      stream = new _stream.Stream(arg);\n\t    } else {\n\t      throw new Error('PDFDocument: Unknown argument type');\n\t    }\n\t    if (stream.length <= 0) {\n\t      throw new Error('PDFDocument: stream must have data');\n\t    }\n\t    this.pdfManager = pdfManager;\n\t    this.stream = stream;\n\t    this.xref = new _obj.XRef(stream, pdfManager);\n\t    var evaluatorOptions = pdfManager.evaluatorOptions;\n\t    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\n\t      xref: this.xref,\n\t      isEvalSupported: evaluatorOptions.isEvalSupported\n\t    });\n\t  }\n\t  function find(stream, needle, limit, backwards) {\n\t    var pos = stream.pos;\n\t    var end = stream.end;\n\t    var strBuf = [];\n\t    if (pos + limit > end) {\n\t      limit = end - pos;\n\t    }\n\t    for (var n = 0; n < limit; ++n) {\n\t      strBuf.push(String.fromCharCode(stream.getByte()));\n\t    }\n\t    var str = strBuf.join('');\n\t    stream.pos = pos;\n\t    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n\t    if (index === -1) {\n\t      return false;\n\t    }\n\t    stream.pos += index;\n\t    return true;\n\t  }\n\t  var DocumentInfoValidators = {\n\t    get entries() {\n\t      return (0, _util.shadow)(this, 'entries', {\n\t        Title: _util.isString,\n\t        Author: _util.isString,\n\t        Subject: _util.isString,\n\t        Keywords: _util.isString,\n\t        Creator: _util.isString,\n\t        Producer: _util.isString,\n\t        CreationDate: _util.isString,\n\t        ModDate: _util.isString,\n\t        Trapped: _primitives.isName\n\t      });\n\t    }\n\t  };\n\t  PDFDocument.prototype = {\n\t    parse: function PDFDocument_parse(recoveryMode) {\n\t      this.setup(recoveryMode);\n\t      var version = this.catalog.catDict.get('Version');\n\t      if ((0, _primitives.isName)(version)) {\n\t        this.pdfFormatVersion = version.name;\n\t      }\n\t      try {\n\t        this.acroForm = this.catalog.catDict.get('AcroForm');\n\t        if (this.acroForm) {\n\t          this.xfa = this.acroForm.get('XFA');\n\t          var fields = this.acroForm.get('Fields');\n\t          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\n\t            this.acroForm = null;\n\t          }\n\t        }\n\t      } catch (ex) {\n\t        if (ex instanceof _util.MissingDataException) {\n\t          throw ex;\n\t        }\n\t        (0, _util.info)('Something wrong with AcroForm entry');\n\t        this.acroForm = null;\n\t      }\n\t    },\n\t    get linearization() {\n\t      var linearization = null;\n\t      if (this.stream.length) {\n\t        try {\n\t          linearization = _parser.Linearization.create(this.stream);\n\t        } catch (err) {\n\t          if (err instanceof _util.MissingDataException) {\n\t            throw err;\n\t          }\n\t          (0, _util.info)(err);\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'linearization', linearization);\n\t    },\n\t    get startXRef() {\n\t      var stream = this.stream;\n\t      var startXRef = 0;\n\t      var linearization = this.linearization;\n\t      if (linearization) {\n\t        stream.reset();\n\t        if (find(stream, 'endobj', 1024)) {\n\t          startXRef = stream.pos + 6;\n\t        }\n\t      } else {\n\t        var step = 1024;\n\t        var found = false,\n\t            pos = stream.end;\n\t        while (!found && pos > 0) {\n\t          pos -= step - 'startxref'.length;\n\t          if (pos < 0) {\n\t            pos = 0;\n\t          }\n\t          stream.pos = pos;\n\t          found = find(stream, 'startxref', step, true);\n\t        }\n\t        if (found) {\n\t          stream.skip(9);\n\t          var ch;\n\t          do {\n\t            ch = stream.getByte();\n\t          } while ((0, _util.isSpace)(ch));\n\t          var str = '';\n\t          while (ch >= 0x20 && ch <= 0x39) {\n\t            str += String.fromCharCode(ch);\n\t            ch = stream.getByte();\n\t          }\n\t          startXRef = parseInt(str, 10);\n\t          if (isNaN(startXRef)) {\n\t            startXRef = 0;\n\t          }\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'startXRef', startXRef);\n\t    },\n\t    get mainXRefEntriesOffset() {\n\t      var mainXRefEntriesOffset = 0;\n\t      var linearization = this.linearization;\n\t      if (linearization) {\n\t        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n\t      }\n\t      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n\t    },\n\t    checkHeader: function PDFDocument_checkHeader() {\n\t      var stream = this.stream;\n\t      stream.reset();\n\t      if (find(stream, '%PDF-', 1024)) {\n\t        stream.moveStart();\n\t        var MAX_VERSION_LENGTH = 12;\n\t        var version = '',\n\t            ch;\n\t        while ((ch = stream.getByte()) > 0x20) {\n\t          if (version.length >= MAX_VERSION_LENGTH) {\n\t            break;\n\t          }\n\t          version += String.fromCharCode(ch);\n\t        }\n\t        if (!this.pdfFormatVersion) {\n\t          this.pdfFormatVersion = version.substring(5);\n\t        }\n\t        return;\n\t      }\n\t    },\n\t    parseStartXRef: function PDFDocument_parseStartXRef() {\n\t      var startXRef = this.startXRef;\n\t      this.xref.setStartXRef(startXRef);\n\t    },\n\t    setup: function PDFDocument_setup(recoveryMode) {\n\t      var _this4 = this;\n\t\n\t      this.xref.parse(recoveryMode);\n\t      var pageFactory = {\n\t        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\n\t          return new Page({\n\t            pdfManager: _this4.pdfManager,\n\t            xref: _this4.xref,\n\t            pageIndex: pageIndex,\n\t            pageDict: dict,\n\t            ref: ref,\n\t            fontCache: fontCache,\n\t            builtInCMapCache: builtInCMapCache,\n\t            pdfFunctionFactory: _this4.pdfFunctionFactory\n\t          });\n\t        }\n\t      };\n\t      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\n\t    },\n\t    get numPages() {\n\t      var linearization = this.linearization;\n\t      var num = linearization ? linearization.numPages : this.catalog.numPages;\n\t      return (0, _util.shadow)(this, 'numPages', num);\n\t    },\n\t    get documentInfo() {\n\t      var docInfo = {\n\t        PDFFormatVersion: this.pdfFormatVersion,\n\t        IsAcroFormPresent: !!this.acroForm,\n\t        IsXFAPresent: !!this.xfa\n\t      };\n\t      var infoDict;\n\t      try {\n\t        infoDict = this.xref.trailer.get('Info');\n\t      } catch (err) {\n\t        if (err instanceof _util.MissingDataException) {\n\t          throw err;\n\t        }\n\t        (0, _util.info)('The document information dictionary is invalid.');\n\t      }\n\t      if (infoDict) {\n\t        var validEntries = DocumentInfoValidators.entries;\n\t        for (var key in validEntries) {\n\t          if (infoDict.has(key)) {\n\t            var value = infoDict.get(key);\n\t            if (validEntries[key](value)) {\n\t              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\n\t            } else {\n\t              (0, _util.info)('Bad value in document info for \"' + key + '\"');\n\t            }\n\t          }\n\t        }\n\t      }\n\t      return (0, _util.shadow)(this, 'documentInfo', docInfo);\n\t    },\n\t    get fingerprint() {\n\t      var xref = this.xref,\n\t          hash,\n\t          fileID = '';\n\t      var idArray = xref.trailer.get('ID');\n\t      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n\t        hash = (0, _util.stringToBytes)(idArray[0]);\n\t      } else {\n\t        if (this.stream.ensureRange) {\n\t          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n\t        }\n\t        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n\t      }\n\t      for (var i = 0, n = hash.length; i < n; i++) {\n\t        var hex = hash[i].toString(16);\n\t        fileID += hex.length === 1 ? '0' + hex : hex;\n\t      }\n\t      return (0, _util.shadow)(this, 'fingerprint', fileID);\n\t    },\n\t    getPage: function PDFDocument_getPage(pageIndex) {\n\t      return this.catalog.getPage(pageIndex);\n\t    },\n\t    cleanup: function PDFDocument_cleanup() {\n\t      return this.catalog.cleanup();\n\t    }\n\t  };\n\t  return PDFDocument;\n\t}();\n\texports.Page = Page;\n\texports.PDFDocument = PDFDocument;\n\t\n\t/***/ }),\n\t/* 129 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.JpegImage = undefined;\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar JpegError = function JpegErrorClosure() {\n\t  function JpegError(msg) {\n\t    this.message = 'JPEG error: ' + msg;\n\t  }\n\t  JpegError.prototype = new Error();\n\t  JpegError.prototype.name = 'JpegError';\n\t  JpegError.constructor = JpegError;\n\t  return JpegError;\n\t}();\n\tvar JpegImage = function JpegImageClosure() {\n\t  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n\t  var dctCos1 = 4017;\n\t  var dctSin1 = 799;\n\t  var dctCos3 = 3406;\n\t  var dctSin3 = 2276;\n\t  var dctCos6 = 1567;\n\t  var dctSin6 = 3784;\n\t  var dctSqrt2 = 5793;\n\t  var dctSqrt1d2 = 2896;\n\t  function JpegImage() {\n\t    this.decodeTransform = null;\n\t    this.colorTransform = -1;\n\t  }\n\t  function buildHuffmanTable(codeLengths, values) {\n\t    var k = 0,\n\t        code = [],\n\t        i,\n\t        j,\n\t        length = 16;\n\t    while (length > 0 && !codeLengths[length - 1]) {\n\t      length--;\n\t    }\n\t    code.push({\n\t      children: [],\n\t      index: 0\n\t    });\n\t    var p = code[0],\n\t        q;\n\t    for (i = 0; i < length; i++) {\n\t      for (j = 0; j < codeLengths[i]; j++) {\n\t        p = code.pop();\n\t        p.children[p.index] = values[k];\n\t        while (p.index > 0) {\n\t          p = code.pop();\n\t        }\n\t        p.index++;\n\t        code.push(p);\n\t        while (code.length <= i) {\n\t          code.push(q = {\n\t            children: [],\n\t            index: 0\n\t          });\n\t          p.children[p.index] = q.children;\n\t          p = q;\n\t        }\n\t        k++;\n\t      }\n\t      if (i + 1 < length) {\n\t        code.push(q = {\n\t          children: [],\n\t          index: 0\n\t        });\n\t        p.children[p.index] = q.children;\n\t        p = q;\n\t      }\n\t    }\n\t    return code[0].children;\n\t  }\n\t  function getBlockBufferOffset(component, row, col) {\n\t    return 64 * ((component.blocksPerLine + 1) * row + col);\n\t  }\n\t  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n\t    var mcusPerLine = frame.mcusPerLine;\n\t    var progressive = frame.progressive;\n\t    var startOffset = offset,\n\t        bitsData = 0,\n\t        bitsCount = 0;\n\t    function readBit() {\n\t      if (bitsCount > 0) {\n\t        bitsCount--;\n\t        return bitsData >> bitsCount & 1;\n\t      }\n\t      bitsData = data[offset++];\n\t      if (bitsData === 0xFF) {\n\t        var nextByte = data[offset++];\n\t        if (nextByte) {\n\t          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n\t        }\n\t      }\n\t      bitsCount = 7;\n\t      return bitsData >>> 7;\n\t    }\n\t    function decodeHuffman(tree) {\n\t      var node = tree;\n\t      while (true) {\n\t        node = node[readBit()];\n\t        if (typeof node === 'number') {\n\t          return node;\n\t        }\n\t        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\n\t          throw new JpegError('invalid huffman sequence');\n\t        }\n\t      }\n\t    }\n\t    function receive(length) {\n\t      var n = 0;\n\t      while (length > 0) {\n\t        n = n << 1 | readBit();\n\t        length--;\n\t      }\n\t      return n;\n\t    }\n\t    function receiveAndExtend(length) {\n\t      if (length === 1) {\n\t        return readBit() === 1 ? 1 : -1;\n\t      }\n\t      var n = receive(length);\n\t      if (n >= 1 << length - 1) {\n\t        return n;\n\t      }\n\t      return n + (-1 << length) + 1;\n\t    }\n\t    function decodeBaseline(component, offset) {\n\t      var t = decodeHuffman(component.huffmanTableDC);\n\t      var diff = t === 0 ? 0 : receiveAndExtend(t);\n\t      component.blockData[offset] = component.pred += diff;\n\t      var k = 1;\n\t      while (k < 64) {\n\t        var rs = decodeHuffman(component.huffmanTableAC);\n\t        var s = rs & 15,\n\t            r = rs >> 4;\n\t        if (s === 0) {\n\t          if (r < 15) {\n\t            break;\n\t          }\n\t          k += 16;\n\t          continue;\n\t        }\n\t        k += r;\n\t        var z = dctZigZag[k];\n\t        component.blockData[offset + z] = receiveAndExtend(s);\n\t        k++;\n\t      }\n\t    }\n\t    function decodeDCFirst(component, offset) {\n\t      var t = decodeHuffman(component.huffmanTableDC);\n\t      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n\t      component.blockData[offset] = component.pred += diff;\n\t    }\n\t    function decodeDCSuccessive(component, offset) {\n\t      component.blockData[offset] |= readBit() << successive;\n\t    }\n\t    var eobrun = 0;\n\t    function decodeACFirst(component, offset) {\n\t      if (eobrun > 0) {\n\t        eobrun--;\n\t        return;\n\t      }\n\t      var k = spectralStart,\n\t          e = spectralEnd;\n\t      while (k <= e) {\n\t        var rs = decodeHuffman(component.huffmanTableAC);\n\t        var s = rs & 15,\n\t            r = rs >> 4;\n\t        if (s === 0) {\n\t          if (r < 15) {\n\t            eobrun = receive(r) + (1 << r) - 1;\n\t            break;\n\t          }\n\t          k += 16;\n\t          continue;\n\t        }\n\t        k += r;\n\t        var z = dctZigZag[k];\n\t        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n\t        k++;\n\t      }\n\t    }\n\t    var successiveACState = 0,\n\t        successiveACNextValue;\n\t    function decodeACSuccessive(component, offset) {\n\t      var k = spectralStart;\n\t      var e = spectralEnd;\n\t      var r = 0;\n\t      var s;\n\t      var rs;\n\t      while (k <= e) {\n\t        var z = dctZigZag[k];\n\t        switch (successiveACState) {\n\t          case 0:\n\t            rs = decodeHuffman(component.huffmanTableAC);\n\t            s = rs & 15;\n\t            r = rs >> 4;\n\t            if (s === 0) {\n\t              if (r < 15) {\n\t                eobrun = receive(r) + (1 << r);\n\t                successiveACState = 4;\n\t              } else {\n\t                r = 16;\n\t                successiveACState = 1;\n\t              }\n\t            } else {\n\t              if (s !== 1) {\n\t                throw new JpegError('invalid ACn encoding');\n\t              }\n\t              successiveACNextValue = receiveAndExtend(s);\n\t              successiveACState = r ? 2 : 3;\n\t            }\n\t            continue;\n\t          case 1:\n\t          case 2:\n\t            if (component.blockData[offset + z]) {\n\t              component.blockData[offset + z] += readBit() << successive;\n\t            } else {\n\t              r--;\n\t              if (r === 0) {\n\t                successiveACState = successiveACState === 2 ? 3 : 0;\n\t              }\n\t            }\n\t            break;\n\t          case 3:\n\t            if (component.blockData[offset + z]) {\n\t              component.blockData[offset + z] += readBit() << successive;\n\t            } else {\n\t              component.blockData[offset + z] = successiveACNextValue << successive;\n\t              successiveACState = 0;\n\t            }\n\t            break;\n\t          case 4:\n\t            if (component.blockData[offset + z]) {\n\t              component.blockData[offset + z] += readBit() << successive;\n\t            }\n\t            break;\n\t        }\n\t        k++;\n\t      }\n\t      if (successiveACState === 4) {\n\t        eobrun--;\n\t        if (eobrun === 0) {\n\t          successiveACState = 0;\n\t        }\n\t      }\n\t    }\n\t    function decodeMcu(component, decode, mcu, row, col) {\n\t      var mcuRow = mcu / mcusPerLine | 0;\n\t      var mcuCol = mcu % mcusPerLine;\n\t      var blockRow = mcuRow * component.v + row;\n\t      var blockCol = mcuCol * component.h + col;\n\t      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n\t      decode(component, offset);\n\t    }\n\t    function decodeBlock(component, decode, mcu) {\n\t      var blockRow = mcu / component.blocksPerLine | 0;\n\t      var blockCol = mcu % component.blocksPerLine;\n\t      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n\t      decode(component, offset);\n\t    }\n\t    var componentsLength = components.length;\n\t    var component, i, j, k, n;\n\t    var decodeFn;\n\t    if (progressive) {\n\t      if (spectralStart === 0) {\n\t        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n\t      } else {\n\t        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n\t      }\n\t    } else {\n\t      decodeFn = decodeBaseline;\n\t    }\n\t    var mcu = 0,\n\t        fileMarker;\n\t    var mcuExpected;\n\t    if (componentsLength === 1) {\n\t      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n\t    } else {\n\t      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n\t    }\n\t    var h, v;\n\t    while (mcu < mcuExpected) {\n\t      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\n\t      for (i = 0; i < componentsLength; i++) {\n\t        components[i].pred = 0;\n\t      }\n\t      eobrun = 0;\n\t      if (componentsLength === 1) {\n\t        component = components[0];\n\t        for (n = 0; n < mcuToRead; n++) {\n\t          decodeBlock(component, decodeFn, mcu);\n\t          mcu++;\n\t        }\n\t      } else {\n\t        for (n = 0; n < mcuToRead; n++) {\n\t          for (i = 0; i < componentsLength; i++) {\n\t            component = components[i];\n\t            h = component.h;\n\t            v = component.v;\n\t            for (j = 0; j < v; j++) {\n\t              for (k = 0; k < h; k++) {\n\t                decodeMcu(component, decodeFn, mcu, j, k);\n\t              }\n\t            }\n\t          }\n\t          mcu++;\n\t        }\n\t      }\n\t      bitsCount = 0;\n\t      fileMarker = findNextFileMarker(data, offset);\n\t      if (fileMarker && fileMarker.invalid) {\n\t        (0, _util.warn)('decodeScan - unexpected MCU data, next marker is: ' + fileMarker.invalid);\n\t        offset = fileMarker.offset;\n\t      }\n\t      var marker = fileMarker && fileMarker.marker;\n\t      if (!marker || marker <= 0xFF00) {\n\t        throw new JpegError('marker was not found');\n\t      }\n\t      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n\t        offset += 2;\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    fileMarker = findNextFileMarker(data, offset);\n\t    if (fileMarker && fileMarker.invalid) {\n\t      (0, _util.warn)('decodeScan - unexpected Scan data, next marker is: ' + fileMarker.invalid);\n\t      offset = fileMarker.offset;\n\t    }\n\t    return offset - startOffset;\n\t  }\n\t  function quantizeAndInverse(component, blockBufferOffset, p) {\n\t    var qt = component.quantizationTable,\n\t        blockData = component.blockData;\n\t    var v0, v1, v2, v3, v4, v5, v6, v7;\n\t    var p0, p1, p2, p3, p4, p5, p6, p7;\n\t    var t;\n\t    if (!qt) {\n\t      throw new JpegError('missing required Quantization Table.');\n\t    }\n\t    for (var row = 0; row < 64; row += 8) {\n\t      p0 = blockData[blockBufferOffset + row];\n\t      p1 = blockData[blockBufferOffset + row + 1];\n\t      p2 = blockData[blockBufferOffset + row + 2];\n\t      p3 = blockData[blockBufferOffset + row + 3];\n\t      p4 = blockData[blockBufferOffset + row + 4];\n\t      p5 = blockData[blockBufferOffset + row + 5];\n\t      p6 = blockData[blockBufferOffset + row + 6];\n\t      p7 = blockData[blockBufferOffset + row + 7];\n\t      p0 *= qt[row];\n\t      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n\t        t = dctSqrt2 * p0 + 512 >> 10;\n\t        p[row] = t;\n\t        p[row + 1] = t;\n\t        p[row + 2] = t;\n\t        p[row + 3] = t;\n\t        p[row + 4] = t;\n\t        p[row + 5] = t;\n\t        p[row + 6] = t;\n\t        p[row + 7] = t;\n\t        continue;\n\t      }\n\t      p1 *= qt[row + 1];\n\t      p2 *= qt[row + 2];\n\t      p3 *= qt[row + 3];\n\t      p4 *= qt[row + 4];\n\t      p5 *= qt[row + 5];\n\t      p6 *= qt[row + 6];\n\t      p7 *= qt[row + 7];\n\t      v0 = dctSqrt2 * p0 + 128 >> 8;\n\t      v1 = dctSqrt2 * p4 + 128 >> 8;\n\t      v2 = p2;\n\t      v3 = p6;\n\t      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n\t      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n\t      v5 = p3 << 4;\n\t      v6 = p5 << 4;\n\t      v0 = v0 + v1 + 1 >> 1;\n\t      v1 = v0 - v1;\n\t      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n\t      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n\t      v3 = t;\n\t      v4 = v4 + v6 + 1 >> 1;\n\t      v6 = v4 - v6;\n\t      v7 = v7 + v5 + 1 >> 1;\n\t      v5 = v7 - v5;\n\t      v0 = v0 + v3 + 1 >> 1;\n\t      v3 = v0 - v3;\n\t      v1 = v1 + v2 + 1 >> 1;\n\t      v2 = v1 - v2;\n\t      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n\t      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n\t      v7 = t;\n\t      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n\t      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n\t      v6 = t;\n\t      p[row] = v0 + v7;\n\t      p[row + 7] = v0 - v7;\n\t      p[row + 1] = v1 + v6;\n\t      p[row + 6] = v1 - v6;\n\t      p[row + 2] = v2 + v5;\n\t      p[row + 5] = v2 - v5;\n\t      p[row + 3] = v3 + v4;\n\t      p[row + 4] = v3 - v4;\n\t    }\n\t    for (var col = 0; col < 8; ++col) {\n\t      p0 = p[col];\n\t      p1 = p[col + 8];\n\t      p2 = p[col + 16];\n\t      p3 = p[col + 24];\n\t      p4 = p[col + 32];\n\t      p5 = p[col + 40];\n\t      p6 = p[col + 48];\n\t      p7 = p[col + 56];\n\t      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n\t        t = dctSqrt2 * p0 + 8192 >> 14;\n\t        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n\t        blockData[blockBufferOffset + col] = t;\n\t        blockData[blockBufferOffset + col + 8] = t;\n\t        blockData[blockBufferOffset + col + 16] = t;\n\t        blockData[blockBufferOffset + col + 24] = t;\n\t        blockData[blockBufferOffset + col + 32] = t;\n\t        blockData[blockBufferOffset + col + 40] = t;\n\t        blockData[blockBufferOffset + col + 48] = t;\n\t        blockData[blockBufferOffset + col + 56] = t;\n\t        continue;\n\t      }\n\t      v0 = dctSqrt2 * p0 + 2048 >> 12;\n\t      v1 = dctSqrt2 * p4 + 2048 >> 12;\n\t      v2 = p2;\n\t      v3 = p6;\n\t      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n\t      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n\t      v5 = p3;\n\t      v6 = p5;\n\t      v0 = (v0 + v1 + 1 >> 1) + 4112;\n\t      v1 = v0 - v1;\n\t      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n\t      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n\t      v3 = t;\n\t      v4 = v4 + v6 + 1 >> 1;\n\t      v6 = v4 - v6;\n\t      v7 = v7 + v5 + 1 >> 1;\n\t      v5 = v7 - v5;\n\t      v0 = v0 + v3 + 1 >> 1;\n\t      v3 = v0 - v3;\n\t      v1 = v1 + v2 + 1 >> 1;\n\t      v2 = v1 - v2;\n\t      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n\t      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n\t      v7 = t;\n\t      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n\t      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n\t      v6 = t;\n\t      p0 = v0 + v7;\n\t      p7 = v0 - v7;\n\t      p1 = v1 + v6;\n\t      p6 = v1 - v6;\n\t      p2 = v2 + v5;\n\t      p5 = v2 - v5;\n\t      p3 = v3 + v4;\n\t      p4 = v3 - v4;\n\t      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n\t      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n\t      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n\t      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n\t      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n\t      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n\t      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n\t      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n\t      blockData[blockBufferOffset + col] = p0;\n\t      blockData[blockBufferOffset + col + 8] = p1;\n\t      blockData[blockBufferOffset + col + 16] = p2;\n\t      blockData[blockBufferOffset + col + 24] = p3;\n\t      blockData[blockBufferOffset + col + 32] = p4;\n\t      blockData[blockBufferOffset + col + 40] = p5;\n\t      blockData[blockBufferOffset + col + 48] = p6;\n\t      blockData[blockBufferOffset + col + 56] = p7;\n\t    }\n\t  }\n\t  function buildComponentData(frame, component) {\n\t    var blocksPerLine = component.blocksPerLine;\n\t    var blocksPerColumn = component.blocksPerColumn;\n\t    var computationBuffer = new Int16Array(64);\n\t    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n\t      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n\t        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n\t        quantizeAndInverse(component, offset, computationBuffer);\n\t      }\n\t    }\n\t    return component.blockData;\n\t  }\n\t  function findNextFileMarker(data, currentPos, startPos) {\n\t    function peekUint16(pos) {\n\t      return data[pos] << 8 | data[pos + 1];\n\t    }\n\t    var maxPos = data.length - 1;\n\t    var newPos = startPos < currentPos ? startPos : currentPos;\n\t    if (currentPos >= maxPos) {\n\t      return null;\n\t    }\n\t    var currentMarker = peekUint16(currentPos);\n\t    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\n\t      return {\n\t        invalid: null,\n\t        marker: currentMarker,\n\t        offset: currentPos\n\t      };\n\t    }\n\t    var newMarker = peekUint16(newPos);\n\t    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\n\t      if (++newPos >= maxPos) {\n\t        return null;\n\t      }\n\t      newMarker = peekUint16(newPos);\n\t    }\n\t    return {\n\t      invalid: currentMarker.toString(16),\n\t      marker: newMarker,\n\t      offset: newPos\n\t    };\n\t  }\n\t  JpegImage.prototype = {\n\t    parse: function parse(data) {\n\t      function readUint16() {\n\t        var value = data[offset] << 8 | data[offset + 1];\n\t        offset += 2;\n\t        return value;\n\t      }\n\t      function readDataBlock() {\n\t        var length = readUint16();\n\t        var endOffset = offset + length - 2;\n\t        var fileMarker = findNextFileMarker(data, endOffset, offset);\n\t        if (fileMarker && fileMarker.invalid) {\n\t          (0, _util.warn)('readDataBlock - incorrect length, next marker is: ' + fileMarker.invalid);\n\t          endOffset = fileMarker.offset;\n\t        }\n\t        var array = data.subarray(offset, endOffset);\n\t        offset += array.length;\n\t        return array;\n\t      }\n\t      function prepareComponents(frame) {\n\t        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n\t        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n\t        for (var i = 0; i < frame.components.length; i++) {\n\t          component = frame.components[i];\n\t          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n\t          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n\t          var blocksPerLineForMcu = mcusPerLine * component.h;\n\t          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n\t          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n\t          component.blockData = new Int16Array(blocksBufferSize);\n\t          component.blocksPerLine = blocksPerLine;\n\t          component.blocksPerColumn = blocksPerColumn;\n\t        }\n\t        frame.mcusPerLine = mcusPerLine;\n\t        frame.mcusPerColumn = mcusPerColumn;\n\t      }\n\t      var offset = 0;\n\t      var jfif = null;\n\t      var adobe = null;\n\t      var frame, resetInterval;\n\t      var quantizationTables = [];\n\t      var huffmanTablesAC = [],\n\t          huffmanTablesDC = [];\n\t      var fileMarker = readUint16();\n\t      if (fileMarker !== 0xFFD8) {\n\t        throw new JpegError('SOI not found');\n\t      }\n\t      fileMarker = readUint16();\n\t      while (fileMarker !== 0xFFD9) {\n\t        var i, j, l;\n\t        switch (fileMarker) {\n\t          case 0xFFE0:\n\t          case 0xFFE1:\n\t          case 0xFFE2:\n\t          case 0xFFE3:\n\t          case 0xFFE4:\n\t          case 0xFFE5:\n\t          case 0xFFE6:\n\t          case 0xFFE7:\n\t          case 0xFFE8:\n\t          case 0xFFE9:\n\t          case 0xFFEA:\n\t          case 0xFFEB:\n\t          case 0xFFEC:\n\t          case 0xFFED:\n\t          case 0xFFEE:\n\t          case 0xFFEF:\n\t          case 0xFFFE:\n\t            var appData = readDataBlock();\n\t            if (fileMarker === 0xFFE0) {\n\t              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n\t                jfif = {\n\t                  version: {\n\t                    major: appData[5],\n\t                    minor: appData[6]\n\t                  },\n\t                  densityUnits: appData[7],\n\t                  xDensity: appData[8] << 8 | appData[9],\n\t                  yDensity: appData[10] << 8 | appData[11],\n\t                  thumbWidth: appData[12],\n\t                  thumbHeight: appData[13],\n\t                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n\t                };\n\t              }\n\t            }\n\t            if (fileMarker === 0xFFEE) {\n\t              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n\t                adobe = {\n\t                  version: appData[5] << 8 | appData[6],\n\t                  flags0: appData[7] << 8 | appData[8],\n\t                  flags1: appData[9] << 8 | appData[10],\n\t                  transformCode: appData[11]\n\t                };\n\t              }\n\t            }\n\t            break;\n\t          case 0xFFDB:\n\t            var quantizationTablesLength = readUint16();\n\t            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n\t            var z;\n\t            while (offset < quantizationTablesEnd) {\n\t              var quantizationTableSpec = data[offset++];\n\t              var tableData = new Uint16Array(64);\n\t              if (quantizationTableSpec >> 4 === 0) {\n\t                for (j = 0; j < 64; j++) {\n\t                  z = dctZigZag[j];\n\t                  tableData[z] = data[offset++];\n\t                }\n\t              } else if (quantizationTableSpec >> 4 === 1) {\n\t                for (j = 0; j < 64; j++) {\n\t                  z = dctZigZag[j];\n\t                  tableData[z] = readUint16();\n\t                }\n\t              } else {\n\t                throw new JpegError('DQT - invalid table spec');\n\t              }\n\t              quantizationTables[quantizationTableSpec & 15] = tableData;\n\t            }\n\t            break;\n\t          case 0xFFC0:\n\t          case 0xFFC1:\n\t          case 0xFFC2:\n\t            if (frame) {\n\t              throw new JpegError('Only single frame JPEGs supported');\n\t            }\n\t            readUint16();\n\t            frame = {};\n\t            frame.extended = fileMarker === 0xFFC1;\n\t            frame.progressive = fileMarker === 0xFFC2;\n\t            frame.precision = data[offset++];\n\t            frame.scanLines = readUint16();\n\t            frame.samplesPerLine = readUint16();\n\t            frame.components = [];\n\t            frame.componentIds = {};\n\t            var componentsCount = data[offset++],\n\t                componentId;\n\t            var maxH = 0,\n\t                maxV = 0;\n\t            for (i = 0; i < componentsCount; i++) {\n\t              componentId = data[offset];\n\t              var h = data[offset + 1] >> 4;\n\t              var v = data[offset + 1] & 15;\n\t              if (maxH < h) {\n\t                maxH = h;\n\t              }\n\t              if (maxV < v) {\n\t                maxV = v;\n\t              }\n\t              var qId = data[offset + 2];\n\t              l = frame.components.push({\n\t                h: h,\n\t                v: v,\n\t                quantizationId: qId,\n\t                quantizationTable: null\n\t              });\n\t              frame.componentIds[componentId] = l - 1;\n\t              offset += 3;\n\t            }\n\t            frame.maxH = maxH;\n\t            frame.maxV = maxV;\n\t            prepareComponents(frame);\n\t            break;\n\t          case 0xFFC4:\n\t            var huffmanLength = readUint16();\n\t            for (i = 2; i < huffmanLength;) {\n\t              var huffmanTableSpec = data[offset++];\n\t              var codeLengths = new Uint8Array(16);\n\t              var codeLengthSum = 0;\n\t              for (j = 0; j < 16; j++, offset++) {\n\t                codeLengthSum += codeLengths[j] = data[offset];\n\t              }\n\t              var huffmanValues = new Uint8Array(codeLengthSum);\n\t              for (j = 0; j < codeLengthSum; j++, offset++) {\n\t                huffmanValues[j] = data[offset];\n\t              }\n\t              i += 17 + codeLengthSum;\n\t              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n\t            }\n\t            break;\n\t          case 0xFFDD:\n\t            readUint16();\n\t            resetInterval = readUint16();\n\t            break;\n\t          case 0xFFDA:\n\t            readUint16();\n\t            var selectorsCount = data[offset++];\n\t            var components = [],\n\t                component;\n\t            for (i = 0; i < selectorsCount; i++) {\n\t              var componentIndex = frame.componentIds[data[offset++]];\n\t              component = frame.components[componentIndex];\n\t              var tableSpec = data[offset++];\n\t              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n\t              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n\t              components.push(component);\n\t            }\n\t            var spectralStart = data[offset++];\n\t            var spectralEnd = data[offset++];\n\t            var successiveApproximation = data[offset++];\n\t            var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15);\n\t            offset += processed;\n\t            break;\n\t          case 0xFFFF:\n\t            if (data[offset] !== 0xFF) {\n\t              offset--;\n\t            }\n\t            break;\n\t          default:\n\t            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n\t              offset -= 3;\n\t              break;\n\t            }\n\t            throw new JpegError('unknown marker ' + fileMarker.toString(16));\n\t        }\n\t        fileMarker = readUint16();\n\t      }\n\t      this.width = frame.samplesPerLine;\n\t      this.height = frame.scanLines;\n\t      this.jfif = jfif;\n\t      this.adobe = adobe;\n\t      this.components = [];\n\t      for (i = 0; i < frame.components.length; i++) {\n\t        component = frame.components[i];\n\t        var quantizationTable = quantizationTables[component.quantizationId];\n\t        if (quantizationTable) {\n\t          component.quantizationTable = quantizationTable;\n\t        }\n\t        this.components.push({\n\t          output: buildComponentData(frame, component),\n\t          scaleX: component.h / frame.maxH,\n\t          scaleY: component.v / frame.maxV,\n\t          blocksPerLine: component.blocksPerLine,\n\t          blocksPerColumn: component.blocksPerColumn\n\t        });\n\t      }\n\t      this.numComponents = this.components.length;\n\t    },\n\t    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n\t      var scaleX = this.width / width,\n\t          scaleY = this.height / height;\n\t      var component, componentScaleX, componentScaleY, blocksPerScanline;\n\t      var x, y, i, j, k;\n\t      var index;\n\t      var offset = 0;\n\t      var output;\n\t      var numComponents = this.components.length;\n\t      var dataLength = width * height * numComponents;\n\t      var data = new Uint8ClampedArray(dataLength);\n\t      var xScaleBlockOffset = new Uint32Array(width);\n\t      var mask3LSB = 0xfffffff8;\n\t      for (i = 0; i < numComponents; i++) {\n\t        component = this.components[i];\n\t        componentScaleX = component.scaleX * scaleX;\n\t        componentScaleY = component.scaleY * scaleY;\n\t        offset = i;\n\t        output = component.output;\n\t        blocksPerScanline = component.blocksPerLine + 1 << 3;\n\t        for (x = 0; x < width; x++) {\n\t          j = 0 | x * componentScaleX;\n\t          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n\t        }\n\t        for (y = 0; y < height; y++) {\n\t          j = 0 | y * componentScaleY;\n\t          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n\t          for (x = 0; x < width; x++) {\n\t            data[offset] = output[index + xScaleBlockOffset[x]];\n\t            offset += numComponents;\n\t          }\n\t        }\n\t      }\n\t      var transform = this.decodeTransform;\n\t      if (transform) {\n\t        for (i = 0; i < dataLength;) {\n\t          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n\t            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n\t          }\n\t        }\n\t      }\n\t      return data;\n\t    },\n\t    _isColorConversionNeeded: function _isColorConversionNeeded() {\n\t      if (this.adobe) {\n\t        return !!this.adobe.transformCode;\n\t      }\n\t      if (this.numComponents === 3) {\n\t        if (this.colorTransform === 0) {\n\t          return false;\n\t        }\n\t        return true;\n\t      }\n\t      if (this.colorTransform === 1) {\n\t        return true;\n\t      }\n\t      return false;\n\t    },\n\t\n\t    _convertYccToRgb: function convertYccToRgb(data) {\n\t      var Y, Cb, Cr;\n\t      for (var i = 0, length = data.length; i < length; i += 3) {\n\t        Y = data[i];\n\t        Cb = data[i + 1];\n\t        Cr = data[i + 2];\n\t        data[i] = Y - 179.456 + 1.402 * Cr;\n\t        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n\t        data[i + 2] = Y - 226.816 + 1.772 * Cb;\n\t      }\n\t      return data;\n\t    },\n\t    _convertYcckToRgb: function convertYcckToRgb(data) {\n\t      var Y, Cb, Cr, k;\n\t      var offset = 0;\n\t      for (var i = 0, length = data.length; i < length; i += 4) {\n\t        Y = data[i];\n\t        Cb = data[i + 1];\n\t        Cr = data[i + 2];\n\t        k = data[i + 3];\n\t        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n\t        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n\t        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n\t      }\n\t      return data;\n\t    },\n\t    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n\t      var Y, Cb, Cr;\n\t      for (var i = 0, length = data.length; i < length; i += 4) {\n\t        Y = data[i];\n\t        Cb = data[i + 1];\n\t        Cr = data[i + 2];\n\t        data[i] = 434.456 - Y - 1.402 * Cr;\n\t        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n\t        data[i + 2] = 481.816 - Y - 1.772 * Cb;\n\t      }\n\t      return data;\n\t    },\n\t    _convertCmykToRgb: function convertCmykToRgb(data) {\n\t      var c, m, y, k;\n\t      var offset = 0;\n\t      var scale = 1 / 255;\n\t      for (var i = 0, length = data.length; i < length; i += 4) {\n\t        c = data[i] * scale;\n\t        m = data[i + 1] * scale;\n\t        y = data[i + 2] * scale;\n\t        k = data[i + 3] * scale;\n\t        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\n\t        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\n\t        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\n\t      }\n\t      return data;\n\t    },\n\t    getData: function getData(width, height, forceRGBoutput) {\n\t      if (this.numComponents > 4) {\n\t        throw new JpegError('Unsupported color mode');\n\t      }\n\t      var data = this._getLinearizedBlockData(width, height);\n\t      if (this.numComponents === 1 && forceRGBoutput) {\n\t        var dataLength = data.length;\n\t        var rgbData = new Uint8ClampedArray(dataLength * 3);\n\t        var offset = 0;\n\t        for (var i = 0; i < dataLength; i++) {\n\t          var grayColor = data[i];\n\t          rgbData[offset++] = grayColor;\n\t          rgbData[offset++] = grayColor;\n\t          rgbData[offset++] = grayColor;\n\t        }\n\t        return rgbData;\n\t      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n\t        return this._convertYccToRgb(data);\n\t      } else if (this.numComponents === 4) {\n\t        if (this._isColorConversionNeeded()) {\n\t          if (forceRGBoutput) {\n\t            return this._convertYcckToRgb(data);\n\t          }\n\t          return this._convertYcckToCmyk(data);\n\t        } else if (forceRGBoutput) {\n\t          return this._convertCmykToRgb(data);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t  };\n\t  return JpegImage;\n\t}();\n\texports.JpegImage = JpegImage;\n\t\n\t/***/ }),\n\t/* 130 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.CCITTFaxStream = undefined;\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar _ccitt = __w_pdfjs_require__(131);\n\t\n\tvar _stream = __w_pdfjs_require__(5);\n\t\n\tvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n\t  function CCITTFaxStream(str, maybeLength, params) {\n\t    this.str = str;\n\t    this.dict = str.dict;\n\t    if (!(0, _primitives.isDict)(params)) {\n\t      params = _primitives.Dict.empty;\n\t    }\n\t    var source = {\n\t      next: function next() {\n\t        return str.getByte();\n\t      }\n\t    };\n\t    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\n\t      K: params.get('K'),\n\t      EndOfLine: params.get('EndOfLine'),\n\t      EncodedByteAlign: params.get('EncodedByteAlign'),\n\t      Columns: params.get('Columns'),\n\t      Rows: params.get('Rows'),\n\t      EndOfBlock: params.get('EndOfBlock'),\n\t      BlackIs1: params.get('BlackIs1')\n\t    });\n\t    _stream.DecodeStream.call(this, maybeLength);\n\t  }\n\t  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n\t  CCITTFaxStream.prototype.readBlock = function () {\n\t    while (!this.eof) {\n\t      var c = this.ccittFaxDecoder.readNextChar();\n\t      if (c === -1) {\n\t        this.eof = true;\n\t        return;\n\t      }\n\t      this.ensureBuffer(this.bufferLength + 1);\n\t      this.buffer[this.bufferLength++] = c;\n\t    }\n\t  };\n\t  return CCITTFaxStream;\n\t}();\n\texports.CCITTFaxStream = CCITTFaxStream;\n\t\n\t/***/ }),\n\t/* 131 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.CCITTFaxDecoder = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar CCITTFaxDecoder = function CCITTFaxDecoder() {\n\t  var ccittEOL = -2;\n\t  var ccittEOF = -1;\n\t  var twoDimPass = 0;\n\t  var twoDimHoriz = 1;\n\t  var twoDimVert0 = 2;\n\t  var twoDimVertR1 = 3;\n\t  var twoDimVertL1 = 4;\n\t  var twoDimVertR2 = 5;\n\t  var twoDimVertL2 = 6;\n\t  var twoDimVertR3 = 7;\n\t  var twoDimVertL3 = 8;\n\t  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\n\t  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\n\t  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\n\t  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\n\t  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\n\t  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\n\t  function CCITTFaxDecoder(source) {\n\t    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t    if (!source || typeof source.next !== 'function') {\n\t      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n\t    }\n\t    this.source = source;\n\t    this.eof = false;\n\t    this.encoding = options['K'] || 0;\n\t    this.eoline = options['EndOfLine'] || false;\n\t    this.byteAlign = options['EncodedByteAlign'] || false;\n\t    this.columns = options['Columns'] || 1728;\n\t    this.rows = options['Rows'] || 0;\n\t    var eoblock = options['EndOfBlock'];\n\t    if (eoblock === null || eoblock === undefined) {\n\t      eoblock = true;\n\t    }\n\t    this.eoblock = eoblock;\n\t    this.black = options['BlackIs1'] || false;\n\t    this.codingLine = new Uint32Array(this.columns + 1);\n\t    this.refLine = new Uint32Array(this.columns + 2);\n\t    this.codingLine[0] = this.columns;\n\t    this.codingPos = 0;\n\t    this.row = 0;\n\t    this.nextLine2D = this.encoding < 0;\n\t    this.inputBits = 0;\n\t    this.inputBuf = 0;\n\t    this.outputBits = 0;\n\t    this.rowsDone = false;\n\t    var code1 = void 0;\n\t    while ((code1 = this._lookBits(12)) === 0) {\n\t      this._eatBits(1);\n\t    }\n\t    if (code1 === 1) {\n\t      this._eatBits(12);\n\t    }\n\t    if (this.encoding > 0) {\n\t      this.nextLine2D = !this._lookBits(1);\n\t      this._eatBits(1);\n\t    }\n\t  }\n\t  CCITTFaxDecoder.prototype = {\n\t    readNextChar: function readNextChar() {\n\t      if (this.eof) {\n\t        return -1;\n\t      }\n\t      var refLine = this.refLine;\n\t      var codingLine = this.codingLine;\n\t      var columns = this.columns;\n\t      var refPos = void 0,\n\t          blackPixels = void 0,\n\t          bits = void 0,\n\t          i = void 0;\n\t      if (this.outputBits === 0) {\n\t        if (this.rowsDone) {\n\t          this.eof = true;\n\t        }\n\t        if (this.eof) {\n\t          return -1;\n\t        }\n\t        this.err = false;\n\t        var code1 = void 0,\n\t            code2 = void 0,\n\t            code3 = void 0;\n\t        if (this.nextLine2D) {\n\t          for (i = 0; codingLine[i] < columns; ++i) {\n\t            refLine[i] = codingLine[i];\n\t          }\n\t          refLine[i++] = columns;\n\t          refLine[i] = columns;\n\t          codingLine[0] = 0;\n\t          this.codingPos = 0;\n\t          refPos = 0;\n\t          blackPixels = 0;\n\t          while (codingLine[this.codingPos] < columns) {\n\t            code1 = this._getTwoDimCode();\n\t            switch (code1) {\n\t              case twoDimPass:\n\t                this._addPixels(refLine[refPos + 1], blackPixels);\n\t                if (refLine[refPos + 1] < columns) {\n\t                  refPos += 2;\n\t                }\n\t                break;\n\t              case twoDimHoriz:\n\t                code1 = code2 = 0;\n\t                if (blackPixels) {\n\t                  do {\n\t                    code1 += code3 = this._getBlackCode();\n\t                  } while (code3 >= 64);\n\t                  do {\n\t                    code2 += code3 = this._getWhiteCode();\n\t                  } while (code3 >= 64);\n\t                } else {\n\t                  do {\n\t                    code1 += code3 = this._getWhiteCode();\n\t                  } while (code3 >= 64);\n\t                  do {\n\t                    code2 += code3 = this._getBlackCode();\n\t                  } while (code3 >= 64);\n\t                }\n\t                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n\t                if (codingLine[this.codingPos] < columns) {\n\t                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n\t                }\n\t                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t                  refPos += 2;\n\t                }\n\t                break;\n\t              case twoDimVertR3:\n\t                this._addPixels(refLine[refPos] + 3, blackPixels);\n\t                blackPixels ^= 1;\n\t                if (codingLine[this.codingPos] < columns) {\n\t                  ++refPos;\n\t                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t                    refPos += 2;\n\t                  }\n\t                }\n\t                break;\n\t              case twoDimVertR2:\n\t                this._addPixels(refLine[refPos] + 2, blackPixels);\n\t                blackPixels ^= 1;\n\t                if (codingLine[this.codingPos] < columns) {\n\t                  ++refPos;\n\t                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t                    refPos += 2;\n\t                  }\n\t                }\n\t                break;\n\t              case twoDimVertR1:\n\t                this._addPixels(refLine[refPos] + 1, blackPixels);\n\t                blackPixels ^= 1;\n\t                if (codingLine[this.codingPos] < columns) {\n\t                  ++refPos;\n\t                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t                    refPos += 2;\n\t                  }\n\t                }\n\t                break;\n\t              case twoDimVert0:\n\t                this._addPixels(refLine[refPos], blackPixels);\n\t                blackPixels ^= 1;\n\t                if (codingLine[this.codingPos] < columns) {\n\t                  ++refPos;\n\t                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t                    refPos += 2;\n\t                  }\n\t                }\n\t                break;\n\t              case twoDimVertL3:\n\t                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n\t                blackPixels ^= 1;\n\t                if (codingLine[this.codingPos] < columns) {\n\t                  if (refPos > 0) {\n\t                    --refPos;\n\t                  } else {\n\t                    ++refPos;\n\t                  }\n\t                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t                    refPos += 2;\n\t                  }\n\t                }\n\t                break;\n\t              case twoDimVertL2:\n\t                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n\t                blackPixels ^= 1;\n\t                if (codingLine[this.codingPos] < columns) {\n\t                  if (refPos > 0) {\n\t                    --refPos;\n\t                  } else {\n\t                    ++refPos;\n\t                  }\n\t                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t                    refPos += 2;\n\t                  }\n\t                }\n\t                break;\n\t              case twoDimVertL1:\n\t                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n\t                blackPixels ^= 1;\n\t                if (codingLine[this.codingPos] < columns) {\n\t                  if (refPos > 0) {\n\t                    --refPos;\n\t                  } else {\n\t                    ++refPos;\n\t                  }\n\t                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n\t                    refPos += 2;\n\t                  }\n\t                }\n\t                break;\n\t              case ccittEOF:\n\t                this._addPixels(columns, 0);\n\t                this.eof = true;\n\t                break;\n\t              default:\n\t                (0, _util.info)('bad 2d code');\n\t                this._addPixels(columns, 0);\n\t                this.err = true;\n\t            }\n\t          }\n\t        } else {\n\t          codingLine[0] = 0;\n\t          this.codingPos = 0;\n\t          blackPixels = 0;\n\t          while (codingLine[this.codingPos] < columns) {\n\t            code1 = 0;\n\t            if (blackPixels) {\n\t              do {\n\t                code1 += code3 = this._getBlackCode();\n\t              } while (code3 >= 64);\n\t            } else {\n\t              do {\n\t                code1 += code3 = this._getWhiteCode();\n\t              } while (code3 >= 64);\n\t            }\n\t            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n\t            blackPixels ^= 1;\n\t          }\n\t        }\n\t        var gotEOL = false;\n\t        if (this.byteAlign) {\n\t          this.inputBits &= ~7;\n\t        }\n\t        if (!this.eoblock && this.row === this.rows - 1) {\n\t          this.rowsDone = true;\n\t        } else {\n\t          code1 = this._lookBits(12);\n\t          if (this.eoline) {\n\t            while (code1 !== ccittEOF && code1 !== 1) {\n\t              this._eatBits(1);\n\t              code1 = this._lookBits(12);\n\t            }\n\t          } else {\n\t            while (code1 === 0) {\n\t              this._eatBits(1);\n\t              code1 = this._lookBits(12);\n\t            }\n\t          }\n\t          if (code1 === 1) {\n\t            this._eatBits(12);\n\t            gotEOL = true;\n\t          } else if (code1 === ccittEOF) {\n\t            this.eof = true;\n\t          }\n\t        }\n\t        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n\t          this.nextLine2D = !this._lookBits(1);\n\t          this._eatBits(1);\n\t        }\n\t        if (this.eoblock && gotEOL && this.byteAlign) {\n\t          code1 = this._lookBits(12);\n\t          if (code1 === 1) {\n\t            this._eatBits(12);\n\t            if (this.encoding > 0) {\n\t              this._lookBits(1);\n\t              this._eatBits(1);\n\t            }\n\t            if (this.encoding >= 0) {\n\t              for (i = 0; i < 4; ++i) {\n\t                code1 = this._lookBits(12);\n\t                if (code1 !== 1) {\n\t                  (0, _util.info)('bad rtc code: ' + code1);\n\t                }\n\t                this._eatBits(12);\n\t                if (this.encoding > 0) {\n\t                  this._lookBits(1);\n\t                  this._eatBits(1);\n\t                }\n\t              }\n\t            }\n\t            this.eof = true;\n\t          }\n\t        } else if (this.err && this.eoline) {\n\t          while (true) {\n\t            code1 = this._lookBits(13);\n\t            if (code1 === ccittEOF) {\n\t              this.eof = true;\n\t              return -1;\n\t            }\n\t            if (code1 >> 1 === 1) {\n\t              break;\n\t            }\n\t            this._eatBits(1);\n\t          }\n\t          this._eatBits(12);\n\t          if (this.encoding > 0) {\n\t            this._eatBits(1);\n\t            this.nextLine2D = !(code1 & 1);\n\t          }\n\t        }\n\t        if (codingLine[0] > 0) {\n\t          this.outputBits = codingLine[this.codingPos = 0];\n\t        } else {\n\t          this.outputBits = codingLine[this.codingPos = 1];\n\t        }\n\t        this.row++;\n\t      }\n\t      var c = void 0;\n\t      if (this.outputBits >= 8) {\n\t        c = this.codingPos & 1 ? 0 : 0xFF;\n\t        this.outputBits -= 8;\n\t        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n\t          this.codingPos++;\n\t          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n\t        }\n\t      } else {\n\t        bits = 8;\n\t        c = 0;\n\t        do {\n\t          if (this.outputBits > bits) {\n\t            c <<= bits;\n\t            if (!(this.codingPos & 1)) {\n\t              c |= 0xFF >> 8 - bits;\n\t            }\n\t            this.outputBits -= bits;\n\t            bits = 0;\n\t          } else {\n\t            c <<= this.outputBits;\n\t            if (!(this.codingPos & 1)) {\n\t              c |= 0xFF >> 8 - this.outputBits;\n\t            }\n\t            bits -= this.outputBits;\n\t            this.outputBits = 0;\n\t            if (codingLine[this.codingPos] < columns) {\n\t              this.codingPos++;\n\t              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n\t            } else if (bits > 0) {\n\t              c <<= bits;\n\t              bits = 0;\n\t            }\n\t          }\n\t        } while (bits);\n\t      }\n\t      if (this.black) {\n\t        c ^= 0xFF;\n\t      }\n\t      return c;\n\t    },\n\t    _addPixels: function _addPixels(a1, blackPixels) {\n\t      var codingLine = this.codingLine;\n\t      var codingPos = this.codingPos;\n\t      if (a1 > codingLine[codingPos]) {\n\t        if (a1 > this.columns) {\n\t          (0, _util.info)('row is wrong length');\n\t          this.err = true;\n\t          a1 = this.columns;\n\t        }\n\t        if (codingPos & 1 ^ blackPixels) {\n\t          ++codingPos;\n\t        }\n\t        codingLine[codingPos] = a1;\n\t      }\n\t      this.codingPos = codingPos;\n\t    },\n\t    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\n\t      var codingLine = this.codingLine;\n\t      var codingPos = this.codingPos;\n\t      if (a1 > codingLine[codingPos]) {\n\t        if (a1 > this.columns) {\n\t          (0, _util.info)('row is wrong length');\n\t          this.err = true;\n\t          a1 = this.columns;\n\t        }\n\t        if (codingPos & 1 ^ blackPixels) {\n\t          ++codingPos;\n\t        }\n\t        codingLine[codingPos] = a1;\n\t      } else if (a1 < codingLine[codingPos]) {\n\t        if (a1 < 0) {\n\t          (0, _util.info)('invalid code');\n\t          this.err = true;\n\t          a1 = 0;\n\t        }\n\t        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n\t          --codingPos;\n\t        }\n\t        codingLine[codingPos] = a1;\n\t      }\n\t      this.codingPos = codingPos;\n\t    },\n\t    _findTableCode: function _findTableCode(start, end, table, limit) {\n\t      var limitValue = limit || 0;\n\t      for (var i = start; i <= end; ++i) {\n\t        var code = this._lookBits(i);\n\t        if (code === ccittEOF) {\n\t          return [true, 1, false];\n\t        }\n\t        if (i < end) {\n\t          code <<= end - i;\n\t        }\n\t        if (!limitValue || code >= limitValue) {\n\t          var p = table[code - limitValue];\n\t          if (p[0] === i) {\n\t            this._eatBits(i);\n\t            return [true, p[1], true];\n\t          }\n\t        }\n\t      }\n\t      return [false, 0, false];\n\t    },\n\t    _getTwoDimCode: function _getTwoDimCode() {\n\t      var code = 0;\n\t      var p = void 0;\n\t      if (this.eoblock) {\n\t        code = this._lookBits(7);\n\t        p = twoDimTable[code];\n\t        if (p && p[0] > 0) {\n\t          this._eatBits(p[0]);\n\t          return p[1];\n\t        }\n\t      } else {\n\t        var result = this._findTableCode(1, 7, twoDimTable);\n\t        if (result[0] && result[2]) {\n\t          return result[1];\n\t        }\n\t      }\n\t      (0, _util.info)('Bad two dim code');\n\t      return ccittEOF;\n\t    },\n\t    _getWhiteCode: function _getWhiteCode() {\n\t      var code = 0;\n\t      var p = void 0;\n\t      if (this.eoblock) {\n\t        code = this._lookBits(12);\n\t        if (code === ccittEOF) {\n\t          return 1;\n\t        }\n\t        if (code >> 5 === 0) {\n\t          p = whiteTable1[code];\n\t        } else {\n\t          p = whiteTable2[code >> 3];\n\t        }\n\t        if (p[0] > 0) {\n\t          this._eatBits(p[0]);\n\t          return p[1];\n\t        }\n\t      } else {\n\t        var result = this._findTableCode(1, 9, whiteTable2);\n\t        if (result[0]) {\n\t          return result[1];\n\t        }\n\t        result = this._findTableCode(11, 12, whiteTable1);\n\t        if (result[0]) {\n\t          return result[1];\n\t        }\n\t      }\n\t      (0, _util.info)('bad white code');\n\t      this._eatBits(1);\n\t      return 1;\n\t    },\n\t    _getBlackCode: function _getBlackCode() {\n\t      var code = void 0,\n\t          p = void 0;\n\t      if (this.eoblock) {\n\t        code = this._lookBits(13);\n\t        if (code === ccittEOF) {\n\t          return 1;\n\t        }\n\t        if (code >> 7 === 0) {\n\t          p = blackTable1[code];\n\t        } else if (code >> 9 === 0 && code >> 7 !== 0) {\n\t          p = blackTable2[(code >> 1) - 64];\n\t        } else {\n\t          p = blackTable3[code >> 7];\n\t        }\n\t        if (p[0] > 0) {\n\t          this._eatBits(p[0]);\n\t          return p[1];\n\t        }\n\t      } else {\n\t        var result = this._findTableCode(2, 6, blackTable3);\n\t        if (result[0]) {\n\t          return result[1];\n\t        }\n\t        result = this._findTableCode(7, 12, blackTable2, 64);\n\t        if (result[0]) {\n\t          return result[1];\n\t        }\n\t        result = this._findTableCode(10, 13, blackTable1);\n\t        if (result[0]) {\n\t          return result[1];\n\t        }\n\t      }\n\t      (0, _util.info)('bad black code');\n\t      this._eatBits(1);\n\t      return 1;\n\t    },\n\t    _lookBits: function _lookBits(n) {\n\t      var c = void 0;\n\t      while (this.inputBits < n) {\n\t        if ((c = this.source.next()) === -1) {\n\t          if (this.inputBits === 0) {\n\t            return ccittEOF;\n\t          }\n\t          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n\t        }\n\t        this.inputBuf = this.inputBuf << 8 | c;\n\t        this.inputBits += 8;\n\t      }\n\t      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n\t    },\n\t    _eatBits: function _eatBits(n) {\n\t      if ((this.inputBits -= n) < 0) {\n\t        this.inputBits = 0;\n\t      }\n\t    }\n\t  };\n\t  return CCITTFaxDecoder;\n\t}();\n\texports.CCITTFaxDecoder = CCITTFaxDecoder;\n\t\n\t/***/ }),\n\t/* 132 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Jbig2Stream = undefined;\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar _stream = __w_pdfjs_require__(5);\n\t\n\tvar _jbig = __w_pdfjs_require__(133);\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar Jbig2Stream = function Jbig2StreamClosure() {\n\t  function Jbig2Stream(stream, maybeLength, dict, params) {\n\t    this.stream = stream;\n\t    this.maybeLength = maybeLength;\n\t    this.dict = dict;\n\t    this.params = params;\n\t    _stream.DecodeStream.call(this, maybeLength);\n\t  }\n\t  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\n\t  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n\t    get: function get() {\n\t      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n\t    },\n\t\n\t    configurable: true\n\t  });\n\t  Jbig2Stream.prototype.ensureBuffer = function (req) {\n\t    if (this.bufferLength) {\n\t      return;\n\t    }\n\t    var jbig2Image = new _jbig.Jbig2Image();\n\t    var chunks = [];\n\t    if ((0, _primitives.isDict)(this.params)) {\n\t      var globalsStream = this.params.get('JBIG2Globals');\n\t      if ((0, _primitives.isStream)(globalsStream)) {\n\t        var globals = globalsStream.getBytes();\n\t        chunks.push({\n\t          data: globals,\n\t          start: 0,\n\t          end: globals.length\n\t        });\n\t      }\n\t    }\n\t    chunks.push({\n\t      data: this.bytes,\n\t      start: 0,\n\t      end: this.bytes.length\n\t    });\n\t    var data = jbig2Image.parseChunks(chunks);\n\t    var dataLength = data.length;\n\t    for (var i = 0; i < dataLength; i++) {\n\t      data[i] ^= 0xFF;\n\t    }\n\t    this.buffer = data;\n\t    this.bufferLength = dataLength;\n\t    this.eof = true;\n\t  };\n\t  return Jbig2Stream;\n\t}();\n\texports.Jbig2Stream = Jbig2Stream;\n\t\n\t/***/ }),\n\t/* 133 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Jbig2Image = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _arithmetic_decoder = __w_pdfjs_require__(75);\n\t\n\tvar Jbig2Error = function Jbig2ErrorClosure() {\n\t  function Jbig2Error(msg) {\n\t    this.message = 'JBIG2 error: ' + msg;\n\t  }\n\t  Jbig2Error.prototype = new Error();\n\t  Jbig2Error.prototype.name = 'Jbig2Error';\n\t  Jbig2Error.constructor = Jbig2Error;\n\t  return Jbig2Error;\n\t}();\n\tvar Jbig2Image = function Jbig2ImageClosure() {\n\t  function ContextCache() {}\n\t  ContextCache.prototype = {\n\t    getContexts: function getContexts(id) {\n\t      if (id in this) {\n\t        return this[id];\n\t      }\n\t      return this[id] = new Int8Array(1 << 16);\n\t    }\n\t  };\n\t  function DecodingContext(data, start, end) {\n\t    this.data = data;\n\t    this.start = start;\n\t    this.end = end;\n\t  }\n\t  DecodingContext.prototype = {\n\t    get decoder() {\n\t      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\n\t      return (0, _util.shadow)(this, 'decoder', decoder);\n\t    },\n\t    get contextCache() {\n\t      var cache = new ContextCache();\n\t      return (0, _util.shadow)(this, 'contextCache', cache);\n\t    }\n\t  };\n\t  function decodeInteger(contextCache, procedure, decoder) {\n\t    var contexts = contextCache.getContexts(procedure);\n\t    var prev = 1;\n\t    function readBits(length) {\n\t      var v = 0;\n\t      for (var i = 0; i < length; i++) {\n\t        var bit = decoder.readBit(contexts, prev);\n\t        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n\t        v = v << 1 | bit;\n\t      }\n\t      return v >>> 0;\n\t    }\n\t    var sign = readBits(1);\n\t    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n\t    return sign === 0 ? value : value > 0 ? -value : null;\n\t  }\n\t  function decodeIAID(contextCache, decoder, codeLength) {\n\t    var contexts = contextCache.getContexts('IAID');\n\t    var prev = 1;\n\t    for (var i = 0; i < codeLength; i++) {\n\t      var bit = decoder.readBit(contexts, prev);\n\t      prev = prev << 1 | bit;\n\t    }\n\t    if (codeLength < 31) {\n\t      return prev & (1 << codeLength) - 1;\n\t    }\n\t    return prev & 0x7FFFFFFF;\n\t  }\n\t  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\n\t  var CodingTemplates = [[{\n\t    x: -1,\n\t    y: -2\n\t  }, {\n\t    x: 0,\n\t    y: -2\n\t  }, {\n\t    x: 1,\n\t    y: -2\n\t  }, {\n\t    x: -2,\n\t    y: -1\n\t  }, {\n\t    x: -1,\n\t    y: -1\n\t  }, {\n\t    x: 0,\n\t    y: -1\n\t  }, {\n\t    x: 1,\n\t    y: -1\n\t  }, {\n\t    x: 2,\n\t    y: -1\n\t  }, {\n\t    x: -4,\n\t    y: 0\n\t  }, {\n\t    x: -3,\n\t    y: 0\n\t  }, {\n\t    x: -2,\n\t    y: 0\n\t  }, {\n\t    x: -1,\n\t    y: 0\n\t  }], [{\n\t    x: -1,\n\t    y: -2\n\t  }, {\n\t    x: 0,\n\t    y: -2\n\t  }, {\n\t    x: 1,\n\t    y: -2\n\t  }, {\n\t    x: 2,\n\t    y: -2\n\t  }, {\n\t    x: -2,\n\t    y: -1\n\t  }, {\n\t    x: -1,\n\t    y: -1\n\t  }, {\n\t    x: 0,\n\t    y: -1\n\t  }, {\n\t    x: 1,\n\t    y: -1\n\t  }, {\n\t    x: 2,\n\t    y: -1\n\t  }, {\n\t    x: -3,\n\t    y: 0\n\t  }, {\n\t    x: -2,\n\t    y: 0\n\t  }, {\n\t    x: -1,\n\t    y: 0\n\t  }], [{\n\t    x: -1,\n\t    y: -2\n\t  }, {\n\t    x: 0,\n\t    y: -2\n\t  }, {\n\t    x: 1,\n\t    y: -2\n\t  }, {\n\t    x: -2,\n\t    y: -1\n\t  }, {\n\t    x: -1,\n\t    y: -1\n\t  }, {\n\t    x: 0,\n\t    y: -1\n\t  }, {\n\t    x: 1,\n\t    y: -1\n\t  }, {\n\t    x: -2,\n\t    y: 0\n\t  }, {\n\t    x: -1,\n\t    y: 0\n\t  }], [{\n\t    x: -3,\n\t    y: -1\n\t  }, {\n\t    x: -2,\n\t    y: -1\n\t  }, {\n\t    x: -1,\n\t    y: -1\n\t  }, {\n\t    x: 0,\n\t    y: -1\n\t  }, {\n\t    x: 1,\n\t    y: -1\n\t  }, {\n\t    x: -4,\n\t    y: 0\n\t  }, {\n\t    x: -3,\n\t    y: 0\n\t  }, {\n\t    x: -2,\n\t    y: 0\n\t  }, {\n\t    x: -1,\n\t    y: 0\n\t  }]];\n\t  var RefinementTemplates = [{\n\t    coding: [{\n\t      x: 0,\n\t      y: -1\n\t    }, {\n\t      x: 1,\n\t      y: -1\n\t    }, {\n\t      x: -1,\n\t      y: 0\n\t    }],\n\t    reference: [{\n\t      x: 0,\n\t      y: -1\n\t    }, {\n\t      x: 1,\n\t      y: -1\n\t    }, {\n\t      x: -1,\n\t      y: 0\n\t    }, {\n\t      x: 0,\n\t      y: 0\n\t    }, {\n\t      x: 1,\n\t      y: 0\n\t    }, {\n\t      x: -1,\n\t      y: 1\n\t    }, {\n\t      x: 0,\n\t      y: 1\n\t    }, {\n\t      x: 1,\n\t      y: 1\n\t    }]\n\t  }, {\n\t    coding: [{\n\t      x: -1,\n\t      y: -1\n\t    }, {\n\t      x: 0,\n\t      y: -1\n\t    }, {\n\t      x: 1,\n\t      y: -1\n\t    }, {\n\t      x: -1,\n\t      y: 0\n\t    }],\n\t    reference: [{\n\t      x: 0,\n\t      y: -1\n\t    }, {\n\t      x: -1,\n\t      y: 0\n\t    }, {\n\t      x: 0,\n\t      y: 0\n\t    }, {\n\t      x: 1,\n\t      y: 0\n\t    }, {\n\t      x: 0,\n\t      y: 1\n\t    }, {\n\t      x: 1,\n\t      y: 1\n\t    }]\n\t  }];\n\t  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\n\t  var RefinementReusedContexts = [0x0020, 0x0008];\n\t  function decodeBitmapTemplate0(width, height, decodingContext) {\n\t    var decoder = decodingContext.decoder;\n\t    var contexts = decodingContext.contextCache.getContexts('GB');\n\t    var contextLabel,\n\t        i,\n\t        j,\n\t        pixel,\n\t        row,\n\t        row1,\n\t        row2,\n\t        bitmap = [];\n\t    var OLD_PIXEL_MASK = 0x7BF7;\n\t    for (i = 0; i < height; i++) {\n\t      row = bitmap[i] = new Uint8Array(width);\n\t      row1 = i < 1 ? row : bitmap[i - 1];\n\t      row2 = i < 2 ? row : bitmap[i - 2];\n\t      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n\t      for (j = 0; j < width; j++) {\n\t        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n\t        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n\t      }\n\t    }\n\t    return bitmap;\n\t  }\n\t  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n\t    if (mmr) {\n\t      throw new Jbig2Error('MMR encoding is not supported');\n\t    }\n\t    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n\t      return decodeBitmapTemplate0(width, height, decodingContext);\n\t    }\n\t    var useskip = !!skip;\n\t    var template = CodingTemplates[templateIndex].concat(at);\n\t    template.sort(function (a, b) {\n\t      return a.y - b.y || a.x - b.x;\n\t    });\n\t    var templateLength = template.length;\n\t    var templateX = new Int8Array(templateLength);\n\t    var templateY = new Int8Array(templateLength);\n\t    var changingTemplateEntries = [];\n\t    var reuseMask = 0,\n\t        minX = 0,\n\t        maxX = 0,\n\t        minY = 0;\n\t    var c, k;\n\t    for (k = 0; k < templateLength; k++) {\n\t      templateX[k] = template[k].x;\n\t      templateY[k] = template[k].y;\n\t      minX = Math.min(minX, template[k].x);\n\t      maxX = Math.max(maxX, template[k].x);\n\t      minY = Math.min(minY, template[k].y);\n\t      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n\t        reuseMask |= 1 << templateLength - 1 - k;\n\t      } else {\n\t        changingTemplateEntries.push(k);\n\t      }\n\t    }\n\t    var changingEntriesLength = changingTemplateEntries.length;\n\t    var changingTemplateX = new Int8Array(changingEntriesLength);\n\t    var changingTemplateY = new Int8Array(changingEntriesLength);\n\t    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n\t    for (c = 0; c < changingEntriesLength; c++) {\n\t      k = changingTemplateEntries[c];\n\t      changingTemplateX[c] = template[k].x;\n\t      changingTemplateY[c] = template[k].y;\n\t      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n\t    }\n\t    var sbb_left = -minX;\n\t    var sbb_top = -minY;\n\t    var sbb_right = width - maxX;\n\t    var pseudoPixelContext = ReusedContexts[templateIndex];\n\t    var row = new Uint8Array(width);\n\t    var bitmap = [];\n\t    var decoder = decodingContext.decoder;\n\t    var contexts = decodingContext.contextCache.getContexts('GB');\n\t    var ltp = 0,\n\t        j,\n\t        i0,\n\t        j0,\n\t        contextLabel = 0,\n\t        bit,\n\t        shift;\n\t    for (var i = 0; i < height; i++) {\n\t      if (prediction) {\n\t        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n\t        ltp ^= sltp;\n\t        if (ltp) {\n\t          bitmap.push(row);\n\t          continue;\n\t        }\n\t      }\n\t      row = new Uint8Array(row);\n\t      bitmap.push(row);\n\t      for (j = 0; j < width; j++) {\n\t        if (useskip && skip[i][j]) {\n\t          row[j] = 0;\n\t          continue;\n\t        }\n\t        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n\t          contextLabel = contextLabel << 1 & reuseMask;\n\t          for (k = 0; k < changingEntriesLength; k++) {\n\t            i0 = i + changingTemplateY[k];\n\t            j0 = j + changingTemplateX[k];\n\t            bit = bitmap[i0][j0];\n\t            if (bit) {\n\t              bit = changingTemplateBit[k];\n\t              contextLabel |= bit;\n\t            }\n\t          }\n\t        } else {\n\t          contextLabel = 0;\n\t          shift = templateLength - 1;\n\t          for (k = 0; k < templateLength; k++, shift--) {\n\t            j0 = j + templateX[k];\n\t            if (j0 >= 0 && j0 < width) {\n\t              i0 = i + templateY[k];\n\t              if (i0 >= 0) {\n\t                bit = bitmap[i0][j0];\n\t                if (bit) {\n\t                  contextLabel |= bit << shift;\n\t                }\n\t              }\n\t            }\n\t          }\n\t        }\n\t        var pixel = decoder.readBit(contexts, contextLabel);\n\t        row[j] = pixel;\n\t      }\n\t    }\n\t    return bitmap;\n\t  }\n\t  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n\t    var codingTemplate = RefinementTemplates[templateIndex].coding;\n\t    if (templateIndex === 0) {\n\t      codingTemplate = codingTemplate.concat([at[0]]);\n\t    }\n\t    var codingTemplateLength = codingTemplate.length;\n\t    var codingTemplateX = new Int32Array(codingTemplateLength);\n\t    var codingTemplateY = new Int32Array(codingTemplateLength);\n\t    var k;\n\t    for (k = 0; k < codingTemplateLength; k++) {\n\t      codingTemplateX[k] = codingTemplate[k].x;\n\t      codingTemplateY[k] = codingTemplate[k].y;\n\t    }\n\t    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n\t    if (templateIndex === 0) {\n\t      referenceTemplate = referenceTemplate.concat([at[1]]);\n\t    }\n\t    var referenceTemplateLength = referenceTemplate.length;\n\t    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n\t    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n\t    for (k = 0; k < referenceTemplateLength; k++) {\n\t      referenceTemplateX[k] = referenceTemplate[k].x;\n\t      referenceTemplateY[k] = referenceTemplate[k].y;\n\t    }\n\t    var referenceWidth = referenceBitmap[0].length;\n\t    var referenceHeight = referenceBitmap.length;\n\t    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n\t    var bitmap = [];\n\t    var decoder = decodingContext.decoder;\n\t    var contexts = decodingContext.contextCache.getContexts('GR');\n\t    var ltp = 0;\n\t    for (var i = 0; i < height; i++) {\n\t      if (prediction) {\n\t        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n\t        ltp ^= sltp;\n\t        if (ltp) {\n\t          throw new Jbig2Error('prediction is not supported');\n\t        }\n\t      }\n\t      var row = new Uint8Array(width);\n\t      bitmap.push(row);\n\t      for (var j = 0; j < width; j++) {\n\t        var i0, j0;\n\t        var contextLabel = 0;\n\t        for (k = 0; k < codingTemplateLength; k++) {\n\t          i0 = i + codingTemplateY[k];\n\t          j0 = j + codingTemplateX[k];\n\t          if (i0 < 0 || j0 < 0 || j0 >= width) {\n\t            contextLabel <<= 1;\n\t          } else {\n\t            contextLabel = contextLabel << 1 | bitmap[i0][j0];\n\t          }\n\t        }\n\t        for (k = 0; k < referenceTemplateLength; k++) {\n\t          i0 = i + referenceTemplateY[k] - offsetY;\n\t          j0 = j + referenceTemplateX[k] - offsetX;\n\t          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n\t            contextLabel <<= 1;\n\t          } else {\n\t            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n\t          }\n\t        }\n\t        var pixel = decoder.readBit(contexts, contextLabel);\n\t        row[j] = pixel;\n\t      }\n\t    }\n\t    return bitmap;\n\t  }\n\t  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext) {\n\t    if (huffman) {\n\t      throw new Jbig2Error('huffman is not supported');\n\t    }\n\t    var newSymbols = [];\n\t    var currentHeight = 0;\n\t    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\n\t    var decoder = decodingContext.decoder;\n\t    var contextCache = decodingContext.contextCache;\n\t    while (newSymbols.length < numberOfNewSymbols) {\n\t      var deltaHeight = decodeInteger(contextCache, 'IADH', decoder);\n\t      currentHeight += deltaHeight;\n\t      var currentWidth = 0;\n\t      while (true) {\n\t        var deltaWidth = decodeInteger(contextCache, 'IADW', decoder);\n\t        if (deltaWidth === null) {\n\t          break;\n\t        }\n\t        currentWidth += deltaWidth;\n\t        var bitmap;\n\t        if (refinement) {\n\t          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n\t          if (numberOfInstances > 1) {\n\t            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext);\n\t          } else {\n\t            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n\t            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n\t            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n\t            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n\t            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n\t          }\n\t        } else {\n\t          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n\t        }\n\t        newSymbols.push(bitmap);\n\t      }\n\t    }\n\t    var exportedSymbols = [];\n\t    var flags = [],\n\t        currentFlag = false;\n\t    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n\t    while (flags.length < totalSymbolsLength) {\n\t      var runLength = decodeInteger(contextCache, 'IAEX', decoder);\n\t      while (runLength--) {\n\t        flags.push(currentFlag);\n\t      }\n\t      currentFlag = !currentFlag;\n\t    }\n\t    for (var i = 0, ii = symbols.length; i < ii; i++) {\n\t      if (flags[i]) {\n\t        exportedSymbols.push(symbols[i]);\n\t      }\n\t    }\n\t    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n\t      if (flags[i]) {\n\t        exportedSymbols.push(newSymbols[j]);\n\t      }\n\t    }\n\t    return exportedSymbols;\n\t  }\n\t  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext) {\n\t    if (huffman) {\n\t      throw new Jbig2Error('huffman is not supported');\n\t    }\n\t    var bitmap = [];\n\t    var i, row;\n\t    for (i = 0; i < height; i++) {\n\t      row = new Uint8Array(width);\n\t      if (defaultPixelValue) {\n\t        for (var j = 0; j < width; j++) {\n\t          row[j] = defaultPixelValue;\n\t        }\n\t      }\n\t      bitmap.push(row);\n\t    }\n\t    var decoder = decodingContext.decoder;\n\t    var contextCache = decodingContext.contextCache;\n\t    var stripT = -decodeInteger(contextCache, 'IADT', decoder);\n\t    var firstS = 0;\n\t    i = 0;\n\t    while (i < numberOfSymbolInstances) {\n\t      var deltaT = decodeInteger(contextCache, 'IADT', decoder);\n\t      stripT += deltaT;\n\t      var deltaFirstS = decodeInteger(contextCache, 'IAFS', decoder);\n\t      firstS += deltaFirstS;\n\t      var currentS = firstS;\n\t      do {\n\t        var currentT = stripSize === 1 ? 0 : decodeInteger(contextCache, 'IAIT', decoder);\n\t        var t = stripSize * stripT + currentT;\n\t        var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n\t        var applyRefinement = refinement && decodeInteger(contextCache, 'IARI', decoder);\n\t        var symbolBitmap = inputSymbols[symbolId];\n\t        var symbolWidth = symbolBitmap[0].length;\n\t        var symbolHeight = symbolBitmap.length;\n\t        if (applyRefinement) {\n\t          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n\t          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n\t          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n\t          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n\t          symbolWidth += rdw;\n\t          symbolHeight += rdh;\n\t          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n\t        }\n\t        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n\t        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n\t        var s2, t2, symbolRow;\n\t        if (transposed) {\n\t          for (s2 = 0; s2 < symbolHeight; s2++) {\n\t            row = bitmap[offsetS + s2];\n\t            if (!row) {\n\t              continue;\n\t            }\n\t            symbolRow = symbolBitmap[s2];\n\t            var maxWidth = Math.min(width - offsetT, symbolWidth);\n\t            switch (combinationOperator) {\n\t              case 0:\n\t                for (t2 = 0; t2 < maxWidth; t2++) {\n\t                  row[offsetT + t2] |= symbolRow[t2];\n\t                }\n\t                break;\n\t              case 2:\n\t                for (t2 = 0; t2 < maxWidth; t2++) {\n\t                  row[offsetT + t2] ^= symbolRow[t2];\n\t                }\n\t                break;\n\t              default:\n\t                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n\t            }\n\t          }\n\t          currentS += symbolHeight - 1;\n\t        } else {\n\t          for (t2 = 0; t2 < symbolHeight; t2++) {\n\t            row = bitmap[offsetT + t2];\n\t            if (!row) {\n\t              continue;\n\t            }\n\t            symbolRow = symbolBitmap[t2];\n\t            switch (combinationOperator) {\n\t              case 0:\n\t                for (s2 = 0; s2 < symbolWidth; s2++) {\n\t                  row[offsetS + s2] |= symbolRow[s2];\n\t                }\n\t                break;\n\t              case 2:\n\t                for (s2 = 0; s2 < symbolWidth; s2++) {\n\t                  row[offsetS + s2] ^= symbolRow[s2];\n\t                }\n\t                break;\n\t              default:\n\t                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n\t            }\n\t          }\n\t          currentS += symbolWidth - 1;\n\t        }\n\t        i++;\n\t        var deltaS = decodeInteger(contextCache, 'IADS', decoder);\n\t        if (deltaS === null) {\n\t          break;\n\t        }\n\t        currentS += deltaS + dsOffset;\n\t      } while (true);\n\t    }\n\t    return bitmap;\n\t  }\n\t  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\n\t    var at = [];\n\t    at.push({\n\t      x: -patternWidth,\n\t      y: 0\n\t    });\n\t    if (template === 0) {\n\t      at.push({\n\t        x: -3,\n\t        y: -1\n\t      });\n\t      at.push({\n\t        x: 2,\n\t        y: -2\n\t      });\n\t      at.push({\n\t        x: -2,\n\t        y: -2\n\t      });\n\t    }\n\t    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n\t    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\n\t    var patterns = [],\n\t        i = 0,\n\t        patternBitmap = void 0,\n\t        xMin = void 0,\n\t        xMax = void 0,\n\t        y = void 0;\n\t    while (i <= maxPatternIndex) {\n\t      patternBitmap = [];\n\t      xMin = patternWidth * i;\n\t      xMax = xMin + patternWidth;\n\t      for (y = 0; y < patternHeight; y++) {\n\t        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n\t      }\n\t      patterns.push(patternBitmap);\n\t      i++;\n\t    }\n\t    return patterns;\n\t  }\n\t  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\n\t    var skip = null;\n\t    if (enableSkip) {\n\t      throw new Jbig2Error('skip is not supported');\n\t    }\n\t    if (combinationOperator !== 0) {\n\t      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\n\t    }\n\t    var regionBitmap = [];\n\t    var i = void 0,\n\t        j = void 0,\n\t        row = void 0;\n\t    for (i = 0; i < regionHeight; i++) {\n\t      row = new Uint8Array(regionWidth);\n\t      if (defaultPixelValue) {\n\t        for (j = 0; j < regionWidth; j++) {\n\t          row[j] = defaultPixelValue;\n\t        }\n\t      }\n\t      regionBitmap.push(row);\n\t    }\n\t    var numberOfPatterns = patterns.length;\n\t    var pattern0 = patterns[0];\n\t    var patternWidth = pattern0[0].length,\n\t        patternHeight = pattern0.length;\n\t    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\n\t    var at = [];\n\t    at.push({\n\t      x: template <= 1 ? 3 : 2,\n\t      y: -1\n\t    });\n\t    if (template === 0) {\n\t      at.push({\n\t        x: -3,\n\t        y: -1\n\t      });\n\t      at.push({\n\t        x: 2,\n\t        y: -2\n\t      });\n\t      at.push({\n\t        x: -2,\n\t        y: -2\n\t      });\n\t    }\n\t    var grayScaleBitPlanes = [];\n\t    for (i = bitsPerValue - 1; i >= 0; i--) {\n\t      grayScaleBitPlanes[i] = decodeBitmap(mmr, gridWidth, gridHeight, template, false, skip, at, decodingContext);\n\t    }\n\t    var mg = void 0,\n\t        ng = void 0,\n\t        bit = void 0,\n\t        patternIndex = void 0,\n\t        patternBitmap = void 0,\n\t        x = void 0,\n\t        y = void 0,\n\t        patternRow = void 0,\n\t        regionRow = void 0;\n\t    for (mg = 0; mg < gridHeight; mg++) {\n\t      for (ng = 0; ng < gridWidth; ng++) {\n\t        bit = 0;\n\t        patternIndex = 0;\n\t        for (j = bitsPerValue - 1; j >= 0; j--) {\n\t          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\n\t          patternIndex |= bit << j;\n\t        }\n\t        patternBitmap = patterns[patternIndex];\n\t        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\n\t        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\n\t        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\n\t          for (i = 0; i < patternHeight; i++) {\n\t            regionRow = regionBitmap[y + i];\n\t            patternRow = patternBitmap[i];\n\t            for (j = 0; j < patternWidth; j++) {\n\t              regionRow[x + j] |= patternRow[j];\n\t            }\n\t          }\n\t        } else {\n\t          var regionX = void 0,\n\t              regionY = void 0;\n\t          for (i = 0; i < patternHeight; i++) {\n\t            regionY = y + i;\n\t            if (regionY < 0 || regionY >= regionHeight) {\n\t              continue;\n\t            }\n\t            regionRow = regionBitmap[regionY];\n\t            patternRow = patternBitmap[i];\n\t            for (j = 0; j < patternWidth; j++) {\n\t              regionX = x + j;\n\t              if (regionX >= 0 && regionX < regionWidth) {\n\t                regionRow[regionX] |= patternRow[j];\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return regionBitmap;\n\t  }\n\t  function readSegmentHeader(data, start) {\n\t    var segmentHeader = {};\n\t    segmentHeader.number = (0, _util.readUint32)(data, start);\n\t    var flags = data[start + 4];\n\t    var segmentType = flags & 0x3F;\n\t    if (!SegmentTypes[segmentType]) {\n\t      throw new Jbig2Error('invalid segment type: ' + segmentType);\n\t    }\n\t    segmentHeader.type = segmentType;\n\t    segmentHeader.typeName = SegmentTypes[segmentType];\n\t    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n\t    var pageAssociationFieldSize = !!(flags & 0x40);\n\t    var referredFlags = data[start + 5];\n\t    var referredToCount = referredFlags >> 5 & 7;\n\t    var retainBits = [referredFlags & 31];\n\t    var position = start + 6;\n\t    if (referredFlags === 7) {\n\t      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\n\t      position += 3;\n\t      var bytes = referredToCount + 7 >> 3;\n\t      retainBits[0] = data[position++];\n\t      while (--bytes > 0) {\n\t        retainBits.push(data[position++]);\n\t      }\n\t    } else if (referredFlags === 5 || referredFlags === 6) {\n\t      throw new Jbig2Error('invalid referred-to flags');\n\t    }\n\t    segmentHeader.retainBits = retainBits;\n\t    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n\t    var referredTo = [];\n\t    var i, ii;\n\t    for (i = 0; i < referredToCount; i++) {\n\t      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\n\t      referredTo.push(number);\n\t      position += referredToSegmentNumberSize;\n\t    }\n\t    segmentHeader.referredTo = referredTo;\n\t    if (!pageAssociationFieldSize) {\n\t      segmentHeader.pageAssociation = data[position++];\n\t    } else {\n\t      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\n\t      position += 4;\n\t    }\n\t    segmentHeader.length = (0, _util.readUint32)(data, position);\n\t    position += 4;\n\t    if (segmentHeader.length === 0xFFFFFFFF) {\n\t      if (segmentType === 38) {\n\t        var genericRegionInfo = readRegionSegmentInformation(data, position);\n\t        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n\t        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n\t        var searchPatternLength = 6;\n\t        var searchPattern = new Uint8Array(searchPatternLength);\n\t        if (!genericRegionMmr) {\n\t          searchPattern[0] = 0xFF;\n\t          searchPattern[1] = 0xAC;\n\t        }\n\t        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n\t        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n\t        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n\t        searchPattern[5] = genericRegionInfo.height & 0xFF;\n\t        for (i = position, ii = data.length; i < ii; i++) {\n\t          var j = 0;\n\t          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n\t            j++;\n\t          }\n\t          if (j === searchPatternLength) {\n\t            segmentHeader.length = i + searchPatternLength;\n\t            break;\n\t          }\n\t        }\n\t        if (segmentHeader.length === 0xFFFFFFFF) {\n\t          throw new Jbig2Error('segment end was not found');\n\t        }\n\t      } else {\n\t        throw new Jbig2Error('invalid unknown segment length');\n\t      }\n\t    }\n\t    segmentHeader.headerEnd = position;\n\t    return segmentHeader;\n\t  }\n\t  function readSegments(header, data, start, end) {\n\t    var segments = [];\n\t    var position = start;\n\t    while (position < end) {\n\t      var segmentHeader = readSegmentHeader(data, position);\n\t      position = segmentHeader.headerEnd;\n\t      var segment = {\n\t        header: segmentHeader,\n\t        data: data\n\t      };\n\t      if (!header.randomAccess) {\n\t        segment.start = position;\n\t        position += segmentHeader.length;\n\t        segment.end = position;\n\t      }\n\t      segments.push(segment);\n\t      if (segmentHeader.type === 51) {\n\t        break;\n\t      }\n\t    }\n\t    if (header.randomAccess) {\n\t      for (var i = 0, ii = segments.length; i < ii; i++) {\n\t        segments[i].start = position;\n\t        position += segments[i].header.length;\n\t        segments[i].end = position;\n\t      }\n\t    }\n\t    return segments;\n\t  }\n\t  function readRegionSegmentInformation(data, start) {\n\t    return {\n\t      width: (0, _util.readUint32)(data, start),\n\t      height: (0, _util.readUint32)(data, start + 4),\n\t      x: (0, _util.readUint32)(data, start + 8),\n\t      y: (0, _util.readUint32)(data, start + 12),\n\t      combinationOperator: data[start + 16] & 7\n\t    };\n\t  }\n\t  var RegionSegmentInformationFieldLength = 17;\n\t  function processSegment(segment, visitor) {\n\t    var header = segment.header;\n\t    var data = segment.data,\n\t        position = segment.start,\n\t        end = segment.end;\n\t    var args, at, i, atLength;\n\t    switch (header.type) {\n\t      case 0:\n\t        var dictionary = {};\n\t        var dictionaryFlags = (0, _util.readUint16)(data, position);\n\t        dictionary.huffman = !!(dictionaryFlags & 1);\n\t        dictionary.refinement = !!(dictionaryFlags & 2);\n\t        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n\t        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n\t        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n\t        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n\t        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n\t        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n\t        dictionary.template = dictionaryFlags >> 10 & 3;\n\t        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n\t        position += 2;\n\t        if (!dictionary.huffman) {\n\t          atLength = dictionary.template === 0 ? 4 : 1;\n\t          at = [];\n\t          for (i = 0; i < atLength; i++) {\n\t            at.push({\n\t              x: (0, _util.readInt8)(data, position),\n\t              y: (0, _util.readInt8)(data, position + 1)\n\t            });\n\t            position += 2;\n\t          }\n\t          dictionary.at = at;\n\t        }\n\t        if (dictionary.refinement && !dictionary.refinementTemplate) {\n\t          at = [];\n\t          for (i = 0; i < 2; i++) {\n\t            at.push({\n\t              x: (0, _util.readInt8)(data, position),\n\t              y: (0, _util.readInt8)(data, position + 1)\n\t            });\n\t            position += 2;\n\t          }\n\t          dictionary.refinementAt = at;\n\t        }\n\t        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\n\t        position += 4;\n\t        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\n\t        position += 4;\n\t        args = [dictionary, header.number, header.referredTo, data, position, end];\n\t        break;\n\t      case 6:\n\t      case 7:\n\t        var textRegion = {};\n\t        textRegion.info = readRegionSegmentInformation(data, position);\n\t        position += RegionSegmentInformationFieldLength;\n\t        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\n\t        position += 2;\n\t        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n\t        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n\t        textRegion.stripSize = 1 << (textRegionSegmentFlags >> 2 & 3);\n\t        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n\t        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n\t        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n\t        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n\t        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n\t        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n\t        if (textRegion.huffman) {\n\t          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\n\t          position += 2;\n\t          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n\t          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n\t          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n\t          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n\t          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n\t          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n\t          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n\t          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 14);\n\t        }\n\t        if (textRegion.refinement && !textRegion.refinementTemplate) {\n\t          at = [];\n\t          for (i = 0; i < 2; i++) {\n\t            at.push({\n\t              x: (0, _util.readInt8)(data, position),\n\t              y: (0, _util.readInt8)(data, position + 1)\n\t            });\n\t            position += 2;\n\t          }\n\t          textRegion.refinementAt = at;\n\t        }\n\t        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\n\t        position += 4;\n\t        if (textRegion.huffman) {\n\t          throw new Jbig2Error('huffman is not supported');\n\t        }\n\t        args = [textRegion, header.referredTo, data, position, end];\n\t        break;\n\t      case 16:\n\t        var patternDictionary = {};\n\t        var patternDictionaryFlags = data[position++];\n\t        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n\t        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\n\t        patternDictionary.patternWidth = data[position++];\n\t        patternDictionary.patternHeight = data[position++];\n\t        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\n\t        position += 4;\n\t        args = [patternDictionary, header.number, data, position, end];\n\t        break;\n\t      case 22:\n\t      case 23:\n\t        var halftoneRegion = {};\n\t        halftoneRegion.info = readRegionSegmentInformation(data, position);\n\t        position += RegionSegmentInformationFieldLength;\n\t        var halftoneRegionFlags = data[position++];\n\t        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n\t        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\n\t        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n\t        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\n\t        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\n\t        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\n\t        position += 4;\n\t        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\n\t        position += 4;\n\t        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n\t        position += 4;\n\t        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n\t        position += 4;\n\t        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\n\t        position += 2;\n\t        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\n\t        position += 2;\n\t        args = [halftoneRegion, header.referredTo, data, position, end];\n\t        break;\n\t      case 38:\n\t      case 39:\n\t        var genericRegion = {};\n\t        genericRegion.info = readRegionSegmentInformation(data, position);\n\t        position += RegionSegmentInformationFieldLength;\n\t        var genericRegionSegmentFlags = data[position++];\n\t        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n\t        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n\t        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n\t        if (!genericRegion.mmr) {\n\t          atLength = genericRegion.template === 0 ? 4 : 1;\n\t          at = [];\n\t          for (i = 0; i < atLength; i++) {\n\t            at.push({\n\t              x: (0, _util.readInt8)(data, position),\n\t              y: (0, _util.readInt8)(data, position + 1)\n\t            });\n\t            position += 2;\n\t          }\n\t          genericRegion.at = at;\n\t        }\n\t        args = [genericRegion, data, position, end];\n\t        break;\n\t      case 48:\n\t        var pageInfo = {\n\t          width: (0, _util.readUint32)(data, position),\n\t          height: (0, _util.readUint32)(data, position + 4),\n\t          resolutionX: (0, _util.readUint32)(data, position + 8),\n\t          resolutionY: (0, _util.readUint32)(data, position + 12)\n\t        };\n\t        if (pageInfo.height === 0xFFFFFFFF) {\n\t          delete pageInfo.height;\n\t        }\n\t        var pageSegmentFlags = data[position + 16];\n\t        (0, _util.readUint16)(data, position + 17);\n\t        pageInfo.lossless = !!(pageSegmentFlags & 1);\n\t        pageInfo.refinement = !!(pageSegmentFlags & 2);\n\t        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n\t        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n\t        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n\t        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n\t        args = [pageInfo];\n\t        break;\n\t      case 49:\n\t        break;\n\t      case 50:\n\t        break;\n\t      case 51:\n\t        break;\n\t      case 62:\n\t        break;\n\t      default:\n\t        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\n\t    }\n\t    var callbackName = 'on' + header.typeName;\n\t    if (callbackName in visitor) {\n\t      visitor[callbackName].apply(visitor, args);\n\t    }\n\t  }\n\t  function processSegments(segments, visitor) {\n\t    for (var i = 0, ii = segments.length; i < ii; i++) {\n\t      processSegment(segments[i], visitor);\n\t    }\n\t  }\n\t  function parseJbig2(data, start, end) {\n\t    var position = start;\n\t    if (data[position] !== 0x97 || data[position + 1] !== 0x4A || data[position + 2] !== 0x42 || data[position + 3] !== 0x32 || data[position + 4] !== 0x0D || data[position + 5] !== 0x0A || data[position + 6] !== 0x1A || data[position + 7] !== 0x0A) {\n\t      throw new Jbig2Error('invalid header');\n\t    }\n\t    var header = {};\n\t    position += 8;\n\t    var flags = data[position++];\n\t    header.randomAccess = !(flags & 1);\n\t    if (!(flags & 2)) {\n\t      header.numberOfPages = (0, _util.readUint32)(data, position);\n\t      position += 4;\n\t    }\n\t    readSegments(header, data, position, end);\n\t    throw new Error('Not implemented');\n\t  }\n\t  function parseJbig2Chunks(chunks) {\n\t    var visitor = new SimpleSegmentVisitor();\n\t    for (var i = 0, ii = chunks.length; i < ii; i++) {\n\t      var chunk = chunks[i];\n\t      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n\t      processSegments(segments, visitor);\n\t    }\n\t    return visitor.buffer;\n\t  }\n\t  function SimpleSegmentVisitor() {}\n\t  SimpleSegmentVisitor.prototype = {\n\t    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n\t      this.currentPageInfo = info;\n\t      var rowSize = info.width + 7 >> 3;\n\t      var buffer = new Uint8ClampedArray(rowSize * info.height);\n\t      if (info.defaultPixelValue) {\n\t        for (var i = 0, ii = buffer.length; i < ii; i++) {\n\t          buffer[i] = 0xFF;\n\t        }\n\t      }\n\t      this.buffer = buffer;\n\t    },\n\t    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n\t      var pageInfo = this.currentPageInfo;\n\t      var width = regionInfo.width,\n\t          height = regionInfo.height;\n\t      var rowSize = pageInfo.width + 7 >> 3;\n\t      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n\t      var buffer = this.buffer;\n\t      var mask0 = 128 >> (regionInfo.x & 7);\n\t      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n\t      var i, j, mask, offset;\n\t      switch (combinationOperator) {\n\t        case 0:\n\t          for (i = 0; i < height; i++) {\n\t            mask = mask0;\n\t            offset = offset0;\n\t            for (j = 0; j < width; j++) {\n\t              if (bitmap[i][j]) {\n\t                buffer[offset] |= mask;\n\t              }\n\t              mask >>= 1;\n\t              if (!mask) {\n\t                mask = 128;\n\t                offset++;\n\t              }\n\t            }\n\t            offset0 += rowSize;\n\t          }\n\t          break;\n\t        case 2:\n\t          for (i = 0; i < height; i++) {\n\t            mask = mask0;\n\t            offset = offset0;\n\t            for (j = 0; j < width; j++) {\n\t              if (bitmap[i][j]) {\n\t                buffer[offset] ^= mask;\n\t              }\n\t              mask >>= 1;\n\t              if (!mask) {\n\t                mask = 128;\n\t                offset++;\n\t              }\n\t            }\n\t            offset0 += rowSize;\n\t          }\n\t          break;\n\t        default:\n\t          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n\t      }\n\t    },\n\t    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n\t      var regionInfo = region.info;\n\t      var decodingContext = new DecodingContext(data, start, end);\n\t      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n\t      this.drawBitmap(regionInfo, bitmap);\n\t    },\n\t    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n\t      this.onImmediateGenericRegion.apply(this, arguments);\n\t    },\n\t    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n\t      var huffmanTables;\n\t      if (dictionary.huffman) {\n\t        throw new Jbig2Error('huffman is not supported');\n\t      }\n\t      var symbols = this.symbols;\n\t      if (!symbols) {\n\t        this.symbols = symbols = {};\n\t      }\n\t      var inputSymbols = [];\n\t      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n\t        inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n\t      }\n\t      var decodingContext = new DecodingContext(data, start, end);\n\t      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext);\n\t    },\n\t    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n\t      var regionInfo = region.info;\n\t      var huffmanTables;\n\t      var symbols = this.symbols;\n\t      var inputSymbols = [];\n\t      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n\t        inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n\t      }\n\t      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\n\t      var decodingContext = new DecodingContext(data, start, end);\n\t      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext);\n\t      this.drawBitmap(regionInfo, bitmap);\n\t    },\n\t    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n\t      this.onImmediateTextRegion.apply(this, arguments);\n\t    },\n\t    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\n\t      var patterns = this.patterns;\n\t      if (!patterns) {\n\t        this.patterns = patterns = {};\n\t      }\n\t      var decodingContext = new DecodingContext(data, start, end);\n\t      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\n\t    },\n\t    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n\t      var patterns = this.patterns[referredSegments[0]];\n\t      var regionInfo = region.info;\n\t      var decodingContext = new DecodingContext(data, start, end);\n\t      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\n\t      this.drawBitmap(regionInfo, bitmap);\n\t    },\n\t    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\n\t      this.onImmediateHalftoneRegion.apply(this, arguments);\n\t    }\n\t  };\n\t  function Jbig2Image() {}\n\t  Jbig2Image.prototype = {\n\t    parseChunks: function Jbig2Image_parseChunks(chunks) {\n\t      return parseJbig2Chunks(chunks);\n\t    }\n\t  };\n\t  return Jbig2Image;\n\t}();\n\texports.Jbig2Image = Jbig2Image;\n\t\n\t/***/ }),\n\t/* 134 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar _parser = __w_pdfjs_require__(34);\n\t\n\tvar _stream = __w_pdfjs_require__(5);\n\t\n\tvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\n\tvar CMap = function CMapClosure() {\n\t  function CMap(builtInCMap) {\n\t    this.codespaceRanges = [[], [], [], []];\n\t    this.numCodespaceRanges = 0;\n\t    this._map = [];\n\t    this.name = '';\n\t    this.vertical = false;\n\t    this.useCMap = null;\n\t    this.builtInCMap = builtInCMap;\n\t  }\n\t  CMap.prototype = {\n\t    addCodespaceRange: function addCodespaceRange(n, low, high) {\n\t      this.codespaceRanges[n - 1].push(low, high);\n\t      this.numCodespaceRanges++;\n\t    },\n\t    mapCidRange: function mapCidRange(low, high, dstLow) {\n\t      while (low <= high) {\n\t        this._map[low++] = dstLow++;\n\t      }\n\t    },\n\t    mapBfRange: function mapBfRange(low, high, dstLow) {\n\t      var lastByte = dstLow.length - 1;\n\t      while (low <= high) {\n\t        this._map[low++] = dstLow;\n\t        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n\t      }\n\t    },\n\t    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n\t      var i = 0,\n\t          ii = array.length;\n\t      while (low <= high && i < ii) {\n\t        this._map[low] = array[i++];\n\t        ++low;\n\t      }\n\t    },\n\t    mapOne: function mapOne(src, dst) {\n\t      this._map[src] = dst;\n\t    },\n\t    lookup: function lookup(code) {\n\t      return this._map[code];\n\t    },\n\t    contains: function contains(code) {\n\t      return this._map[code] !== undefined;\n\t    },\n\t    forEach: function forEach(callback) {\n\t      var map = this._map;\n\t      var length = map.length;\n\t      if (length <= 0x10000) {\n\t        for (var i = 0; i < length; i++) {\n\t          if (map[i] !== undefined) {\n\t            callback(i, map[i]);\n\t          }\n\t        }\n\t      } else {\n\t        for (var _i in map) {\n\t          callback(_i, map[_i]);\n\t        }\n\t      }\n\t    },\n\t    charCodeOf: function charCodeOf(value) {\n\t      var map = this._map;\n\t      if (map.length <= 0x10000) {\n\t        return map.indexOf(value);\n\t      }\n\t      for (var charCode in map) {\n\t        if (map[charCode] === value) {\n\t          return charCode | 0;\n\t        }\n\t      }\n\t      return -1;\n\t    },\n\t    getMap: function getMap() {\n\t      return this._map;\n\t    },\n\t    readCharCode: function readCharCode(str, offset, out) {\n\t      var c = 0;\n\t      var codespaceRanges = this.codespaceRanges;\n\t      var codespaceRangesLen = this.codespaceRanges.length;\n\t      for (var n = 0; n < codespaceRangesLen; n++) {\n\t        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n\t        var codespaceRange = codespaceRanges[n];\n\t        for (var k = 0, kk = codespaceRange.length; k < kk;) {\n\t          var low = codespaceRange[k++];\n\t          var high = codespaceRange[k++];\n\t          if (c >= low && c <= high) {\n\t            out.charcode = c;\n\t            out.length = n + 1;\n\t            return;\n\t          }\n\t        }\n\t      }\n\t      out.charcode = 0;\n\t      out.length = 1;\n\t    },\n\t\n\t    get length() {\n\t      return this._map.length;\n\t    },\n\t    get isIdentityCMap() {\n\t      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n\t        return false;\n\t      }\n\t      if (this._map.length !== 0x10000) {\n\t        return false;\n\t      }\n\t      for (var i = 0; i < 0x10000; i++) {\n\t        if (this._map[i] !== i) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t  };\n\t  return CMap;\n\t}();\n\tvar IdentityCMap = function IdentityCMapClosure() {\n\t  function IdentityCMap(vertical, n) {\n\t    CMap.call(this);\n\t    this.vertical = vertical;\n\t    this.addCodespaceRange(n, 0, 0xffff);\n\t  }\n\t  _util.Util.inherit(IdentityCMap, CMap, {});\n\t  IdentityCMap.prototype = {\n\t    addCodespaceRange: CMap.prototype.addCodespaceRange,\n\t    mapCidRange: function mapCidRange(low, high, dstLow) {\n\t      throw new Error('should not call mapCidRange');\n\t    },\n\t    mapBfRange: function mapBfRange(low, high, dstLow) {\n\t      throw new Error('should not call mapBfRange');\n\t    },\n\t    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n\t      throw new Error('should not call mapBfRangeToArray');\n\t    },\n\t    mapOne: function mapOne(src, dst) {\n\t      throw new Error('should not call mapCidOne');\n\t    },\n\t    lookup: function lookup(code) {\n\t      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\n\t    },\n\t    contains: function contains(code) {\n\t      return Number.isInteger(code) && code <= 0xffff;\n\t    },\n\t    forEach: function forEach(callback) {\n\t      for (var i = 0; i <= 0xffff; i++) {\n\t        callback(i, i);\n\t      }\n\t    },\n\t    charCodeOf: function charCodeOf(value) {\n\t      return Number.isInteger(value) && value <= 0xffff ? value : -1;\n\t    },\n\t    getMap: function getMap() {\n\t      var map = new Array(0x10000);\n\t      for (var i = 0; i <= 0xffff; i++) {\n\t        map[i] = i;\n\t      }\n\t      return map;\n\t    },\n\t\n\t    readCharCode: CMap.prototype.readCharCode,\n\t    get length() {\n\t      return 0x10000;\n\t    },\n\t    get isIdentityCMap() {\n\t      throw new Error('should not access .isIdentityCMap');\n\t    }\n\t  };\n\t  return IdentityCMap;\n\t}();\n\tvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n\t  function hexToInt(a, size) {\n\t    var n = 0;\n\t    for (var i = 0; i <= size; i++) {\n\t      n = n << 8 | a[i];\n\t    }\n\t    return n >>> 0;\n\t  }\n\t  function hexToStr(a, size) {\n\t    if (size === 1) {\n\t      return String.fromCharCode(a[0], a[1]);\n\t    }\n\t    if (size === 3) {\n\t      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n\t    }\n\t    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n\t  }\n\t  function addHex(a, b, size) {\n\t    var c = 0;\n\t    for (var i = size; i >= 0; i--) {\n\t      c += a[i] + b[i];\n\t      a[i] = c & 255;\n\t      c >>= 8;\n\t    }\n\t  }\n\t  function incHex(a, size) {\n\t    var c = 1;\n\t    for (var i = size; i >= 0 && c > 0; i--) {\n\t      c += a[i];\n\t      a[i] = c & 255;\n\t      c >>= 8;\n\t    }\n\t  }\n\t  var MAX_NUM_SIZE = 16;\n\t  var MAX_ENCODED_NUM_SIZE = 19;\n\t  function BinaryCMapStream(data) {\n\t    this.buffer = data;\n\t    this.pos = 0;\n\t    this.end = data.length;\n\t    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n\t  }\n\t  BinaryCMapStream.prototype = {\n\t    readByte: function readByte() {\n\t      if (this.pos >= this.end) {\n\t        return -1;\n\t      }\n\t      return this.buffer[this.pos++];\n\t    },\n\t    readNumber: function readNumber() {\n\t      var n = 0;\n\t      var last;\n\t      do {\n\t        var b = this.readByte();\n\t        if (b < 0) {\n\t          throw new _util.FormatError('unexpected EOF in bcmap');\n\t        }\n\t        last = !(b & 0x80);\n\t        n = n << 7 | b & 0x7F;\n\t      } while (!last);\n\t      return n;\n\t    },\n\t    readSigned: function readSigned() {\n\t      var n = this.readNumber();\n\t      return n & 1 ? ~(n >>> 1) : n >>> 1;\n\t    },\n\t    readHex: function readHex(num, size) {\n\t      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n\t      this.pos += size + 1;\n\t    },\n\t    readHexNumber: function readHexNumber(num, size) {\n\t      var last;\n\t      var stack = this.tmpBuf,\n\t          sp = 0;\n\t      do {\n\t        var b = this.readByte();\n\t        if (b < 0) {\n\t          throw new _util.FormatError('unexpected EOF in bcmap');\n\t        }\n\t        last = !(b & 0x80);\n\t        stack[sp++] = b & 0x7F;\n\t      } while (!last);\n\t      var i = size,\n\t          buffer = 0,\n\t          bufferSize = 0;\n\t      while (i >= 0) {\n\t        while (bufferSize < 8 && stack.length > 0) {\n\t          buffer = stack[--sp] << bufferSize | buffer;\n\t          bufferSize += 7;\n\t        }\n\t        num[i] = buffer & 255;\n\t        i--;\n\t        buffer >>= 8;\n\t        bufferSize -= 8;\n\t      }\n\t    },\n\t    readHexSigned: function readHexSigned(num, size) {\n\t      this.readHexNumber(num, size);\n\t      var sign = num[size] & 1 ? 255 : 0;\n\t      var c = 0;\n\t      for (var i = 0; i <= size; i++) {\n\t        c = (c & 1) << 8 | num[i];\n\t        num[i] = c >> 1 ^ sign;\n\t      }\n\t    },\n\t    readString: function readString() {\n\t      var len = this.readNumber();\n\t      var s = '';\n\t      for (var i = 0; i < len; i++) {\n\t        s += String.fromCharCode(this.readNumber());\n\t      }\n\t      return s;\n\t    }\n\t  };\n\t  function processBinaryCMap(data, cMap, extend) {\n\t    return new Promise(function (resolve, reject) {\n\t      var stream = new BinaryCMapStream(data);\n\t      var header = stream.readByte();\n\t      cMap.vertical = !!(header & 1);\n\t      var useCMap = null;\n\t      var start = new Uint8Array(MAX_NUM_SIZE);\n\t      var end = new Uint8Array(MAX_NUM_SIZE);\n\t      var char = new Uint8Array(MAX_NUM_SIZE);\n\t      var charCode = new Uint8Array(MAX_NUM_SIZE);\n\t      var tmp = new Uint8Array(MAX_NUM_SIZE);\n\t      var code;\n\t      var b;\n\t      while ((b = stream.readByte()) >= 0) {\n\t        var type = b >> 5;\n\t        if (type === 7) {\n\t          switch (b & 0x1F) {\n\t            case 0:\n\t              stream.readString();\n\t              break;\n\t            case 1:\n\t              useCMap = stream.readString();\n\t              break;\n\t          }\n\t          continue;\n\t        }\n\t        var sequence = !!(b & 0x10);\n\t        var dataSize = b & 15;\n\t        if (dataSize + 1 > MAX_NUM_SIZE) {\n\t          throw new Error('processBinaryCMap: Invalid dataSize.');\n\t        }\n\t        var ucs2DataSize = 1;\n\t        var subitemsCount = stream.readNumber();\n\t        var i;\n\t        switch (type) {\n\t          case 0:\n\t            stream.readHex(start, dataSize);\n\t            stream.readHexNumber(end, dataSize);\n\t            addHex(end, start, dataSize);\n\t            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n\t            for (i = 1; i < subitemsCount; i++) {\n\t              incHex(end, dataSize);\n\t              stream.readHexNumber(start, dataSize);\n\t              addHex(start, end, dataSize);\n\t              stream.readHexNumber(end, dataSize);\n\t              addHex(end, start, dataSize);\n\t              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n\t            }\n\t            break;\n\t          case 1:\n\t            stream.readHex(start, dataSize);\n\t            stream.readHexNumber(end, dataSize);\n\t            addHex(end, start, dataSize);\n\t            code = stream.readNumber();\n\t            for (i = 1; i < subitemsCount; i++) {\n\t              incHex(end, dataSize);\n\t              stream.readHexNumber(start, dataSize);\n\t              addHex(start, end, dataSize);\n\t              stream.readHexNumber(end, dataSize);\n\t              addHex(end, start, dataSize);\n\t              code = stream.readNumber();\n\t            }\n\t            break;\n\t          case 2:\n\t            stream.readHex(char, dataSize);\n\t            code = stream.readNumber();\n\t            cMap.mapOne(hexToInt(char, dataSize), code);\n\t            for (i = 1; i < subitemsCount; i++) {\n\t              incHex(char, dataSize);\n\t              if (!sequence) {\n\t                stream.readHexNumber(tmp, dataSize);\n\t                addHex(char, tmp, dataSize);\n\t              }\n\t              code = stream.readSigned() + (code + 1);\n\t              cMap.mapOne(hexToInt(char, dataSize), code);\n\t            }\n\t            break;\n\t          case 3:\n\t            stream.readHex(start, dataSize);\n\t            stream.readHexNumber(end, dataSize);\n\t            addHex(end, start, dataSize);\n\t            code = stream.readNumber();\n\t            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n\t            for (i = 1; i < subitemsCount; i++) {\n\t              incHex(end, dataSize);\n\t              if (!sequence) {\n\t                stream.readHexNumber(start, dataSize);\n\t                addHex(start, end, dataSize);\n\t              } else {\n\t                start.set(end);\n\t              }\n\t              stream.readHexNumber(end, dataSize);\n\t              addHex(end, start, dataSize);\n\t              code = stream.readNumber();\n\t              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n\t            }\n\t            break;\n\t          case 4:\n\t            stream.readHex(char, ucs2DataSize);\n\t            stream.readHex(charCode, dataSize);\n\t            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n\t            for (i = 1; i < subitemsCount; i++) {\n\t              incHex(char, ucs2DataSize);\n\t              if (!sequence) {\n\t                stream.readHexNumber(tmp, ucs2DataSize);\n\t                addHex(char, tmp, ucs2DataSize);\n\t              }\n\t              incHex(charCode, dataSize);\n\t              stream.readHexSigned(tmp, dataSize);\n\t              addHex(charCode, tmp, dataSize);\n\t              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n\t            }\n\t            break;\n\t          case 5:\n\t            stream.readHex(start, ucs2DataSize);\n\t            stream.readHexNumber(end, ucs2DataSize);\n\t            addHex(end, start, ucs2DataSize);\n\t            stream.readHex(charCode, dataSize);\n\t            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n\t            for (i = 1; i < subitemsCount; i++) {\n\t              incHex(end, ucs2DataSize);\n\t              if (!sequence) {\n\t                stream.readHexNumber(start, ucs2DataSize);\n\t                addHex(start, end, ucs2DataSize);\n\t              } else {\n\t                start.set(end);\n\t              }\n\t              stream.readHexNumber(end, ucs2DataSize);\n\t              addHex(end, start, ucs2DataSize);\n\t              stream.readHex(charCode, dataSize);\n\t              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n\t            }\n\t            break;\n\t          default:\n\t            reject(new Error('processBinaryCMap: Unknown type: ' + type));\n\t            return;\n\t        }\n\t      }\n\t      if (useCMap) {\n\t        resolve(extend(useCMap));\n\t        return;\n\t      }\n\t      resolve(cMap);\n\t    });\n\t  }\n\t  function BinaryCMapReader() {}\n\t  BinaryCMapReader.prototype = { process: processBinaryCMap };\n\t  return BinaryCMapReader;\n\t}();\n\tvar CMapFactory = function CMapFactoryClosure() {\n\t  function strToInt(str) {\n\t    var a = 0;\n\t    for (var i = 0; i < str.length; i++) {\n\t      a = a << 8 | str.charCodeAt(i);\n\t    }\n\t    return a >>> 0;\n\t  }\n\t  function expectString(obj) {\n\t    if (!(0, _util.isString)(obj)) {\n\t      throw new _util.FormatError('Malformed CMap: expected string.');\n\t    }\n\t  }\n\t  function expectInt(obj) {\n\t    if (!Number.isInteger(obj)) {\n\t      throw new _util.FormatError('Malformed CMap: expected int.');\n\t    }\n\t  }\n\t  function parseBfChar(cMap, lexer) {\n\t    while (true) {\n\t      var obj = lexer.getObj();\n\t      if ((0, _primitives.isEOF)(obj)) {\n\t        break;\n\t      }\n\t      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\n\t        return;\n\t      }\n\t      expectString(obj);\n\t      var src = strToInt(obj);\n\t      obj = lexer.getObj();\n\t      expectString(obj);\n\t      var dst = obj;\n\t      cMap.mapOne(src, dst);\n\t    }\n\t  }\n\t  function parseBfRange(cMap, lexer) {\n\t    while (true) {\n\t      var obj = lexer.getObj();\n\t      if ((0, _primitives.isEOF)(obj)) {\n\t        break;\n\t      }\n\t      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\n\t        return;\n\t      }\n\t      expectString(obj);\n\t      var low = strToInt(obj);\n\t      obj = lexer.getObj();\n\t      expectString(obj);\n\t      var high = strToInt(obj);\n\t      obj = lexer.getObj();\n\t      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\n\t        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\n\t        cMap.mapBfRange(low, high, dstLow);\n\t      } else if ((0, _primitives.isCmd)(obj, '[')) {\n\t        obj = lexer.getObj();\n\t        var array = [];\n\t        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\n\t          array.push(obj);\n\t          obj = lexer.getObj();\n\t        }\n\t        cMap.mapBfRangeToArray(low, high, array);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    throw new _util.FormatError('Invalid bf range.');\n\t  }\n\t  function parseCidChar(cMap, lexer) {\n\t    while (true) {\n\t      var obj = lexer.getObj();\n\t      if ((0, _primitives.isEOF)(obj)) {\n\t        break;\n\t      }\n\t      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\n\t        return;\n\t      }\n\t      expectString(obj);\n\t      var src = strToInt(obj);\n\t      obj = lexer.getObj();\n\t      expectInt(obj);\n\t      var dst = obj;\n\t      cMap.mapOne(src, dst);\n\t    }\n\t  }\n\t  function parseCidRange(cMap, lexer) {\n\t    while (true) {\n\t      var obj = lexer.getObj();\n\t      if ((0, _primitives.isEOF)(obj)) {\n\t        break;\n\t      }\n\t      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\n\t        return;\n\t      }\n\t      expectString(obj);\n\t      var low = strToInt(obj);\n\t      obj = lexer.getObj();\n\t      expectString(obj);\n\t      var high = strToInt(obj);\n\t      obj = lexer.getObj();\n\t      expectInt(obj);\n\t      var dstLow = obj;\n\t      cMap.mapCidRange(low, high, dstLow);\n\t    }\n\t  }\n\t  function parseCodespaceRange(cMap, lexer) {\n\t    while (true) {\n\t      var obj = lexer.getObj();\n\t      if ((0, _primitives.isEOF)(obj)) {\n\t        break;\n\t      }\n\t      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\n\t        return;\n\t      }\n\t      if (!(0, _util.isString)(obj)) {\n\t        break;\n\t      }\n\t      var low = strToInt(obj);\n\t      obj = lexer.getObj();\n\t      if (!(0, _util.isString)(obj)) {\n\t        break;\n\t      }\n\t      var high = strToInt(obj);\n\t      cMap.addCodespaceRange(obj.length, low, high);\n\t    }\n\t    throw new _util.FormatError('Invalid codespace range.');\n\t  }\n\t  function parseWMode(cMap, lexer) {\n\t    var obj = lexer.getObj();\n\t    if (Number.isInteger(obj)) {\n\t      cMap.vertical = !!obj;\n\t    }\n\t  }\n\t  function parseCMapName(cMap, lexer) {\n\t    var obj = lexer.getObj();\n\t    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\n\t      cMap.name = obj.name;\n\t    }\n\t  }\n\t  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n\t    var previous;\n\t    var embededUseCMap;\n\t    objLoop: while (true) {\n\t      try {\n\t        var obj = lexer.getObj();\n\t        if ((0, _primitives.isEOF)(obj)) {\n\t          break;\n\t        } else if ((0, _primitives.isName)(obj)) {\n\t          if (obj.name === 'WMode') {\n\t            parseWMode(cMap, lexer);\n\t          } else if (obj.name === 'CMapName') {\n\t            parseCMapName(cMap, lexer);\n\t          }\n\t          previous = obj;\n\t        } else if ((0, _primitives.isCmd)(obj)) {\n\t          switch (obj.cmd) {\n\t            case 'endcmap':\n\t              break objLoop;\n\t            case 'usecmap':\n\t              if ((0, _primitives.isName)(previous)) {\n\t                embededUseCMap = previous.name;\n\t              }\n\t              break;\n\t            case 'begincodespacerange':\n\t              parseCodespaceRange(cMap, lexer);\n\t              break;\n\t            case 'beginbfchar':\n\t              parseBfChar(cMap, lexer);\n\t              break;\n\t            case 'begincidchar':\n\t              parseCidChar(cMap, lexer);\n\t              break;\n\t            case 'beginbfrange':\n\t              parseBfRange(cMap, lexer);\n\t              break;\n\t            case 'begincidrange':\n\t              parseCidRange(cMap, lexer);\n\t              break;\n\t          }\n\t        }\n\t      } catch (ex) {\n\t        if (ex instanceof _util.MissingDataException) {\n\t          throw ex;\n\t        }\n\t        (0, _util.warn)('Invalid cMap data: ' + ex);\n\t        continue;\n\t      }\n\t    }\n\t    if (!useCMap && embededUseCMap) {\n\t      useCMap = embededUseCMap;\n\t    }\n\t    if (useCMap) {\n\t      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n\t    }\n\t    return Promise.resolve(cMap);\n\t  }\n\t  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n\t    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n\t      cMap.useCMap = newCMap;\n\t      if (cMap.numCodespaceRanges === 0) {\n\t        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n\t        for (var i = 0; i < useCodespaceRanges.length; i++) {\n\t          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n\t        }\n\t        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n\t      }\n\t      cMap.useCMap.forEach(function (key, value) {\n\t        if (!cMap.contains(key)) {\n\t          cMap.mapOne(key, cMap.useCMap.lookup(key));\n\t        }\n\t      });\n\t      return cMap;\n\t    });\n\t  }\n\t  function createBuiltInCMap(name, fetchBuiltInCMap) {\n\t    if (name === 'Identity-H') {\n\t      return Promise.resolve(new IdentityCMap(false, 2));\n\t    } else if (name === 'Identity-V') {\n\t      return Promise.resolve(new IdentityCMap(true, 2));\n\t    }\n\t    if (BUILT_IN_CMAPS.indexOf(name) === -1) {\n\t      return Promise.reject(new Error('Unknown CMap name: ' + name));\n\t    }\n\t    if (!fetchBuiltInCMap) {\n\t      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\n\t    }\n\t    return fetchBuiltInCMap(name).then(function (data) {\n\t      var cMapData = data.cMapData,\n\t          compressionType = data.compressionType;\n\t      var cMap = new CMap(true);\n\t      if (compressionType === _util.CMapCompressionType.BINARY) {\n\t        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n\t          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n\t        });\n\t      }\n\t      if (compressionType === _util.CMapCompressionType.NONE) {\n\t        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\n\t        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n\t      }\n\t      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\n\t    });\n\t  }\n\t  return {\n\t    create: function create(params) {\n\t      var encoding = params.encoding;\n\t      var fetchBuiltInCMap = params.fetchBuiltInCMap;\n\t      var useCMap = params.useCMap;\n\t      if ((0, _primitives.isName)(encoding)) {\n\t        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n\t      } else if ((0, _primitives.isStream)(encoding)) {\n\t        var cMap = new CMap();\n\t        var lexer = new _parser.Lexer(encoding);\n\t        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n\t          if (parsedCMap.isIdentityCMap) {\n\t            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n\t          }\n\t          return parsedCMap;\n\t        });\n\t      }\n\t      return Promise.reject(new Error('Encoding required.'));\n\t    }\n\t  };\n\t}();\n\texports.CMap = CMap;\n\texports.IdentityCMap = IdentityCMap;\n\texports.CMapFactory = CMapFactory;\n\t\n\t/***/ }),\n\t/* 135 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _cff_parser = __w_pdfjs_require__(78);\n\t\n\tvar _glyphlist = __w_pdfjs_require__(47);\n\t\n\tvar _encodings = __w_pdfjs_require__(28);\n\t\n\tvar _standard_fonts = __w_pdfjs_require__(79);\n\t\n\tvar _unicode = __w_pdfjs_require__(80);\n\t\n\tvar _font_renderer = __w_pdfjs_require__(137);\n\t\n\tvar _stream = __w_pdfjs_require__(5);\n\t\n\tvar _type1_parser = __w_pdfjs_require__(138);\n\t\n\tvar PRIVATE_USE_OFFSET_START = 0xE000;\n\tvar PRIVATE_USE_OFFSET_END = 0xF8FF;\n\tvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\n\tvar PDF_GLYPH_SPACE_UNITS = 1000;\n\tvar SEAC_ANALYSIS_ENABLED = false;\n\tvar FontFlags = {\n\t  FixedPitch: 1,\n\t  Serif: 2,\n\t  Symbolic: 4,\n\t  Script: 8,\n\t  Nonsymbolic: 32,\n\t  Italic: 64,\n\t  AllCap: 65536,\n\t  SmallCap: 131072,\n\t  ForceBold: 262144\n\t};\n\tvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\n\tfunction adjustWidths(properties) {\n\t  if (!properties.fontMatrix) {\n\t    return;\n\t  }\n\t  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\n\t    return;\n\t  }\n\t  var scale = 0.001 / properties.fontMatrix[0];\n\t  var glyphsWidths = properties.widths;\n\t  for (var glyph in glyphsWidths) {\n\t    glyphsWidths[glyph] *= scale;\n\t  }\n\t  properties.defaultWidth *= scale;\n\t}\n\tfunction adjustToUnicode(properties, builtInEncoding) {\n\t  if (properties.hasIncludedToUnicodeMap) {\n\t    return;\n\t  }\n\t  if (properties.hasEncoding) {\n\t    return;\n\t  }\n\t  if (builtInEncoding === properties.defaultEncoding) {\n\t    return;\n\t  }\n\t  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n\t    return;\n\t  }\n\t  var toUnicode = [],\n\t      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n\t  for (var charCode in builtInEncoding) {\n\t    var glyphName = builtInEncoding[charCode];\n\t    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n\t    if (unicode !== -1) {\n\t      toUnicode[charCode] = String.fromCharCode(unicode);\n\t    }\n\t  }\n\t  properties.toUnicode.amend(toUnicode);\n\t}\n\tfunction getFontType(type, subtype) {\n\t  switch (type) {\n\t    case 'Type1':\n\t      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\n\t    case 'CIDFontType0':\n\t      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\n\t    case 'OpenType':\n\t      return _util.FontType.OPENTYPE;\n\t    case 'TrueType':\n\t      return _util.FontType.TRUETYPE;\n\t    case 'CIDFontType2':\n\t      return _util.FontType.CIDFONTTYPE2;\n\t    case 'MMType1':\n\t      return _util.FontType.MMTYPE1;\n\t    case 'Type0':\n\t      return _util.FontType.TYPE0;\n\t    default:\n\t      return _util.FontType.UNKNOWN;\n\t  }\n\t}\n\tfunction recoverGlyphName(name, glyphsUnicodeMap) {\n\t  if (glyphsUnicodeMap[name] !== undefined) {\n\t    return name;\n\t  }\n\t  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\n\t  if (unicode !== -1) {\n\t    for (var key in glyphsUnicodeMap) {\n\t      if (glyphsUnicodeMap[key] === unicode) {\n\t        return key;\n\t      }\n\t    }\n\t  }\n\t  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\n\t  return name;\n\t}\n\tvar Glyph = function GlyphClosure() {\n\t  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n\t    this.fontChar = fontChar;\n\t    this.unicode = unicode;\n\t    this.accent = accent;\n\t    this.width = width;\n\t    this.vmetric = vmetric;\n\t    this.operatorListId = operatorListId;\n\t    this.isSpace = isSpace;\n\t    this.isInFont = isInFont;\n\t  }\n\t  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n\t    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n\t  };\n\t  return Glyph;\n\t}();\n\tvar ToUnicodeMap = function ToUnicodeMapClosure() {\n\t  function ToUnicodeMap(cmap) {\n\t    this._map = cmap;\n\t  }\n\t  ToUnicodeMap.prototype = {\n\t    get length() {\n\t      return this._map.length;\n\t    },\n\t    forEach: function forEach(callback) {\n\t      for (var charCode in this._map) {\n\t        callback(charCode, this._map[charCode].charCodeAt(0));\n\t      }\n\t    },\n\t    has: function has(i) {\n\t      return this._map[i] !== undefined;\n\t    },\n\t    get: function get(i) {\n\t      return this._map[i];\n\t    },\n\t    charCodeOf: function charCodeOf(value) {\n\t      var map = this._map;\n\t      if (map.length <= 0x10000) {\n\t        return map.indexOf(value);\n\t      }\n\t      for (var charCode in map) {\n\t        if (map[charCode] === value) {\n\t          return charCode | 0;\n\t        }\n\t      }\n\t      return -1;\n\t    },\n\t    amend: function amend(map) {\n\t      for (var charCode in map) {\n\t        this._map[charCode] = map[charCode];\n\t      }\n\t    }\n\t  };\n\t  return ToUnicodeMap;\n\t}();\n\tvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n\t  function IdentityToUnicodeMap(firstChar, lastChar) {\n\t    this.firstChar = firstChar;\n\t    this.lastChar = lastChar;\n\t  }\n\t  IdentityToUnicodeMap.prototype = {\n\t    get length() {\n\t      return this.lastChar + 1 - this.firstChar;\n\t    },\n\t    forEach: function forEach(callback) {\n\t      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n\t        callback(i, i);\n\t      }\n\t    },\n\t    has: function has(i) {\n\t      return this.firstChar <= i && i <= this.lastChar;\n\t    },\n\t    get: function get(i) {\n\t      if (this.firstChar <= i && i <= this.lastChar) {\n\t        return String.fromCharCode(i);\n\t      }\n\t      return undefined;\n\t    },\n\t    charCodeOf: function charCodeOf(v) {\n\t      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n\t    },\n\t    amend: function amend(map) {\n\t      throw new Error('Should not call amend()');\n\t    }\n\t  };\n\t  return IdentityToUnicodeMap;\n\t}();\n\tvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n\t  function writeInt16(dest, offset, num) {\n\t    dest[offset] = num >> 8 & 0xFF;\n\t    dest[offset + 1] = num & 0xFF;\n\t  }\n\t  function writeInt32(dest, offset, num) {\n\t    dest[offset] = num >> 24 & 0xFF;\n\t    dest[offset + 1] = num >> 16 & 0xFF;\n\t    dest[offset + 2] = num >> 8 & 0xFF;\n\t    dest[offset + 3] = num & 0xFF;\n\t  }\n\t  function writeData(dest, offset, data) {\n\t    var i, ii;\n\t    if (data instanceof Uint8Array) {\n\t      dest.set(data, offset);\n\t    } else if (typeof data === 'string') {\n\t      for (i = 0, ii = data.length; i < ii; i++) {\n\t        dest[offset++] = data.charCodeAt(i) & 0xFF;\n\t      }\n\t    } else {\n\t      for (i = 0, ii = data.length; i < ii; i++) {\n\t        dest[offset++] = data[i] & 0xFF;\n\t      }\n\t    }\n\t  }\n\t  function OpenTypeFileBuilder(sfnt) {\n\t    this.sfnt = sfnt;\n\t    this.tables = Object.create(null);\n\t  }\n\t  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n\t    var maxPower2 = 1,\n\t        log2 = 0;\n\t    while ((maxPower2 ^ entriesCount) > maxPower2) {\n\t      maxPower2 <<= 1;\n\t      log2++;\n\t    }\n\t    var searchRange = maxPower2 * entrySize;\n\t    return {\n\t      range: searchRange,\n\t      entry: log2,\n\t      rangeShift: entrySize * entriesCount - searchRange\n\t    };\n\t  };\n\t  var OTF_HEADER_SIZE = 12;\n\t  var OTF_TABLE_ENTRY_SIZE = 16;\n\t  OpenTypeFileBuilder.prototype = {\n\t    toArray: function OpenTypeFileBuilder_toArray() {\n\t      var sfnt = this.sfnt;\n\t      var tables = this.tables;\n\t      var tablesNames = Object.keys(tables);\n\t      tablesNames.sort();\n\t      var numTables = tablesNames.length;\n\t      var i, j, jj, table, tableName;\n\t      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n\t      var tableOffsets = [offset];\n\t      for (i = 0; i < numTables; i++) {\n\t        table = tables[tablesNames[i]];\n\t        var paddedLength = (table.length + 3 & ~3) >>> 0;\n\t        offset += paddedLength;\n\t        tableOffsets.push(offset);\n\t      }\n\t      var file = new Uint8Array(offset);\n\t      for (i = 0; i < numTables; i++) {\n\t        table = tables[tablesNames[i]];\n\t        writeData(file, tableOffsets[i], table);\n\t      }\n\t      if (sfnt === 'true') {\n\t        sfnt = (0, _util.string32)(0x00010000);\n\t      }\n\t      file[0] = sfnt.charCodeAt(0) & 0xFF;\n\t      file[1] = sfnt.charCodeAt(1) & 0xFF;\n\t      file[2] = sfnt.charCodeAt(2) & 0xFF;\n\t      file[3] = sfnt.charCodeAt(3) & 0xFF;\n\t      writeInt16(file, 4, numTables);\n\t      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n\t      writeInt16(file, 6, searchParams.range);\n\t      writeInt16(file, 8, searchParams.entry);\n\t      writeInt16(file, 10, searchParams.rangeShift);\n\t      offset = OTF_HEADER_SIZE;\n\t      for (i = 0; i < numTables; i++) {\n\t        tableName = tablesNames[i];\n\t        file[offset] = tableName.charCodeAt(0) & 0xFF;\n\t        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n\t        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n\t        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n\t        var checksum = 0;\n\t        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n\t          var quad = (0, _util.readUint32)(file, j);\n\t          checksum = checksum + quad >>> 0;\n\t        }\n\t        writeInt32(file, offset + 4, checksum);\n\t        writeInt32(file, offset + 8, tableOffsets[i]);\n\t        writeInt32(file, offset + 12, tables[tableName].length);\n\t        offset += OTF_TABLE_ENTRY_SIZE;\n\t      }\n\t      return file;\n\t    },\n\t    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n\t      if (tag in this.tables) {\n\t        throw new Error('Table ' + tag + ' already exists');\n\t      }\n\t      this.tables[tag] = data;\n\t    }\n\t  };\n\t  return OpenTypeFileBuilder;\n\t}();\n\tvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xFFF0, 0x10000]);\n\tvar Font = function FontClosure() {\n\t  function Font(name, file, properties) {\n\t    var charCode;\n\t    this.name = name;\n\t    this.loadedName = properties.loadedName;\n\t    this.isType3Font = properties.isType3Font;\n\t    this.sizes = [];\n\t    this.missingFile = false;\n\t    this.glyphCache = Object.create(null);\n\t    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n\t    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n\t    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n\t    var type = properties.type;\n\t    var subtype = properties.subtype;\n\t    this.type = type;\n\t    this.subtype = subtype;\n\t    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n\t    this.differences = properties.differences;\n\t    this.widths = properties.widths;\n\t    this.defaultWidth = properties.defaultWidth;\n\t    this.composite = properties.composite;\n\t    this.wideChars = properties.wideChars;\n\t    this.cMap = properties.cMap;\n\t    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n\t    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n\t    this.fontMatrix = properties.fontMatrix;\n\t    this.bbox = properties.bbox;\n\t    this.defaultEncoding = properties.defaultEncoding;\n\t    this.toUnicode = properties.toUnicode;\n\t    this.toFontChar = [];\n\t    if (properties.type === 'Type3') {\n\t      for (charCode = 0; charCode < 256; charCode++) {\n\t        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n\t      }\n\t      this.fontType = _util.FontType.TYPE3;\n\t      return;\n\t    }\n\t    this.cidEncoding = properties.cidEncoding;\n\t    this.vertical = properties.vertical;\n\t    if (this.vertical) {\n\t      this.vmetrics = properties.vmetrics;\n\t      this.defaultVMetrics = properties.defaultVMetrics;\n\t    }\n\t    if (!file || file.isEmpty) {\n\t      if (file) {\n\t        (0, _util.warn)('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n\t      }\n\t      this.fallbackToSystemFont();\n\t      return;\n\t    }\n\t    if (subtype === 'Type1C') {\n\t      if (type !== 'Type1' && type !== 'MMType1') {\n\t        if (isTrueTypeFile(file)) {\n\t          subtype = 'TrueType';\n\t        } else {\n\t          type = 'Type1';\n\t        }\n\t      } else if (isOpenTypeFile(file)) {\n\t        subtype = 'OpenType';\n\t      }\n\t    }\n\t    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n\t      type = 'CIDFontType0';\n\t    }\n\t    if (type === 'CIDFontType0') {\n\t      if (isType1File(file)) {\n\t        subtype = 'CIDFontType0';\n\t      } else if (isOpenTypeFile(file)) {\n\t        subtype = 'OpenType';\n\t      } else {\n\t        subtype = 'CIDFontType0C';\n\t      }\n\t    }\n\t    if (subtype === 'OpenType' && type !== 'OpenType') {\n\t      type = 'OpenType';\n\t    }\n\t    try {\n\t      var data;\n\t      switch (type) {\n\t        case 'MMType1':\n\t          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\n\t        case 'Type1':\n\t        case 'CIDFontType0':\n\t          this.mimetype = 'font/opentype';\n\t          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n\t          adjustWidths(properties);\n\t          data = this.convert(name, cff, properties);\n\t          break;\n\t        case 'OpenType':\n\t        case 'TrueType':\n\t        case 'CIDFontType2':\n\t          this.mimetype = 'font/opentype';\n\t          data = this.checkAndRepair(name, file, properties);\n\t          if (this.isOpenType) {\n\t            adjustWidths(properties);\n\t            type = 'OpenType';\n\t          }\n\t          break;\n\t        default:\n\t          throw new _util.FormatError('Font ' + type + ' is not supported');\n\t      }\n\t    } catch (e) {\n\t      if (!(e instanceof _util.FormatError)) {\n\t        throw e;\n\t      }\n\t      (0, _util.warn)(e);\n\t      this.fallbackToSystemFont();\n\t      return;\n\t    }\n\t    this.data = data;\n\t    this.fontType = getFontType(type, subtype);\n\t    this.fontMatrix = properties.fontMatrix;\n\t    this.widths = properties.widths;\n\t    this.defaultWidth = properties.defaultWidth;\n\t    this.toUnicode = properties.toUnicode;\n\t    this.encoding = properties.baseEncoding;\n\t    this.seacMap = properties.seacMap;\n\t    this.loading = true;\n\t  }\n\t  Font.getFontID = function () {\n\t    var ID = 1;\n\t    return function Font_getFontID() {\n\t      return String(ID++);\n\t    };\n\t  }();\n\t  function int16(b0, b1) {\n\t    return (b0 << 8) + b1;\n\t  }\n\t  function writeSignedInt16(bytes, index, value) {\n\t    bytes[index + 1] = value;\n\t    bytes[index] = value >>> 8;\n\t  }\n\t  function signedInt16(b0, b1) {\n\t    var value = (b0 << 8) + b1;\n\t    return value & 1 << 15 ? value - 0x10000 : value;\n\t  }\n\t  function int32(b0, b1, b2, b3) {\n\t    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n\t  }\n\t  function string16(value) {\n\t    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n\t  }\n\t  function safeString16(value) {\n\t    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n\t    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n\t  }\n\t  function isTrueTypeFile(file) {\n\t    var header = file.peekBytes(4);\n\t    return (0, _util.readUint32)(header, 0) === 0x00010000;\n\t  }\n\t  function isOpenTypeFile(file) {\n\t    var header = file.peekBytes(4);\n\t    return (0, _util.bytesToString)(header) === 'OTTO';\n\t  }\n\t  function isType1File(file) {\n\t    var header = file.peekBytes(2);\n\t    if (header[0] === 0x25 && header[1] === 0x21) {\n\t      return true;\n\t    }\n\t    if (header[0] === 0x80 && header[1] === 0x01) {\n\t      return true;\n\t    }\n\t    return false;\n\t  }\n\t  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n\t    var toFontChar = [],\n\t        unicode;\n\t    for (var i = 0, ii = encoding.length; i < ii; i++) {\n\t      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\n\t      if (unicode !== -1) {\n\t        toFontChar[i] = unicode;\n\t      }\n\t    }\n\t    for (var charCode in differences) {\n\t      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\n\t      if (unicode !== -1) {\n\t        toFontChar[+charCode] = unicode;\n\t      }\n\t    }\n\t    return toFontChar;\n\t  }\n\t  function isProblematicUnicodeLocation(code) {\n\t    var i = 0,\n\t        j = ProblematicCharRanges.length - 1;\n\t    while (i < j) {\n\t      var c = i + j + 1 >> 1;\n\t      if (code < ProblematicCharRanges[c]) {\n\t        j = c - 1;\n\t      } else {\n\t        i = c;\n\t      }\n\t    }\n\t    return !(i & 1);\n\t  }\n\t  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\n\t    var toUnicode = properties.toUnicode;\n\t    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n\t    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n\t    var newMap = Object.create(null);\n\t    var toFontChar = [];\n\t    var usedFontCharCodes = [];\n\t    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n\t    for (var originalCharCode in charCodeToGlyphId) {\n\t      originalCharCode |= 0;\n\t      var glyphId = charCodeToGlyphId[originalCharCode];\n\t      if (missingGlyphs[glyphId]) {\n\t        continue;\n\t      }\n\t      var fontCharCode = originalCharCode;\n\t      var hasUnicodeValue = false;\n\t      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n\t        hasUnicodeValue = true;\n\t        var unicode = toUnicode.get(fontCharCode);\n\t        if (unicode.length === 1) {\n\t          fontCharCode = unicode.charCodeAt(0);\n\t        }\n\t      }\n\t      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\n\t        do {\n\t          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\n\t            (0, _util.warn)('Ran out of space in font private use area.');\n\t            break;\n\t          }\n\t          fontCharCode = nextAvailableFontCharCode++;\n\t          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n\t            fontCharCode = 0xF020;\n\t            nextAvailableFontCharCode = fontCharCode + 1;\n\t          }\n\t        } while (usedFontCharCodes[fontCharCode] !== undefined);\n\t      }\n\t      newMap[fontCharCode] = glyphId;\n\t      toFontChar[originalCharCode] = fontCharCode;\n\t      usedFontCharCodes[fontCharCode] = true;\n\t    }\n\t    return {\n\t      toFontChar: toFontChar,\n\t      charCodeToGlyphId: newMap,\n\t      nextAvailableFontCharCode: nextAvailableFontCharCode\n\t    };\n\t  }\n\t  function getRanges(glyphs, numGlyphs) {\n\t    var codes = [];\n\t    for (var charCode in glyphs) {\n\t      if (glyphs[charCode] >= numGlyphs) {\n\t        continue;\n\t      }\n\t      codes.push({\n\t        fontCharCode: charCode | 0,\n\t        glyphId: glyphs[charCode]\n\t      });\n\t    }\n\t    if (codes.length === 0) {\n\t      codes.push({\n\t        fontCharCode: 0,\n\t        glyphId: 0\n\t      });\n\t    }\n\t    codes.sort(function fontGetRangesSort(a, b) {\n\t      return a.fontCharCode - b.fontCharCode;\n\t    });\n\t    var ranges = [];\n\t    var length = codes.length;\n\t    for (var n = 0; n < length;) {\n\t      var start = codes[n].fontCharCode;\n\t      var codeIndices = [codes[n].glyphId];\n\t      ++n;\n\t      var end = start;\n\t      while (n < length && end + 1 === codes[n].fontCharCode) {\n\t        codeIndices.push(codes[n].glyphId);\n\t        ++end;\n\t        ++n;\n\t        if (end === 0xFFFF) {\n\t          break;\n\t        }\n\t      }\n\t      ranges.push([start, end, codeIndices]);\n\t    }\n\t    return ranges;\n\t  }\n\t  function createCmapTable(glyphs, numGlyphs) {\n\t    var ranges = getRanges(glyphs, numGlyphs);\n\t    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n\t    var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + (0, _util.string32)(4 + numTables * 8);\n\t    var i, ii, j, jj;\n\t    for (i = ranges.length - 1; i >= 0; --i) {\n\t      if (ranges[i][0] <= 0xFFFF) {\n\t        break;\n\t      }\n\t    }\n\t    var bmpLength = i + 1;\n\t    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n\t      ranges[i][1] = 0xFFFE;\n\t    }\n\t    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n\t    var segCount = bmpLength + trailingRangesCount;\n\t    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n\t    var startCount = '';\n\t    var endCount = '';\n\t    var idDeltas = '';\n\t    var idRangeOffsets = '';\n\t    var glyphsIds = '';\n\t    var bias = 0;\n\t    var range, start, end, codes;\n\t    for (i = 0, ii = bmpLength; i < ii; i++) {\n\t      range = ranges[i];\n\t      start = range[0];\n\t      end = range[1];\n\t      startCount += string16(start);\n\t      endCount += string16(end);\n\t      codes = range[2];\n\t      var contiguous = true;\n\t      for (j = 1, jj = codes.length; j < jj; ++j) {\n\t        if (codes[j] !== codes[j - 1] + 1) {\n\t          contiguous = false;\n\t          break;\n\t        }\n\t      }\n\t      if (!contiguous) {\n\t        var offset = (segCount - i) * 2 + bias * 2;\n\t        bias += end - start + 1;\n\t        idDeltas += string16(0);\n\t        idRangeOffsets += string16(offset);\n\t        for (j = 0, jj = codes.length; j < jj; ++j) {\n\t          glyphsIds += string16(codes[j]);\n\t        }\n\t      } else {\n\t        var startCode = codes[0];\n\t        idDeltas += string16(startCode - start & 0xFFFF);\n\t        idRangeOffsets += string16(0);\n\t      }\n\t    }\n\t    if (trailingRangesCount > 0) {\n\t      endCount += '\\xFF\\xFF';\n\t      startCount += '\\xFF\\xFF';\n\t      idDeltas += '\\x00\\x01';\n\t      idRangeOffsets += '\\x00\\x00';\n\t    }\n\t    var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n\t    var format31012 = '';\n\t    var header31012 = '';\n\t    if (numTables > 1) {\n\t      cmap += '\\x00\\x03' + '\\x00\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\n\t      format31012 = '';\n\t      for (i = 0, ii = ranges.length; i < ii; i++) {\n\t        range = ranges[i];\n\t        start = range[0];\n\t        codes = range[2];\n\t        var code = codes[0];\n\t        for (j = 1, jj = codes.length; j < jj; ++j) {\n\t          if (codes[j] !== codes[j - 1] + 1) {\n\t            end = range[0] + j - 1;\n\t            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\n\t            start = end + 1;\n\t            code = codes[j];\n\t          }\n\t        }\n\t        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\n\t      }\n\t      header31012 = '\\x00\\x0C' + '\\x00\\x00' + (0, _util.string32)(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + (0, _util.string32)(format31012.length / 12);\n\t    }\n\t    return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n\t  }\n\t  function validateOS2Table(os2) {\n\t    var stream = new _stream.Stream(os2.data);\n\t    var version = stream.getUint16();\n\t    stream.getBytes(60);\n\t    var selection = stream.getUint16();\n\t    if (version < 4 && selection & 0x0300) {\n\t      return false;\n\t    }\n\t    var firstChar = stream.getUint16();\n\t    var lastChar = stream.getUint16();\n\t    if (firstChar > lastChar) {\n\t      return false;\n\t    }\n\t    stream.getBytes(6);\n\t    var usWinAscent = stream.getUint16();\n\t    if (usWinAscent === 0) {\n\t      return false;\n\t    }\n\t    os2.data[8] = os2.data[9] = 0;\n\t    return true;\n\t  }\n\t  function createOS2Table(properties, charstrings, override) {\n\t    override = override || {\n\t      unitsPerEm: 0,\n\t      yMax: 0,\n\t      yMin: 0,\n\t      ascent: 0,\n\t      descent: 0\n\t    };\n\t    var ulUnicodeRange1 = 0;\n\t    var ulUnicodeRange2 = 0;\n\t    var ulUnicodeRange3 = 0;\n\t    var ulUnicodeRange4 = 0;\n\t    var firstCharIndex = null;\n\t    var lastCharIndex = 0;\n\t    if (charstrings) {\n\t      for (var code in charstrings) {\n\t        code |= 0;\n\t        if (firstCharIndex > code || !firstCharIndex) {\n\t          firstCharIndex = code;\n\t        }\n\t        if (lastCharIndex < code) {\n\t          lastCharIndex = code;\n\t        }\n\t        var position = (0, _unicode.getUnicodeRangeFor)(code);\n\t        if (position < 32) {\n\t          ulUnicodeRange1 |= 1 << position;\n\t        } else if (position < 64) {\n\t          ulUnicodeRange2 |= 1 << position - 32;\n\t        } else if (position < 96) {\n\t          ulUnicodeRange3 |= 1 << position - 64;\n\t        } else if (position < 123) {\n\t          ulUnicodeRange4 |= 1 << position - 96;\n\t        } else {\n\t          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\n\t        }\n\t      }\n\t    } else {\n\t      firstCharIndex = 0;\n\t      lastCharIndex = 255;\n\t    }\n\t    var bbox = properties.bbox || [0, 0, 0, 0];\n\t    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n\t    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n\t    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n\t    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n\t    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n\t      typoDescent = -typoDescent;\n\t    }\n\t    var winAscent = override.yMax || typoAscent;\n\t    var winDescent = -override.yMin || -typoDescent;\n\t    return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n\t  }\n\t  function createPostTable(properties) {\n\t    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n\t    return '\\x00\\x03\\x00\\x00' + (0, _util.string32)(angle) + '\\x00\\x00' + '\\x00\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n\t  }\n\t  function createNameTable(name, proto) {\n\t    if (!proto) {\n\t      proto = [[], []];\n\t    }\n\t    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\n\t    var stringsUnicode = [];\n\t    var i, ii, j, jj, str;\n\t    for (i = 0, ii = strings.length; i < ii; i++) {\n\t      str = proto[1][i] || strings[i];\n\t      var strBufUnicode = [];\n\t      for (j = 0, jj = str.length; j < jj; j++) {\n\t        strBufUnicode.push(string16(str.charCodeAt(j)));\n\t      }\n\t      stringsUnicode.push(strBufUnicode.join(''));\n\t    }\n\t    var names = [strings, stringsUnicode];\n\t    var platforms = ['\\x00\\x01', '\\x00\\x03'];\n\t    var encodings = ['\\x00\\x00', '\\x00\\x01'];\n\t    var languages = ['\\x00\\x00', '\\x04\\x09'];\n\t    var namesRecordCount = strings.length * platforms.length;\n\t    var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n\t    var strOffset = 0;\n\t    for (i = 0, ii = platforms.length; i < ii; i++) {\n\t      var strs = names[i];\n\t      for (j = 0, jj = strs.length; j < jj; j++) {\n\t        str = strs[j];\n\t        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n\t        nameTable += nameRecord;\n\t        strOffset += str.length;\n\t      }\n\t    }\n\t    nameTable += strings.join('') + stringsUnicode.join('');\n\t    return nameTable;\n\t  }\n\t  Font.prototype = {\n\t    name: null,\n\t    font: null,\n\t    mimetype: null,\n\t    encoding: null,\n\t    get renderer() {\n\t      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n\t      return (0, _util.shadow)(this, 'renderer', renderer);\n\t    },\n\t    exportData: function Font_exportData() {\n\t      var data = {};\n\t      for (var i in this) {\n\t        if (this.hasOwnProperty(i)) {\n\t          data[i] = this[i];\n\t        }\n\t      }\n\t      return data;\n\t    },\n\t    fallbackToSystemFont: function Font_fallbackToSystemFont() {\n\t      var _this = this;\n\t\n\t      this.missingFile = true;\n\t      var charCode, unicode;\n\t      var name = this.name;\n\t      var type = this.type;\n\t      var subtype = this.subtype;\n\t      var fontName = name.replace(/[,_]/g, '-');\n\t      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\n\t          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\n\t      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n\t      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n\t      this.bold = fontName.search(/bold/gi) !== -1;\n\t      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n\t      this.black = name.search(/Black/g) !== -1;\n\t      this.remeasure = Object.keys(this.widths).length > 0;\n\t      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\n\t        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n\t        var map = [];\n\t        for (charCode in GlyphMapForStandardFonts) {\n\t          map[+charCode] = GlyphMapForStandardFonts[charCode];\n\t        }\n\t        if (/Arial-?Black/i.test(name)) {\n\t          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\n\t          for (charCode in SupplementalGlyphMapForArialBlack) {\n\t            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n\t          }\n\t        }\n\t        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n\t        if (!isIdentityUnicode) {\n\t          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n\t            map[+charCode] = unicodeCharCode;\n\t          });\n\t        }\n\t        this.toFontChar = map;\n\t        this.toUnicode = new ToUnicodeMap(map);\n\t      } else if (/Symbol/i.test(fontName)) {\n\t        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n\t      } else if (/Dingbats/i.test(fontName)) {\n\t        if (/Wingdings/i.test(name)) {\n\t          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n\t        }\n\t        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\n\t      } else if (isStandardFont) {\n\t        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n\t      } else {\n\t        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n\t        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n\t          if (!_this.composite) {\n\t            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\n\t            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n\t            if (unicode !== -1) {\n\t              unicodeCharCode = unicode;\n\t            }\n\t          }\n\t          _this.toFontChar[charCode] = unicodeCharCode;\n\t        });\n\t      }\n\t      this.loadedName = fontName.split('-')[0];\n\t      this.loading = false;\n\t      this.fontType = getFontType(type, subtype);\n\t    },\n\t    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n\t      function readTableEntry(file) {\n\t        var tag = (0, _util.bytesToString)(file.getBytes(4));\n\t        var checksum = file.getInt32() >>> 0;\n\t        var offset = file.getInt32() >>> 0;\n\t        var length = file.getInt32() >>> 0;\n\t        var previousPosition = file.pos;\n\t        file.pos = file.start ? file.start : 0;\n\t        file.skip(offset);\n\t        var data = file.getBytes(length);\n\t        file.pos = previousPosition;\n\t        if (tag === 'head') {\n\t          data[8] = data[9] = data[10] = data[11] = 0;\n\t          data[17] |= 0x20;\n\t        }\n\t        return {\n\t          tag: tag,\n\t          checksum: checksum,\n\t          length: length,\n\t          offset: offset,\n\t          data: data\n\t        };\n\t      }\n\t      function readOpenTypeHeader(ttf) {\n\t        return {\n\t          version: (0, _util.bytesToString)(ttf.getBytes(4)),\n\t          numTables: ttf.getUint16(),\n\t          searchRange: ttf.getUint16(),\n\t          entrySelector: ttf.getUint16(),\n\t          rangeShift: ttf.getUint16()\n\t        };\n\t      }\n\t      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n\t        if (!cmap) {\n\t          (0, _util.warn)('No cmap table available.');\n\t          return {\n\t            platformId: -1,\n\t            encodingId: -1,\n\t            mappings: [],\n\t            hasShortCmap: false\n\t          };\n\t        }\n\t        var segment;\n\t        var start = (font.start ? font.start : 0) + cmap.offset;\n\t        font.pos = start;\n\t        font.getUint16();\n\t        var numTables = font.getUint16();\n\t        var potentialTable;\n\t        var canBreak = false;\n\t        for (var i = 0; i < numTables; i++) {\n\t          var platformId = font.getUint16();\n\t          var encodingId = font.getUint16();\n\t          var offset = font.getInt32() >>> 0;\n\t          var useTable = false;\n\t          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\n\t            continue;\n\t          }\n\t          if (platformId === 0 && encodingId === 0) {\n\t            useTable = true;\n\t          } else if (platformId === 1 && encodingId === 0) {\n\t            useTable = true;\n\t          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n\t            useTable = true;\n\t            if (!isSymbolicFont) {\n\t              canBreak = true;\n\t            }\n\t          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n\t            useTable = true;\n\t            canBreak = true;\n\t          }\n\t          if (useTable) {\n\t            potentialTable = {\n\t              platformId: platformId,\n\t              encodingId: encodingId,\n\t              offset: offset\n\t            };\n\t          }\n\t          if (canBreak) {\n\t            break;\n\t          }\n\t        }\n\t        if (potentialTable) {\n\t          font.pos = start + potentialTable.offset;\n\t        }\n\t        if (!potentialTable || font.peekByte() === -1) {\n\t          (0, _util.warn)('Could not find a preferred cmap table.');\n\t          return {\n\t            platformId: -1,\n\t            encodingId: -1,\n\t            mappings: [],\n\t            hasShortCmap: false\n\t          };\n\t        }\n\t        var format = font.getUint16();\n\t        font.getUint16();\n\t        font.getUint16();\n\t        var hasShortCmap = false;\n\t        var mappings = [];\n\t        var j, glyphId;\n\t        if (format === 0) {\n\t          for (j = 0; j < 256; j++) {\n\t            var index = font.getByte();\n\t            if (!index) {\n\t              continue;\n\t            }\n\t            mappings.push({\n\t              charCode: j,\n\t              glyphId: index\n\t            });\n\t          }\n\t          hasShortCmap = true;\n\t        } else if (format === 4) {\n\t          var segCount = font.getUint16() >> 1;\n\t          font.getBytes(6);\n\t          var segIndex,\n\t              segments = [];\n\t          for (segIndex = 0; segIndex < segCount; segIndex++) {\n\t            segments.push({ end: font.getUint16() });\n\t          }\n\t          font.getUint16();\n\t          for (segIndex = 0; segIndex < segCount; segIndex++) {\n\t            segments[segIndex].start = font.getUint16();\n\t          }\n\t          for (segIndex = 0; segIndex < segCount; segIndex++) {\n\t            segments[segIndex].delta = font.getUint16();\n\t          }\n\t          var offsetsCount = 0;\n\t          for (segIndex = 0; segIndex < segCount; segIndex++) {\n\t            segment = segments[segIndex];\n\t            var rangeOffset = font.getUint16();\n\t            if (!rangeOffset) {\n\t              segment.offsetIndex = -1;\n\t              continue;\n\t            }\n\t            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n\t            segment.offsetIndex = offsetIndex;\n\t            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n\t          }\n\t          var offsets = [];\n\t          for (j = 0; j < offsetsCount; j++) {\n\t            offsets.push(font.getUint16());\n\t          }\n\t          for (segIndex = 0; segIndex < segCount; segIndex++) {\n\t            segment = segments[segIndex];\n\t            start = segment.start;\n\t            var end = segment.end;\n\t            var delta = segment.delta;\n\t            offsetIndex = segment.offsetIndex;\n\t            for (j = start; j <= end; j++) {\n\t              if (j === 0xFFFF) {\n\t                continue;\n\t              }\n\t              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n\t              glyphId = glyphId + delta & 0xFFFF;\n\t              mappings.push({\n\t                charCode: j,\n\t                glyphId: glyphId\n\t              });\n\t            }\n\t          }\n\t        } else if (format === 6) {\n\t          var firstCode = font.getUint16();\n\t          var entryCount = font.getUint16();\n\t          for (j = 0; j < entryCount; j++) {\n\t            glyphId = font.getUint16();\n\t            var charCode = firstCode + j;\n\t            mappings.push({\n\t              charCode: charCode,\n\t              glyphId: glyphId\n\t            });\n\t          }\n\t        } else {\n\t          (0, _util.warn)('cmap table has unsupported format: ' + format);\n\t          return {\n\t            platformId: -1,\n\t            encodingId: -1,\n\t            mappings: [],\n\t            hasShortCmap: false\n\t          };\n\t        }\n\t        mappings.sort(function (a, b) {\n\t          return a.charCode - b.charCode;\n\t        });\n\t        for (i = 1; i < mappings.length; i++) {\n\t          if (mappings[i - 1].charCode === mappings[i].charCode) {\n\t            mappings.splice(i, 1);\n\t            i--;\n\t          }\n\t        }\n\t        return {\n\t          platformId: potentialTable.platformId,\n\t          encodingId: potentialTable.encodingId,\n\t          mappings: mappings,\n\t          hasShortCmap: hasShortCmap\n\t        };\n\t      }\n\t      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n\t        if (!header) {\n\t          if (metrics) {\n\t            metrics.data = null;\n\t          }\n\t          return;\n\t        }\n\t        font.pos = (font.start ? font.start : 0) + header.offset;\n\t        font.pos += header.length - 2;\n\t        var numOfMetrics = font.getUint16();\n\t        if (numOfMetrics > numGlyphs) {\n\t          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n\t          numOfMetrics = numGlyphs;\n\t          header.data[34] = (numOfMetrics & 0xff00) >> 8;\n\t          header.data[35] = numOfMetrics & 0x00ff;\n\t        }\n\t        var numOfSidebearings = numGlyphs - numOfMetrics;\n\t        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n\t        if (numMissing > 0) {\n\t          var entries = new Uint8Array(metrics.length + numMissing * 2);\n\t          entries.set(metrics.data);\n\t          metrics.data = entries;\n\t        }\n\t      }\n\t      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n\t        var glyphProfile = {\n\t          length: 0,\n\t          sizeOfInstructions: 0\n\t        };\n\t        if (sourceEnd - sourceStart <= 12) {\n\t          return glyphProfile;\n\t        }\n\t        var glyf = source.subarray(sourceStart, sourceEnd);\n\t        var contoursCount = signedInt16(glyf[0], glyf[1]);\n\t        if (contoursCount < 0) {\n\t          contoursCount = -1;\n\t          writeSignedInt16(glyf, 0, contoursCount);\n\t          dest.set(glyf, destStart);\n\t          glyphProfile.length = glyf.length;\n\t          return glyphProfile;\n\t        }\n\t        var i,\n\t            j = 10,\n\t            flagsCount = 0;\n\t        for (i = 0; i < contoursCount; i++) {\n\t          var endPoint = glyf[j] << 8 | glyf[j + 1];\n\t          flagsCount = endPoint + 1;\n\t          j += 2;\n\t        }\n\t        var instructionsStart = j;\n\t        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n\t        glyphProfile.sizeOfInstructions = instructionsLength;\n\t        j += 2 + instructionsLength;\n\t        var instructionsEnd = j;\n\t        var coordinatesLength = 0;\n\t        for (i = 0; i < flagsCount; i++) {\n\t          var flag = glyf[j++];\n\t          if (flag & 0xC0) {\n\t            glyf[j - 1] = flag & 0x3F;\n\t          }\n\t          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n\t          coordinatesLength += xyLength;\n\t          if (flag & 8) {\n\t            var repeat = glyf[j++];\n\t            i += repeat;\n\t            coordinatesLength += repeat * xyLength;\n\t          }\n\t        }\n\t        if (coordinatesLength === 0) {\n\t          return glyphProfile;\n\t        }\n\t        var glyphDataLength = j + coordinatesLength;\n\t        if (glyphDataLength > glyf.length) {\n\t          return glyphProfile;\n\t        }\n\t        if (!hintsValid && instructionsLength > 0) {\n\t          dest.set(glyf.subarray(0, instructionsStart), destStart);\n\t          dest.set([0, 0], destStart + instructionsStart);\n\t          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n\t          glyphDataLength -= instructionsLength;\n\t          if (glyf.length - glyphDataLength > 3) {\n\t            glyphDataLength = glyphDataLength + 3 & ~3;\n\t          }\n\t          glyphProfile.length = glyphDataLength;\n\t          return glyphProfile;\n\t        }\n\t        if (glyf.length - glyphDataLength > 3) {\n\t          glyphDataLength = glyphDataLength + 3 & ~3;\n\t          dest.set(glyf.subarray(0, glyphDataLength), destStart);\n\t          glyphProfile.length = glyphDataLength;\n\t          return glyphProfile;\n\t        }\n\t        dest.set(glyf, destStart);\n\t        glyphProfile.length = glyf.length;\n\t        return glyphProfile;\n\t      }\n\t      function sanitizeHead(head, numGlyphs, locaLength) {\n\t        var data = head.data;\n\t        var version = int32(data[0], data[1], data[2], data[3]);\n\t        if (version >> 16 !== 1) {\n\t          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\n\t          data[0] = 0;\n\t          data[1] = 1;\n\t          data[2] = 0;\n\t          data[3] = 0;\n\t        }\n\t        var indexToLocFormat = int16(data[50], data[51]);\n\t        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n\t          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n\t          var numGlyphsPlusOne = numGlyphs + 1;\n\t          if (locaLength === numGlyphsPlusOne << 1) {\n\t            data[50] = 0;\n\t            data[51] = 0;\n\t          } else if (locaLength === numGlyphsPlusOne << 2) {\n\t            data[50] = 0;\n\t            data[51] = 1;\n\t          } else {\n\t            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\n\t          }\n\t        }\n\t      }\n\t      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\n\t        var itemSize, itemDecode, itemEncode;\n\t        if (isGlyphLocationsLong) {\n\t          itemSize = 4;\n\t          itemDecode = function fontItemDecodeLong(data, offset) {\n\t            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n\t          };\n\t          itemEncode = function fontItemEncodeLong(data, offset, value) {\n\t            data[offset] = value >>> 24 & 0xFF;\n\t            data[offset + 1] = value >> 16 & 0xFF;\n\t            data[offset + 2] = value >> 8 & 0xFF;\n\t            data[offset + 3] = value & 0xFF;\n\t          };\n\t        } else {\n\t          itemSize = 2;\n\t          itemDecode = function fontItemDecode(data, offset) {\n\t            return data[offset] << 9 | data[offset + 1] << 1;\n\t          };\n\t          itemEncode = function fontItemEncode(data, offset, value) {\n\t            data[offset] = value >> 9 & 0xFF;\n\t            data[offset + 1] = value >> 1 & 0xFF;\n\t          };\n\t        }\n\t        var locaData = loca.data;\n\t        var locaDataSize = itemSize * (1 + numGlyphs);\n\t        if (locaData.length !== locaDataSize) {\n\t          locaData = new Uint8Array(locaDataSize);\n\t          locaData.set(loca.data.subarray(0, locaDataSize));\n\t          loca.data = locaData;\n\t        }\n\t        var oldGlyfData = glyf.data;\n\t        var oldGlyfDataLength = oldGlyfData.length;\n\t        var newGlyfData = new Uint8Array(oldGlyfDataLength);\n\t        var startOffset = itemDecode(locaData, 0);\n\t        var writeOffset = 0;\n\t        var missingGlyphs = Object.create(null);\n\t        itemEncode(locaData, 0, writeOffset);\n\t        var i, j;\n\t        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\n\t        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\n\t          var endOffset = itemDecode(locaData, j);\n\t          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n\t            endOffset = oldGlyfDataLength;\n\t          }\n\t          if (endOffset > oldGlyfDataLength) {\n\t            startOffset = endOffset;\n\t          }\n\t          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n\t          var newLength = glyphProfile.length;\n\t          if (newLength === 0) {\n\t            missingGlyphs[i] = true;\n\t          }\n\t          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\n\t            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\n\t          }\n\t          writeOffset += newLength;\n\t          itemEncode(locaData, j, writeOffset);\n\t          startOffset = endOffset;\n\t        }\n\t        if (writeOffset === 0) {\n\t          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n\t          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n\t            itemEncode(locaData, j, simpleGlyph.length);\n\t          }\n\t          glyf.data = simpleGlyph;\n\t        } else if (dupFirstEntry) {\n\t          var firstEntryLength = itemDecode(locaData, itemSize);\n\t          if (newGlyfData.length > firstEntryLength + writeOffset) {\n\t            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n\t          } else {\n\t            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n\t            glyf.data.set(newGlyfData.subarray(0, writeOffset));\n\t          }\n\t          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n\t          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n\t        } else {\n\t          glyf.data = newGlyfData.subarray(0, writeOffset);\n\t        }\n\t        return {\n\t          missingGlyphs: missingGlyphs,\n\t          maxSizeOfInstructions: maxSizeOfInstructions\n\t        };\n\t      }\n\t      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n\t        var start = (font.start ? font.start : 0) + post.offset;\n\t        font.pos = start;\n\t        var length = post.length,\n\t            end = start + length;\n\t        var version = font.getInt32();\n\t        font.getBytes(28);\n\t        var glyphNames;\n\t        var valid = true;\n\t        var i;\n\t        switch (version) {\n\t          case 0x00010000:\n\t            glyphNames = MacStandardGlyphOrdering;\n\t            break;\n\t          case 0x00020000:\n\t            var numGlyphs = font.getUint16();\n\t            if (numGlyphs !== maxpNumGlyphs) {\n\t              valid = false;\n\t              break;\n\t            }\n\t            var glyphNameIndexes = [];\n\t            for (i = 0; i < numGlyphs; ++i) {\n\t              var index = font.getUint16();\n\t              if (index >= 32768) {\n\t                valid = false;\n\t                break;\n\t              }\n\t              glyphNameIndexes.push(index);\n\t            }\n\t            if (!valid) {\n\t              break;\n\t            }\n\t            var customNames = [];\n\t            var strBuf = [];\n\t            while (font.pos < end) {\n\t              var stringLength = font.getByte();\n\t              strBuf.length = stringLength;\n\t              for (i = 0; i < stringLength; ++i) {\n\t                strBuf[i] = String.fromCharCode(font.getByte());\n\t              }\n\t              customNames.push(strBuf.join(''));\n\t            }\n\t            glyphNames = [];\n\t            for (i = 0; i < numGlyphs; ++i) {\n\t              var j = glyphNameIndexes[i];\n\t              if (j < 258) {\n\t                glyphNames.push(MacStandardGlyphOrdering[j]);\n\t                continue;\n\t              }\n\t              glyphNames.push(customNames[j - 258]);\n\t            }\n\t            break;\n\t          case 0x00030000:\n\t            break;\n\t          default:\n\t            (0, _util.warn)('Unknown/unsupported post table version ' + version);\n\t            valid = false;\n\t            if (properties.defaultEncoding) {\n\t              glyphNames = properties.defaultEncoding;\n\t            }\n\t            break;\n\t        }\n\t        properties.glyphNames = glyphNames;\n\t        return valid;\n\t      }\n\t      function readNameTable(nameTable) {\n\t        var start = (font.start ? font.start : 0) + nameTable.offset;\n\t        font.pos = start;\n\t        var names = [[], []];\n\t        var length = nameTable.length,\n\t            end = start + length;\n\t        var format = font.getUint16();\n\t        var FORMAT_0_HEADER_LENGTH = 6;\n\t        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n\t          return names;\n\t        }\n\t        var numRecords = font.getUint16();\n\t        var stringsStart = font.getUint16();\n\t        var records = [];\n\t        var NAME_RECORD_LENGTH = 12;\n\t        var i, ii;\n\t        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n\t          var r = {\n\t            platform: font.getUint16(),\n\t            encoding: font.getUint16(),\n\t            language: font.getUint16(),\n\t            name: font.getUint16(),\n\t            length: font.getUint16(),\n\t            offset: font.getUint16()\n\t          };\n\t          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n\t            records.push(r);\n\t          }\n\t        }\n\t        for (i = 0, ii = records.length; i < ii; i++) {\n\t          var record = records[i];\n\t          if (record.length <= 0) {\n\t            continue;\n\t          }\n\t          var pos = start + stringsStart + record.offset;\n\t          if (pos + record.length > end) {\n\t            continue;\n\t          }\n\t          font.pos = pos;\n\t          var nameIndex = record.name;\n\t          if (record.encoding) {\n\t            var str = '';\n\t            for (var j = 0, jj = record.length; j < jj; j += 2) {\n\t              str += String.fromCharCode(font.getUint16());\n\t            }\n\t            names[1][nameIndex] = str;\n\t          } else {\n\t            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\n\t          }\n\t        }\n\t        return names;\n\t      }\n\t      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n\t      function sanitizeTTProgram(table, ttContext) {\n\t        var data = table.data;\n\t        var i = 0,\n\t            j,\n\t            n,\n\t            b,\n\t            funcId,\n\t            pc,\n\t            lastEndf = 0,\n\t            lastDeff = 0;\n\t        var stack = [];\n\t        var callstack = [];\n\t        var functionsCalled = [];\n\t        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n\t        var inFDEF = false,\n\t            ifLevel = 0,\n\t            inELSE = 0;\n\t        for (var ii = data.length; i < ii;) {\n\t          var op = data[i++];\n\t          if (op === 0x40) {\n\t            n = data[i++];\n\t            if (inFDEF || inELSE) {\n\t              i += n;\n\t            } else {\n\t              for (j = 0; j < n; j++) {\n\t                stack.push(data[i++]);\n\t              }\n\t            }\n\t          } else if (op === 0x41) {\n\t            n = data[i++];\n\t            if (inFDEF || inELSE) {\n\t              i += n * 2;\n\t            } else {\n\t              for (j = 0; j < n; j++) {\n\t                b = data[i++];\n\t                stack.push(b << 8 | data[i++]);\n\t              }\n\t            }\n\t          } else if ((op & 0xF8) === 0xB0) {\n\t            n = op - 0xB0 + 1;\n\t            if (inFDEF || inELSE) {\n\t              i += n;\n\t            } else {\n\t              for (j = 0; j < n; j++) {\n\t                stack.push(data[i++]);\n\t              }\n\t            }\n\t          } else if ((op & 0xF8) === 0xB8) {\n\t            n = op - 0xB8 + 1;\n\t            if (inFDEF || inELSE) {\n\t              i += n * 2;\n\t            } else {\n\t              for (j = 0; j < n; j++) {\n\t                b = data[i++];\n\t                stack.push(b << 8 | data[i++]);\n\t              }\n\t            }\n\t          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n\t            if (!inFDEF && !inELSE) {\n\t              funcId = stack[stack.length - 1];\n\t              ttContext.functionsUsed[funcId] = true;\n\t              if (funcId in ttContext.functionsStackDeltas) {\n\t                stack.length += ttContext.functionsStackDeltas[funcId];\n\t              } else if (funcId in ttContext.functionsDefined && functionsCalled.indexOf(funcId) < 0) {\n\t                callstack.push({\n\t                  data: data,\n\t                  i: i,\n\t                  stackTop: stack.length - 1\n\t                });\n\t                functionsCalled.push(funcId);\n\t                pc = ttContext.functionsDefined[funcId];\n\t                if (!pc) {\n\t                  (0, _util.warn)('TT: CALL non-existent function');\n\t                  ttContext.hintsValid = false;\n\t                  return;\n\t                }\n\t                data = pc.data;\n\t                i = pc.i;\n\t              }\n\t            }\n\t          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n\t            if (inFDEF || inELSE) {\n\t              (0, _util.warn)('TT: nested FDEFs not allowed');\n\t              tooComplexToFollowFunctions = true;\n\t            }\n\t            inFDEF = true;\n\t            lastDeff = i;\n\t            funcId = stack.pop();\n\t            ttContext.functionsDefined[funcId] = {\n\t              data: data,\n\t              i: i\n\t            };\n\t          } else if (op === 0x2D) {\n\t            if (inFDEF) {\n\t              inFDEF = false;\n\t              lastEndf = i;\n\t            } else {\n\t              pc = callstack.pop();\n\t              if (!pc) {\n\t                (0, _util.warn)('TT: ENDF bad stack');\n\t                ttContext.hintsValid = false;\n\t                return;\n\t              }\n\t              funcId = functionsCalled.pop();\n\t              data = pc.data;\n\t              i = pc.i;\n\t              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n\t            }\n\t          } else if (op === 0x89) {\n\t            if (inFDEF || inELSE) {\n\t              (0, _util.warn)('TT: nested IDEFs not allowed');\n\t              tooComplexToFollowFunctions = true;\n\t            }\n\t            inFDEF = true;\n\t            lastDeff = i;\n\t          } else if (op === 0x58) {\n\t            ++ifLevel;\n\t          } else if (op === 0x1B) {\n\t            inELSE = ifLevel;\n\t          } else if (op === 0x59) {\n\t            if (inELSE === ifLevel) {\n\t              inELSE = 0;\n\t            }\n\t            --ifLevel;\n\t          } else if (op === 0x1C) {\n\t            if (!inFDEF && !inELSE) {\n\t              var offset = stack[stack.length - 1];\n\t              if (offset > 0) {\n\t                i += offset - 1;\n\t              }\n\t            }\n\t          }\n\t          if (!inFDEF && !inELSE) {\n\t            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n\t            if (op >= 0x71 && op <= 0x75) {\n\t              n = stack.pop();\n\t              if (!isNaN(n)) {\n\t                stackDelta = -n * 2;\n\t              }\n\t            }\n\t            while (stackDelta < 0 && stack.length > 0) {\n\t              stack.pop();\n\t              stackDelta++;\n\t            }\n\t            while (stackDelta > 0) {\n\t              stack.push(NaN);\n\t              stackDelta--;\n\t            }\n\t          }\n\t        }\n\t        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n\t        var content = [data];\n\t        if (i > data.length) {\n\t          content.push(new Uint8Array(i - data.length));\n\t        }\n\t        if (lastDeff > lastEndf) {\n\t          (0, _util.warn)('TT: complementing a missing function tail');\n\t          content.push(new Uint8Array([0x22, 0x2D]));\n\t        }\n\t        foldTTTable(table, content);\n\t      }\n\t      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n\t        if (ttContext.tooComplexToFollowFunctions) {\n\t          return;\n\t        }\n\t        if (ttContext.functionsDefined.length > maxFunctionDefs) {\n\t          (0, _util.warn)('TT: more functions defined than expected');\n\t          ttContext.hintsValid = false;\n\t          return;\n\t        }\n\t        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n\t          if (j > maxFunctionDefs) {\n\t            (0, _util.warn)('TT: invalid function id: ' + j);\n\t            ttContext.hintsValid = false;\n\t            return;\n\t          }\n\t          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n\t            (0, _util.warn)('TT: undefined function: ' + j);\n\t            ttContext.hintsValid = false;\n\t            return;\n\t          }\n\t        }\n\t      }\n\t      function foldTTTable(table, content) {\n\t        if (content.length > 1) {\n\t          var newLength = 0;\n\t          var j, jj;\n\t          for (j = 0, jj = content.length; j < jj; j++) {\n\t            newLength += content[j].length;\n\t          }\n\t          newLength = newLength + 3 & ~3;\n\t          var result = new Uint8Array(newLength);\n\t          var pos = 0;\n\t          for (j = 0, jj = content.length; j < jj; j++) {\n\t            result.set(content[j], pos);\n\t            pos += content[j].length;\n\t          }\n\t          table.data = result;\n\t          table.length = newLength;\n\t        }\n\t      }\n\t      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n\t        var ttContext = {\n\t          functionsDefined: [],\n\t          functionsUsed: [],\n\t          functionsStackDeltas: [],\n\t          tooComplexToFollowFunctions: false,\n\t          hintsValid: true\n\t        };\n\t        if (fpgm) {\n\t          sanitizeTTProgram(fpgm, ttContext);\n\t        }\n\t        if (prep) {\n\t          sanitizeTTProgram(prep, ttContext);\n\t        }\n\t        if (fpgm) {\n\t          checkInvalidFunctions(ttContext, maxFunctionDefs);\n\t        }\n\t        if (cvt && cvt.length & 1) {\n\t          var cvtData = new Uint8Array(cvt.length + 1);\n\t          cvtData.set(cvt.data);\n\t          cvt.data = cvtData;\n\t        }\n\t        return ttContext.hintsValid;\n\t      }\n\t      font = new _stream.Stream(new Uint8Array(font.getBytes()));\n\t      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\n\t      var header = readOpenTypeHeader(font);\n\t      var numTables = header.numTables;\n\t      var cff, cffFile;\n\t      var tables = Object.create(null);\n\t      tables['OS/2'] = null;\n\t      tables['cmap'] = null;\n\t      tables['head'] = null;\n\t      tables['hhea'] = null;\n\t      tables['hmtx'] = null;\n\t      tables['maxp'] = null;\n\t      tables['name'] = null;\n\t      tables['post'] = null;\n\t      var table;\n\t      for (var i = 0; i < numTables; i++) {\n\t        table = readTableEntry(font);\n\t        if (VALID_TABLES.indexOf(table.tag) < 0) {\n\t          continue;\n\t        }\n\t        if (table.length === 0) {\n\t          continue;\n\t        }\n\t        tables[table.tag] = table;\n\t      }\n\t      var isTrueType = !tables['CFF '];\n\t      if (!isTrueType) {\n\t        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n\t          cffFile = new _stream.Stream(tables['CFF '].data);\n\t          cff = new CFFFont(cffFile, properties);\n\t          adjustWidths(properties);\n\t          return this.convert(name, cff, properties);\n\t        }\n\t        delete tables['glyf'];\n\t        delete tables['loca'];\n\t        delete tables['fpgm'];\n\t        delete tables['prep'];\n\t        delete tables['cvt '];\n\t        this.isOpenType = true;\n\t      } else {\n\t        if (!tables['loca']) {\n\t          throw new _util.FormatError('Required \"loca\" table is not found');\n\t        }\n\t        if (!tables['glyf']) {\n\t          (0, _util.warn)('Required \"glyf\" table is not found -- trying to recover.');\n\t          tables['glyf'] = {\n\t            tag: 'glyf',\n\t            data: new Uint8Array(0)\n\t          };\n\t        }\n\t        this.isOpenType = false;\n\t      }\n\t      if (!tables['maxp']) {\n\t        throw new _util.FormatError('Required \"maxp\" table is not found');\n\t      }\n\t      font.pos = (font.start || 0) + tables['maxp'].offset;\n\t      var version = font.getInt32();\n\t      var numGlyphs = font.getUint16();\n\t      var maxFunctionDefs = 0;\n\t      var maxSizeOfInstructions = 0;\n\t      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n\t        font.pos += 8;\n\t        var maxZones = font.getUint16();\n\t        if (maxZones > 2) {\n\t          tables['maxp'].data[14] = 0;\n\t          tables['maxp'].data[15] = 2;\n\t        }\n\t        font.pos += 4;\n\t        maxFunctionDefs = font.getUint16();\n\t        font.pos += 6;\n\t        maxSizeOfInstructions = font.getUint16();\n\t      }\n\t      var dupFirstEntry = false;\n\t      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\0') {\n\t        dupFirstEntry = true;\n\t        numGlyphs++;\n\t        tables['maxp'].data[4] = numGlyphs >> 8;\n\t        tables['maxp'].data[5] = numGlyphs & 255;\n\t      }\n\t      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n\t      if (!hintsValid) {\n\t        delete tables['fpgm'];\n\t        delete tables['prep'];\n\t        delete tables['cvt '];\n\t      }\n\t      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n\t      if (!tables['head']) {\n\t        throw new _util.FormatError('Required \"head\" table is not found');\n\t      }\n\t      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n\t      var missingGlyphs = Object.create(null);\n\t      if (isTrueType) {\n\t        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n\t        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\n\t        missingGlyphs = glyphsInfo.missingGlyphs;\n\t        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n\t          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\n\t          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\n\t        }\n\t      }\n\t      if (!tables['hhea']) {\n\t        throw new _util.FormatError('Required \"hhea\" table is not found');\n\t      }\n\t      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n\t        tables['hhea'].data[10] = 0xFF;\n\t        tables['hhea'].data[11] = 0xFF;\n\t      }\n\t      var metricsOverride = {\n\t        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n\t        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n\t        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n\t        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n\t        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n\t      };\n\t      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n\t      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n\t      if (tables['post']) {\n\t        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n\t        if (!valid) {\n\t          tables['post'] = null;\n\t        }\n\t      }\n\t      var charCodeToGlyphId = [],\n\t          charCode;\n\t      function hasGlyph(glyphId) {\n\t        return !missingGlyphs[glyphId];\n\t      }\n\t      if (properties.composite) {\n\t        var cidToGidMap = properties.cidToGidMap || [];\n\t        var isCidToGidMapEmpty = cidToGidMap.length === 0;\n\t        properties.cMap.forEach(function (charCode, cid) {\n\t          if (cid > 0xffff) {\n\t            throw new _util.FormatError('Max size of CID is 65,535');\n\t          }\n\t          var glyphId = -1;\n\t          if (isCidToGidMapEmpty) {\n\t            glyphId = cid;\n\t          } else if (cidToGidMap[cid] !== undefined) {\n\t            glyphId = cidToGidMap[cid];\n\t          }\n\t          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\n\t            charCodeToGlyphId[charCode] = glyphId;\n\t          }\n\t        });\n\t        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n\t          charCodeToGlyphId[0] = numGlyphs - 1;\n\t        }\n\t      } else {\n\t        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n\t        var cmapPlatformId = cmapTable.platformId;\n\t        var cmapEncodingId = cmapTable.encodingId;\n\t        var cmapMappings = cmapTable.mappings;\n\t        var cmapMappingsLength = cmapMappings.length;\n\t        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\n\t          var baseEncoding = [];\n\t          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n\t            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n\t          }\n\t          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n\t          for (charCode = 0; charCode < 256; charCode++) {\n\t            var glyphName, standardGlyphName;\n\t            if (this.differences && charCode in this.differences) {\n\t              glyphName = this.differences[charCode];\n\t            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n\t              glyphName = baseEncoding[charCode];\n\t            } else {\n\t              glyphName = _encodings.StandardEncoding[charCode];\n\t            }\n\t            if (!glyphName) {\n\t              continue;\n\t            }\n\t            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n\t            var unicodeOrCharCode;\n\t            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n\t              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n\t            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n\t              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\n\t            }\n\t            var found = false;\n\t            for (i = 0; i < cmapMappingsLength; ++i) {\n\t              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n\t                continue;\n\t              }\n\t              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n\t              found = true;\n\t              break;\n\t            }\n\t            if (!found && properties.glyphNames) {\n\t              var glyphId = properties.glyphNames.indexOf(glyphName);\n\t              if (glyphId === -1 && standardGlyphName !== glyphName) {\n\t                glyphId = properties.glyphNames.indexOf(standardGlyphName);\n\t              }\n\t              if (glyphId > 0 && hasGlyph(glyphId)) {\n\t                charCodeToGlyphId[charCode] = glyphId;\n\t                found = true;\n\t              }\n\t            }\n\t          }\n\t        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n\t          for (i = 0; i < cmapMappingsLength; ++i) {\n\t            charCodeToGlyphId[cmapMappings[i].charCode] = cmapMappings[i].glyphId;\n\t          }\n\t        } else {\n\t          for (i = 0; i < cmapMappingsLength; ++i) {\n\t            charCode = cmapMappings[i].charCode;\n\t            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\n\t              charCode &= 0xFF;\n\t            }\n\t            charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n\t          }\n\t        }\n\t      }\n\t      if (charCodeToGlyphId.length === 0) {\n\t        charCodeToGlyphId[0] = 0;\n\t      }\n\t      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\n\t      this.toFontChar = newMapping.toFontChar;\n\t      tables['cmap'] = {\n\t        tag: 'cmap',\n\t        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n\t      };\n\t      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n\t        tables['OS/2'] = {\n\t          tag: 'OS/2',\n\t          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n\t        };\n\t      }\n\t      if (!tables['post']) {\n\t        tables['post'] = {\n\t          tag: 'post',\n\t          data: createPostTable(properties)\n\t        };\n\t      }\n\t      if (!isTrueType) {\n\t        try {\n\t          cffFile = new _stream.Stream(tables['CFF '].data);\n\t          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n\t          cff = parser.parse();\n\t          var compiler = new _cff_parser.CFFCompiler(cff);\n\t          tables['CFF '].data = compiler.compile();\n\t        } catch (e) {\n\t          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n\t        }\n\t      }\n\t      if (!tables['name']) {\n\t        tables['name'] = {\n\t          tag: 'name',\n\t          data: createNameTable(this.name)\n\t        };\n\t      } else {\n\t        var namePrototype = readNameTable(tables['name']);\n\t        tables['name'].data = createNameTable(name, namePrototype);\n\t      }\n\t      var builder = new OpenTypeFileBuilder(header.version);\n\t      for (var tableTag in tables) {\n\t        builder.addTable(tableTag, tables[tableTag].data);\n\t      }\n\t      return builder.toArray();\n\t    },\n\t    convert: function Font_convert(fontName, font, properties) {\n\t      properties.fixedPitch = false;\n\t      if (properties.builtInEncoding) {\n\t        adjustToUnicode(properties, properties.builtInEncoding);\n\t      }\n\t      var mapping = font.getGlyphMapping(properties);\n\t      var newMapping = adjustMapping(mapping, properties, Object.create(null));\n\t      this.toFontChar = newMapping.toFontChar;\n\t      var numGlyphs = font.numGlyphs;\n\t      function getCharCodes(charCodeToGlyphId, glyphId) {\n\t        var charCodes = null;\n\t        for (var charCode in charCodeToGlyphId) {\n\t          if (glyphId === charCodeToGlyphId[charCode]) {\n\t            if (!charCodes) {\n\t              charCodes = [];\n\t            }\n\t            charCodes.push(charCode | 0);\n\t          }\n\t        }\n\t        return charCodes;\n\t      }\n\t      function createCharCode(charCodeToGlyphId, glyphId) {\n\t        for (var charCode in charCodeToGlyphId) {\n\t          if (glyphId === charCodeToGlyphId[charCode]) {\n\t            return charCode | 0;\n\t          }\n\t        }\n\t        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n\t        return newMapping.nextAvailableFontCharCode++;\n\t      }\n\t      var seacs = font.seacs;\n\t      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n\t        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n\t        var charset = font.getCharset();\n\t        var seacMap = Object.create(null);\n\t        for (var glyphId in seacs) {\n\t          glyphId |= 0;\n\t          var seac = seacs[glyphId];\n\t          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\n\t          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\n\t          var baseGlyphId = charset.indexOf(baseGlyphName);\n\t          var accentGlyphId = charset.indexOf(accentGlyphName);\n\t          if (baseGlyphId < 0 || accentGlyphId < 0) {\n\t            continue;\n\t          }\n\t          var accentOffset = {\n\t            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n\t            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n\t          };\n\t          var charCodes = getCharCodes(mapping, glyphId);\n\t          if (!charCodes) {\n\t            continue;\n\t          }\n\t          for (var i = 0, ii = charCodes.length; i < ii; i++) {\n\t            var charCode = charCodes[i];\n\t            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n\t            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n\t            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n\t            seacMap[charCode] = {\n\t              baseFontCharCode: baseFontCharCode,\n\t              accentFontCharCode: accentFontCharCode,\n\t              accentOffset: accentOffset\n\t            };\n\t          }\n\t        }\n\t        properties.seacMap = seacMap;\n\t      }\n\t      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n\t      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n\t      builder.addTable('CFF ', font.data);\n\t      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n\t      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n\t      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n\t      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n\t      builder.addTable('hmtx', function fontFieldsHmtx() {\n\t        var charstrings = font.charstrings;\n\t        var cffWidths = font.cff ? font.cff.widths : null;\n\t        var hmtx = '\\x00\\x00\\x00\\x00';\n\t        for (var i = 1, ii = numGlyphs; i < ii; i++) {\n\t          var width = 0;\n\t          if (charstrings) {\n\t            var charstring = charstrings[i - 1];\n\t            width = 'width' in charstring ? charstring.width : 0;\n\t          } else if (cffWidths) {\n\t            width = Math.ceil(cffWidths[i] || 0);\n\t          }\n\t          hmtx += string16(width) + string16(0);\n\t        }\n\t        return hmtx;\n\t      }());\n\t      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n\t      builder.addTable('name', createNameTable(fontName));\n\t      builder.addTable('post', createPostTable(properties));\n\t      return builder.toArray();\n\t    },\n\t    get spaceWidth() {\n\t      if ('_shadowWidth' in this) {\n\t        return this._shadowWidth;\n\t      }\n\t      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\n\t      var width;\n\t      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n\t        var glyphName = possibleSpaceReplacements[i];\n\t        if (glyphName in this.widths) {\n\t          width = this.widths[glyphName];\n\t          break;\n\t        }\n\t        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n\t        var glyphUnicode = glyphsUnicodeMap[glyphName];\n\t        var charcode = 0;\n\t        if (this.composite) {\n\t          if (this.cMap.contains(glyphUnicode)) {\n\t            charcode = this.cMap.lookup(glyphUnicode);\n\t          }\n\t        }\n\t        if (!charcode && this.toUnicode) {\n\t          charcode = this.toUnicode.charCodeOf(glyphUnicode);\n\t        }\n\t        if (charcode <= 0) {\n\t          charcode = glyphUnicode;\n\t        }\n\t        width = this.widths[charcode];\n\t        if (width) {\n\t          break;\n\t        }\n\t      }\n\t      width = width || this.defaultWidth;\n\t      this._shadowWidth = width;\n\t      return width;\n\t    },\n\t    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n\t      var fontCharCode, width, operatorListId;\n\t      var widthCode = charcode;\n\t      if (this.cMap && this.cMap.contains(charcode)) {\n\t        widthCode = this.cMap.lookup(charcode);\n\t      }\n\t      width = this.widths[widthCode];\n\t      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\n\t      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n\t      var unicode = this.toUnicode.get(charcode) || charcode;\n\t      if (typeof unicode === 'number') {\n\t        unicode = String.fromCharCode(unicode);\n\t      }\n\t      var isInFont = charcode in this.toFontChar;\n\t      fontCharCode = this.toFontChar[charcode] || charcode;\n\t      if (this.missingFile) {\n\t        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\n\t      }\n\t      if (this.isType3Font) {\n\t        operatorListId = fontCharCode;\n\t      }\n\t      var accent = null;\n\t      if (this.seacMap && this.seacMap[charcode]) {\n\t        isInFont = true;\n\t        var seac = this.seacMap[charcode];\n\t        fontCharCode = seac.baseFontCharCode;\n\t        accent = {\n\t          fontChar: String.fromCharCode(seac.accentFontCharCode),\n\t          offset: seac.accentOffset\n\t        };\n\t      }\n\t      var fontChar = String.fromCharCode(fontCharCode);\n\t      var glyph = this.glyphCache[charcode];\n\t      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n\t        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n\t        this.glyphCache[charcode] = glyph;\n\t      }\n\t      return glyph;\n\t    },\n\t    charsToGlyphs: function Font_charsToGlyphs(chars) {\n\t      var charsCache = this.charsCache;\n\t      var glyphs, glyph, charcode;\n\t      if (charsCache) {\n\t        glyphs = charsCache[chars];\n\t        if (glyphs) {\n\t          return glyphs;\n\t        }\n\t      }\n\t      if (!charsCache) {\n\t        charsCache = this.charsCache = Object.create(null);\n\t      }\n\t      glyphs = [];\n\t      var charsCacheKey = chars;\n\t      var i = 0,\n\t          ii;\n\t      if (this.cMap) {\n\t        var c = Object.create(null);\n\t        while (i < chars.length) {\n\t          this.cMap.readCharCode(chars, i, c);\n\t          charcode = c.charcode;\n\t          var length = c.length;\n\t          i += length;\n\t          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n\t          glyph = this.charToGlyph(charcode, isSpace);\n\t          glyphs.push(glyph);\n\t        }\n\t      } else {\n\t        for (i = 0, ii = chars.length; i < ii; ++i) {\n\t          charcode = chars.charCodeAt(i);\n\t          glyph = this.charToGlyph(charcode, charcode === 0x20);\n\t          glyphs.push(glyph);\n\t        }\n\t      }\n\t      return charsCache[charsCacheKey] = glyphs;\n\t    }\n\t  };\n\t  return Font;\n\t}();\n\tvar ErrorFont = function ErrorFontClosure() {\n\t  function ErrorFont(error) {\n\t    this.error = error;\n\t    this.loadedName = 'g_font_error';\n\t    this.loading = false;\n\t  }\n\t  ErrorFont.prototype = {\n\t    charsToGlyphs: function ErrorFont_charsToGlyphs() {\n\t      return [];\n\t    },\n\t    exportData: function ErrorFont_exportData() {\n\t      return { error: this.error };\n\t    }\n\t  };\n\t  return ErrorFont;\n\t}();\n\tfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n\t  var charCodeToGlyphId = Object.create(null);\n\t  var glyphId, charCode, baseEncoding;\n\t  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n\t  if (properties.baseEncodingName) {\n\t    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n\t    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n\t      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n\t      if (glyphId >= 0) {\n\t        charCodeToGlyphId[charCode] = glyphId;\n\t      } else {\n\t        charCodeToGlyphId[charCode] = 0;\n\t      }\n\t    }\n\t  } else if (isSymbolicFont) {\n\t    for (charCode in builtInEncoding) {\n\t      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n\t    }\n\t  } else {\n\t    baseEncoding = _encodings.StandardEncoding;\n\t    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n\t      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n\t      if (glyphId >= 0) {\n\t        charCodeToGlyphId[charCode] = glyphId;\n\t      } else {\n\t        charCodeToGlyphId[charCode] = 0;\n\t      }\n\t    }\n\t  }\n\t  var differences = properties.differences,\n\t      glyphsUnicodeMap;\n\t  if (differences) {\n\t    for (charCode in differences) {\n\t      var glyphName = differences[charCode];\n\t      glyphId = glyphNames.indexOf(glyphName);\n\t      if (glyphId === -1) {\n\t        if (!glyphsUnicodeMap) {\n\t          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n\t        }\n\t        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n\t        if (standardGlyphName !== glyphName) {\n\t          glyphId = glyphNames.indexOf(standardGlyphName);\n\t        }\n\t      }\n\t      if (glyphId >= 0) {\n\t        charCodeToGlyphId[charCode] = glyphId;\n\t      } else {\n\t        charCodeToGlyphId[charCode] = 0;\n\t      }\n\t    }\n\t  }\n\t  return charCodeToGlyphId;\n\t}\n\tvar Type1Font = function Type1FontClosure() {\n\t  function findBlock(streamBytes, signature, startIndex) {\n\t    var streamBytesLength = streamBytes.length;\n\t    var signatureLength = signature.length;\n\t    var scanLength = streamBytesLength - signatureLength;\n\t    var i = startIndex,\n\t        j,\n\t        found = false;\n\t    while (i < scanLength) {\n\t      j = 0;\n\t      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n\t        j++;\n\t      }\n\t      if (j >= signatureLength) {\n\t        i += j;\n\t        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\n\t          i++;\n\t        }\n\t        found = true;\n\t        break;\n\t      }\n\t      i++;\n\t    }\n\t    return {\n\t      found: found,\n\t      length: i\n\t    };\n\t  }\n\t  function getHeaderBlock(stream, suggestedLength) {\n\t    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\n\t    var streamStartPos = stream.pos;\n\t    var headerBytes, headerBytesLength, block;\n\t    try {\n\t      headerBytes = stream.getBytes(suggestedLength);\n\t      headerBytesLength = headerBytes.length;\n\t    } catch (ex) {\n\t      if (ex instanceof _util.MissingDataException) {\n\t        throw ex;\n\t      }\n\t    }\n\t    if (headerBytesLength === suggestedLength) {\n\t      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n\t      if (block.found && block.length === suggestedLength) {\n\t        return {\n\t          stream: new _stream.Stream(headerBytes),\n\t          length: suggestedLength\n\t        };\n\t      }\n\t    }\n\t    (0, _util.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n\t    stream.pos = streamStartPos;\n\t    var SCAN_BLOCK_LENGTH = 2048;\n\t    var actualLength;\n\t    while (true) {\n\t      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n\t      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n\t      if (block.length === 0) {\n\t        break;\n\t      }\n\t      stream.pos += block.length;\n\t      if (block.found) {\n\t        actualLength = stream.pos - streamStartPos;\n\t        break;\n\t      }\n\t    }\n\t    stream.pos = streamStartPos;\n\t    if (actualLength) {\n\t      return {\n\t        stream: new _stream.Stream(stream.getBytes(actualLength)),\n\t        length: actualLength\n\t      };\n\t    }\n\t    (0, _util.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n\t    return {\n\t      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\n\t      length: suggestedLength\n\t    };\n\t  }\n\t  function getEexecBlock(stream, suggestedLength) {\n\t    var eexecBytes = stream.getBytes();\n\t    return {\n\t      stream: new _stream.Stream(eexecBytes),\n\t      length: eexecBytes.length\n\t    };\n\t  }\n\t  function Type1Font(name, file, properties) {\n\t    var PFB_HEADER_SIZE = 6;\n\t    var headerBlockLength = properties.length1;\n\t    var eexecBlockLength = properties.length2;\n\t    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n\t    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n\t    if (pfbHeaderPresent) {\n\t      file.skip(PFB_HEADER_SIZE);\n\t      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n\t    }\n\t    var headerBlock = getHeaderBlock(file, headerBlockLength);\n\t    headerBlockLength = headerBlock.length;\n\t    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n\t    headerBlockParser.extractFontHeader(properties);\n\t    if (pfbHeaderPresent) {\n\t      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n\t      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n\t    }\n\t    var eexecBlock = getEexecBlock(file, eexecBlockLength);\n\t    eexecBlockLength = eexecBlock.length;\n\t    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n\t    var data = eexecBlockParser.extractFontProgram();\n\t    for (var info in data.properties) {\n\t      properties[info] = data.properties[info];\n\t    }\n\t    var charstrings = data.charstrings;\n\t    var type2Charstrings = this.getType2Charstrings(charstrings);\n\t    var subrs = this.getType2Subrs(data.subrs);\n\t    this.charstrings = charstrings;\n\t    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n\t    this.seacs = this.getSeacs(data.charstrings);\n\t  }\n\t  Type1Font.prototype = {\n\t    get numGlyphs() {\n\t      return this.charstrings.length + 1;\n\t    },\n\t    getCharset: function Type1Font_getCharset() {\n\t      var charset = ['.notdef'];\n\t      var charstrings = this.charstrings;\n\t      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n\t        charset.push(charstrings[glyphId].glyphName);\n\t      }\n\t      return charset;\n\t    },\n\t    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n\t      var charstrings = this.charstrings;\n\t      var glyphNames = ['.notdef'],\n\t          glyphId;\n\t      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n\t        glyphNames.push(charstrings[glyphId].glyphName);\n\t      }\n\t      var encoding = properties.builtInEncoding;\n\t      if (encoding) {\n\t        var builtInEncoding = Object.create(null);\n\t        for (var charCode in encoding) {\n\t          glyphId = glyphNames.indexOf(encoding[charCode]);\n\t          if (glyphId >= 0) {\n\t            builtInEncoding[charCode] = glyphId;\n\t          }\n\t        }\n\t      }\n\t      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n\t    },\n\t    getSeacs: function Type1Font_getSeacs(charstrings) {\n\t      var i, ii;\n\t      var seacMap = [];\n\t      for (i = 0, ii = charstrings.length; i < ii; i++) {\n\t        var charstring = charstrings[i];\n\t        if (charstring.seac) {\n\t          seacMap[i + 1] = charstring.seac;\n\t        }\n\t      }\n\t      return seacMap;\n\t    },\n\t    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n\t      var type2Charstrings = [];\n\t      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n\t        type2Charstrings.push(type1Charstrings[i].charstring);\n\t      }\n\t      return type2Charstrings;\n\t    },\n\t    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n\t      var bias = 0;\n\t      var count = type1Subrs.length;\n\t      if (count < 1133) {\n\t        bias = 107;\n\t      } else if (count < 33769) {\n\t        bias = 1131;\n\t      } else {\n\t        bias = 32768;\n\t      }\n\t      var type2Subrs = [];\n\t      var i;\n\t      for (i = 0; i < bias; i++) {\n\t        type2Subrs.push([0x0B]);\n\t      }\n\t      for (i = 0; i < count; i++) {\n\t        type2Subrs.push(type1Subrs[i]);\n\t      }\n\t      return type2Subrs;\n\t    },\n\t    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n\t      var cff = new _cff_parser.CFF();\n\t      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\n\t      cff.names = [name];\n\t      var topDict = new _cff_parser.CFFTopDict();\n\t      topDict.setByName('version', 391);\n\t      topDict.setByName('Notice', 392);\n\t      topDict.setByName('FullName', 393);\n\t      topDict.setByName('FamilyName', 394);\n\t      topDict.setByName('Weight', 395);\n\t      topDict.setByName('Encoding', null);\n\t      topDict.setByName('FontMatrix', properties.fontMatrix);\n\t      topDict.setByName('FontBBox', properties.bbox);\n\t      topDict.setByName('charset', null);\n\t      topDict.setByName('CharStrings', null);\n\t      topDict.setByName('Private', null);\n\t      cff.topDict = topDict;\n\t      var strings = new _cff_parser.CFFStrings();\n\t      strings.add('Version 0.11');\n\t      strings.add('See original notice');\n\t      strings.add(name);\n\t      strings.add(name);\n\t      strings.add('Medium');\n\t      cff.strings = strings;\n\t      cff.globalSubrIndex = new _cff_parser.CFFIndex();\n\t      var count = glyphs.length;\n\t      var charsetArray = [0];\n\t      var i, ii;\n\t      for (i = 0; i < count; i++) {\n\t        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\n\t        if (index === -1) {\n\t          index = 0;\n\t        }\n\t        charsetArray.push(index >> 8 & 0xff, index & 0xff);\n\t      }\n\t      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\n\t      var charStringsIndex = new _cff_parser.CFFIndex();\n\t      charStringsIndex.add([0x8B, 0x0E]);\n\t      for (i = 0; i < count; i++) {\n\t        var glyph = glyphs[i];\n\t        if (glyph.length === 0) {\n\t          charStringsIndex.add([0x8B, 0x0E]);\n\t          continue;\n\t        }\n\t        charStringsIndex.add(glyph);\n\t      }\n\t      cff.charStrings = charStringsIndex;\n\t      var privateDict = new _cff_parser.CFFPrivateDict();\n\t      privateDict.setByName('Subrs', null);\n\t      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\n\t      for (i = 0, ii = fields.length; i < ii; i++) {\n\t        var field = fields[i];\n\t        if (!(field in properties.privateData)) {\n\t          continue;\n\t        }\n\t        var value = properties.privateData[field];\n\t        if (Array.isArray(value)) {\n\t          for (var j = value.length - 1; j > 0; j--) {\n\t            value[j] -= value[j - 1];\n\t          }\n\t        }\n\t        privateDict.setByName(field, value);\n\t      }\n\t      cff.topDict.privateDict = privateDict;\n\t      var subrIndex = new _cff_parser.CFFIndex();\n\t      for (i = 0, ii = subrs.length; i < ii; i++) {\n\t        subrIndex.add(subrs[i]);\n\t      }\n\t      privateDict.subrsIndex = subrIndex;\n\t      var compiler = new _cff_parser.CFFCompiler(cff);\n\t      return compiler.compile();\n\t    }\n\t  };\n\t  return Type1Font;\n\t}();\n\tvar CFFFont = function CFFFontClosure() {\n\t  function CFFFont(file, properties) {\n\t    this.properties = properties;\n\t    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n\t    this.cff = parser.parse();\n\t    var compiler = new _cff_parser.CFFCompiler(this.cff);\n\t    this.seacs = this.cff.seacs;\n\t    try {\n\t      this.data = compiler.compile();\n\t    } catch (e) {\n\t      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n\t      this.data = file;\n\t    }\n\t  }\n\t  CFFFont.prototype = {\n\t    get numGlyphs() {\n\t      return this.cff.charStrings.count;\n\t    },\n\t    getCharset: function CFFFont_getCharset() {\n\t      return this.cff.charset.charset;\n\t    },\n\t    getGlyphMapping: function CFFFont_getGlyphMapping() {\n\t      var cff = this.cff;\n\t      var properties = this.properties;\n\t      var charsets = cff.charset.charset;\n\t      var charCodeToGlyphId;\n\t      var glyphId;\n\t      if (properties.composite) {\n\t        charCodeToGlyphId = Object.create(null);\n\t        if (cff.isCIDFont) {\n\t          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n\t            var cid = charsets[glyphId];\n\t            var charCode = properties.cMap.charCodeOf(cid);\n\t            charCodeToGlyphId[charCode] = glyphId;\n\t          }\n\t        } else {\n\t          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n\t            charCodeToGlyphId[glyphId] = glyphId;\n\t          }\n\t        }\n\t        return charCodeToGlyphId;\n\t      }\n\t      var encoding = cff.encoding ? cff.encoding.encoding : null;\n\t      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n\t      return charCodeToGlyphId;\n\t    }\n\t  };\n\t  return CFFFont;\n\t}();\n\t(function checkSeacSupport() {\n\t  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n\t    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\n\t  }\n\t})();\n\t(function checkChromeWindows() {\n\t  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n\t    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n\t  }\n\t})();\n\texports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\n\texports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\n\texports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\n\texports.ErrorFont = ErrorFont;\n\texports.Font = Font;\n\texports.FontFlags = FontFlags;\n\texports.ToUnicodeMap = ToUnicodeMap;\n\texports.IdentityToUnicodeMap = IdentityToUnicodeMap;\n\texports.ProblematicCharRanges = ProblematicCharRanges;\n\texports.getFontType = getFontType;\n\t\n\t/***/ }),\n\t/* 136 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\n\tvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\n\tvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\n\texports.ISOAdobeCharset = ISOAdobeCharset;\n\texports.ExpertCharset = ExpertCharset;\n\texports.ExpertSubsetCharset = ExpertSubsetCharset;\n\t\n\t/***/ }),\n\t/* 137 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.FontRendererFactory = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _cff_parser = __w_pdfjs_require__(78);\n\t\n\tvar _glyphlist = __w_pdfjs_require__(47);\n\t\n\tvar _encodings = __w_pdfjs_require__(28);\n\t\n\tvar _stream = __w_pdfjs_require__(5);\n\t\n\tvar FontRendererFactory = function FontRendererFactoryClosure() {\n\t  function getLong(data, offset) {\n\t    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n\t  }\n\t  function getUshort(data, offset) {\n\t    return data[offset] << 8 | data[offset + 1];\n\t  }\n\t  function parseCmap(data, start, end) {\n\t    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n\t    var format = getUshort(data, start + offset);\n\t    var ranges, p, i;\n\t    if (format === 4) {\n\t      getUshort(data, start + offset + 2);\n\t      var segCount = getUshort(data, start + offset + 6) >> 1;\n\t      p = start + offset + 14;\n\t      ranges = [];\n\t      for (i = 0; i < segCount; i++, p += 2) {\n\t        ranges[i] = { end: getUshort(data, p) };\n\t      }\n\t      p += 2;\n\t      for (i = 0; i < segCount; i++, p += 2) {\n\t        ranges[i].start = getUshort(data, p);\n\t      }\n\t      for (i = 0; i < segCount; i++, p += 2) {\n\t        ranges[i].idDelta = getUshort(data, p);\n\t      }\n\t      for (i = 0; i < segCount; i++, p += 2) {\n\t        var idOffset = getUshort(data, p);\n\t        if (idOffset === 0) {\n\t          continue;\n\t        }\n\t        ranges[i].ids = [];\n\t        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n\t          ranges[i].ids[j] = getUshort(data, p + idOffset);\n\t          idOffset += 2;\n\t        }\n\t      }\n\t      return ranges;\n\t    } else if (format === 12) {\n\t      getLong(data, start + offset + 4);\n\t      var groups = getLong(data, start + offset + 12);\n\t      p = start + offset + 16;\n\t      ranges = [];\n\t      for (i = 0; i < groups; i++) {\n\t        ranges.push({\n\t          start: getLong(data, p),\n\t          end: getLong(data, p + 4),\n\t          idDelta: getLong(data, p + 8) - getLong(data, p)\n\t        });\n\t        p += 12;\n\t      }\n\t      return ranges;\n\t    }\n\t    throw new _util.FormatError('unsupported cmap: ' + format);\n\t  }\n\t  function parseCff(data, start, end, seacAnalysisEnabled) {\n\t    var properties = {};\n\t    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\n\t    var cff = parser.parse();\n\t    return {\n\t      glyphs: cff.charStrings.objects,\n\t      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n\t      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects\n\t    };\n\t  }\n\t  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n\t    var itemSize, itemDecode;\n\t    if (isGlyphLocationsLong) {\n\t      itemSize = 4;\n\t      itemDecode = function fontItemDecodeLong(data, offset) {\n\t        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n\t      };\n\t    } else {\n\t      itemSize = 2;\n\t      itemDecode = function fontItemDecode(data, offset) {\n\t        return data[offset] << 9 | data[offset + 1] << 1;\n\t      };\n\t    }\n\t    var glyphs = [];\n\t    var startOffset = itemDecode(loca, 0);\n\t    for (var j = itemSize; j < loca.length; j += itemSize) {\n\t      var endOffset = itemDecode(loca, j);\n\t      glyphs.push(glyf.subarray(startOffset, endOffset));\n\t      startOffset = endOffset;\n\t    }\n\t    return glyphs;\n\t  }\n\t  function lookupCmap(ranges, unicode) {\n\t    var code = unicode.charCodeAt(0),\n\t        gid = 0;\n\t    var l = 0,\n\t        r = ranges.length - 1;\n\t    while (l < r) {\n\t      var c = l + r + 1 >> 1;\n\t      if (code < ranges[c].start) {\n\t        r = c - 1;\n\t      } else {\n\t        l = c;\n\t      }\n\t    }\n\t    if (ranges[l].start <= code && code <= ranges[l].end) {\n\t      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n\t    }\n\t    return {\n\t      charCode: code,\n\t      glyphId: gid\n\t    };\n\t  }\n\t  function compileGlyf(code, cmds, font) {\n\t    function moveTo(x, y) {\n\t      cmds.push({\n\t        cmd: 'moveTo',\n\t        args: [x, y]\n\t      });\n\t    }\n\t    function lineTo(x, y) {\n\t      cmds.push({\n\t        cmd: 'lineTo',\n\t        args: [x, y]\n\t      });\n\t    }\n\t    function quadraticCurveTo(xa, ya, x, y) {\n\t      cmds.push({\n\t        cmd: 'quadraticCurveTo',\n\t        args: [xa, ya, x, y]\n\t      });\n\t    }\n\t    var i = 0;\n\t    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n\t    var flags;\n\t    var x = 0,\n\t        y = 0;\n\t    i += 10;\n\t    if (numberOfContours < 0) {\n\t      do {\n\t        flags = code[i] << 8 | code[i + 1];\n\t        var glyphIndex = code[i + 2] << 8 | code[i + 3];\n\t        i += 4;\n\t        var arg1, arg2;\n\t        if (flags & 0x01) {\n\t          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n\t          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n\t          i += 4;\n\t        } else {\n\t          arg1 = code[i++];\n\t          arg2 = code[i++];\n\t        }\n\t        if (flags & 0x02) {\n\t          x = arg1;\n\t          y = arg2;\n\t        } else {\n\t          x = 0;\n\t          y = 0;\n\t        }\n\t        var scaleX = 1,\n\t            scaleY = 1,\n\t            scale01 = 0,\n\t            scale10 = 0;\n\t        if (flags & 0x08) {\n\t          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n\t          i += 2;\n\t        } else if (flags & 0x40) {\n\t          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n\t          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n\t          i += 4;\n\t        } else if (flags & 0x80) {\n\t          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n\t          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n\t          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n\t          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n\t          i += 8;\n\t        }\n\t        var subglyph = font.glyphs[glyphIndex];\n\t        if (subglyph) {\n\t          cmds.push({ cmd: 'save' });\n\t          cmds.push({\n\t            cmd: 'transform',\n\t            args: [scaleX, scale01, scale10, scaleY, x, y]\n\t          });\n\t          compileGlyf(subglyph, cmds, font);\n\t          cmds.push({ cmd: 'restore' });\n\t        }\n\t      } while (flags & 0x20);\n\t    } else {\n\t      var endPtsOfContours = [];\n\t      var j, jj;\n\t      for (j = 0; j < numberOfContours; j++) {\n\t        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n\t        i += 2;\n\t      }\n\t      var instructionLength = code[i] << 8 | code[i + 1];\n\t      i += 2 + instructionLength;\n\t      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n\t      var points = [];\n\t      while (points.length < numberOfPoints) {\n\t        flags = code[i++];\n\t        var repeat = 1;\n\t        if (flags & 0x08) {\n\t          repeat += code[i++];\n\t        }\n\t        while (repeat-- > 0) {\n\t          points.push({ flags: flags });\n\t        }\n\t      }\n\t      for (j = 0; j < numberOfPoints; j++) {\n\t        switch (points[j].flags & 0x12) {\n\t          case 0x00:\n\t            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n\t            i += 2;\n\t            break;\n\t          case 0x02:\n\t            x -= code[i++];\n\t            break;\n\t          case 0x12:\n\t            x += code[i++];\n\t            break;\n\t        }\n\t        points[j].x = x;\n\t      }\n\t      for (j = 0; j < numberOfPoints; j++) {\n\t        switch (points[j].flags & 0x24) {\n\t          case 0x00:\n\t            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n\t            i += 2;\n\t            break;\n\t          case 0x04:\n\t            y -= code[i++];\n\t            break;\n\t          case 0x24:\n\t            y += code[i++];\n\t            break;\n\t        }\n\t        points[j].y = y;\n\t      }\n\t      var startPoint = 0;\n\t      for (i = 0; i < numberOfContours; i++) {\n\t        var endPoint = endPtsOfContours[i];\n\t        var contour = points.slice(startPoint, endPoint + 1);\n\t        if (contour[0].flags & 1) {\n\t          contour.push(contour[0]);\n\t        } else if (contour[contour.length - 1].flags & 1) {\n\t          contour.unshift(contour[contour.length - 1]);\n\t        } else {\n\t          var p = {\n\t            flags: 1,\n\t            x: (contour[0].x + contour[contour.length - 1].x) / 2,\n\t            y: (contour[0].y + contour[contour.length - 1].y) / 2\n\t          };\n\t          contour.unshift(p);\n\t          contour.push(p);\n\t        }\n\t        moveTo(contour[0].x, contour[0].y);\n\t        for (j = 1, jj = contour.length; j < jj; j++) {\n\t          if (contour[j].flags & 1) {\n\t            lineTo(contour[j].x, contour[j].y);\n\t          } else if (contour[j + 1].flags & 1) {\n\t            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n\t            j++;\n\t          } else {\n\t            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n\t          }\n\t        }\n\t        startPoint = endPoint + 1;\n\t      }\n\t    }\n\t  }\n\t  function compileCharString(code, cmds, font) {\n\t    var stack = [];\n\t    var x = 0,\n\t        y = 0;\n\t    var stems = 0;\n\t    function moveTo(x, y) {\n\t      cmds.push({\n\t        cmd: 'moveTo',\n\t        args: [x, y]\n\t      });\n\t    }\n\t    function lineTo(x, y) {\n\t      cmds.push({\n\t        cmd: 'lineTo',\n\t        args: [x, y]\n\t      });\n\t    }\n\t    function bezierCurveTo(x1, y1, x2, y2, x, y) {\n\t      cmds.push({\n\t        cmd: 'bezierCurveTo',\n\t        args: [x1, y1, x2, y2, x, y]\n\t      });\n\t    }\n\t    function parse(code) {\n\t      var i = 0;\n\t      while (i < code.length) {\n\t        var stackClean = false;\n\t        var v = code[i++];\n\t        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n\t        switch (v) {\n\t          case 1:\n\t            stems += stack.length >> 1;\n\t            stackClean = true;\n\t            break;\n\t          case 3:\n\t            stems += stack.length >> 1;\n\t            stackClean = true;\n\t            break;\n\t          case 4:\n\t            y += stack.pop();\n\t            moveTo(x, y);\n\t            stackClean = true;\n\t            break;\n\t          case 5:\n\t            while (stack.length > 0) {\n\t              x += stack.shift();\n\t              y += stack.shift();\n\t              lineTo(x, y);\n\t            }\n\t            break;\n\t          case 6:\n\t            while (stack.length > 0) {\n\t              x += stack.shift();\n\t              lineTo(x, y);\n\t              if (stack.length === 0) {\n\t                break;\n\t              }\n\t              y += stack.shift();\n\t              lineTo(x, y);\n\t            }\n\t            break;\n\t          case 7:\n\t            while (stack.length > 0) {\n\t              y += stack.shift();\n\t              lineTo(x, y);\n\t              if (stack.length === 0) {\n\t                break;\n\t              }\n\t              x += stack.shift();\n\t              lineTo(x, y);\n\t            }\n\t            break;\n\t          case 8:\n\t            while (stack.length > 0) {\n\t              xa = x + stack.shift();\n\t              ya = y + stack.shift();\n\t              xb = xa + stack.shift();\n\t              yb = ya + stack.shift();\n\t              x = xb + stack.shift();\n\t              y = yb + stack.shift();\n\t              bezierCurveTo(xa, ya, xb, yb, x, y);\n\t            }\n\t            break;\n\t          case 10:\n\t            n = stack.pop() + font.subrsBias;\n\t            subrCode = font.subrs[n];\n\t            if (subrCode) {\n\t              parse(subrCode);\n\t            }\n\t            break;\n\t          case 11:\n\t            return;\n\t          case 12:\n\t            v = code[i++];\n\t            switch (v) {\n\t              case 34:\n\t                xa = x + stack.shift();\n\t                xb = xa + stack.shift();\n\t                y1 = y + stack.shift();\n\t                x = xb + stack.shift();\n\t                bezierCurveTo(xa, y, xb, y1, x, y1);\n\t                xa = x + stack.shift();\n\t                xb = xa + stack.shift();\n\t                x = xb + stack.shift();\n\t                bezierCurveTo(xa, y1, xb, y, x, y);\n\t                break;\n\t              case 35:\n\t                xa = x + stack.shift();\n\t                ya = y + stack.shift();\n\t                xb = xa + stack.shift();\n\t                yb = ya + stack.shift();\n\t                x = xb + stack.shift();\n\t                y = yb + stack.shift();\n\t                bezierCurveTo(xa, ya, xb, yb, x, y);\n\t                xa = x + stack.shift();\n\t                ya = y + stack.shift();\n\t                xb = xa + stack.shift();\n\t                yb = ya + stack.shift();\n\t                x = xb + stack.shift();\n\t                y = yb + stack.shift();\n\t                bezierCurveTo(xa, ya, xb, yb, x, y);\n\t                stack.pop();\n\t                break;\n\t              case 36:\n\t                xa = x + stack.shift();\n\t                y1 = y + stack.shift();\n\t                xb = xa + stack.shift();\n\t                y2 = y1 + stack.shift();\n\t                x = xb + stack.shift();\n\t                bezierCurveTo(xa, y1, xb, y2, x, y2);\n\t                xa = x + stack.shift();\n\t                xb = xa + stack.shift();\n\t                y3 = y2 + stack.shift();\n\t                x = xb + stack.shift();\n\t                bezierCurveTo(xa, y2, xb, y3, x, y);\n\t                break;\n\t              case 37:\n\t                var x0 = x,\n\t                    y0 = y;\n\t                xa = x + stack.shift();\n\t                ya = y + stack.shift();\n\t                xb = xa + stack.shift();\n\t                yb = ya + stack.shift();\n\t                x = xb + stack.shift();\n\t                y = yb + stack.shift();\n\t                bezierCurveTo(xa, ya, xb, yb, x, y);\n\t                xa = x + stack.shift();\n\t                ya = y + stack.shift();\n\t                xb = xa + stack.shift();\n\t                yb = ya + stack.shift();\n\t                x = xb;\n\t                y = yb;\n\t                if (Math.abs(x - x0) > Math.abs(y - y0)) {\n\t                  x += stack.shift();\n\t                } else {\n\t                  y += stack.shift();\n\t                }\n\t                bezierCurveTo(xa, ya, xb, yb, x, y);\n\t                break;\n\t              default:\n\t                throw new _util.FormatError('unknown operator: 12 ' + v);\n\t            }\n\t            break;\n\t          case 14:\n\t            if (stack.length >= 4) {\n\t              var achar = stack.pop();\n\t              var bchar = stack.pop();\n\t              y = stack.pop();\n\t              x = stack.pop();\n\t              cmds.push({ cmd: 'save' });\n\t              cmds.push({\n\t                cmd: 'translate',\n\t                args: [x, y]\n\t              });\n\t              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\n\t              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n\t              cmds.push({ cmd: 'restore' });\n\t              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\n\t              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n\t            }\n\t            return;\n\t          case 18:\n\t            stems += stack.length >> 1;\n\t            stackClean = true;\n\t            break;\n\t          case 19:\n\t            stems += stack.length >> 1;\n\t            i += stems + 7 >> 3;\n\t            stackClean = true;\n\t            break;\n\t          case 20:\n\t            stems += stack.length >> 1;\n\t            i += stems + 7 >> 3;\n\t            stackClean = true;\n\t            break;\n\t          case 21:\n\t            y += stack.pop();\n\t            x += stack.pop();\n\t            moveTo(x, y);\n\t            stackClean = true;\n\t            break;\n\t          case 22:\n\t            x += stack.pop();\n\t            moveTo(x, y);\n\t            stackClean = true;\n\t            break;\n\t          case 23:\n\t            stems += stack.length >> 1;\n\t            stackClean = true;\n\t            break;\n\t          case 24:\n\t            while (stack.length > 2) {\n\t              xa = x + stack.shift();\n\t              ya = y + stack.shift();\n\t              xb = xa + stack.shift();\n\t              yb = ya + stack.shift();\n\t              x = xb + stack.shift();\n\t              y = yb + stack.shift();\n\t              bezierCurveTo(xa, ya, xb, yb, x, y);\n\t            }\n\t            x += stack.shift();\n\t            y += stack.shift();\n\t            lineTo(x, y);\n\t            break;\n\t          case 25:\n\t            while (stack.length > 6) {\n\t              x += stack.shift();\n\t              y += stack.shift();\n\t              lineTo(x, y);\n\t            }\n\t            xa = x + stack.shift();\n\t            ya = y + stack.shift();\n\t            xb = xa + stack.shift();\n\t            yb = ya + stack.shift();\n\t            x = xb + stack.shift();\n\t            y = yb + stack.shift();\n\t            bezierCurveTo(xa, ya, xb, yb, x, y);\n\t            break;\n\t          case 26:\n\t            if (stack.length % 2) {\n\t              x += stack.shift();\n\t            }\n\t            while (stack.length > 0) {\n\t              xa = x;\n\t              ya = y + stack.shift();\n\t              xb = xa + stack.shift();\n\t              yb = ya + stack.shift();\n\t              x = xb;\n\t              y = yb + stack.shift();\n\t              bezierCurveTo(xa, ya, xb, yb, x, y);\n\t            }\n\t            break;\n\t          case 27:\n\t            if (stack.length % 2) {\n\t              y += stack.shift();\n\t            }\n\t            while (stack.length > 0) {\n\t              xa = x + stack.shift();\n\t              ya = y;\n\t              xb = xa + stack.shift();\n\t              yb = ya + stack.shift();\n\t              x = xb + stack.shift();\n\t              y = yb;\n\t              bezierCurveTo(xa, ya, xb, yb, x, y);\n\t            }\n\t            break;\n\t          case 28:\n\t            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n\t            i += 2;\n\t            break;\n\t          case 29:\n\t            n = stack.pop() + font.gsubrsBias;\n\t            subrCode = font.gsubrs[n];\n\t            if (subrCode) {\n\t              parse(subrCode);\n\t            }\n\t            break;\n\t          case 30:\n\t            while (stack.length > 0) {\n\t              xa = x;\n\t              ya = y + stack.shift();\n\t              xb = xa + stack.shift();\n\t              yb = ya + stack.shift();\n\t              x = xb + stack.shift();\n\t              y = yb + (stack.length === 1 ? stack.shift() : 0);\n\t              bezierCurveTo(xa, ya, xb, yb, x, y);\n\t              if (stack.length === 0) {\n\t                break;\n\t              }\n\t              xa = x + stack.shift();\n\t              ya = y;\n\t              xb = xa + stack.shift();\n\t              yb = ya + stack.shift();\n\t              y = yb + stack.shift();\n\t              x = xb + (stack.length === 1 ? stack.shift() : 0);\n\t              bezierCurveTo(xa, ya, xb, yb, x, y);\n\t            }\n\t            break;\n\t          case 31:\n\t            while (stack.length > 0) {\n\t              xa = x + stack.shift();\n\t              ya = y;\n\t              xb = xa + stack.shift();\n\t              yb = ya + stack.shift();\n\t              y = yb + stack.shift();\n\t              x = xb + (stack.length === 1 ? stack.shift() : 0);\n\t              bezierCurveTo(xa, ya, xb, yb, x, y);\n\t              if (stack.length === 0) {\n\t                break;\n\t              }\n\t              xa = x;\n\t              ya = y + stack.shift();\n\t              xb = xa + stack.shift();\n\t              yb = ya + stack.shift();\n\t              x = xb + stack.shift();\n\t              y = yb + (stack.length === 1 ? stack.shift() : 0);\n\t              bezierCurveTo(xa, ya, xb, yb, x, y);\n\t            }\n\t            break;\n\t          default:\n\t            if (v < 32) {\n\t              throw new _util.FormatError('unknown operator: ' + v);\n\t            }\n\t            if (v < 247) {\n\t              stack.push(v - 139);\n\t            } else if (v < 251) {\n\t              stack.push((v - 247) * 256 + code[i++] + 108);\n\t            } else if (v < 255) {\n\t              stack.push(-(v - 251) * 256 - code[i++] - 108);\n\t            } else {\n\t              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n\t              i += 4;\n\t            }\n\t            break;\n\t        }\n\t        if (stackClean) {\n\t          stack.length = 0;\n\t        }\n\t      }\n\t    }\n\t    parse(code);\n\t  }\n\t  var noop = '';\n\t  function CompiledFont(fontMatrix) {\n\t    this.compiledGlyphs = Object.create(null);\n\t    this.compiledCharCodeToGlyphId = Object.create(null);\n\t    this.fontMatrix = fontMatrix;\n\t  }\n\t  CompiledFont.prototype = {\n\t    getPathJs: function getPathJs(unicode) {\n\t      var cmap = lookupCmap(this.cmap, unicode);\n\t      var fn = this.compiledGlyphs[cmap.glyphId];\n\t      if (!fn) {\n\t        fn = this.compileGlyph(this.glyphs[cmap.glyphId]);\n\t        this.compiledGlyphs[cmap.glyphId] = fn;\n\t      }\n\t      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n\t        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n\t      }\n\t      return fn;\n\t    },\n\t    compileGlyph: function compileGlyph(code) {\n\t      if (!code || code.length === 0 || code[0] === 14) {\n\t        return noop;\n\t      }\n\t      var cmds = [];\n\t      cmds.push({ cmd: 'save' });\n\t      cmds.push({\n\t        cmd: 'transform',\n\t        args: this.fontMatrix.slice()\n\t      });\n\t      cmds.push({\n\t        cmd: 'scale',\n\t        args: ['size', '-size']\n\t      });\n\t      this.compileGlyphImpl(code, cmds);\n\t      cmds.push({ cmd: 'restore' });\n\t      return cmds;\n\t    },\n\t    compileGlyphImpl: function compileGlyphImpl() {\n\t      throw new Error('Children classes should implement this.');\n\t    },\n\t    hasBuiltPath: function hasBuiltPath(unicode) {\n\t      var cmap = lookupCmap(this.cmap, unicode);\n\t      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n\t    }\n\t  };\n\t  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n\t    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\n\t    CompiledFont.call(this, fontMatrix);\n\t    this.glyphs = glyphs;\n\t    this.cmap = cmap;\n\t  }\n\t  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\n\t    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n\t      compileGlyf(code, cmds, this);\n\t    }\n\t  });\n\t  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n\t    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\n\t    CompiledFont.call(this, fontMatrix);\n\t    this.glyphs = cffInfo.glyphs;\n\t    this.gsubrs = cffInfo.gsubrs || [];\n\t    this.subrs = cffInfo.subrs || [];\n\t    this.cmap = cmap;\n\t    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\n\t    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n\t    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n\t  }\n\t  _util.Util.inherit(Type2Compiled, CompiledFont, {\n\t    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n\t      compileCharString(code, cmds, this);\n\t    }\n\t  });\n\t  return {\n\t    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n\t      var data = new Uint8Array(font.data);\n\t      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n\t      var numTables = getUshort(data, 4);\n\t      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n\t        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\n\t        var offset = getLong(data, p + 8);\n\t        var length = getLong(data, p + 12);\n\t        switch (tag) {\n\t          case 'cmap':\n\t            cmap = parseCmap(data, offset, offset + length);\n\t            break;\n\t          case 'glyf':\n\t            glyf = data.subarray(offset, offset + length);\n\t            break;\n\t          case 'loca':\n\t            loca = data.subarray(offset, offset + length);\n\t            break;\n\t          case 'head':\n\t            unitsPerEm = getUshort(data, offset + 18);\n\t            indexToLocFormat = getUshort(data, offset + 50);\n\t            break;\n\t          case 'CFF ':\n\t            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n\t            break;\n\t        }\n\t      }\n\t      if (glyf) {\n\t        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\n\t        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n\t      }\n\t      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n\t    }\n\t  };\n\t}();\n\texports.FontRendererFactory = FontRendererFactory;\n\t\n\t/***/ }),\n\t/* 138 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Type1Parser = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _encodings = __w_pdfjs_require__(28);\n\t\n\tvar _stream = __w_pdfjs_require__(5);\n\t\n\tvar HINTING_ENABLED = false;\n\tvar Type1CharString = function Type1CharStringClosure() {\n\t  var COMMAND_MAP = {\n\t    'hstem': [1],\n\t    'vstem': [3],\n\t    'vmoveto': [4],\n\t    'rlineto': [5],\n\t    'hlineto': [6],\n\t    'vlineto': [7],\n\t    'rrcurveto': [8],\n\t    'callsubr': [10],\n\t    'flex': [12, 35],\n\t    'drop': [12, 18],\n\t    'endchar': [14],\n\t    'rmoveto': [21],\n\t    'hmoveto': [22],\n\t    'vhcurveto': [30],\n\t    'hvcurveto': [31]\n\t  };\n\t  function Type1CharString() {\n\t    this.width = 0;\n\t    this.lsb = 0;\n\t    this.flexing = false;\n\t    this.output = [];\n\t    this.stack = [];\n\t  }\n\t  Type1CharString.prototype = {\n\t    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n\t      var count = encoded.length;\n\t      var error = false;\n\t      var wx, sbx, subrNumber;\n\t      for (var i = 0; i < count; i++) {\n\t        var value = encoded[i];\n\t        if (value < 32) {\n\t          if (value === 12) {\n\t            value = (value << 8) + encoded[++i];\n\t          }\n\t          switch (value) {\n\t            case 1:\n\t              if (!HINTING_ENABLED) {\n\t                this.stack = [];\n\t                break;\n\t              }\n\t              error = this.executeCommand(2, COMMAND_MAP.hstem);\n\t              break;\n\t            case 3:\n\t              if (!HINTING_ENABLED) {\n\t                this.stack = [];\n\t                break;\n\t              }\n\t              error = this.executeCommand(2, COMMAND_MAP.vstem);\n\t              break;\n\t            case 4:\n\t              if (this.flexing) {\n\t                if (this.stack.length < 1) {\n\t                  error = true;\n\t                  break;\n\t                }\n\t                var dy = this.stack.pop();\n\t                this.stack.push(0, dy);\n\t                break;\n\t              }\n\t              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n\t              break;\n\t            case 5:\n\t              error = this.executeCommand(2, COMMAND_MAP.rlineto);\n\t              break;\n\t            case 6:\n\t              error = this.executeCommand(1, COMMAND_MAP.hlineto);\n\t              break;\n\t            case 7:\n\t              error = this.executeCommand(1, COMMAND_MAP.vlineto);\n\t              break;\n\t            case 8:\n\t              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n\t              break;\n\t            case 9:\n\t              this.stack = [];\n\t              break;\n\t            case 10:\n\t              if (this.stack.length < 1) {\n\t                error = true;\n\t                break;\n\t              }\n\t              subrNumber = this.stack.pop();\n\t              if (!subrs[subrNumber]) {\n\t                error = true;\n\t                break;\n\t              }\n\t              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n\t              break;\n\t            case 11:\n\t              return error;\n\t            case 13:\n\t              if (this.stack.length < 2) {\n\t                error = true;\n\t                break;\n\t              }\n\t              wx = this.stack.pop();\n\t              sbx = this.stack.pop();\n\t              this.lsb = sbx;\n\t              this.width = wx;\n\t              this.stack.push(wx, sbx);\n\t              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n\t              break;\n\t            case 14:\n\t              this.output.push(COMMAND_MAP.endchar[0]);\n\t              break;\n\t            case 21:\n\t              if (this.flexing) {\n\t                break;\n\t              }\n\t              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n\t              break;\n\t            case 22:\n\t              if (this.flexing) {\n\t                this.stack.push(0);\n\t                break;\n\t              }\n\t              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n\t              break;\n\t            case 30:\n\t              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n\t              break;\n\t            case 31:\n\t              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n\t              break;\n\t            case (12 << 8) + 0:\n\t              this.stack = [];\n\t              break;\n\t            case (12 << 8) + 1:\n\t              if (!HINTING_ENABLED) {\n\t                this.stack = [];\n\t                break;\n\t              }\n\t              error = this.executeCommand(2, COMMAND_MAP.vstem);\n\t              break;\n\t            case (12 << 8) + 2:\n\t              if (!HINTING_ENABLED) {\n\t                this.stack = [];\n\t                break;\n\t              }\n\t              error = this.executeCommand(2, COMMAND_MAP.hstem);\n\t              break;\n\t            case (12 << 8) + 6:\n\t              if (seacAnalysisEnabled) {\n\t                this.seac = this.stack.splice(-4, 4);\n\t                error = this.executeCommand(0, COMMAND_MAP.endchar);\n\t              } else {\n\t                error = this.executeCommand(4, COMMAND_MAP.endchar);\n\t              }\n\t              break;\n\t            case (12 << 8) + 7:\n\t              if (this.stack.length < 4) {\n\t                error = true;\n\t                break;\n\t              }\n\t              this.stack.pop();\n\t              wx = this.stack.pop();\n\t              var sby = this.stack.pop();\n\t              sbx = this.stack.pop();\n\t              this.lsb = sbx;\n\t              this.width = wx;\n\t              this.stack.push(wx, sbx, sby);\n\t              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n\t              break;\n\t            case (12 << 8) + 12:\n\t              if (this.stack.length < 2) {\n\t                error = true;\n\t                break;\n\t              }\n\t              var num2 = this.stack.pop();\n\t              var num1 = this.stack.pop();\n\t              this.stack.push(num1 / num2);\n\t              break;\n\t            case (12 << 8) + 16:\n\t              if (this.stack.length < 2) {\n\t                error = true;\n\t                break;\n\t              }\n\t              subrNumber = this.stack.pop();\n\t              var numArgs = this.stack.pop();\n\t              if (subrNumber === 0 && numArgs === 3) {\n\t                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n\t                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n\t                error = this.executeCommand(13, COMMAND_MAP.flex, true);\n\t                this.flexing = false;\n\t                this.stack.push(flexArgs[15], flexArgs[16]);\n\t              } else if (subrNumber === 1 && numArgs === 0) {\n\t                this.flexing = true;\n\t              }\n\t              break;\n\t            case (12 << 8) + 17:\n\t              break;\n\t            case (12 << 8) + 33:\n\t              this.stack = [];\n\t              break;\n\t            default:\n\t              (0, _util.warn)('Unknown type 1 charstring command of \"' + value + '\"');\n\t              break;\n\t          }\n\t          if (error) {\n\t            break;\n\t          }\n\t          continue;\n\t        } else if (value <= 246) {\n\t          value = value - 139;\n\t        } else if (value <= 250) {\n\t          value = (value - 247) * 256 + encoded[++i] + 108;\n\t        } else if (value <= 254) {\n\t          value = -((value - 251) * 256) - encoded[++i] - 108;\n\t        } else {\n\t          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n\t        }\n\t        this.stack.push(value);\n\t      }\n\t      return error;\n\t    },\n\t    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\n\t      var stackLength = this.stack.length;\n\t      if (howManyArgs > stackLength) {\n\t        return true;\n\t      }\n\t      var start = stackLength - howManyArgs;\n\t      for (var i = start; i < stackLength; i++) {\n\t        var value = this.stack[i];\n\t        if (Number.isInteger(value)) {\n\t          this.output.push(28, value >> 8 & 0xff, value & 0xff);\n\t        } else {\n\t          value = 65536 * value | 0;\n\t          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n\t        }\n\t      }\n\t      this.output.push.apply(this.output, command);\n\t      if (keepStack) {\n\t        this.stack.splice(start, howManyArgs);\n\t      } else {\n\t        this.stack.length = 0;\n\t      }\n\t      return false;\n\t    }\n\t  };\n\t  return Type1CharString;\n\t}();\n\tvar Type1Parser = function Type1ParserClosure() {\n\t  var EEXEC_ENCRYPT_KEY = 55665;\n\t  var CHAR_STRS_ENCRYPT_KEY = 4330;\n\t  function isHexDigit(code) {\n\t    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n\t  }\n\t  function decrypt(data, key, discardNumber) {\n\t    if (discardNumber >= data.length) {\n\t      return new Uint8Array(0);\n\t    }\n\t    var r = key | 0,\n\t        c1 = 52845,\n\t        c2 = 22719,\n\t        i,\n\t        j;\n\t    for (i = 0; i < discardNumber; i++) {\n\t      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n\t    }\n\t    var count = data.length - discardNumber;\n\t    var decrypted = new Uint8Array(count);\n\t    for (i = discardNumber, j = 0; j < count; i++, j++) {\n\t      var value = data[i];\n\t      decrypted[j] = value ^ r >> 8;\n\t      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n\t    }\n\t    return decrypted;\n\t  }\n\t  function decryptAscii(data, key, discardNumber) {\n\t    var r = key | 0,\n\t        c1 = 52845,\n\t        c2 = 22719;\n\t    var count = data.length,\n\t        maybeLength = count >>> 1;\n\t    var decrypted = new Uint8Array(maybeLength);\n\t    var i, j;\n\t    for (i = 0, j = 0; i < count; i++) {\n\t      var digit1 = data[i];\n\t      if (!isHexDigit(digit1)) {\n\t        continue;\n\t      }\n\t      i++;\n\t      var digit2;\n\t      while (i < count && !isHexDigit(digit2 = data[i])) {\n\t        i++;\n\t      }\n\t      if (i < count) {\n\t        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n\t        decrypted[j++] = value ^ r >> 8;\n\t        r = (value + r) * c1 + c2 & (1 << 16) - 1;\n\t      }\n\t    }\n\t    return Array.prototype.slice.call(decrypted, discardNumber, j);\n\t  }\n\t  function isSpecial(c) {\n\t    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n\t  }\n\t  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n\t    if (encrypted) {\n\t      var data = stream.getBytes();\n\t      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n\t      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n\t    }\n\t    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n\t    this.stream = stream;\n\t    this.nextChar();\n\t  }\n\t  Type1Parser.prototype = {\n\t    readNumberArray: function Type1Parser_readNumberArray() {\n\t      this.getToken();\n\t      var array = [];\n\t      while (true) {\n\t        var token = this.getToken();\n\t        if (token === null || token === ']' || token === '}') {\n\t          break;\n\t        }\n\t        array.push(parseFloat(token || 0));\n\t      }\n\t      return array;\n\t    },\n\t    readNumber: function Type1Parser_readNumber() {\n\t      var token = this.getToken();\n\t      return parseFloat(token || 0);\n\t    },\n\t    readInt: function Type1Parser_readInt() {\n\t      var token = this.getToken();\n\t      return parseInt(token || 0, 10) | 0;\n\t    },\n\t    readBoolean: function Type1Parser_readBoolean() {\n\t      var token = this.getToken();\n\t      return token === 'true' ? 1 : 0;\n\t    },\n\t    nextChar: function Type1_nextChar() {\n\t      return this.currentChar = this.stream.getByte();\n\t    },\n\t    getToken: function Type1Parser_getToken() {\n\t      var comment = false;\n\t      var ch = this.currentChar;\n\t      while (true) {\n\t        if (ch === -1) {\n\t          return null;\n\t        }\n\t        if (comment) {\n\t          if (ch === 0x0A || ch === 0x0D) {\n\t            comment = false;\n\t          }\n\t        } else if (ch === 0x25) {\n\t          comment = true;\n\t        } else if (!(0, _util.isSpace)(ch)) {\n\t          break;\n\t        }\n\t        ch = this.nextChar();\n\t      }\n\t      if (isSpecial(ch)) {\n\t        this.nextChar();\n\t        return String.fromCharCode(ch);\n\t      }\n\t      var token = '';\n\t      do {\n\t        token += String.fromCharCode(ch);\n\t        ch = this.nextChar();\n\t      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\n\t      return token;\n\t    },\n\t    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\n\t      if (lenIV === -1) {\n\t        return bytes;\n\t      }\n\t      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\n\t    },\n\t    extractFontProgram: function Type1Parser_extractFontProgram() {\n\t      var stream = this.stream;\n\t      var subrs = [],\n\t          charstrings = [];\n\t      var privateData = Object.create(null);\n\t      privateData['lenIV'] = 4;\n\t      var program = {\n\t        subrs: [],\n\t        charstrings: [],\n\t        properties: { 'privateData': privateData }\n\t      };\n\t      var token, length, data, lenIV, encoded;\n\t      while ((token = this.getToken()) !== null) {\n\t        if (token !== '/') {\n\t          continue;\n\t        }\n\t        token = this.getToken();\n\t        switch (token) {\n\t          case 'CharStrings':\n\t            this.getToken();\n\t            this.getToken();\n\t            this.getToken();\n\t            this.getToken();\n\t            while (true) {\n\t              token = this.getToken();\n\t              if (token === null || token === 'end') {\n\t                break;\n\t              }\n\t              if (token !== '/') {\n\t                continue;\n\t              }\n\t              var glyph = this.getToken();\n\t              length = this.readInt();\n\t              this.getToken();\n\t              data = stream.makeSubStream(stream.pos, length);\n\t              lenIV = program.properties.privateData['lenIV'];\n\t              encoded = this.readCharStrings(data.getBytes(), lenIV);\n\t              stream.skip(length);\n\t              this.nextChar();\n\t              token = this.getToken();\n\t              if (token === 'noaccess') {\n\t                this.getToken();\n\t              }\n\t              charstrings.push({\n\t                glyph: glyph,\n\t                encoded: encoded\n\t              });\n\t            }\n\t            break;\n\t          case 'Subrs':\n\t            this.readInt();\n\t            this.getToken();\n\t            while ((token = this.getToken()) === 'dup') {\n\t              var index = this.readInt();\n\t              length = this.readInt();\n\t              this.getToken();\n\t              data = stream.makeSubStream(stream.pos, length);\n\t              lenIV = program.properties.privateData['lenIV'];\n\t              encoded = this.readCharStrings(data.getBytes(), lenIV);\n\t              stream.skip(length);\n\t              this.nextChar();\n\t              token = this.getToken();\n\t              if (token === 'noaccess') {\n\t                this.getToken();\n\t              }\n\t              subrs[index] = encoded;\n\t            }\n\t            break;\n\t          case 'BlueValues':\n\t          case 'OtherBlues':\n\t          case 'FamilyBlues':\n\t          case 'FamilyOtherBlues':\n\t            var blueArray = this.readNumberArray();\n\t            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n\t              program.properties.privateData[token] = blueArray;\n\t            }\n\t            break;\n\t          case 'StemSnapH':\n\t          case 'StemSnapV':\n\t            program.properties.privateData[token] = this.readNumberArray();\n\t            break;\n\t          case 'StdHW':\n\t          case 'StdVW':\n\t            program.properties.privateData[token] = this.readNumberArray()[0];\n\t            break;\n\t          case 'BlueShift':\n\t          case 'lenIV':\n\t          case 'BlueFuzz':\n\t          case 'BlueScale':\n\t          case 'LanguageGroup':\n\t          case 'ExpansionFactor':\n\t            program.properties.privateData[token] = this.readNumber();\n\t            break;\n\t          case 'ForceBold':\n\t            program.properties.privateData[token] = this.readBoolean();\n\t            break;\n\t        }\n\t      }\n\t      for (var i = 0; i < charstrings.length; i++) {\n\t        glyph = charstrings[i].glyph;\n\t        encoded = charstrings[i].encoded;\n\t        var charString = new Type1CharString();\n\t        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n\t        var output = charString.output;\n\t        if (error) {\n\t          output = [14];\n\t        }\n\t        program.charstrings.push({\n\t          glyphName: glyph,\n\t          charstring: output,\n\t          width: charString.width,\n\t          lsb: charString.lsb,\n\t          seac: charString.seac\n\t        });\n\t      }\n\t      return program;\n\t    },\n\t    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n\t      var token;\n\t      while ((token = this.getToken()) !== null) {\n\t        if (token !== '/') {\n\t          continue;\n\t        }\n\t        token = this.getToken();\n\t        switch (token) {\n\t          case 'FontMatrix':\n\t            var matrix = this.readNumberArray();\n\t            properties.fontMatrix = matrix;\n\t            break;\n\t          case 'Encoding':\n\t            var encodingArg = this.getToken();\n\t            var encoding;\n\t            if (!/^\\d+$/.test(encodingArg)) {\n\t              encoding = (0, _encodings.getEncoding)(encodingArg);\n\t            } else {\n\t              encoding = [];\n\t              var size = parseInt(encodingArg, 10) | 0;\n\t              this.getToken();\n\t              for (var j = 0; j < size; j++) {\n\t                token = this.getToken();\n\t                while (token !== 'dup' && token !== 'def') {\n\t                  token = this.getToken();\n\t                  if (token === null) {\n\t                    return;\n\t                  }\n\t                }\n\t                if (token === 'def') {\n\t                  break;\n\t                }\n\t                var index = this.readInt();\n\t                this.getToken();\n\t                var glyph = this.getToken();\n\t                encoding[index] = glyph;\n\t                this.getToken();\n\t              }\n\t            }\n\t            properties.builtInEncoding = encoding;\n\t            break;\n\t          case 'FontBBox':\n\t            var fontBBox = this.readNumberArray();\n\t            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n\t            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n\t            properties.ascentScaled = true;\n\t            break;\n\t        }\n\t      }\n\t    }\n\t  };\n\t  return Type1Parser;\n\t}();\n\texports.Type1Parser = Type1Parser;\n\t\n\t/***/ }),\n\t/* 139 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getTilingPatternIR = exports.Pattern = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _colorspace = __w_pdfjs_require__(27);\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar ShadingType = {\n\t  FUNCTION_BASED: 1,\n\t  AXIAL: 2,\n\t  RADIAL: 3,\n\t  FREE_FORM_MESH: 4,\n\t  LATTICE_FORM_MESH: 5,\n\t  COONS_PATCH_MESH: 6,\n\t  TENSOR_PATCH_MESH: 7\n\t};\n\tvar Pattern = function PatternClosure() {\n\t  function Pattern() {\n\t    throw new Error('should not call Pattern constructor');\n\t  }\n\t  Pattern.prototype = {\n\t    getPattern: function Pattern_getPattern(ctx) {\n\t      throw new Error('Should not call Pattern.getStyle: ' + ctx);\n\t    }\n\t  };\n\t  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\n\t    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\n\t    var type = dict.get('ShadingType');\n\t    try {\n\t      switch (type) {\n\t        case ShadingType.AXIAL:\n\t        case ShadingType.RADIAL:\n\t          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\n\t        case ShadingType.FREE_FORM_MESH:\n\t        case ShadingType.LATTICE_FORM_MESH:\n\t        case ShadingType.COONS_PATCH_MESH:\n\t        case ShadingType.TENSOR_PATCH_MESH:\n\t          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\n\t        default:\n\t          throw new _util.FormatError('Unsupported ShadingType: ' + type);\n\t      }\n\t    } catch (ex) {\n\t      if (ex instanceof _util.MissingDataException) {\n\t        throw ex;\n\t      }\n\t      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\n\t      (0, _util.warn)(ex);\n\t      return new Shadings.Dummy();\n\t    }\n\t  };\n\t  return Pattern;\n\t}();\n\tvar Shadings = {};\n\tShadings.SMALL_NUMBER = 1e-6;\n\tShadings.RadialAxial = function RadialAxialClosure() {\n\t  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\n\t    this.matrix = matrix;\n\t    this.coordsArr = dict.getArray('Coords');\n\t    this.shadingType = dict.get('ShadingType');\n\t    this.type = 'Pattern';\n\t    var cs = dict.get('ColorSpace', 'CS');\n\t    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n\t    this.cs = cs;\n\t    var t0 = 0.0,\n\t        t1 = 1.0;\n\t    if (dict.has('Domain')) {\n\t      var domainArr = dict.getArray('Domain');\n\t      t0 = domainArr[0];\n\t      t1 = domainArr[1];\n\t    }\n\t    var extendStart = false,\n\t        extendEnd = false;\n\t    if (dict.has('Extend')) {\n\t      var extendArr = dict.getArray('Extend');\n\t      extendStart = extendArr[0];\n\t      extendEnd = extendArr[1];\n\t    }\n\t    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n\t      var x1 = this.coordsArr[0];\n\t      var y1 = this.coordsArr[1];\n\t      var r1 = this.coordsArr[2];\n\t      var x2 = this.coordsArr[3];\n\t      var y2 = this.coordsArr[4];\n\t      var r2 = this.coordsArr[5];\n\t      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n\t      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n\t        (0, _util.warn)('Unsupported radial gradient.');\n\t      }\n\t    }\n\t    this.extendStart = extendStart;\n\t    this.extendEnd = extendEnd;\n\t    var fnObj = dict.get('Function');\n\t    var fn = pdfFunctionFactory.createFromArray(fnObj);\n\t    var diff = t1 - t0;\n\t    var step = diff / 10;\n\t    var colorStops = this.colorStops = [];\n\t    if (t0 >= t1 || step <= 0) {\n\t      (0, _util.info)('Bad shading domain.');\n\t      return;\n\t    }\n\t    var color = new Float32Array(cs.numComps),\n\t        ratio = new Float32Array(1);\n\t    var rgbColor;\n\t    for (var i = t0; i <= t1; i += step) {\n\t      ratio[0] = i;\n\t      fn(ratio, 0, color, 0);\n\t      rgbColor = cs.getRgb(color, 0);\n\t      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n\t      colorStops.push([(i - t0) / diff, cssColor]);\n\t    }\n\t    var background = 'transparent';\n\t    if (dict.has('Background')) {\n\t      rgbColor = cs.getRgb(dict.get('Background'), 0);\n\t      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n\t    }\n\t    if (!extendStart) {\n\t      colorStops.unshift([0, background]);\n\t      colorStops[1][0] += Shadings.SMALL_NUMBER;\n\t    }\n\t    if (!extendEnd) {\n\t      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n\t      colorStops.push([1, background]);\n\t    }\n\t    this.colorStops = colorStops;\n\t  }\n\t  RadialAxial.prototype = {\n\t    getIR: function RadialAxial_getIR() {\n\t      var coordsArr = this.coordsArr;\n\t      var shadingType = this.shadingType;\n\t      var type, p0, p1, r0, r1;\n\t      if (shadingType === ShadingType.AXIAL) {\n\t        p0 = [coordsArr[0], coordsArr[1]];\n\t        p1 = [coordsArr[2], coordsArr[3]];\n\t        r0 = null;\n\t        r1 = null;\n\t        type = 'axial';\n\t      } else if (shadingType === ShadingType.RADIAL) {\n\t        p0 = [coordsArr[0], coordsArr[1]];\n\t        p1 = [coordsArr[3], coordsArr[4]];\n\t        r0 = coordsArr[2];\n\t        r1 = coordsArr[5];\n\t        type = 'radial';\n\t      } else {\n\t        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\n\t      }\n\t      var matrix = this.matrix;\n\t      if (matrix) {\n\t        p0 = _util.Util.applyTransform(p0, matrix);\n\t        p1 = _util.Util.applyTransform(p1, matrix);\n\t        if (shadingType === ShadingType.RADIAL) {\n\t          var scale = _util.Util.singularValueDecompose2dScale(matrix);\n\t          r0 *= scale[0];\n\t          r1 *= scale[1];\n\t        }\n\t      }\n\t      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n\t    }\n\t  };\n\t  return RadialAxial;\n\t}();\n\tShadings.Mesh = function MeshClosure() {\n\t  function MeshStreamReader(stream, context) {\n\t    this.stream = stream;\n\t    this.context = context;\n\t    this.buffer = 0;\n\t    this.bufferLength = 0;\n\t    var numComps = context.numComps;\n\t    this.tmpCompsBuf = new Float32Array(numComps);\n\t    var csNumComps = context.colorSpace.numComps;\n\t    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n\t  }\n\t  MeshStreamReader.prototype = {\n\t    get hasData() {\n\t      if (this.stream.end) {\n\t        return this.stream.pos < this.stream.end;\n\t      }\n\t      if (this.bufferLength > 0) {\n\t        return true;\n\t      }\n\t      var nextByte = this.stream.getByte();\n\t      if (nextByte < 0) {\n\t        return false;\n\t      }\n\t      this.buffer = nextByte;\n\t      this.bufferLength = 8;\n\t      return true;\n\t    },\n\t    readBits: function MeshStreamReader_readBits(n) {\n\t      var buffer = this.buffer;\n\t      var bufferLength = this.bufferLength;\n\t      if (n === 32) {\n\t        if (bufferLength === 0) {\n\t          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n\t        }\n\t        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n\t        var nextByte = this.stream.getByte();\n\t        this.buffer = nextByte & (1 << bufferLength) - 1;\n\t        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n\t      }\n\t      if (n === 8 && bufferLength === 0) {\n\t        return this.stream.getByte();\n\t      }\n\t      while (bufferLength < n) {\n\t        buffer = buffer << 8 | this.stream.getByte();\n\t        bufferLength += 8;\n\t      }\n\t      bufferLength -= n;\n\t      this.bufferLength = bufferLength;\n\t      this.buffer = buffer & (1 << bufferLength) - 1;\n\t      return buffer >> bufferLength;\n\t    },\n\t    align: function MeshStreamReader_align() {\n\t      this.buffer = 0;\n\t      this.bufferLength = 0;\n\t    },\n\t    readFlag: function MeshStreamReader_readFlag() {\n\t      return this.readBits(this.context.bitsPerFlag);\n\t    },\n\t    readCoordinate: function MeshStreamReader_readCoordinate() {\n\t      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n\t      var xi = this.readBits(bitsPerCoordinate);\n\t      var yi = this.readBits(bitsPerCoordinate);\n\t      var decode = this.context.decode;\n\t      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n\t      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\n\t    },\n\t    readComponents: function MeshStreamReader_readComponents() {\n\t      var numComps = this.context.numComps;\n\t      var bitsPerComponent = this.context.bitsPerComponent;\n\t      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n\t      var decode = this.context.decode;\n\t      var components = this.tmpCompsBuf;\n\t      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n\t        var ci = this.readBits(bitsPerComponent);\n\t        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n\t      }\n\t      var color = this.tmpCsCompsBuf;\n\t      if (this.context.colorFn) {\n\t        this.context.colorFn(components, 0, color, 0);\n\t      }\n\t      return this.context.colorSpace.getRgb(color, 0);\n\t    }\n\t  };\n\t  function decodeType4Shading(mesh, reader) {\n\t    var coords = mesh.coords;\n\t    var colors = mesh.colors;\n\t    var operators = [];\n\t    var ps = [];\n\t    var verticesLeft = 0;\n\t    while (reader.hasData) {\n\t      var f = reader.readFlag();\n\t      var coord = reader.readCoordinate();\n\t      var color = reader.readComponents();\n\t      if (verticesLeft === 0) {\n\t        if (!(0 <= f && f <= 2)) {\n\t          throw new _util.FormatError('Unknown type4 flag');\n\t        }\n\t        switch (f) {\n\t          case 0:\n\t            verticesLeft = 3;\n\t            break;\n\t          case 1:\n\t            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n\t            verticesLeft = 1;\n\t            break;\n\t          case 2:\n\t            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n\t            verticesLeft = 1;\n\t            break;\n\t        }\n\t        operators.push(f);\n\t      }\n\t      ps.push(coords.length);\n\t      coords.push(coord);\n\t      colors.push(color);\n\t      verticesLeft--;\n\t      reader.align();\n\t    }\n\t    mesh.figures.push({\n\t      type: 'triangles',\n\t      coords: new Int32Array(ps),\n\t      colors: new Int32Array(ps)\n\t    });\n\t  }\n\t  function decodeType5Shading(mesh, reader, verticesPerRow) {\n\t    var coords = mesh.coords;\n\t    var colors = mesh.colors;\n\t    var ps = [];\n\t    while (reader.hasData) {\n\t      var coord = reader.readCoordinate();\n\t      var color = reader.readComponents();\n\t      ps.push(coords.length);\n\t      coords.push(coord);\n\t      colors.push(color);\n\t    }\n\t    mesh.figures.push({\n\t      type: 'lattice',\n\t      coords: new Int32Array(ps),\n\t      colors: new Int32Array(ps),\n\t      verticesPerRow: verticesPerRow\n\t    });\n\t  }\n\t  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n\t  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n\t  var TRIANGLE_DENSITY = 20;\n\t  var getB = function getBClosure() {\n\t    function buildB(count) {\n\t      var lut = [];\n\t      for (var i = 0; i <= count; i++) {\n\t        var t = i / count,\n\t            t_ = 1 - t;\n\t        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\n\t      }\n\t      return lut;\n\t    }\n\t    var cache = [];\n\t    return function getB(count) {\n\t      if (!cache[count]) {\n\t        cache[count] = buildB(count);\n\t      }\n\t      return cache[count];\n\t    };\n\t  }();\n\t  function buildFigureFromPatch(mesh, index) {\n\t    var figure = mesh.figures[index];\n\t    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\n\t    var coords = mesh.coords,\n\t        colors = mesh.colors;\n\t    var pi = figure.coords;\n\t    var ci = figure.colors;\n\t    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n\t    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n\t    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n\t    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n\t    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n\t    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n\t    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n\t    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n\t    var verticesPerRow = splitXBy + 1;\n\t    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n\t    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n\t    var k = 0;\n\t    var cl = new Uint8Array(3),\n\t        cr = new Uint8Array(3);\n\t    var c0 = colors[ci[0]],\n\t        c1 = colors[ci[1]],\n\t        c2 = colors[ci[2]],\n\t        c3 = colors[ci[3]];\n\t    var bRow = getB(splitYBy),\n\t        bCol = getB(splitXBy);\n\t    for (var row = 0; row <= splitYBy; row++) {\n\t      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n\t      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n\t      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n\t      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n\t      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n\t      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n\t      for (var col = 0; col <= splitXBy; col++, k++) {\n\t        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n\t          continue;\n\t        }\n\t        var x = 0,\n\t            y = 0;\n\t        var q = 0;\n\t        for (var i = 0; i <= 3; i++) {\n\t          for (var j = 0; j <= 3; j++, q++) {\n\t            var m = bRow[row][i] * bCol[col][j];\n\t            x += coords[pi[q]][0] * m;\n\t            y += coords[pi[q]][1] * m;\n\t          }\n\t        }\n\t        figureCoords[k] = coords.length;\n\t        coords.push([x, y]);\n\t        figureColors[k] = colors.length;\n\t        var newColor = new Uint8Array(3);\n\t        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n\t        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n\t        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n\t        colors.push(newColor);\n\t      }\n\t    }\n\t    figureCoords[0] = pi[0];\n\t    figureColors[0] = ci[0];\n\t    figureCoords[splitXBy] = pi[3];\n\t    figureColors[splitXBy] = ci[1];\n\t    figureCoords[verticesPerRow * splitYBy] = pi[12];\n\t    figureColors[verticesPerRow * splitYBy] = ci[2];\n\t    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n\t    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n\t    mesh.figures[index] = {\n\t      type: 'lattice',\n\t      coords: figureCoords,\n\t      colors: figureColors,\n\t      verticesPerRow: verticesPerRow\n\t    };\n\t  }\n\t  function decodeType6Shading(mesh, reader) {\n\t    var coords = mesh.coords;\n\t    var colors = mesh.colors;\n\t    var ps = new Int32Array(16);\n\t    var cs = new Int32Array(4);\n\t    while (reader.hasData) {\n\t      var f = reader.readFlag();\n\t      if (!(0 <= f && f <= 3)) {\n\t        throw new _util.FormatError('Unknown type6 flag');\n\t      }\n\t      var i, ii;\n\t      var pi = coords.length;\n\t      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n\t        coords.push(reader.readCoordinate());\n\t      }\n\t      var ci = colors.length;\n\t      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n\t        colors.push(reader.readComponents());\n\t      }\n\t      var tmp1, tmp2, tmp3, tmp4;\n\t      switch (f) {\n\t        case 0:\n\t          ps[12] = pi + 3;\n\t          ps[13] = pi + 4;\n\t          ps[14] = pi + 5;\n\t          ps[15] = pi + 6;\n\t          ps[8] = pi + 2;\n\t          ps[11] = pi + 7;\n\t          ps[4] = pi + 1;\n\t          ps[7] = pi + 8;\n\t          ps[0] = pi;\n\t          ps[1] = pi + 11;\n\t          ps[2] = pi + 10;\n\t          ps[3] = pi + 9;\n\t          cs[2] = ci + 1;\n\t          cs[3] = ci + 2;\n\t          cs[0] = ci;\n\t          cs[1] = ci + 3;\n\t          break;\n\t        case 1:\n\t          tmp1 = ps[12];\n\t          tmp2 = ps[13];\n\t          tmp3 = ps[14];\n\t          tmp4 = ps[15];\n\t          ps[12] = tmp4;\n\t          ps[13] = pi + 0;\n\t          ps[14] = pi + 1;\n\t          ps[15] = pi + 2;\n\t          ps[8] = tmp3;\n\t          ps[11] = pi + 3;\n\t          ps[4] = tmp2;\n\t          ps[7] = pi + 4;\n\t          ps[0] = tmp1;\n\t          ps[1] = pi + 7;\n\t          ps[2] = pi + 6;\n\t          ps[3] = pi + 5;\n\t          tmp1 = cs[2];\n\t          tmp2 = cs[3];\n\t          cs[2] = tmp2;\n\t          cs[3] = ci;\n\t          cs[0] = tmp1;\n\t          cs[1] = ci + 1;\n\t          break;\n\t        case 2:\n\t          tmp1 = ps[15];\n\t          tmp2 = ps[11];\n\t          ps[12] = ps[3];\n\t          ps[13] = pi + 0;\n\t          ps[14] = pi + 1;\n\t          ps[15] = pi + 2;\n\t          ps[8] = ps[7];\n\t          ps[11] = pi + 3;\n\t          ps[4] = tmp2;\n\t          ps[7] = pi + 4;\n\t          ps[0] = tmp1;\n\t          ps[1] = pi + 7;\n\t          ps[2] = pi + 6;\n\t          ps[3] = pi + 5;\n\t          tmp1 = cs[3];\n\t          cs[2] = cs[1];\n\t          cs[3] = ci;\n\t          cs[0] = tmp1;\n\t          cs[1] = ci + 1;\n\t          break;\n\t        case 3:\n\t          ps[12] = ps[0];\n\t          ps[13] = pi + 0;\n\t          ps[14] = pi + 1;\n\t          ps[15] = pi + 2;\n\t          ps[8] = ps[1];\n\t          ps[11] = pi + 3;\n\t          ps[4] = ps[2];\n\t          ps[7] = pi + 4;\n\t          ps[0] = ps[3];\n\t          ps[1] = pi + 7;\n\t          ps[2] = pi + 6;\n\t          ps[3] = pi + 5;\n\t          cs[2] = cs[0];\n\t          cs[3] = ci;\n\t          cs[0] = cs[1];\n\t          cs[1] = ci + 1;\n\t          break;\n\t      }\n\t      ps[5] = coords.length;\n\t      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\n\t      ps[6] = coords.length;\n\t      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\n\t      ps[9] = coords.length;\n\t      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\n\t      ps[10] = coords.length;\n\t      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\n\t      mesh.figures.push({\n\t        type: 'patch',\n\t        coords: new Int32Array(ps),\n\t        colors: new Int32Array(cs)\n\t      });\n\t    }\n\t  }\n\t  function decodeType7Shading(mesh, reader) {\n\t    var coords = mesh.coords;\n\t    var colors = mesh.colors;\n\t    var ps = new Int32Array(16);\n\t    var cs = new Int32Array(4);\n\t    while (reader.hasData) {\n\t      var f = reader.readFlag();\n\t      if (!(0 <= f && f <= 3)) {\n\t        throw new _util.FormatError('Unknown type7 flag');\n\t      }\n\t      var i, ii;\n\t      var pi = coords.length;\n\t      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n\t        coords.push(reader.readCoordinate());\n\t      }\n\t      var ci = colors.length;\n\t      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n\t        colors.push(reader.readComponents());\n\t      }\n\t      var tmp1, tmp2, tmp3, tmp4;\n\t      switch (f) {\n\t        case 0:\n\t          ps[12] = pi + 3;\n\t          ps[13] = pi + 4;\n\t          ps[14] = pi + 5;\n\t          ps[15] = pi + 6;\n\t          ps[8] = pi + 2;\n\t          ps[9] = pi + 13;\n\t          ps[10] = pi + 14;\n\t          ps[11] = pi + 7;\n\t          ps[4] = pi + 1;\n\t          ps[5] = pi + 12;\n\t          ps[6] = pi + 15;\n\t          ps[7] = pi + 8;\n\t          ps[0] = pi;\n\t          ps[1] = pi + 11;\n\t          ps[2] = pi + 10;\n\t          ps[3] = pi + 9;\n\t          cs[2] = ci + 1;\n\t          cs[3] = ci + 2;\n\t          cs[0] = ci;\n\t          cs[1] = ci + 3;\n\t          break;\n\t        case 1:\n\t          tmp1 = ps[12];\n\t          tmp2 = ps[13];\n\t          tmp3 = ps[14];\n\t          tmp4 = ps[15];\n\t          ps[12] = tmp4;\n\t          ps[13] = pi + 0;\n\t          ps[14] = pi + 1;\n\t          ps[15] = pi + 2;\n\t          ps[8] = tmp3;\n\t          ps[9] = pi + 9;\n\t          ps[10] = pi + 10;\n\t          ps[11] = pi + 3;\n\t          ps[4] = tmp2;\n\t          ps[5] = pi + 8;\n\t          ps[6] = pi + 11;\n\t          ps[7] = pi + 4;\n\t          ps[0] = tmp1;\n\t          ps[1] = pi + 7;\n\t          ps[2] = pi + 6;\n\t          ps[3] = pi + 5;\n\t          tmp1 = cs[2];\n\t          tmp2 = cs[3];\n\t          cs[2] = tmp2;\n\t          cs[3] = ci;\n\t          cs[0] = tmp1;\n\t          cs[1] = ci + 1;\n\t          break;\n\t        case 2:\n\t          tmp1 = ps[15];\n\t          tmp2 = ps[11];\n\t          ps[12] = ps[3];\n\t          ps[13] = pi + 0;\n\t          ps[14] = pi + 1;\n\t          ps[15] = pi + 2;\n\t          ps[8] = ps[7];\n\t          ps[9] = pi + 9;\n\t          ps[10] = pi + 10;\n\t          ps[11] = pi + 3;\n\t          ps[4] = tmp2;\n\t          ps[5] = pi + 8;\n\t          ps[6] = pi + 11;\n\t          ps[7] = pi + 4;\n\t          ps[0] = tmp1;\n\t          ps[1] = pi + 7;\n\t          ps[2] = pi + 6;\n\t          ps[3] = pi + 5;\n\t          tmp1 = cs[3];\n\t          cs[2] = cs[1];\n\t          cs[3] = ci;\n\t          cs[0] = tmp1;\n\t          cs[1] = ci + 1;\n\t          break;\n\t        case 3:\n\t          ps[12] = ps[0];\n\t          ps[13] = pi + 0;\n\t          ps[14] = pi + 1;\n\t          ps[15] = pi + 2;\n\t          ps[8] = ps[1];\n\t          ps[9] = pi + 9;\n\t          ps[10] = pi + 10;\n\t          ps[11] = pi + 3;\n\t          ps[4] = ps[2];\n\t          ps[5] = pi + 8;\n\t          ps[6] = pi + 11;\n\t          ps[7] = pi + 4;\n\t          ps[0] = ps[3];\n\t          ps[1] = pi + 7;\n\t          ps[2] = pi + 6;\n\t          ps[3] = pi + 5;\n\t          cs[2] = cs[0];\n\t          cs[3] = ci;\n\t          cs[0] = cs[1];\n\t          cs[1] = ci + 1;\n\t          break;\n\t      }\n\t      mesh.figures.push({\n\t        type: 'patch',\n\t        coords: new Int32Array(ps),\n\t        colors: new Int32Array(cs)\n\t      });\n\t    }\n\t  }\n\t  function updateBounds(mesh) {\n\t    var minX = mesh.coords[0][0],\n\t        minY = mesh.coords[0][1],\n\t        maxX = minX,\n\t        maxY = minY;\n\t    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n\t      var x = mesh.coords[i][0],\n\t          y = mesh.coords[i][1];\n\t      minX = minX > x ? x : minX;\n\t      minY = minY > y ? y : minY;\n\t      maxX = maxX < x ? x : maxX;\n\t      maxY = maxY < y ? y : maxY;\n\t    }\n\t    mesh.bounds = [minX, minY, maxX, maxY];\n\t  }\n\t  function packData(mesh) {\n\t    var i, ii, j, jj;\n\t    var coords = mesh.coords;\n\t    var coordsPacked = new Float32Array(coords.length * 2);\n\t    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n\t      var xy = coords[i];\n\t      coordsPacked[j++] = xy[0];\n\t      coordsPacked[j++] = xy[1];\n\t    }\n\t    mesh.coords = coordsPacked;\n\t    var colors = mesh.colors;\n\t    var colorsPacked = new Uint8Array(colors.length * 3);\n\t    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n\t      var c = colors[i];\n\t      colorsPacked[j++] = c[0];\n\t      colorsPacked[j++] = c[1];\n\t      colorsPacked[j++] = c[2];\n\t    }\n\t    mesh.colors = colorsPacked;\n\t    var figures = mesh.figures;\n\t    for (i = 0, ii = figures.length; i < ii; i++) {\n\t      var figure = figures[i],\n\t          ps = figure.coords,\n\t          cs = figure.colors;\n\t      for (j = 0, jj = ps.length; j < jj; j++) {\n\t        ps[j] *= 2;\n\t        cs[j] *= 3;\n\t      }\n\t    }\n\t  }\n\t  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\n\t    if (!(0, _primitives.isStream)(stream)) {\n\t      throw new _util.FormatError('Mesh data is not a stream');\n\t    }\n\t    var dict = stream.dict;\n\t    this.matrix = matrix;\n\t    this.shadingType = dict.get('ShadingType');\n\t    this.type = 'Pattern';\n\t    this.bbox = dict.getArray('BBox');\n\t    var cs = dict.get('ColorSpace', 'CS');\n\t    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n\t    this.cs = cs;\n\t    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n\t    var fnObj = dict.get('Function');\n\t    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\n\t    this.coords = [];\n\t    this.colors = [];\n\t    this.figures = [];\n\t    var decodeContext = {\n\t      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n\t      bitsPerComponent: dict.get('BitsPerComponent'),\n\t      bitsPerFlag: dict.get('BitsPerFlag'),\n\t      decode: dict.getArray('Decode'),\n\t      colorFn: fn,\n\t      colorSpace: cs,\n\t      numComps: fn ? 1 : cs.numComps\n\t    };\n\t    var reader = new MeshStreamReader(stream, decodeContext);\n\t    var patchMesh = false;\n\t    switch (this.shadingType) {\n\t      case ShadingType.FREE_FORM_MESH:\n\t        decodeType4Shading(this, reader);\n\t        break;\n\t      case ShadingType.LATTICE_FORM_MESH:\n\t        var verticesPerRow = dict.get('VerticesPerRow') | 0;\n\t        if (verticesPerRow < 2) {\n\t          throw new _util.FormatError('Invalid VerticesPerRow');\n\t        }\n\t        decodeType5Shading(this, reader, verticesPerRow);\n\t        break;\n\t      case ShadingType.COONS_PATCH_MESH:\n\t        decodeType6Shading(this, reader);\n\t        patchMesh = true;\n\t        break;\n\t      case ShadingType.TENSOR_PATCH_MESH:\n\t        decodeType7Shading(this, reader);\n\t        patchMesh = true;\n\t        break;\n\t      default:\n\t        (0, _util.unreachable)('Unsupported mesh type.');\n\t        break;\n\t    }\n\t    if (patchMesh) {\n\t      updateBounds(this);\n\t      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n\t        buildFigureFromPatch(this, i);\n\t      }\n\t    }\n\t    updateBounds(this);\n\t    packData(this);\n\t  }\n\t  Mesh.prototype = {\n\t    getIR: function Mesh_getIR() {\n\t      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\n\t    }\n\t  };\n\t  return Mesh;\n\t}();\n\tShadings.Dummy = function DummyClosure() {\n\t  function Dummy() {\n\t    this.type = 'Pattern';\n\t  }\n\t  Dummy.prototype = {\n\t    getIR: function Dummy_getIR() {\n\t      return ['Dummy'];\n\t    }\n\t  };\n\t  return Dummy;\n\t}();\n\tfunction getTilingPatternIR(operatorList, dict, args) {\n\t  var matrix = dict.getArray('Matrix');\n\t  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\n\t  var xstep = dict.get('XStep');\n\t  var ystep = dict.get('YStep');\n\t  var paintType = dict.get('PaintType');\n\t  var tilingType = dict.get('TilingType');\n\t  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\n\t    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\n\t  }\n\t  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\n\t}\n\texports.Pattern = Pattern;\n\texports.getTilingPatternIR = getTilingPatternIR;\n\t\n\t/***/ }),\n\t/* 140 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.bidi = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\n\tvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\n\tfunction isOdd(i) {\n\t  return (i & 1) !== 0;\n\t}\n\tfunction isEven(i) {\n\t  return (i & 1) === 0;\n\t}\n\tfunction findUnequal(arr, start, value) {\n\t  for (var j = start, jj = arr.length; j < jj; ++j) {\n\t    if (arr[j] !== value) {\n\t      return j;\n\t    }\n\t  }\n\t  return j;\n\t}\n\tfunction setValues(arr, start, end, value) {\n\t  for (var j = start; j < end; ++j) {\n\t    arr[j] = value;\n\t  }\n\t}\n\tfunction reverseValues(arr, start, end) {\n\t  for (var i = start, j = end - 1; i < j; ++i, --j) {\n\t    var temp = arr[i];\n\t    arr[i] = arr[j];\n\t    arr[j] = temp;\n\t  }\n\t}\n\tfunction createBidiText(str, isLTR, vertical) {\n\t  return {\n\t    str: str,\n\t    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n\t  };\n\t}\n\tvar chars = [];\n\tvar types = [];\n\tfunction bidi(str, startLevel, vertical) {\n\t  var isLTR = true;\n\t  var strLength = str.length;\n\t  if (strLength === 0 || vertical) {\n\t    return createBidiText(str, isLTR, vertical);\n\t  }\n\t  chars.length = strLength;\n\t  types.length = strLength;\n\t  var numBidi = 0;\n\t  var i, ii;\n\t  for (i = 0; i < strLength; ++i) {\n\t    chars[i] = str.charAt(i);\n\t    var charCode = str.charCodeAt(i);\n\t    var charType = 'L';\n\t    if (charCode <= 0x00ff) {\n\t      charType = baseTypes[charCode];\n\t    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n\t      charType = 'R';\n\t    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n\t      charType = arabicTypes[charCode & 0xff];\n\t      if (!charType) {\n\t        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\n\t      }\n\t    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n\t      charType = 'AL';\n\t    }\n\t    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n\t      numBidi++;\n\t    }\n\t    types[i] = charType;\n\t  }\n\t  if (numBidi === 0) {\n\t    isLTR = true;\n\t    return createBidiText(str, isLTR);\n\t  }\n\t  if (startLevel === -1) {\n\t    if (numBidi / strLength < 0.3) {\n\t      isLTR = true;\n\t      startLevel = 0;\n\t    } else {\n\t      isLTR = false;\n\t      startLevel = 1;\n\t    }\n\t  }\n\t  var levels = [];\n\t  for (i = 0; i < strLength; ++i) {\n\t    levels[i] = startLevel;\n\t  }\n\t  var e = isOdd(startLevel) ? 'R' : 'L';\n\t  var sor = e;\n\t  var eor = sor;\n\t  var lastType = sor;\n\t  for (i = 0; i < strLength; ++i) {\n\t    if (types[i] === 'NSM') {\n\t      types[i] = lastType;\n\t    } else {\n\t      lastType = types[i];\n\t    }\n\t  }\n\t  lastType = sor;\n\t  var t;\n\t  for (i = 0; i < strLength; ++i) {\n\t    t = types[i];\n\t    if (t === 'EN') {\n\t      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n\t    } else if (t === 'R' || t === 'L' || t === 'AL') {\n\t      lastType = t;\n\t    }\n\t  }\n\t  for (i = 0; i < strLength; ++i) {\n\t    t = types[i];\n\t    if (t === 'AL') {\n\t      types[i] = 'R';\n\t    }\n\t  }\n\t  for (i = 1; i < strLength - 1; ++i) {\n\t    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n\t      types[i] = 'EN';\n\t    }\n\t    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n\t      types[i] = types[i - 1];\n\t    }\n\t  }\n\t  for (i = 0; i < strLength; ++i) {\n\t    if (types[i] === 'EN') {\n\t      var j;\n\t      for (j = i - 1; j >= 0; --j) {\n\t        if (types[j] !== 'ET') {\n\t          break;\n\t        }\n\t        types[j] = 'EN';\n\t      }\n\t      for (j = i + 1; j < strLength; ++j) {\n\t        if (types[j] !== 'ET') {\n\t          break;\n\t        }\n\t        types[j] = 'EN';\n\t      }\n\t    }\n\t  }\n\t  for (i = 0; i < strLength; ++i) {\n\t    t = types[i];\n\t    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n\t      types[i] = 'ON';\n\t    }\n\t  }\n\t  lastType = sor;\n\t  for (i = 0; i < strLength; ++i) {\n\t    t = types[i];\n\t    if (t === 'EN') {\n\t      types[i] = lastType === 'L' ? 'L' : 'EN';\n\t    } else if (t === 'R' || t === 'L') {\n\t      lastType = t;\n\t    }\n\t  }\n\t  for (i = 0; i < strLength; ++i) {\n\t    if (types[i] === 'ON') {\n\t      var end = findUnequal(types, i + 1, 'ON');\n\t      var before = sor;\n\t      if (i > 0) {\n\t        before = types[i - 1];\n\t      }\n\t      var after = eor;\n\t      if (end + 1 < strLength) {\n\t        after = types[end + 1];\n\t      }\n\t      if (before !== 'L') {\n\t        before = 'R';\n\t      }\n\t      if (after !== 'L') {\n\t        after = 'R';\n\t      }\n\t      if (before === after) {\n\t        setValues(types, i, end, before);\n\t      }\n\t      i = end - 1;\n\t    }\n\t  }\n\t  for (i = 0; i < strLength; ++i) {\n\t    if (types[i] === 'ON') {\n\t      types[i] = e;\n\t    }\n\t  }\n\t  for (i = 0; i < strLength; ++i) {\n\t    t = types[i];\n\t    if (isEven(levels[i])) {\n\t      if (t === 'R') {\n\t        levels[i] += 1;\n\t      } else if (t === 'AN' || t === 'EN') {\n\t        levels[i] += 2;\n\t      }\n\t    } else {\n\t      if (t === 'L' || t === 'AN' || t === 'EN') {\n\t        levels[i] += 1;\n\t      }\n\t    }\n\t  }\n\t  var highestLevel = -1;\n\t  var lowestOddLevel = 99;\n\t  var level;\n\t  for (i = 0, ii = levels.length; i < ii; ++i) {\n\t    level = levels[i];\n\t    if (highestLevel < level) {\n\t      highestLevel = level;\n\t    }\n\t    if (lowestOddLevel > level && isOdd(level)) {\n\t      lowestOddLevel = level;\n\t    }\n\t  }\n\t  for (level = highestLevel; level >= lowestOddLevel; --level) {\n\t    var start = -1;\n\t    for (i = 0, ii = levels.length; i < ii; ++i) {\n\t      if (levels[i] < level) {\n\t        if (start >= 0) {\n\t          reverseValues(chars, start, i);\n\t          start = -1;\n\t        }\n\t      } else if (start < 0) {\n\t        start = i;\n\t      }\n\t    }\n\t    if (start >= 0) {\n\t      reverseValues(chars, start, levels.length);\n\t    }\n\t  }\n\t  for (i = 0, ii = chars.length; i < ii; ++i) {\n\t    var ch = chars[i];\n\t    if (ch === '<' || ch === '>') {\n\t      chars[i] = '';\n\t    }\n\t  }\n\t  return createBidiText(chars.join(''), isLTR);\n\t}\n\texports.bidi = bidi;\n\t\n\t/***/ }),\n\t/* 141 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getMetrics = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\n\t  t['Courier'] = 600;\n\t  t['Courier-Bold'] = 600;\n\t  t['Courier-BoldOblique'] = 600;\n\t  t['Courier-Oblique'] = 600;\n\t  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 278;\n\t    t['exclam'] = 278;\n\t    t['quotedbl'] = 355;\n\t    t['numbersign'] = 556;\n\t    t['dollar'] = 556;\n\t    t['percent'] = 889;\n\t    t['ampersand'] = 667;\n\t    t['quoteright'] = 222;\n\t    t['parenleft'] = 333;\n\t    t['parenright'] = 333;\n\t    t['asterisk'] = 389;\n\t    t['plus'] = 584;\n\t    t['comma'] = 278;\n\t    t['hyphen'] = 333;\n\t    t['period'] = 278;\n\t    t['slash'] = 278;\n\t    t['zero'] = 556;\n\t    t['one'] = 556;\n\t    t['two'] = 556;\n\t    t['three'] = 556;\n\t    t['four'] = 556;\n\t    t['five'] = 556;\n\t    t['six'] = 556;\n\t    t['seven'] = 556;\n\t    t['eight'] = 556;\n\t    t['nine'] = 556;\n\t    t['colon'] = 278;\n\t    t['semicolon'] = 278;\n\t    t['less'] = 584;\n\t    t['equal'] = 584;\n\t    t['greater'] = 584;\n\t    t['question'] = 556;\n\t    t['at'] = 1015;\n\t    t['A'] = 667;\n\t    t['B'] = 667;\n\t    t['C'] = 722;\n\t    t['D'] = 722;\n\t    t['E'] = 667;\n\t    t['F'] = 611;\n\t    t['G'] = 778;\n\t    t['H'] = 722;\n\t    t['I'] = 278;\n\t    t['J'] = 500;\n\t    t['K'] = 667;\n\t    t['L'] = 556;\n\t    t['M'] = 833;\n\t    t['N'] = 722;\n\t    t['O'] = 778;\n\t    t['P'] = 667;\n\t    t['Q'] = 778;\n\t    t['R'] = 722;\n\t    t['S'] = 667;\n\t    t['T'] = 611;\n\t    t['U'] = 722;\n\t    t['V'] = 667;\n\t    t['W'] = 944;\n\t    t['X'] = 667;\n\t    t['Y'] = 667;\n\t    t['Z'] = 611;\n\t    t['bracketleft'] = 278;\n\t    t['backslash'] = 278;\n\t    t['bracketright'] = 278;\n\t    t['asciicircum'] = 469;\n\t    t['underscore'] = 556;\n\t    t['quoteleft'] = 222;\n\t    t['a'] = 556;\n\t    t['b'] = 556;\n\t    t['c'] = 500;\n\t    t['d'] = 556;\n\t    t['e'] = 556;\n\t    t['f'] = 278;\n\t    t['g'] = 556;\n\t    t['h'] = 556;\n\t    t['i'] = 222;\n\t    t['j'] = 222;\n\t    t['k'] = 500;\n\t    t['l'] = 222;\n\t    t['m'] = 833;\n\t    t['n'] = 556;\n\t    t['o'] = 556;\n\t    t['p'] = 556;\n\t    t['q'] = 556;\n\t    t['r'] = 333;\n\t    t['s'] = 500;\n\t    t['t'] = 278;\n\t    t['u'] = 556;\n\t    t['v'] = 500;\n\t    t['w'] = 722;\n\t    t['x'] = 500;\n\t    t['y'] = 500;\n\t    t['z'] = 500;\n\t    t['braceleft'] = 334;\n\t    t['bar'] = 260;\n\t    t['braceright'] = 334;\n\t    t['asciitilde'] = 584;\n\t    t['exclamdown'] = 333;\n\t    t['cent'] = 556;\n\t    t['sterling'] = 556;\n\t    t['fraction'] = 167;\n\t    t['yen'] = 556;\n\t    t['florin'] = 556;\n\t    t['section'] = 556;\n\t    t['currency'] = 556;\n\t    t['quotesingle'] = 191;\n\t    t['quotedblleft'] = 333;\n\t    t['guillemotleft'] = 556;\n\t    t['guilsinglleft'] = 333;\n\t    t['guilsinglright'] = 333;\n\t    t['fi'] = 500;\n\t    t['fl'] = 500;\n\t    t['endash'] = 556;\n\t    t['dagger'] = 556;\n\t    t['daggerdbl'] = 556;\n\t    t['periodcentered'] = 278;\n\t    t['paragraph'] = 537;\n\t    t['bullet'] = 350;\n\t    t['quotesinglbase'] = 222;\n\t    t['quotedblbase'] = 333;\n\t    t['quotedblright'] = 333;\n\t    t['guillemotright'] = 556;\n\t    t['ellipsis'] = 1000;\n\t    t['perthousand'] = 1000;\n\t    t['questiondown'] = 611;\n\t    t['grave'] = 333;\n\t    t['acute'] = 333;\n\t    t['circumflex'] = 333;\n\t    t['tilde'] = 333;\n\t    t['macron'] = 333;\n\t    t['breve'] = 333;\n\t    t['dotaccent'] = 333;\n\t    t['dieresis'] = 333;\n\t    t['ring'] = 333;\n\t    t['cedilla'] = 333;\n\t    t['hungarumlaut'] = 333;\n\t    t['ogonek'] = 333;\n\t    t['caron'] = 333;\n\t    t['emdash'] = 1000;\n\t    t['AE'] = 1000;\n\t    t['ordfeminine'] = 370;\n\t    t['Lslash'] = 556;\n\t    t['Oslash'] = 778;\n\t    t['OE'] = 1000;\n\t    t['ordmasculine'] = 365;\n\t    t['ae'] = 889;\n\t    t['dotlessi'] = 278;\n\t    t['lslash'] = 222;\n\t    t['oslash'] = 611;\n\t    t['oe'] = 944;\n\t    t['germandbls'] = 611;\n\t    t['Idieresis'] = 278;\n\t    t['eacute'] = 556;\n\t    t['abreve'] = 556;\n\t    t['uhungarumlaut'] = 556;\n\t    t['ecaron'] = 556;\n\t    t['Ydieresis'] = 667;\n\t    t['divide'] = 584;\n\t    t['Yacute'] = 667;\n\t    t['Acircumflex'] = 667;\n\t    t['aacute'] = 556;\n\t    t['Ucircumflex'] = 722;\n\t    t['yacute'] = 500;\n\t    t['scommaaccent'] = 500;\n\t    t['ecircumflex'] = 556;\n\t    t['Uring'] = 722;\n\t    t['Udieresis'] = 722;\n\t    t['aogonek'] = 556;\n\t    t['Uacute'] = 722;\n\t    t['uogonek'] = 556;\n\t    t['Edieresis'] = 667;\n\t    t['Dcroat'] = 722;\n\t    t['commaaccent'] = 250;\n\t    t['copyright'] = 737;\n\t    t['Emacron'] = 667;\n\t    t['ccaron'] = 500;\n\t    t['aring'] = 556;\n\t    t['Ncommaaccent'] = 722;\n\t    t['lacute'] = 222;\n\t    t['agrave'] = 556;\n\t    t['Tcommaaccent'] = 611;\n\t    t['Cacute'] = 722;\n\t    t['atilde'] = 556;\n\t    t['Edotaccent'] = 667;\n\t    t['scaron'] = 500;\n\t    t['scedilla'] = 500;\n\t    t['iacute'] = 278;\n\t    t['lozenge'] = 471;\n\t    t['Rcaron'] = 722;\n\t    t['Gcommaaccent'] = 778;\n\t    t['ucircumflex'] = 556;\n\t    t['acircumflex'] = 556;\n\t    t['Amacron'] = 667;\n\t    t['rcaron'] = 333;\n\t    t['ccedilla'] = 500;\n\t    t['Zdotaccent'] = 611;\n\t    t['Thorn'] = 667;\n\t    t['Omacron'] = 778;\n\t    t['Racute'] = 722;\n\t    t['Sacute'] = 667;\n\t    t['dcaron'] = 643;\n\t    t['Umacron'] = 722;\n\t    t['uring'] = 556;\n\t    t['threesuperior'] = 333;\n\t    t['Ograve'] = 778;\n\t    t['Agrave'] = 667;\n\t    t['Abreve'] = 667;\n\t    t['multiply'] = 584;\n\t    t['uacute'] = 556;\n\t    t['Tcaron'] = 611;\n\t    t['partialdiff'] = 476;\n\t    t['ydieresis'] = 500;\n\t    t['Nacute'] = 722;\n\t    t['icircumflex'] = 278;\n\t    t['Ecircumflex'] = 667;\n\t    t['adieresis'] = 556;\n\t    t['edieresis'] = 556;\n\t    t['cacute'] = 500;\n\t    t['nacute'] = 556;\n\t    t['umacron'] = 556;\n\t    t['Ncaron'] = 722;\n\t    t['Iacute'] = 278;\n\t    t['plusminus'] = 584;\n\t    t['brokenbar'] = 260;\n\t    t['registered'] = 737;\n\t    t['Gbreve'] = 778;\n\t    t['Idotaccent'] = 278;\n\t    t['summation'] = 600;\n\t    t['Egrave'] = 667;\n\t    t['racute'] = 333;\n\t    t['omacron'] = 556;\n\t    t['Zacute'] = 611;\n\t    t['Zcaron'] = 611;\n\t    t['greaterequal'] = 549;\n\t    t['Eth'] = 722;\n\t    t['Ccedilla'] = 722;\n\t    t['lcommaaccent'] = 222;\n\t    t['tcaron'] = 317;\n\t    t['eogonek'] = 556;\n\t    t['Uogonek'] = 722;\n\t    t['Aacute'] = 667;\n\t    t['Adieresis'] = 667;\n\t    t['egrave'] = 556;\n\t    t['zacute'] = 500;\n\t    t['iogonek'] = 222;\n\t    t['Oacute'] = 778;\n\t    t['oacute'] = 556;\n\t    t['amacron'] = 556;\n\t    t['sacute'] = 500;\n\t    t['idieresis'] = 278;\n\t    t['Ocircumflex'] = 778;\n\t    t['Ugrave'] = 722;\n\t    t['Delta'] = 612;\n\t    t['thorn'] = 556;\n\t    t['twosuperior'] = 333;\n\t    t['Odieresis'] = 778;\n\t    t['mu'] = 556;\n\t    t['igrave'] = 278;\n\t    t['ohungarumlaut'] = 556;\n\t    t['Eogonek'] = 667;\n\t    t['dcroat'] = 556;\n\t    t['threequarters'] = 834;\n\t    t['Scedilla'] = 667;\n\t    t['lcaron'] = 299;\n\t    t['Kcommaaccent'] = 667;\n\t    t['Lacute'] = 556;\n\t    t['trademark'] = 1000;\n\t    t['edotaccent'] = 556;\n\t    t['Igrave'] = 278;\n\t    t['Imacron'] = 278;\n\t    t['Lcaron'] = 556;\n\t    t['onehalf'] = 834;\n\t    t['lessequal'] = 549;\n\t    t['ocircumflex'] = 556;\n\t    t['ntilde'] = 556;\n\t    t['Uhungarumlaut'] = 722;\n\t    t['Eacute'] = 667;\n\t    t['emacron'] = 556;\n\t    t['gbreve'] = 556;\n\t    t['onequarter'] = 834;\n\t    t['Scaron'] = 667;\n\t    t['Scommaaccent'] = 667;\n\t    t['Ohungarumlaut'] = 778;\n\t    t['degree'] = 400;\n\t    t['ograve'] = 556;\n\t    t['Ccaron'] = 722;\n\t    t['ugrave'] = 556;\n\t    t['radical'] = 453;\n\t    t['Dcaron'] = 722;\n\t    t['rcommaaccent'] = 333;\n\t    t['Ntilde'] = 722;\n\t    t['otilde'] = 556;\n\t    t['Rcommaaccent'] = 722;\n\t    t['Lcommaaccent'] = 556;\n\t    t['Atilde'] = 667;\n\t    t['Aogonek'] = 667;\n\t    t['Aring'] = 667;\n\t    t['Otilde'] = 778;\n\t    t['zdotaccent'] = 500;\n\t    t['Ecaron'] = 667;\n\t    t['Iogonek'] = 278;\n\t    t['kcommaaccent'] = 500;\n\t    t['minus'] = 584;\n\t    t['Icircumflex'] = 278;\n\t    t['ncaron'] = 556;\n\t    t['tcommaaccent'] = 278;\n\t    t['logicalnot'] = 584;\n\t    t['odieresis'] = 556;\n\t    t['udieresis'] = 556;\n\t    t['notequal'] = 549;\n\t    t['gcommaaccent'] = 556;\n\t    t['eth'] = 556;\n\t    t['zcaron'] = 500;\n\t    t['ncommaaccent'] = 556;\n\t    t['onesuperior'] = 333;\n\t    t['imacron'] = 278;\n\t    t['Euro'] = 556;\n\t  });\n\t  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 278;\n\t    t['exclam'] = 333;\n\t    t['quotedbl'] = 474;\n\t    t['numbersign'] = 556;\n\t    t['dollar'] = 556;\n\t    t['percent'] = 889;\n\t    t['ampersand'] = 722;\n\t    t['quoteright'] = 278;\n\t    t['parenleft'] = 333;\n\t    t['parenright'] = 333;\n\t    t['asterisk'] = 389;\n\t    t['plus'] = 584;\n\t    t['comma'] = 278;\n\t    t['hyphen'] = 333;\n\t    t['period'] = 278;\n\t    t['slash'] = 278;\n\t    t['zero'] = 556;\n\t    t['one'] = 556;\n\t    t['two'] = 556;\n\t    t['three'] = 556;\n\t    t['four'] = 556;\n\t    t['five'] = 556;\n\t    t['six'] = 556;\n\t    t['seven'] = 556;\n\t    t['eight'] = 556;\n\t    t['nine'] = 556;\n\t    t['colon'] = 333;\n\t    t['semicolon'] = 333;\n\t    t['less'] = 584;\n\t    t['equal'] = 584;\n\t    t['greater'] = 584;\n\t    t['question'] = 611;\n\t    t['at'] = 975;\n\t    t['A'] = 722;\n\t    t['B'] = 722;\n\t    t['C'] = 722;\n\t    t['D'] = 722;\n\t    t['E'] = 667;\n\t    t['F'] = 611;\n\t    t['G'] = 778;\n\t    t['H'] = 722;\n\t    t['I'] = 278;\n\t    t['J'] = 556;\n\t    t['K'] = 722;\n\t    t['L'] = 611;\n\t    t['M'] = 833;\n\t    t['N'] = 722;\n\t    t['O'] = 778;\n\t    t['P'] = 667;\n\t    t['Q'] = 778;\n\t    t['R'] = 722;\n\t    t['S'] = 667;\n\t    t['T'] = 611;\n\t    t['U'] = 722;\n\t    t['V'] = 667;\n\t    t['W'] = 944;\n\t    t['X'] = 667;\n\t    t['Y'] = 667;\n\t    t['Z'] = 611;\n\t    t['bracketleft'] = 333;\n\t    t['backslash'] = 278;\n\t    t['bracketright'] = 333;\n\t    t['asciicircum'] = 584;\n\t    t['underscore'] = 556;\n\t    t['quoteleft'] = 278;\n\t    t['a'] = 556;\n\t    t['b'] = 611;\n\t    t['c'] = 556;\n\t    t['d'] = 611;\n\t    t['e'] = 556;\n\t    t['f'] = 333;\n\t    t['g'] = 611;\n\t    t['h'] = 611;\n\t    t['i'] = 278;\n\t    t['j'] = 278;\n\t    t['k'] = 556;\n\t    t['l'] = 278;\n\t    t['m'] = 889;\n\t    t['n'] = 611;\n\t    t['o'] = 611;\n\t    t['p'] = 611;\n\t    t['q'] = 611;\n\t    t['r'] = 389;\n\t    t['s'] = 556;\n\t    t['t'] = 333;\n\t    t['u'] = 611;\n\t    t['v'] = 556;\n\t    t['w'] = 778;\n\t    t['x'] = 556;\n\t    t['y'] = 556;\n\t    t['z'] = 500;\n\t    t['braceleft'] = 389;\n\t    t['bar'] = 280;\n\t    t['braceright'] = 389;\n\t    t['asciitilde'] = 584;\n\t    t['exclamdown'] = 333;\n\t    t['cent'] = 556;\n\t    t['sterling'] = 556;\n\t    t['fraction'] = 167;\n\t    t['yen'] = 556;\n\t    t['florin'] = 556;\n\t    t['section'] = 556;\n\t    t['currency'] = 556;\n\t    t['quotesingle'] = 238;\n\t    t['quotedblleft'] = 500;\n\t    t['guillemotleft'] = 556;\n\t    t['guilsinglleft'] = 333;\n\t    t['guilsinglright'] = 333;\n\t    t['fi'] = 611;\n\t    t['fl'] = 611;\n\t    t['endash'] = 556;\n\t    t['dagger'] = 556;\n\t    t['daggerdbl'] = 556;\n\t    t['periodcentered'] = 278;\n\t    t['paragraph'] = 556;\n\t    t['bullet'] = 350;\n\t    t['quotesinglbase'] = 278;\n\t    t['quotedblbase'] = 500;\n\t    t['quotedblright'] = 500;\n\t    t['guillemotright'] = 556;\n\t    t['ellipsis'] = 1000;\n\t    t['perthousand'] = 1000;\n\t    t['questiondown'] = 611;\n\t    t['grave'] = 333;\n\t    t['acute'] = 333;\n\t    t['circumflex'] = 333;\n\t    t['tilde'] = 333;\n\t    t['macron'] = 333;\n\t    t['breve'] = 333;\n\t    t['dotaccent'] = 333;\n\t    t['dieresis'] = 333;\n\t    t['ring'] = 333;\n\t    t['cedilla'] = 333;\n\t    t['hungarumlaut'] = 333;\n\t    t['ogonek'] = 333;\n\t    t['caron'] = 333;\n\t    t['emdash'] = 1000;\n\t    t['AE'] = 1000;\n\t    t['ordfeminine'] = 370;\n\t    t['Lslash'] = 611;\n\t    t['Oslash'] = 778;\n\t    t['OE'] = 1000;\n\t    t['ordmasculine'] = 365;\n\t    t['ae'] = 889;\n\t    t['dotlessi'] = 278;\n\t    t['lslash'] = 278;\n\t    t['oslash'] = 611;\n\t    t['oe'] = 944;\n\t    t['germandbls'] = 611;\n\t    t['Idieresis'] = 278;\n\t    t['eacute'] = 556;\n\t    t['abreve'] = 556;\n\t    t['uhungarumlaut'] = 611;\n\t    t['ecaron'] = 556;\n\t    t['Ydieresis'] = 667;\n\t    t['divide'] = 584;\n\t    t['Yacute'] = 667;\n\t    t['Acircumflex'] = 722;\n\t    t['aacute'] = 556;\n\t    t['Ucircumflex'] = 722;\n\t    t['yacute'] = 556;\n\t    t['scommaaccent'] = 556;\n\t    t['ecircumflex'] = 556;\n\t    t['Uring'] = 722;\n\t    t['Udieresis'] = 722;\n\t    t['aogonek'] = 556;\n\t    t['Uacute'] = 722;\n\t    t['uogonek'] = 611;\n\t    t['Edieresis'] = 667;\n\t    t['Dcroat'] = 722;\n\t    t['commaaccent'] = 250;\n\t    t['copyright'] = 737;\n\t    t['Emacron'] = 667;\n\t    t['ccaron'] = 556;\n\t    t['aring'] = 556;\n\t    t['Ncommaaccent'] = 722;\n\t    t['lacute'] = 278;\n\t    t['agrave'] = 556;\n\t    t['Tcommaaccent'] = 611;\n\t    t['Cacute'] = 722;\n\t    t['atilde'] = 556;\n\t    t['Edotaccent'] = 667;\n\t    t['scaron'] = 556;\n\t    t['scedilla'] = 556;\n\t    t['iacute'] = 278;\n\t    t['lozenge'] = 494;\n\t    t['Rcaron'] = 722;\n\t    t['Gcommaaccent'] = 778;\n\t    t['ucircumflex'] = 611;\n\t    t['acircumflex'] = 556;\n\t    t['Amacron'] = 722;\n\t    t['rcaron'] = 389;\n\t    t['ccedilla'] = 556;\n\t    t['Zdotaccent'] = 611;\n\t    t['Thorn'] = 667;\n\t    t['Omacron'] = 778;\n\t    t['Racute'] = 722;\n\t    t['Sacute'] = 667;\n\t    t['dcaron'] = 743;\n\t    t['Umacron'] = 722;\n\t    t['uring'] = 611;\n\t    t['threesuperior'] = 333;\n\t    t['Ograve'] = 778;\n\t    t['Agrave'] = 722;\n\t    t['Abreve'] = 722;\n\t    t['multiply'] = 584;\n\t    t['uacute'] = 611;\n\t    t['Tcaron'] = 611;\n\t    t['partialdiff'] = 494;\n\t    t['ydieresis'] = 556;\n\t    t['Nacute'] = 722;\n\t    t['icircumflex'] = 278;\n\t    t['Ecircumflex'] = 667;\n\t    t['adieresis'] = 556;\n\t    t['edieresis'] = 556;\n\t    t['cacute'] = 556;\n\t    t['nacute'] = 611;\n\t    t['umacron'] = 611;\n\t    t['Ncaron'] = 722;\n\t    t['Iacute'] = 278;\n\t    t['plusminus'] = 584;\n\t    t['brokenbar'] = 280;\n\t    t['registered'] = 737;\n\t    t['Gbreve'] = 778;\n\t    t['Idotaccent'] = 278;\n\t    t['summation'] = 600;\n\t    t['Egrave'] = 667;\n\t    t['racute'] = 389;\n\t    t['omacron'] = 611;\n\t    t['Zacute'] = 611;\n\t    t['Zcaron'] = 611;\n\t    t['greaterequal'] = 549;\n\t    t['Eth'] = 722;\n\t    t['Ccedilla'] = 722;\n\t    t['lcommaaccent'] = 278;\n\t    t['tcaron'] = 389;\n\t    t['eogonek'] = 556;\n\t    t['Uogonek'] = 722;\n\t    t['Aacute'] = 722;\n\t    t['Adieresis'] = 722;\n\t    t['egrave'] = 556;\n\t    t['zacute'] = 500;\n\t    t['iogonek'] = 278;\n\t    t['Oacute'] = 778;\n\t    t['oacute'] = 611;\n\t    t['amacron'] = 556;\n\t    t['sacute'] = 556;\n\t    t['idieresis'] = 278;\n\t    t['Ocircumflex'] = 778;\n\t    t['Ugrave'] = 722;\n\t    t['Delta'] = 612;\n\t    t['thorn'] = 611;\n\t    t['twosuperior'] = 333;\n\t    t['Odieresis'] = 778;\n\t    t['mu'] = 611;\n\t    t['igrave'] = 278;\n\t    t['ohungarumlaut'] = 611;\n\t    t['Eogonek'] = 667;\n\t    t['dcroat'] = 611;\n\t    t['threequarters'] = 834;\n\t    t['Scedilla'] = 667;\n\t    t['lcaron'] = 400;\n\t    t['Kcommaaccent'] = 722;\n\t    t['Lacute'] = 611;\n\t    t['trademark'] = 1000;\n\t    t['edotaccent'] = 556;\n\t    t['Igrave'] = 278;\n\t    t['Imacron'] = 278;\n\t    t['Lcaron'] = 611;\n\t    t['onehalf'] = 834;\n\t    t['lessequal'] = 549;\n\t    t['ocircumflex'] = 611;\n\t    t['ntilde'] = 611;\n\t    t['Uhungarumlaut'] = 722;\n\t    t['Eacute'] = 667;\n\t    t['emacron'] = 556;\n\t    t['gbreve'] = 611;\n\t    t['onequarter'] = 834;\n\t    t['Scaron'] = 667;\n\t    t['Scommaaccent'] = 667;\n\t    t['Ohungarumlaut'] = 778;\n\t    t['degree'] = 400;\n\t    t['ograve'] = 611;\n\t    t['Ccaron'] = 722;\n\t    t['ugrave'] = 611;\n\t    t['radical'] = 549;\n\t    t['Dcaron'] = 722;\n\t    t['rcommaaccent'] = 389;\n\t    t['Ntilde'] = 722;\n\t    t['otilde'] = 611;\n\t    t['Rcommaaccent'] = 722;\n\t    t['Lcommaaccent'] = 611;\n\t    t['Atilde'] = 722;\n\t    t['Aogonek'] = 722;\n\t    t['Aring'] = 722;\n\t    t['Otilde'] = 778;\n\t    t['zdotaccent'] = 500;\n\t    t['Ecaron'] = 667;\n\t    t['Iogonek'] = 278;\n\t    t['kcommaaccent'] = 556;\n\t    t['minus'] = 584;\n\t    t['Icircumflex'] = 278;\n\t    t['ncaron'] = 611;\n\t    t['tcommaaccent'] = 333;\n\t    t['logicalnot'] = 584;\n\t    t['odieresis'] = 611;\n\t    t['udieresis'] = 611;\n\t    t['notequal'] = 549;\n\t    t['gcommaaccent'] = 611;\n\t    t['eth'] = 611;\n\t    t['zcaron'] = 500;\n\t    t['ncommaaccent'] = 611;\n\t    t['onesuperior'] = 333;\n\t    t['imacron'] = 278;\n\t    t['Euro'] = 556;\n\t  });\n\t  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 278;\n\t    t['exclam'] = 333;\n\t    t['quotedbl'] = 474;\n\t    t['numbersign'] = 556;\n\t    t['dollar'] = 556;\n\t    t['percent'] = 889;\n\t    t['ampersand'] = 722;\n\t    t['quoteright'] = 278;\n\t    t['parenleft'] = 333;\n\t    t['parenright'] = 333;\n\t    t['asterisk'] = 389;\n\t    t['plus'] = 584;\n\t    t['comma'] = 278;\n\t    t['hyphen'] = 333;\n\t    t['period'] = 278;\n\t    t['slash'] = 278;\n\t    t['zero'] = 556;\n\t    t['one'] = 556;\n\t    t['two'] = 556;\n\t    t['three'] = 556;\n\t    t['four'] = 556;\n\t    t['five'] = 556;\n\t    t['six'] = 556;\n\t    t['seven'] = 556;\n\t    t['eight'] = 556;\n\t    t['nine'] = 556;\n\t    t['colon'] = 333;\n\t    t['semicolon'] = 333;\n\t    t['less'] = 584;\n\t    t['equal'] = 584;\n\t    t['greater'] = 584;\n\t    t['question'] = 611;\n\t    t['at'] = 975;\n\t    t['A'] = 722;\n\t    t['B'] = 722;\n\t    t['C'] = 722;\n\t    t['D'] = 722;\n\t    t['E'] = 667;\n\t    t['F'] = 611;\n\t    t['G'] = 778;\n\t    t['H'] = 722;\n\t    t['I'] = 278;\n\t    t['J'] = 556;\n\t    t['K'] = 722;\n\t    t['L'] = 611;\n\t    t['M'] = 833;\n\t    t['N'] = 722;\n\t    t['O'] = 778;\n\t    t['P'] = 667;\n\t    t['Q'] = 778;\n\t    t['R'] = 722;\n\t    t['S'] = 667;\n\t    t['T'] = 611;\n\t    t['U'] = 722;\n\t    t['V'] = 667;\n\t    t['W'] = 944;\n\t    t['X'] = 667;\n\t    t['Y'] = 667;\n\t    t['Z'] = 611;\n\t    t['bracketleft'] = 333;\n\t    t['backslash'] = 278;\n\t    t['bracketright'] = 333;\n\t    t['asciicircum'] = 584;\n\t    t['underscore'] = 556;\n\t    t['quoteleft'] = 278;\n\t    t['a'] = 556;\n\t    t['b'] = 611;\n\t    t['c'] = 556;\n\t    t['d'] = 611;\n\t    t['e'] = 556;\n\t    t['f'] = 333;\n\t    t['g'] = 611;\n\t    t['h'] = 611;\n\t    t['i'] = 278;\n\t    t['j'] = 278;\n\t    t['k'] = 556;\n\t    t['l'] = 278;\n\t    t['m'] = 889;\n\t    t['n'] = 611;\n\t    t['o'] = 611;\n\t    t['p'] = 611;\n\t    t['q'] = 611;\n\t    t['r'] = 389;\n\t    t['s'] = 556;\n\t    t['t'] = 333;\n\t    t['u'] = 611;\n\t    t['v'] = 556;\n\t    t['w'] = 778;\n\t    t['x'] = 556;\n\t    t['y'] = 556;\n\t    t['z'] = 500;\n\t    t['braceleft'] = 389;\n\t    t['bar'] = 280;\n\t    t['braceright'] = 389;\n\t    t['asciitilde'] = 584;\n\t    t['exclamdown'] = 333;\n\t    t['cent'] = 556;\n\t    t['sterling'] = 556;\n\t    t['fraction'] = 167;\n\t    t['yen'] = 556;\n\t    t['florin'] = 556;\n\t    t['section'] = 556;\n\t    t['currency'] = 556;\n\t    t['quotesingle'] = 238;\n\t    t['quotedblleft'] = 500;\n\t    t['guillemotleft'] = 556;\n\t    t['guilsinglleft'] = 333;\n\t    t['guilsinglright'] = 333;\n\t    t['fi'] = 611;\n\t    t['fl'] = 611;\n\t    t['endash'] = 556;\n\t    t['dagger'] = 556;\n\t    t['daggerdbl'] = 556;\n\t    t['periodcentered'] = 278;\n\t    t['paragraph'] = 556;\n\t    t['bullet'] = 350;\n\t    t['quotesinglbase'] = 278;\n\t    t['quotedblbase'] = 500;\n\t    t['quotedblright'] = 500;\n\t    t['guillemotright'] = 556;\n\t    t['ellipsis'] = 1000;\n\t    t['perthousand'] = 1000;\n\t    t['questiondown'] = 611;\n\t    t['grave'] = 333;\n\t    t['acute'] = 333;\n\t    t['circumflex'] = 333;\n\t    t['tilde'] = 333;\n\t    t['macron'] = 333;\n\t    t['breve'] = 333;\n\t    t['dotaccent'] = 333;\n\t    t['dieresis'] = 333;\n\t    t['ring'] = 333;\n\t    t['cedilla'] = 333;\n\t    t['hungarumlaut'] = 333;\n\t    t['ogonek'] = 333;\n\t    t['caron'] = 333;\n\t    t['emdash'] = 1000;\n\t    t['AE'] = 1000;\n\t    t['ordfeminine'] = 370;\n\t    t['Lslash'] = 611;\n\t    t['Oslash'] = 778;\n\t    t['OE'] = 1000;\n\t    t['ordmasculine'] = 365;\n\t    t['ae'] = 889;\n\t    t['dotlessi'] = 278;\n\t    t['lslash'] = 278;\n\t    t['oslash'] = 611;\n\t    t['oe'] = 944;\n\t    t['germandbls'] = 611;\n\t    t['Idieresis'] = 278;\n\t    t['eacute'] = 556;\n\t    t['abreve'] = 556;\n\t    t['uhungarumlaut'] = 611;\n\t    t['ecaron'] = 556;\n\t    t['Ydieresis'] = 667;\n\t    t['divide'] = 584;\n\t    t['Yacute'] = 667;\n\t    t['Acircumflex'] = 722;\n\t    t['aacute'] = 556;\n\t    t['Ucircumflex'] = 722;\n\t    t['yacute'] = 556;\n\t    t['scommaaccent'] = 556;\n\t    t['ecircumflex'] = 556;\n\t    t['Uring'] = 722;\n\t    t['Udieresis'] = 722;\n\t    t['aogonek'] = 556;\n\t    t['Uacute'] = 722;\n\t    t['uogonek'] = 611;\n\t    t['Edieresis'] = 667;\n\t    t['Dcroat'] = 722;\n\t    t['commaaccent'] = 250;\n\t    t['copyright'] = 737;\n\t    t['Emacron'] = 667;\n\t    t['ccaron'] = 556;\n\t    t['aring'] = 556;\n\t    t['Ncommaaccent'] = 722;\n\t    t['lacute'] = 278;\n\t    t['agrave'] = 556;\n\t    t['Tcommaaccent'] = 611;\n\t    t['Cacute'] = 722;\n\t    t['atilde'] = 556;\n\t    t['Edotaccent'] = 667;\n\t    t['scaron'] = 556;\n\t    t['scedilla'] = 556;\n\t    t['iacute'] = 278;\n\t    t['lozenge'] = 494;\n\t    t['Rcaron'] = 722;\n\t    t['Gcommaaccent'] = 778;\n\t    t['ucircumflex'] = 611;\n\t    t['acircumflex'] = 556;\n\t    t['Amacron'] = 722;\n\t    t['rcaron'] = 389;\n\t    t['ccedilla'] = 556;\n\t    t['Zdotaccent'] = 611;\n\t    t['Thorn'] = 667;\n\t    t['Omacron'] = 778;\n\t    t['Racute'] = 722;\n\t    t['Sacute'] = 667;\n\t    t['dcaron'] = 743;\n\t    t['Umacron'] = 722;\n\t    t['uring'] = 611;\n\t    t['threesuperior'] = 333;\n\t    t['Ograve'] = 778;\n\t    t['Agrave'] = 722;\n\t    t['Abreve'] = 722;\n\t    t['multiply'] = 584;\n\t    t['uacute'] = 611;\n\t    t['Tcaron'] = 611;\n\t    t['partialdiff'] = 494;\n\t    t['ydieresis'] = 556;\n\t    t['Nacute'] = 722;\n\t    t['icircumflex'] = 278;\n\t    t['Ecircumflex'] = 667;\n\t    t['adieresis'] = 556;\n\t    t['edieresis'] = 556;\n\t    t['cacute'] = 556;\n\t    t['nacute'] = 611;\n\t    t['umacron'] = 611;\n\t    t['Ncaron'] = 722;\n\t    t['Iacute'] = 278;\n\t    t['plusminus'] = 584;\n\t    t['brokenbar'] = 280;\n\t    t['registered'] = 737;\n\t    t['Gbreve'] = 778;\n\t    t['Idotaccent'] = 278;\n\t    t['summation'] = 600;\n\t    t['Egrave'] = 667;\n\t    t['racute'] = 389;\n\t    t['omacron'] = 611;\n\t    t['Zacute'] = 611;\n\t    t['Zcaron'] = 611;\n\t    t['greaterequal'] = 549;\n\t    t['Eth'] = 722;\n\t    t['Ccedilla'] = 722;\n\t    t['lcommaaccent'] = 278;\n\t    t['tcaron'] = 389;\n\t    t['eogonek'] = 556;\n\t    t['Uogonek'] = 722;\n\t    t['Aacute'] = 722;\n\t    t['Adieresis'] = 722;\n\t    t['egrave'] = 556;\n\t    t['zacute'] = 500;\n\t    t['iogonek'] = 278;\n\t    t['Oacute'] = 778;\n\t    t['oacute'] = 611;\n\t    t['amacron'] = 556;\n\t    t['sacute'] = 556;\n\t    t['idieresis'] = 278;\n\t    t['Ocircumflex'] = 778;\n\t    t['Ugrave'] = 722;\n\t    t['Delta'] = 612;\n\t    t['thorn'] = 611;\n\t    t['twosuperior'] = 333;\n\t    t['Odieresis'] = 778;\n\t    t['mu'] = 611;\n\t    t['igrave'] = 278;\n\t    t['ohungarumlaut'] = 611;\n\t    t['Eogonek'] = 667;\n\t    t['dcroat'] = 611;\n\t    t['threequarters'] = 834;\n\t    t['Scedilla'] = 667;\n\t    t['lcaron'] = 400;\n\t    t['Kcommaaccent'] = 722;\n\t    t['Lacute'] = 611;\n\t    t['trademark'] = 1000;\n\t    t['edotaccent'] = 556;\n\t    t['Igrave'] = 278;\n\t    t['Imacron'] = 278;\n\t    t['Lcaron'] = 611;\n\t    t['onehalf'] = 834;\n\t    t['lessequal'] = 549;\n\t    t['ocircumflex'] = 611;\n\t    t['ntilde'] = 611;\n\t    t['Uhungarumlaut'] = 722;\n\t    t['Eacute'] = 667;\n\t    t['emacron'] = 556;\n\t    t['gbreve'] = 611;\n\t    t['onequarter'] = 834;\n\t    t['Scaron'] = 667;\n\t    t['Scommaaccent'] = 667;\n\t    t['Ohungarumlaut'] = 778;\n\t    t['degree'] = 400;\n\t    t['ograve'] = 611;\n\t    t['Ccaron'] = 722;\n\t    t['ugrave'] = 611;\n\t    t['radical'] = 549;\n\t    t['Dcaron'] = 722;\n\t    t['rcommaaccent'] = 389;\n\t    t['Ntilde'] = 722;\n\t    t['otilde'] = 611;\n\t    t['Rcommaaccent'] = 722;\n\t    t['Lcommaaccent'] = 611;\n\t    t['Atilde'] = 722;\n\t    t['Aogonek'] = 722;\n\t    t['Aring'] = 722;\n\t    t['Otilde'] = 778;\n\t    t['zdotaccent'] = 500;\n\t    t['Ecaron'] = 667;\n\t    t['Iogonek'] = 278;\n\t    t['kcommaaccent'] = 556;\n\t    t['minus'] = 584;\n\t    t['Icircumflex'] = 278;\n\t    t['ncaron'] = 611;\n\t    t['tcommaaccent'] = 333;\n\t    t['logicalnot'] = 584;\n\t    t['odieresis'] = 611;\n\t    t['udieresis'] = 611;\n\t    t['notequal'] = 549;\n\t    t['gcommaaccent'] = 611;\n\t    t['eth'] = 611;\n\t    t['zcaron'] = 500;\n\t    t['ncommaaccent'] = 611;\n\t    t['onesuperior'] = 333;\n\t    t['imacron'] = 278;\n\t    t['Euro'] = 556;\n\t  });\n\t  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 278;\n\t    t['exclam'] = 278;\n\t    t['quotedbl'] = 355;\n\t    t['numbersign'] = 556;\n\t    t['dollar'] = 556;\n\t    t['percent'] = 889;\n\t    t['ampersand'] = 667;\n\t    t['quoteright'] = 222;\n\t    t['parenleft'] = 333;\n\t    t['parenright'] = 333;\n\t    t['asterisk'] = 389;\n\t    t['plus'] = 584;\n\t    t['comma'] = 278;\n\t    t['hyphen'] = 333;\n\t    t['period'] = 278;\n\t    t['slash'] = 278;\n\t    t['zero'] = 556;\n\t    t['one'] = 556;\n\t    t['two'] = 556;\n\t    t['three'] = 556;\n\t    t['four'] = 556;\n\t    t['five'] = 556;\n\t    t['six'] = 556;\n\t    t['seven'] = 556;\n\t    t['eight'] = 556;\n\t    t['nine'] = 556;\n\t    t['colon'] = 278;\n\t    t['semicolon'] = 278;\n\t    t['less'] = 584;\n\t    t['equal'] = 584;\n\t    t['greater'] = 584;\n\t    t['question'] = 556;\n\t    t['at'] = 1015;\n\t    t['A'] = 667;\n\t    t['B'] = 667;\n\t    t['C'] = 722;\n\t    t['D'] = 722;\n\t    t['E'] = 667;\n\t    t['F'] = 611;\n\t    t['G'] = 778;\n\t    t['H'] = 722;\n\t    t['I'] = 278;\n\t    t['J'] = 500;\n\t    t['K'] = 667;\n\t    t['L'] = 556;\n\t    t['M'] = 833;\n\t    t['N'] = 722;\n\t    t['O'] = 778;\n\t    t['P'] = 667;\n\t    t['Q'] = 778;\n\t    t['R'] = 722;\n\t    t['S'] = 667;\n\t    t['T'] = 611;\n\t    t['U'] = 722;\n\t    t['V'] = 667;\n\t    t['W'] = 944;\n\t    t['X'] = 667;\n\t    t['Y'] = 667;\n\t    t['Z'] = 611;\n\t    t['bracketleft'] = 278;\n\t    t['backslash'] = 278;\n\t    t['bracketright'] = 278;\n\t    t['asciicircum'] = 469;\n\t    t['underscore'] = 556;\n\t    t['quoteleft'] = 222;\n\t    t['a'] = 556;\n\t    t['b'] = 556;\n\t    t['c'] = 500;\n\t    t['d'] = 556;\n\t    t['e'] = 556;\n\t    t['f'] = 278;\n\t    t['g'] = 556;\n\t    t['h'] = 556;\n\t    t['i'] = 222;\n\t    t['j'] = 222;\n\t    t['k'] = 500;\n\t    t['l'] = 222;\n\t    t['m'] = 833;\n\t    t['n'] = 556;\n\t    t['o'] = 556;\n\t    t['p'] = 556;\n\t    t['q'] = 556;\n\t    t['r'] = 333;\n\t    t['s'] = 500;\n\t    t['t'] = 278;\n\t    t['u'] = 556;\n\t    t['v'] = 500;\n\t    t['w'] = 722;\n\t    t['x'] = 500;\n\t    t['y'] = 500;\n\t    t['z'] = 500;\n\t    t['braceleft'] = 334;\n\t    t['bar'] = 260;\n\t    t['braceright'] = 334;\n\t    t['asciitilde'] = 584;\n\t    t['exclamdown'] = 333;\n\t    t['cent'] = 556;\n\t    t['sterling'] = 556;\n\t    t['fraction'] = 167;\n\t    t['yen'] = 556;\n\t    t['florin'] = 556;\n\t    t['section'] = 556;\n\t    t['currency'] = 556;\n\t    t['quotesingle'] = 191;\n\t    t['quotedblleft'] = 333;\n\t    t['guillemotleft'] = 556;\n\t    t['guilsinglleft'] = 333;\n\t    t['guilsinglright'] = 333;\n\t    t['fi'] = 500;\n\t    t['fl'] = 500;\n\t    t['endash'] = 556;\n\t    t['dagger'] = 556;\n\t    t['daggerdbl'] = 556;\n\t    t['periodcentered'] = 278;\n\t    t['paragraph'] = 537;\n\t    t['bullet'] = 350;\n\t    t['quotesinglbase'] = 222;\n\t    t['quotedblbase'] = 333;\n\t    t['quotedblright'] = 333;\n\t    t['guillemotright'] = 556;\n\t    t['ellipsis'] = 1000;\n\t    t['perthousand'] = 1000;\n\t    t['questiondown'] = 611;\n\t    t['grave'] = 333;\n\t    t['acute'] = 333;\n\t    t['circumflex'] = 333;\n\t    t['tilde'] = 333;\n\t    t['macron'] = 333;\n\t    t['breve'] = 333;\n\t    t['dotaccent'] = 333;\n\t    t['dieresis'] = 333;\n\t    t['ring'] = 333;\n\t    t['cedilla'] = 333;\n\t    t['hungarumlaut'] = 333;\n\t    t['ogonek'] = 333;\n\t    t['caron'] = 333;\n\t    t['emdash'] = 1000;\n\t    t['AE'] = 1000;\n\t    t['ordfeminine'] = 370;\n\t    t['Lslash'] = 556;\n\t    t['Oslash'] = 778;\n\t    t['OE'] = 1000;\n\t    t['ordmasculine'] = 365;\n\t    t['ae'] = 889;\n\t    t['dotlessi'] = 278;\n\t    t['lslash'] = 222;\n\t    t['oslash'] = 611;\n\t    t['oe'] = 944;\n\t    t['germandbls'] = 611;\n\t    t['Idieresis'] = 278;\n\t    t['eacute'] = 556;\n\t    t['abreve'] = 556;\n\t    t['uhungarumlaut'] = 556;\n\t    t['ecaron'] = 556;\n\t    t['Ydieresis'] = 667;\n\t    t['divide'] = 584;\n\t    t['Yacute'] = 667;\n\t    t['Acircumflex'] = 667;\n\t    t['aacute'] = 556;\n\t    t['Ucircumflex'] = 722;\n\t    t['yacute'] = 500;\n\t    t['scommaaccent'] = 500;\n\t    t['ecircumflex'] = 556;\n\t    t['Uring'] = 722;\n\t    t['Udieresis'] = 722;\n\t    t['aogonek'] = 556;\n\t    t['Uacute'] = 722;\n\t    t['uogonek'] = 556;\n\t    t['Edieresis'] = 667;\n\t    t['Dcroat'] = 722;\n\t    t['commaaccent'] = 250;\n\t    t['copyright'] = 737;\n\t    t['Emacron'] = 667;\n\t    t['ccaron'] = 500;\n\t    t['aring'] = 556;\n\t    t['Ncommaaccent'] = 722;\n\t    t['lacute'] = 222;\n\t    t['agrave'] = 556;\n\t    t['Tcommaaccent'] = 611;\n\t    t['Cacute'] = 722;\n\t    t['atilde'] = 556;\n\t    t['Edotaccent'] = 667;\n\t    t['scaron'] = 500;\n\t    t['scedilla'] = 500;\n\t    t['iacute'] = 278;\n\t    t['lozenge'] = 471;\n\t    t['Rcaron'] = 722;\n\t    t['Gcommaaccent'] = 778;\n\t    t['ucircumflex'] = 556;\n\t    t['acircumflex'] = 556;\n\t    t['Amacron'] = 667;\n\t    t['rcaron'] = 333;\n\t    t['ccedilla'] = 500;\n\t    t['Zdotaccent'] = 611;\n\t    t['Thorn'] = 667;\n\t    t['Omacron'] = 778;\n\t    t['Racute'] = 722;\n\t    t['Sacute'] = 667;\n\t    t['dcaron'] = 643;\n\t    t['Umacron'] = 722;\n\t    t['uring'] = 556;\n\t    t['threesuperior'] = 333;\n\t    t['Ograve'] = 778;\n\t    t['Agrave'] = 667;\n\t    t['Abreve'] = 667;\n\t    t['multiply'] = 584;\n\t    t['uacute'] = 556;\n\t    t['Tcaron'] = 611;\n\t    t['partialdiff'] = 476;\n\t    t['ydieresis'] = 500;\n\t    t['Nacute'] = 722;\n\t    t['icircumflex'] = 278;\n\t    t['Ecircumflex'] = 667;\n\t    t['adieresis'] = 556;\n\t    t['edieresis'] = 556;\n\t    t['cacute'] = 500;\n\t    t['nacute'] = 556;\n\t    t['umacron'] = 556;\n\t    t['Ncaron'] = 722;\n\t    t['Iacute'] = 278;\n\t    t['plusminus'] = 584;\n\t    t['brokenbar'] = 260;\n\t    t['registered'] = 737;\n\t    t['Gbreve'] = 778;\n\t    t['Idotaccent'] = 278;\n\t    t['summation'] = 600;\n\t    t['Egrave'] = 667;\n\t    t['racute'] = 333;\n\t    t['omacron'] = 556;\n\t    t['Zacute'] = 611;\n\t    t['Zcaron'] = 611;\n\t    t['greaterequal'] = 549;\n\t    t['Eth'] = 722;\n\t    t['Ccedilla'] = 722;\n\t    t['lcommaaccent'] = 222;\n\t    t['tcaron'] = 317;\n\t    t['eogonek'] = 556;\n\t    t['Uogonek'] = 722;\n\t    t['Aacute'] = 667;\n\t    t['Adieresis'] = 667;\n\t    t['egrave'] = 556;\n\t    t['zacute'] = 500;\n\t    t['iogonek'] = 222;\n\t    t['Oacute'] = 778;\n\t    t['oacute'] = 556;\n\t    t['amacron'] = 556;\n\t    t['sacute'] = 500;\n\t    t['idieresis'] = 278;\n\t    t['Ocircumflex'] = 778;\n\t    t['Ugrave'] = 722;\n\t    t['Delta'] = 612;\n\t    t['thorn'] = 556;\n\t    t['twosuperior'] = 333;\n\t    t['Odieresis'] = 778;\n\t    t['mu'] = 556;\n\t    t['igrave'] = 278;\n\t    t['ohungarumlaut'] = 556;\n\t    t['Eogonek'] = 667;\n\t    t['dcroat'] = 556;\n\t    t['threequarters'] = 834;\n\t    t['Scedilla'] = 667;\n\t    t['lcaron'] = 299;\n\t    t['Kcommaaccent'] = 667;\n\t    t['Lacute'] = 556;\n\t    t['trademark'] = 1000;\n\t    t['edotaccent'] = 556;\n\t    t['Igrave'] = 278;\n\t    t['Imacron'] = 278;\n\t    t['Lcaron'] = 556;\n\t    t['onehalf'] = 834;\n\t    t['lessequal'] = 549;\n\t    t['ocircumflex'] = 556;\n\t    t['ntilde'] = 556;\n\t    t['Uhungarumlaut'] = 722;\n\t    t['Eacute'] = 667;\n\t    t['emacron'] = 556;\n\t    t['gbreve'] = 556;\n\t    t['onequarter'] = 834;\n\t    t['Scaron'] = 667;\n\t    t['Scommaaccent'] = 667;\n\t    t['Ohungarumlaut'] = 778;\n\t    t['degree'] = 400;\n\t    t['ograve'] = 556;\n\t    t['Ccaron'] = 722;\n\t    t['ugrave'] = 556;\n\t    t['radical'] = 453;\n\t    t['Dcaron'] = 722;\n\t    t['rcommaaccent'] = 333;\n\t    t['Ntilde'] = 722;\n\t    t['otilde'] = 556;\n\t    t['Rcommaaccent'] = 722;\n\t    t['Lcommaaccent'] = 556;\n\t    t['Atilde'] = 667;\n\t    t['Aogonek'] = 667;\n\t    t['Aring'] = 667;\n\t    t['Otilde'] = 778;\n\t    t['zdotaccent'] = 500;\n\t    t['Ecaron'] = 667;\n\t    t['Iogonek'] = 278;\n\t    t['kcommaaccent'] = 500;\n\t    t['minus'] = 584;\n\t    t['Icircumflex'] = 278;\n\t    t['ncaron'] = 556;\n\t    t['tcommaaccent'] = 278;\n\t    t['logicalnot'] = 584;\n\t    t['odieresis'] = 556;\n\t    t['udieresis'] = 556;\n\t    t['notequal'] = 549;\n\t    t['gcommaaccent'] = 556;\n\t    t['eth'] = 556;\n\t    t['zcaron'] = 500;\n\t    t['ncommaaccent'] = 556;\n\t    t['onesuperior'] = 333;\n\t    t['imacron'] = 278;\n\t    t['Euro'] = 556;\n\t  });\n\t  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 250;\n\t    t['exclam'] = 333;\n\t    t['universal'] = 713;\n\t    t['numbersign'] = 500;\n\t    t['existential'] = 549;\n\t    t['percent'] = 833;\n\t    t['ampersand'] = 778;\n\t    t['suchthat'] = 439;\n\t    t['parenleft'] = 333;\n\t    t['parenright'] = 333;\n\t    t['asteriskmath'] = 500;\n\t    t['plus'] = 549;\n\t    t['comma'] = 250;\n\t    t['minus'] = 549;\n\t    t['period'] = 250;\n\t    t['slash'] = 278;\n\t    t['zero'] = 500;\n\t    t['one'] = 500;\n\t    t['two'] = 500;\n\t    t['three'] = 500;\n\t    t['four'] = 500;\n\t    t['five'] = 500;\n\t    t['six'] = 500;\n\t    t['seven'] = 500;\n\t    t['eight'] = 500;\n\t    t['nine'] = 500;\n\t    t['colon'] = 278;\n\t    t['semicolon'] = 278;\n\t    t['less'] = 549;\n\t    t['equal'] = 549;\n\t    t['greater'] = 549;\n\t    t['question'] = 444;\n\t    t['congruent'] = 549;\n\t    t['Alpha'] = 722;\n\t    t['Beta'] = 667;\n\t    t['Chi'] = 722;\n\t    t['Delta'] = 612;\n\t    t['Epsilon'] = 611;\n\t    t['Phi'] = 763;\n\t    t['Gamma'] = 603;\n\t    t['Eta'] = 722;\n\t    t['Iota'] = 333;\n\t    t['theta1'] = 631;\n\t    t['Kappa'] = 722;\n\t    t['Lambda'] = 686;\n\t    t['Mu'] = 889;\n\t    t['Nu'] = 722;\n\t    t['Omicron'] = 722;\n\t    t['Pi'] = 768;\n\t    t['Theta'] = 741;\n\t    t['Rho'] = 556;\n\t    t['Sigma'] = 592;\n\t    t['Tau'] = 611;\n\t    t['Upsilon'] = 690;\n\t    t['sigma1'] = 439;\n\t    t['Omega'] = 768;\n\t    t['Xi'] = 645;\n\t    t['Psi'] = 795;\n\t    t['Zeta'] = 611;\n\t    t['bracketleft'] = 333;\n\t    t['therefore'] = 863;\n\t    t['bracketright'] = 333;\n\t    t['perpendicular'] = 658;\n\t    t['underscore'] = 500;\n\t    t['radicalex'] = 500;\n\t    t['alpha'] = 631;\n\t    t['beta'] = 549;\n\t    t['chi'] = 549;\n\t    t['delta'] = 494;\n\t    t['epsilon'] = 439;\n\t    t['phi'] = 521;\n\t    t['gamma'] = 411;\n\t    t['eta'] = 603;\n\t    t['iota'] = 329;\n\t    t['phi1'] = 603;\n\t    t['kappa'] = 549;\n\t    t['lambda'] = 549;\n\t    t['mu'] = 576;\n\t    t['nu'] = 521;\n\t    t['omicron'] = 549;\n\t    t['pi'] = 549;\n\t    t['theta'] = 521;\n\t    t['rho'] = 549;\n\t    t['sigma'] = 603;\n\t    t['tau'] = 439;\n\t    t['upsilon'] = 576;\n\t    t['omega1'] = 713;\n\t    t['omega'] = 686;\n\t    t['xi'] = 493;\n\t    t['psi'] = 686;\n\t    t['zeta'] = 494;\n\t    t['braceleft'] = 480;\n\t    t['bar'] = 200;\n\t    t['braceright'] = 480;\n\t    t['similar'] = 549;\n\t    t['Euro'] = 750;\n\t    t['Upsilon1'] = 620;\n\t    t['minute'] = 247;\n\t    t['lessequal'] = 549;\n\t    t['fraction'] = 167;\n\t    t['infinity'] = 713;\n\t    t['florin'] = 500;\n\t    t['club'] = 753;\n\t    t['diamond'] = 753;\n\t    t['heart'] = 753;\n\t    t['spade'] = 753;\n\t    t['arrowboth'] = 1042;\n\t    t['arrowleft'] = 987;\n\t    t['arrowup'] = 603;\n\t    t['arrowright'] = 987;\n\t    t['arrowdown'] = 603;\n\t    t['degree'] = 400;\n\t    t['plusminus'] = 549;\n\t    t['second'] = 411;\n\t    t['greaterequal'] = 549;\n\t    t['multiply'] = 549;\n\t    t['proportional'] = 713;\n\t    t['partialdiff'] = 494;\n\t    t['bullet'] = 460;\n\t    t['divide'] = 549;\n\t    t['notequal'] = 549;\n\t    t['equivalence'] = 549;\n\t    t['approxequal'] = 549;\n\t    t['ellipsis'] = 1000;\n\t    t['arrowvertex'] = 603;\n\t    t['arrowhorizex'] = 1000;\n\t    t['carriagereturn'] = 658;\n\t    t['aleph'] = 823;\n\t    t['Ifraktur'] = 686;\n\t    t['Rfraktur'] = 795;\n\t    t['weierstrass'] = 987;\n\t    t['circlemultiply'] = 768;\n\t    t['circleplus'] = 768;\n\t    t['emptyset'] = 823;\n\t    t['intersection'] = 768;\n\t    t['union'] = 768;\n\t    t['propersuperset'] = 713;\n\t    t['reflexsuperset'] = 713;\n\t    t['notsubset'] = 713;\n\t    t['propersubset'] = 713;\n\t    t['reflexsubset'] = 713;\n\t    t['element'] = 713;\n\t    t['notelement'] = 713;\n\t    t['angle'] = 768;\n\t    t['gradient'] = 713;\n\t    t['registerserif'] = 790;\n\t    t['copyrightserif'] = 790;\n\t    t['trademarkserif'] = 890;\n\t    t['product'] = 823;\n\t    t['radical'] = 549;\n\t    t['dotmath'] = 250;\n\t    t['logicalnot'] = 713;\n\t    t['logicaland'] = 603;\n\t    t['logicalor'] = 603;\n\t    t['arrowdblboth'] = 1042;\n\t    t['arrowdblleft'] = 987;\n\t    t['arrowdblup'] = 603;\n\t    t['arrowdblright'] = 987;\n\t    t['arrowdbldown'] = 603;\n\t    t['lozenge'] = 494;\n\t    t['angleleft'] = 329;\n\t    t['registersans'] = 790;\n\t    t['copyrightsans'] = 790;\n\t    t['trademarksans'] = 786;\n\t    t['summation'] = 713;\n\t    t['parenlefttp'] = 384;\n\t    t['parenleftex'] = 384;\n\t    t['parenleftbt'] = 384;\n\t    t['bracketlefttp'] = 384;\n\t    t['bracketleftex'] = 384;\n\t    t['bracketleftbt'] = 384;\n\t    t['bracelefttp'] = 494;\n\t    t['braceleftmid'] = 494;\n\t    t['braceleftbt'] = 494;\n\t    t['braceex'] = 494;\n\t    t['angleright'] = 329;\n\t    t['integral'] = 274;\n\t    t['integraltp'] = 686;\n\t    t['integralex'] = 686;\n\t    t['integralbt'] = 686;\n\t    t['parenrighttp'] = 384;\n\t    t['parenrightex'] = 384;\n\t    t['parenrightbt'] = 384;\n\t    t['bracketrighttp'] = 384;\n\t    t['bracketrightex'] = 384;\n\t    t['bracketrightbt'] = 384;\n\t    t['bracerighttp'] = 494;\n\t    t['bracerightmid'] = 494;\n\t    t['bracerightbt'] = 494;\n\t    t['apple'] = 790;\n\t  });\n\t  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 250;\n\t    t['exclam'] = 333;\n\t    t['quotedbl'] = 408;\n\t    t['numbersign'] = 500;\n\t    t['dollar'] = 500;\n\t    t['percent'] = 833;\n\t    t['ampersand'] = 778;\n\t    t['quoteright'] = 333;\n\t    t['parenleft'] = 333;\n\t    t['parenright'] = 333;\n\t    t['asterisk'] = 500;\n\t    t['plus'] = 564;\n\t    t['comma'] = 250;\n\t    t['hyphen'] = 333;\n\t    t['period'] = 250;\n\t    t['slash'] = 278;\n\t    t['zero'] = 500;\n\t    t['one'] = 500;\n\t    t['two'] = 500;\n\t    t['three'] = 500;\n\t    t['four'] = 500;\n\t    t['five'] = 500;\n\t    t['six'] = 500;\n\t    t['seven'] = 500;\n\t    t['eight'] = 500;\n\t    t['nine'] = 500;\n\t    t['colon'] = 278;\n\t    t['semicolon'] = 278;\n\t    t['less'] = 564;\n\t    t['equal'] = 564;\n\t    t['greater'] = 564;\n\t    t['question'] = 444;\n\t    t['at'] = 921;\n\t    t['A'] = 722;\n\t    t['B'] = 667;\n\t    t['C'] = 667;\n\t    t['D'] = 722;\n\t    t['E'] = 611;\n\t    t['F'] = 556;\n\t    t['G'] = 722;\n\t    t['H'] = 722;\n\t    t['I'] = 333;\n\t    t['J'] = 389;\n\t    t['K'] = 722;\n\t    t['L'] = 611;\n\t    t['M'] = 889;\n\t    t['N'] = 722;\n\t    t['O'] = 722;\n\t    t['P'] = 556;\n\t    t['Q'] = 722;\n\t    t['R'] = 667;\n\t    t['S'] = 556;\n\t    t['T'] = 611;\n\t    t['U'] = 722;\n\t    t['V'] = 722;\n\t    t['W'] = 944;\n\t    t['X'] = 722;\n\t    t['Y'] = 722;\n\t    t['Z'] = 611;\n\t    t['bracketleft'] = 333;\n\t    t['backslash'] = 278;\n\t    t['bracketright'] = 333;\n\t    t['asciicircum'] = 469;\n\t    t['underscore'] = 500;\n\t    t['quoteleft'] = 333;\n\t    t['a'] = 444;\n\t    t['b'] = 500;\n\t    t['c'] = 444;\n\t    t['d'] = 500;\n\t    t['e'] = 444;\n\t    t['f'] = 333;\n\t    t['g'] = 500;\n\t    t['h'] = 500;\n\t    t['i'] = 278;\n\t    t['j'] = 278;\n\t    t['k'] = 500;\n\t    t['l'] = 278;\n\t    t['m'] = 778;\n\t    t['n'] = 500;\n\t    t['o'] = 500;\n\t    t['p'] = 500;\n\t    t['q'] = 500;\n\t    t['r'] = 333;\n\t    t['s'] = 389;\n\t    t['t'] = 278;\n\t    t['u'] = 500;\n\t    t['v'] = 500;\n\t    t['w'] = 722;\n\t    t['x'] = 500;\n\t    t['y'] = 500;\n\t    t['z'] = 444;\n\t    t['braceleft'] = 480;\n\t    t['bar'] = 200;\n\t    t['braceright'] = 480;\n\t    t['asciitilde'] = 541;\n\t    t['exclamdown'] = 333;\n\t    t['cent'] = 500;\n\t    t['sterling'] = 500;\n\t    t['fraction'] = 167;\n\t    t['yen'] = 500;\n\t    t['florin'] = 500;\n\t    t['section'] = 500;\n\t    t['currency'] = 500;\n\t    t['quotesingle'] = 180;\n\t    t['quotedblleft'] = 444;\n\t    t['guillemotleft'] = 500;\n\t    t['guilsinglleft'] = 333;\n\t    t['guilsinglright'] = 333;\n\t    t['fi'] = 556;\n\t    t['fl'] = 556;\n\t    t['endash'] = 500;\n\t    t['dagger'] = 500;\n\t    t['daggerdbl'] = 500;\n\t    t['periodcentered'] = 250;\n\t    t['paragraph'] = 453;\n\t    t['bullet'] = 350;\n\t    t['quotesinglbase'] = 333;\n\t    t['quotedblbase'] = 444;\n\t    t['quotedblright'] = 444;\n\t    t['guillemotright'] = 500;\n\t    t['ellipsis'] = 1000;\n\t    t['perthousand'] = 1000;\n\t    t['questiondown'] = 444;\n\t    t['grave'] = 333;\n\t    t['acute'] = 333;\n\t    t['circumflex'] = 333;\n\t    t['tilde'] = 333;\n\t    t['macron'] = 333;\n\t    t['breve'] = 333;\n\t    t['dotaccent'] = 333;\n\t    t['dieresis'] = 333;\n\t    t['ring'] = 333;\n\t    t['cedilla'] = 333;\n\t    t['hungarumlaut'] = 333;\n\t    t['ogonek'] = 333;\n\t    t['caron'] = 333;\n\t    t['emdash'] = 1000;\n\t    t['AE'] = 889;\n\t    t['ordfeminine'] = 276;\n\t    t['Lslash'] = 611;\n\t    t['Oslash'] = 722;\n\t    t['OE'] = 889;\n\t    t['ordmasculine'] = 310;\n\t    t['ae'] = 667;\n\t    t['dotlessi'] = 278;\n\t    t['lslash'] = 278;\n\t    t['oslash'] = 500;\n\t    t['oe'] = 722;\n\t    t['germandbls'] = 500;\n\t    t['Idieresis'] = 333;\n\t    t['eacute'] = 444;\n\t    t['abreve'] = 444;\n\t    t['uhungarumlaut'] = 500;\n\t    t['ecaron'] = 444;\n\t    t['Ydieresis'] = 722;\n\t    t['divide'] = 564;\n\t    t['Yacute'] = 722;\n\t    t['Acircumflex'] = 722;\n\t    t['aacute'] = 444;\n\t    t['Ucircumflex'] = 722;\n\t    t['yacute'] = 500;\n\t    t['scommaaccent'] = 389;\n\t    t['ecircumflex'] = 444;\n\t    t['Uring'] = 722;\n\t    t['Udieresis'] = 722;\n\t    t['aogonek'] = 444;\n\t    t['Uacute'] = 722;\n\t    t['uogonek'] = 500;\n\t    t['Edieresis'] = 611;\n\t    t['Dcroat'] = 722;\n\t    t['commaaccent'] = 250;\n\t    t['copyright'] = 760;\n\t    t['Emacron'] = 611;\n\t    t['ccaron'] = 444;\n\t    t['aring'] = 444;\n\t    t['Ncommaaccent'] = 722;\n\t    t['lacute'] = 278;\n\t    t['agrave'] = 444;\n\t    t['Tcommaaccent'] = 611;\n\t    t['Cacute'] = 667;\n\t    t['atilde'] = 444;\n\t    t['Edotaccent'] = 611;\n\t    t['scaron'] = 389;\n\t    t['scedilla'] = 389;\n\t    t['iacute'] = 278;\n\t    t['lozenge'] = 471;\n\t    t['Rcaron'] = 667;\n\t    t['Gcommaaccent'] = 722;\n\t    t['ucircumflex'] = 500;\n\t    t['acircumflex'] = 444;\n\t    t['Amacron'] = 722;\n\t    t['rcaron'] = 333;\n\t    t['ccedilla'] = 444;\n\t    t['Zdotaccent'] = 611;\n\t    t['Thorn'] = 556;\n\t    t['Omacron'] = 722;\n\t    t['Racute'] = 667;\n\t    t['Sacute'] = 556;\n\t    t['dcaron'] = 588;\n\t    t['Umacron'] = 722;\n\t    t['uring'] = 500;\n\t    t['threesuperior'] = 300;\n\t    t['Ograve'] = 722;\n\t    t['Agrave'] = 722;\n\t    t['Abreve'] = 722;\n\t    t['multiply'] = 564;\n\t    t['uacute'] = 500;\n\t    t['Tcaron'] = 611;\n\t    t['partialdiff'] = 476;\n\t    t['ydieresis'] = 500;\n\t    t['Nacute'] = 722;\n\t    t['icircumflex'] = 278;\n\t    t['Ecircumflex'] = 611;\n\t    t['adieresis'] = 444;\n\t    t['edieresis'] = 444;\n\t    t['cacute'] = 444;\n\t    t['nacute'] = 500;\n\t    t['umacron'] = 500;\n\t    t['Ncaron'] = 722;\n\t    t['Iacute'] = 333;\n\t    t['plusminus'] = 564;\n\t    t['brokenbar'] = 200;\n\t    t['registered'] = 760;\n\t    t['Gbreve'] = 722;\n\t    t['Idotaccent'] = 333;\n\t    t['summation'] = 600;\n\t    t['Egrave'] = 611;\n\t    t['racute'] = 333;\n\t    t['omacron'] = 500;\n\t    t['Zacute'] = 611;\n\t    t['Zcaron'] = 611;\n\t    t['greaterequal'] = 549;\n\t    t['Eth'] = 722;\n\t    t['Ccedilla'] = 667;\n\t    t['lcommaaccent'] = 278;\n\t    t['tcaron'] = 326;\n\t    t['eogonek'] = 444;\n\t    t['Uogonek'] = 722;\n\t    t['Aacute'] = 722;\n\t    t['Adieresis'] = 722;\n\t    t['egrave'] = 444;\n\t    t['zacute'] = 444;\n\t    t['iogonek'] = 278;\n\t    t['Oacute'] = 722;\n\t    t['oacute'] = 500;\n\t    t['amacron'] = 444;\n\t    t['sacute'] = 389;\n\t    t['idieresis'] = 278;\n\t    t['Ocircumflex'] = 722;\n\t    t['Ugrave'] = 722;\n\t    t['Delta'] = 612;\n\t    t['thorn'] = 500;\n\t    t['twosuperior'] = 300;\n\t    t['Odieresis'] = 722;\n\t    t['mu'] = 500;\n\t    t['igrave'] = 278;\n\t    t['ohungarumlaut'] = 500;\n\t    t['Eogonek'] = 611;\n\t    t['dcroat'] = 500;\n\t    t['threequarters'] = 750;\n\t    t['Scedilla'] = 556;\n\t    t['lcaron'] = 344;\n\t    t['Kcommaaccent'] = 722;\n\t    t['Lacute'] = 611;\n\t    t['trademark'] = 980;\n\t    t['edotaccent'] = 444;\n\t    t['Igrave'] = 333;\n\t    t['Imacron'] = 333;\n\t    t['Lcaron'] = 611;\n\t    t['onehalf'] = 750;\n\t    t['lessequal'] = 549;\n\t    t['ocircumflex'] = 500;\n\t    t['ntilde'] = 500;\n\t    t['Uhungarumlaut'] = 722;\n\t    t['Eacute'] = 611;\n\t    t['emacron'] = 444;\n\t    t['gbreve'] = 500;\n\t    t['onequarter'] = 750;\n\t    t['Scaron'] = 556;\n\t    t['Scommaaccent'] = 556;\n\t    t['Ohungarumlaut'] = 722;\n\t    t['degree'] = 400;\n\t    t['ograve'] = 500;\n\t    t['Ccaron'] = 667;\n\t    t['ugrave'] = 500;\n\t    t['radical'] = 453;\n\t    t['Dcaron'] = 722;\n\t    t['rcommaaccent'] = 333;\n\t    t['Ntilde'] = 722;\n\t    t['otilde'] = 500;\n\t    t['Rcommaaccent'] = 667;\n\t    t['Lcommaaccent'] = 611;\n\t    t['Atilde'] = 722;\n\t    t['Aogonek'] = 722;\n\t    t['Aring'] = 722;\n\t    t['Otilde'] = 722;\n\t    t['zdotaccent'] = 444;\n\t    t['Ecaron'] = 611;\n\t    t['Iogonek'] = 333;\n\t    t['kcommaaccent'] = 500;\n\t    t['minus'] = 564;\n\t    t['Icircumflex'] = 333;\n\t    t['ncaron'] = 500;\n\t    t['tcommaaccent'] = 278;\n\t    t['logicalnot'] = 564;\n\t    t['odieresis'] = 500;\n\t    t['udieresis'] = 500;\n\t    t['notequal'] = 549;\n\t    t['gcommaaccent'] = 500;\n\t    t['eth'] = 500;\n\t    t['zcaron'] = 444;\n\t    t['ncommaaccent'] = 500;\n\t    t['onesuperior'] = 300;\n\t    t['imacron'] = 278;\n\t    t['Euro'] = 500;\n\t  });\n\t  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 250;\n\t    t['exclam'] = 333;\n\t    t['quotedbl'] = 555;\n\t    t['numbersign'] = 500;\n\t    t['dollar'] = 500;\n\t    t['percent'] = 1000;\n\t    t['ampersand'] = 833;\n\t    t['quoteright'] = 333;\n\t    t['parenleft'] = 333;\n\t    t['parenright'] = 333;\n\t    t['asterisk'] = 500;\n\t    t['plus'] = 570;\n\t    t['comma'] = 250;\n\t    t['hyphen'] = 333;\n\t    t['period'] = 250;\n\t    t['slash'] = 278;\n\t    t['zero'] = 500;\n\t    t['one'] = 500;\n\t    t['two'] = 500;\n\t    t['three'] = 500;\n\t    t['four'] = 500;\n\t    t['five'] = 500;\n\t    t['six'] = 500;\n\t    t['seven'] = 500;\n\t    t['eight'] = 500;\n\t    t['nine'] = 500;\n\t    t['colon'] = 333;\n\t    t['semicolon'] = 333;\n\t    t['less'] = 570;\n\t    t['equal'] = 570;\n\t    t['greater'] = 570;\n\t    t['question'] = 500;\n\t    t['at'] = 930;\n\t    t['A'] = 722;\n\t    t['B'] = 667;\n\t    t['C'] = 722;\n\t    t['D'] = 722;\n\t    t['E'] = 667;\n\t    t['F'] = 611;\n\t    t['G'] = 778;\n\t    t['H'] = 778;\n\t    t['I'] = 389;\n\t    t['J'] = 500;\n\t    t['K'] = 778;\n\t    t['L'] = 667;\n\t    t['M'] = 944;\n\t    t['N'] = 722;\n\t    t['O'] = 778;\n\t    t['P'] = 611;\n\t    t['Q'] = 778;\n\t    t['R'] = 722;\n\t    t['S'] = 556;\n\t    t['T'] = 667;\n\t    t['U'] = 722;\n\t    t['V'] = 722;\n\t    t['W'] = 1000;\n\t    t['X'] = 722;\n\t    t['Y'] = 722;\n\t    t['Z'] = 667;\n\t    t['bracketleft'] = 333;\n\t    t['backslash'] = 278;\n\t    t['bracketright'] = 333;\n\t    t['asciicircum'] = 581;\n\t    t['underscore'] = 500;\n\t    t['quoteleft'] = 333;\n\t    t['a'] = 500;\n\t    t['b'] = 556;\n\t    t['c'] = 444;\n\t    t['d'] = 556;\n\t    t['e'] = 444;\n\t    t['f'] = 333;\n\t    t['g'] = 500;\n\t    t['h'] = 556;\n\t    t['i'] = 278;\n\t    t['j'] = 333;\n\t    t['k'] = 556;\n\t    t['l'] = 278;\n\t    t['m'] = 833;\n\t    t['n'] = 556;\n\t    t['o'] = 500;\n\t    t['p'] = 556;\n\t    t['q'] = 556;\n\t    t['r'] = 444;\n\t    t['s'] = 389;\n\t    t['t'] = 333;\n\t    t['u'] = 556;\n\t    t['v'] = 500;\n\t    t['w'] = 722;\n\t    t['x'] = 500;\n\t    t['y'] = 500;\n\t    t['z'] = 444;\n\t    t['braceleft'] = 394;\n\t    t['bar'] = 220;\n\t    t['braceright'] = 394;\n\t    t['asciitilde'] = 520;\n\t    t['exclamdown'] = 333;\n\t    t['cent'] = 500;\n\t    t['sterling'] = 500;\n\t    t['fraction'] = 167;\n\t    t['yen'] = 500;\n\t    t['florin'] = 500;\n\t    t['section'] = 500;\n\t    t['currency'] = 500;\n\t    t['quotesingle'] = 278;\n\t    t['quotedblleft'] = 500;\n\t    t['guillemotleft'] = 500;\n\t    t['guilsinglleft'] = 333;\n\t    t['guilsinglright'] = 333;\n\t    t['fi'] = 556;\n\t    t['fl'] = 556;\n\t    t['endash'] = 500;\n\t    t['dagger'] = 500;\n\t    t['daggerdbl'] = 500;\n\t    t['periodcentered'] = 250;\n\t    t['paragraph'] = 540;\n\t    t['bullet'] = 350;\n\t    t['quotesinglbase'] = 333;\n\t    t['quotedblbase'] = 500;\n\t    t['quotedblright'] = 500;\n\t    t['guillemotright'] = 500;\n\t    t['ellipsis'] = 1000;\n\t    t['perthousand'] = 1000;\n\t    t['questiondown'] = 500;\n\t    t['grave'] = 333;\n\t    t['acute'] = 333;\n\t    t['circumflex'] = 333;\n\t    t['tilde'] = 333;\n\t    t['macron'] = 333;\n\t    t['breve'] = 333;\n\t    t['dotaccent'] = 333;\n\t    t['dieresis'] = 333;\n\t    t['ring'] = 333;\n\t    t['cedilla'] = 333;\n\t    t['hungarumlaut'] = 333;\n\t    t['ogonek'] = 333;\n\t    t['caron'] = 333;\n\t    t['emdash'] = 1000;\n\t    t['AE'] = 1000;\n\t    t['ordfeminine'] = 300;\n\t    t['Lslash'] = 667;\n\t    t['Oslash'] = 778;\n\t    t['OE'] = 1000;\n\t    t['ordmasculine'] = 330;\n\t    t['ae'] = 722;\n\t    t['dotlessi'] = 278;\n\t    t['lslash'] = 278;\n\t    t['oslash'] = 500;\n\t    t['oe'] = 722;\n\t    t['germandbls'] = 556;\n\t    t['Idieresis'] = 389;\n\t    t['eacute'] = 444;\n\t    t['abreve'] = 500;\n\t    t['uhungarumlaut'] = 556;\n\t    t['ecaron'] = 444;\n\t    t['Ydieresis'] = 722;\n\t    t['divide'] = 570;\n\t    t['Yacute'] = 722;\n\t    t['Acircumflex'] = 722;\n\t    t['aacute'] = 500;\n\t    t['Ucircumflex'] = 722;\n\t    t['yacute'] = 500;\n\t    t['scommaaccent'] = 389;\n\t    t['ecircumflex'] = 444;\n\t    t['Uring'] = 722;\n\t    t['Udieresis'] = 722;\n\t    t['aogonek'] = 500;\n\t    t['Uacute'] = 722;\n\t    t['uogonek'] = 556;\n\t    t['Edieresis'] = 667;\n\t    t['Dcroat'] = 722;\n\t    t['commaaccent'] = 250;\n\t    t['copyright'] = 747;\n\t    t['Emacron'] = 667;\n\t    t['ccaron'] = 444;\n\t    t['aring'] = 500;\n\t    t['Ncommaaccent'] = 722;\n\t    t['lacute'] = 278;\n\t    t['agrave'] = 500;\n\t    t['Tcommaaccent'] = 667;\n\t    t['Cacute'] = 722;\n\t    t['atilde'] = 500;\n\t    t['Edotaccent'] = 667;\n\t    t['scaron'] = 389;\n\t    t['scedilla'] = 389;\n\t    t['iacute'] = 278;\n\t    t['lozenge'] = 494;\n\t    t['Rcaron'] = 722;\n\t    t['Gcommaaccent'] = 778;\n\t    t['ucircumflex'] = 556;\n\t    t['acircumflex'] = 500;\n\t    t['Amacron'] = 722;\n\t    t['rcaron'] = 444;\n\t    t['ccedilla'] = 444;\n\t    t['Zdotaccent'] = 667;\n\t    t['Thorn'] = 611;\n\t    t['Omacron'] = 778;\n\t    t['Racute'] = 722;\n\t    t['Sacute'] = 556;\n\t    t['dcaron'] = 672;\n\t    t['Umacron'] = 722;\n\t    t['uring'] = 556;\n\t    t['threesuperior'] = 300;\n\t    t['Ograve'] = 778;\n\t    t['Agrave'] = 722;\n\t    t['Abreve'] = 722;\n\t    t['multiply'] = 570;\n\t    t['uacute'] = 556;\n\t    t['Tcaron'] = 667;\n\t    t['partialdiff'] = 494;\n\t    t['ydieresis'] = 500;\n\t    t['Nacute'] = 722;\n\t    t['icircumflex'] = 278;\n\t    t['Ecircumflex'] = 667;\n\t    t['adieresis'] = 500;\n\t    t['edieresis'] = 444;\n\t    t['cacute'] = 444;\n\t    t['nacute'] = 556;\n\t    t['umacron'] = 556;\n\t    t['Ncaron'] = 722;\n\t    t['Iacute'] = 389;\n\t    t['plusminus'] = 570;\n\t    t['brokenbar'] = 220;\n\t    t['registered'] = 747;\n\t    t['Gbreve'] = 778;\n\t    t['Idotaccent'] = 389;\n\t    t['summation'] = 600;\n\t    t['Egrave'] = 667;\n\t    t['racute'] = 444;\n\t    t['omacron'] = 500;\n\t    t['Zacute'] = 667;\n\t    t['Zcaron'] = 667;\n\t    t['greaterequal'] = 549;\n\t    t['Eth'] = 722;\n\t    t['Ccedilla'] = 722;\n\t    t['lcommaaccent'] = 278;\n\t    t['tcaron'] = 416;\n\t    t['eogonek'] = 444;\n\t    t['Uogonek'] = 722;\n\t    t['Aacute'] = 722;\n\t    t['Adieresis'] = 722;\n\t    t['egrave'] = 444;\n\t    t['zacute'] = 444;\n\t    t['iogonek'] = 278;\n\t    t['Oacute'] = 778;\n\t    t['oacute'] = 500;\n\t    t['amacron'] = 500;\n\t    t['sacute'] = 389;\n\t    t['idieresis'] = 278;\n\t    t['Ocircumflex'] = 778;\n\t    t['Ugrave'] = 722;\n\t    t['Delta'] = 612;\n\t    t['thorn'] = 556;\n\t    t['twosuperior'] = 300;\n\t    t['Odieresis'] = 778;\n\t    t['mu'] = 556;\n\t    t['igrave'] = 278;\n\t    t['ohungarumlaut'] = 500;\n\t    t['Eogonek'] = 667;\n\t    t['dcroat'] = 556;\n\t    t['threequarters'] = 750;\n\t    t['Scedilla'] = 556;\n\t    t['lcaron'] = 394;\n\t    t['Kcommaaccent'] = 778;\n\t    t['Lacute'] = 667;\n\t    t['trademark'] = 1000;\n\t    t['edotaccent'] = 444;\n\t    t['Igrave'] = 389;\n\t    t['Imacron'] = 389;\n\t    t['Lcaron'] = 667;\n\t    t['onehalf'] = 750;\n\t    t['lessequal'] = 549;\n\t    t['ocircumflex'] = 500;\n\t    t['ntilde'] = 556;\n\t    t['Uhungarumlaut'] = 722;\n\t    t['Eacute'] = 667;\n\t    t['emacron'] = 444;\n\t    t['gbreve'] = 500;\n\t    t['onequarter'] = 750;\n\t    t['Scaron'] = 556;\n\t    t['Scommaaccent'] = 556;\n\t    t['Ohungarumlaut'] = 778;\n\t    t['degree'] = 400;\n\t    t['ograve'] = 500;\n\t    t['Ccaron'] = 722;\n\t    t['ugrave'] = 556;\n\t    t['radical'] = 549;\n\t    t['Dcaron'] = 722;\n\t    t['rcommaaccent'] = 444;\n\t    t['Ntilde'] = 722;\n\t    t['otilde'] = 500;\n\t    t['Rcommaaccent'] = 722;\n\t    t['Lcommaaccent'] = 667;\n\t    t['Atilde'] = 722;\n\t    t['Aogonek'] = 722;\n\t    t['Aring'] = 722;\n\t    t['Otilde'] = 778;\n\t    t['zdotaccent'] = 444;\n\t    t['Ecaron'] = 667;\n\t    t['Iogonek'] = 389;\n\t    t['kcommaaccent'] = 556;\n\t    t['minus'] = 570;\n\t    t['Icircumflex'] = 389;\n\t    t['ncaron'] = 556;\n\t    t['tcommaaccent'] = 333;\n\t    t['logicalnot'] = 570;\n\t    t['odieresis'] = 500;\n\t    t['udieresis'] = 556;\n\t    t['notequal'] = 549;\n\t    t['gcommaaccent'] = 500;\n\t    t['eth'] = 500;\n\t    t['zcaron'] = 444;\n\t    t['ncommaaccent'] = 556;\n\t    t['onesuperior'] = 300;\n\t    t['imacron'] = 278;\n\t    t['Euro'] = 500;\n\t  });\n\t  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 250;\n\t    t['exclam'] = 389;\n\t    t['quotedbl'] = 555;\n\t    t['numbersign'] = 500;\n\t    t['dollar'] = 500;\n\t    t['percent'] = 833;\n\t    t['ampersand'] = 778;\n\t    t['quoteright'] = 333;\n\t    t['parenleft'] = 333;\n\t    t['parenright'] = 333;\n\t    t['asterisk'] = 500;\n\t    t['plus'] = 570;\n\t    t['comma'] = 250;\n\t    t['hyphen'] = 333;\n\t    t['period'] = 250;\n\t    t['slash'] = 278;\n\t    t['zero'] = 500;\n\t    t['one'] = 500;\n\t    t['two'] = 500;\n\t    t['three'] = 500;\n\t    t['four'] = 500;\n\t    t['five'] = 500;\n\t    t['six'] = 500;\n\t    t['seven'] = 500;\n\t    t['eight'] = 500;\n\t    t['nine'] = 500;\n\t    t['colon'] = 333;\n\t    t['semicolon'] = 333;\n\t    t['less'] = 570;\n\t    t['equal'] = 570;\n\t    t['greater'] = 570;\n\t    t['question'] = 500;\n\t    t['at'] = 832;\n\t    t['A'] = 667;\n\t    t['B'] = 667;\n\t    t['C'] = 667;\n\t    t['D'] = 722;\n\t    t['E'] = 667;\n\t    t['F'] = 667;\n\t    t['G'] = 722;\n\t    t['H'] = 778;\n\t    t['I'] = 389;\n\t    t['J'] = 500;\n\t    t['K'] = 667;\n\t    t['L'] = 611;\n\t    t['M'] = 889;\n\t    t['N'] = 722;\n\t    t['O'] = 722;\n\t    t['P'] = 611;\n\t    t['Q'] = 722;\n\t    t['R'] = 667;\n\t    t['S'] = 556;\n\t    t['T'] = 611;\n\t    t['U'] = 722;\n\t    t['V'] = 667;\n\t    t['W'] = 889;\n\t    t['X'] = 667;\n\t    t['Y'] = 611;\n\t    t['Z'] = 611;\n\t    t['bracketleft'] = 333;\n\t    t['backslash'] = 278;\n\t    t['bracketright'] = 333;\n\t    t['asciicircum'] = 570;\n\t    t['underscore'] = 500;\n\t    t['quoteleft'] = 333;\n\t    t['a'] = 500;\n\t    t['b'] = 500;\n\t    t['c'] = 444;\n\t    t['d'] = 500;\n\t    t['e'] = 444;\n\t    t['f'] = 333;\n\t    t['g'] = 500;\n\t    t['h'] = 556;\n\t    t['i'] = 278;\n\t    t['j'] = 278;\n\t    t['k'] = 500;\n\t    t['l'] = 278;\n\t    t['m'] = 778;\n\t    t['n'] = 556;\n\t    t['o'] = 500;\n\t    t['p'] = 500;\n\t    t['q'] = 500;\n\t    t['r'] = 389;\n\t    t['s'] = 389;\n\t    t['t'] = 278;\n\t    t['u'] = 556;\n\t    t['v'] = 444;\n\t    t['w'] = 667;\n\t    t['x'] = 500;\n\t    t['y'] = 444;\n\t    t['z'] = 389;\n\t    t['braceleft'] = 348;\n\t    t['bar'] = 220;\n\t    t['braceright'] = 348;\n\t    t['asciitilde'] = 570;\n\t    t['exclamdown'] = 389;\n\t    t['cent'] = 500;\n\t    t['sterling'] = 500;\n\t    t['fraction'] = 167;\n\t    t['yen'] = 500;\n\t    t['florin'] = 500;\n\t    t['section'] = 500;\n\t    t['currency'] = 500;\n\t    t['quotesingle'] = 278;\n\t    t['quotedblleft'] = 500;\n\t    t['guillemotleft'] = 500;\n\t    t['guilsinglleft'] = 333;\n\t    t['guilsinglright'] = 333;\n\t    t['fi'] = 556;\n\t    t['fl'] = 556;\n\t    t['endash'] = 500;\n\t    t['dagger'] = 500;\n\t    t['daggerdbl'] = 500;\n\t    t['periodcentered'] = 250;\n\t    t['paragraph'] = 500;\n\t    t['bullet'] = 350;\n\t    t['quotesinglbase'] = 333;\n\t    t['quotedblbase'] = 500;\n\t    t['quotedblright'] = 500;\n\t    t['guillemotright'] = 500;\n\t    t['ellipsis'] = 1000;\n\t    t['perthousand'] = 1000;\n\t    t['questiondown'] = 500;\n\t    t['grave'] = 333;\n\t    t['acute'] = 333;\n\t    t['circumflex'] = 333;\n\t    t['tilde'] = 333;\n\t    t['macron'] = 333;\n\t    t['breve'] = 333;\n\t    t['dotaccent'] = 333;\n\t    t['dieresis'] = 333;\n\t    t['ring'] = 333;\n\t    t['cedilla'] = 333;\n\t    t['hungarumlaut'] = 333;\n\t    t['ogonek'] = 333;\n\t    t['caron'] = 333;\n\t    t['emdash'] = 1000;\n\t    t['AE'] = 944;\n\t    t['ordfeminine'] = 266;\n\t    t['Lslash'] = 611;\n\t    t['Oslash'] = 722;\n\t    t['OE'] = 944;\n\t    t['ordmasculine'] = 300;\n\t    t['ae'] = 722;\n\t    t['dotlessi'] = 278;\n\t    t['lslash'] = 278;\n\t    t['oslash'] = 500;\n\t    t['oe'] = 722;\n\t    t['germandbls'] = 500;\n\t    t['Idieresis'] = 389;\n\t    t['eacute'] = 444;\n\t    t['abreve'] = 500;\n\t    t['uhungarumlaut'] = 556;\n\t    t['ecaron'] = 444;\n\t    t['Ydieresis'] = 611;\n\t    t['divide'] = 570;\n\t    t['Yacute'] = 611;\n\t    t['Acircumflex'] = 667;\n\t    t['aacute'] = 500;\n\t    t['Ucircumflex'] = 722;\n\t    t['yacute'] = 444;\n\t    t['scommaaccent'] = 389;\n\t    t['ecircumflex'] = 444;\n\t    t['Uring'] = 722;\n\t    t['Udieresis'] = 722;\n\t    t['aogonek'] = 500;\n\t    t['Uacute'] = 722;\n\t    t['uogonek'] = 556;\n\t    t['Edieresis'] = 667;\n\t    t['Dcroat'] = 722;\n\t    t['commaaccent'] = 250;\n\t    t['copyright'] = 747;\n\t    t['Emacron'] = 667;\n\t    t['ccaron'] = 444;\n\t    t['aring'] = 500;\n\t    t['Ncommaaccent'] = 722;\n\t    t['lacute'] = 278;\n\t    t['agrave'] = 500;\n\t    t['Tcommaaccent'] = 611;\n\t    t['Cacute'] = 667;\n\t    t['atilde'] = 500;\n\t    t['Edotaccent'] = 667;\n\t    t['scaron'] = 389;\n\t    t['scedilla'] = 389;\n\t    t['iacute'] = 278;\n\t    t['lozenge'] = 494;\n\t    t['Rcaron'] = 667;\n\t    t['Gcommaaccent'] = 722;\n\t    t['ucircumflex'] = 556;\n\t    t['acircumflex'] = 500;\n\t    t['Amacron'] = 667;\n\t    t['rcaron'] = 389;\n\t    t['ccedilla'] = 444;\n\t    t['Zdotaccent'] = 611;\n\t    t['Thorn'] = 611;\n\t    t['Omacron'] = 722;\n\t    t['Racute'] = 667;\n\t    t['Sacute'] = 556;\n\t    t['dcaron'] = 608;\n\t    t['Umacron'] = 722;\n\t    t['uring'] = 556;\n\t    t['threesuperior'] = 300;\n\t    t['Ograve'] = 722;\n\t    t['Agrave'] = 667;\n\t    t['Abreve'] = 667;\n\t    t['multiply'] = 570;\n\t    t['uacute'] = 556;\n\t    t['Tcaron'] = 611;\n\t    t['partialdiff'] = 494;\n\t    t['ydieresis'] = 444;\n\t    t['Nacute'] = 722;\n\t    t['icircumflex'] = 278;\n\t    t['Ecircumflex'] = 667;\n\t    t['adieresis'] = 500;\n\t    t['edieresis'] = 444;\n\t    t['cacute'] = 444;\n\t    t['nacute'] = 556;\n\t    t['umacron'] = 556;\n\t    t['Ncaron'] = 722;\n\t    t['Iacute'] = 389;\n\t    t['plusminus'] = 570;\n\t    t['brokenbar'] = 220;\n\t    t['registered'] = 747;\n\t    t['Gbreve'] = 722;\n\t    t['Idotaccent'] = 389;\n\t    t['summation'] = 600;\n\t    t['Egrave'] = 667;\n\t    t['racute'] = 389;\n\t    t['omacron'] = 500;\n\t    t['Zacute'] = 611;\n\t    t['Zcaron'] = 611;\n\t    t['greaterequal'] = 549;\n\t    t['Eth'] = 722;\n\t    t['Ccedilla'] = 667;\n\t    t['lcommaaccent'] = 278;\n\t    t['tcaron'] = 366;\n\t    t['eogonek'] = 444;\n\t    t['Uogonek'] = 722;\n\t    t['Aacute'] = 667;\n\t    t['Adieresis'] = 667;\n\t    t['egrave'] = 444;\n\t    t['zacute'] = 389;\n\t    t['iogonek'] = 278;\n\t    t['Oacute'] = 722;\n\t    t['oacute'] = 500;\n\t    t['amacron'] = 500;\n\t    t['sacute'] = 389;\n\t    t['idieresis'] = 278;\n\t    t['Ocircumflex'] = 722;\n\t    t['Ugrave'] = 722;\n\t    t['Delta'] = 612;\n\t    t['thorn'] = 500;\n\t    t['twosuperior'] = 300;\n\t    t['Odieresis'] = 722;\n\t    t['mu'] = 576;\n\t    t['igrave'] = 278;\n\t    t['ohungarumlaut'] = 500;\n\t    t['Eogonek'] = 667;\n\t    t['dcroat'] = 500;\n\t    t['threequarters'] = 750;\n\t    t['Scedilla'] = 556;\n\t    t['lcaron'] = 382;\n\t    t['Kcommaaccent'] = 667;\n\t    t['Lacute'] = 611;\n\t    t['trademark'] = 1000;\n\t    t['edotaccent'] = 444;\n\t    t['Igrave'] = 389;\n\t    t['Imacron'] = 389;\n\t    t['Lcaron'] = 611;\n\t    t['onehalf'] = 750;\n\t    t['lessequal'] = 549;\n\t    t['ocircumflex'] = 500;\n\t    t['ntilde'] = 556;\n\t    t['Uhungarumlaut'] = 722;\n\t    t['Eacute'] = 667;\n\t    t['emacron'] = 444;\n\t    t['gbreve'] = 500;\n\t    t['onequarter'] = 750;\n\t    t['Scaron'] = 556;\n\t    t['Scommaaccent'] = 556;\n\t    t['Ohungarumlaut'] = 722;\n\t    t['degree'] = 400;\n\t    t['ograve'] = 500;\n\t    t['Ccaron'] = 667;\n\t    t['ugrave'] = 556;\n\t    t['radical'] = 549;\n\t    t['Dcaron'] = 722;\n\t    t['rcommaaccent'] = 389;\n\t    t['Ntilde'] = 722;\n\t    t['otilde'] = 500;\n\t    t['Rcommaaccent'] = 667;\n\t    t['Lcommaaccent'] = 611;\n\t    t['Atilde'] = 667;\n\t    t['Aogonek'] = 667;\n\t    t['Aring'] = 667;\n\t    t['Otilde'] = 722;\n\t    t['zdotaccent'] = 389;\n\t    t['Ecaron'] = 667;\n\t    t['Iogonek'] = 389;\n\t    t['kcommaaccent'] = 500;\n\t    t['minus'] = 606;\n\t    t['Icircumflex'] = 389;\n\t    t['ncaron'] = 556;\n\t    t['tcommaaccent'] = 278;\n\t    t['logicalnot'] = 606;\n\t    t['odieresis'] = 500;\n\t    t['udieresis'] = 556;\n\t    t['notequal'] = 549;\n\t    t['gcommaaccent'] = 500;\n\t    t['eth'] = 500;\n\t    t['zcaron'] = 389;\n\t    t['ncommaaccent'] = 556;\n\t    t['onesuperior'] = 300;\n\t    t['imacron'] = 278;\n\t    t['Euro'] = 500;\n\t  });\n\t  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 250;\n\t    t['exclam'] = 333;\n\t    t['quotedbl'] = 420;\n\t    t['numbersign'] = 500;\n\t    t['dollar'] = 500;\n\t    t['percent'] = 833;\n\t    t['ampersand'] = 778;\n\t    t['quoteright'] = 333;\n\t    t['parenleft'] = 333;\n\t    t['parenright'] = 333;\n\t    t['asterisk'] = 500;\n\t    t['plus'] = 675;\n\t    t['comma'] = 250;\n\t    t['hyphen'] = 333;\n\t    t['period'] = 250;\n\t    t['slash'] = 278;\n\t    t['zero'] = 500;\n\t    t['one'] = 500;\n\t    t['two'] = 500;\n\t    t['three'] = 500;\n\t    t['four'] = 500;\n\t    t['five'] = 500;\n\t    t['six'] = 500;\n\t    t['seven'] = 500;\n\t    t['eight'] = 500;\n\t    t['nine'] = 500;\n\t    t['colon'] = 333;\n\t    t['semicolon'] = 333;\n\t    t['less'] = 675;\n\t    t['equal'] = 675;\n\t    t['greater'] = 675;\n\t    t['question'] = 500;\n\t    t['at'] = 920;\n\t    t['A'] = 611;\n\t    t['B'] = 611;\n\t    t['C'] = 667;\n\t    t['D'] = 722;\n\t    t['E'] = 611;\n\t    t['F'] = 611;\n\t    t['G'] = 722;\n\t    t['H'] = 722;\n\t    t['I'] = 333;\n\t    t['J'] = 444;\n\t    t['K'] = 667;\n\t    t['L'] = 556;\n\t    t['M'] = 833;\n\t    t['N'] = 667;\n\t    t['O'] = 722;\n\t    t['P'] = 611;\n\t    t['Q'] = 722;\n\t    t['R'] = 611;\n\t    t['S'] = 500;\n\t    t['T'] = 556;\n\t    t['U'] = 722;\n\t    t['V'] = 611;\n\t    t['W'] = 833;\n\t    t['X'] = 611;\n\t    t['Y'] = 556;\n\t    t['Z'] = 556;\n\t    t['bracketleft'] = 389;\n\t    t['backslash'] = 278;\n\t    t['bracketright'] = 389;\n\t    t['asciicircum'] = 422;\n\t    t['underscore'] = 500;\n\t    t['quoteleft'] = 333;\n\t    t['a'] = 500;\n\t    t['b'] = 500;\n\t    t['c'] = 444;\n\t    t['d'] = 500;\n\t    t['e'] = 444;\n\t    t['f'] = 278;\n\t    t['g'] = 500;\n\t    t['h'] = 500;\n\t    t['i'] = 278;\n\t    t['j'] = 278;\n\t    t['k'] = 444;\n\t    t['l'] = 278;\n\t    t['m'] = 722;\n\t    t['n'] = 500;\n\t    t['o'] = 500;\n\t    t['p'] = 500;\n\t    t['q'] = 500;\n\t    t['r'] = 389;\n\t    t['s'] = 389;\n\t    t['t'] = 278;\n\t    t['u'] = 500;\n\t    t['v'] = 444;\n\t    t['w'] = 667;\n\t    t['x'] = 444;\n\t    t['y'] = 444;\n\t    t['z'] = 389;\n\t    t['braceleft'] = 400;\n\t    t['bar'] = 275;\n\t    t['braceright'] = 400;\n\t    t['asciitilde'] = 541;\n\t    t['exclamdown'] = 389;\n\t    t['cent'] = 500;\n\t    t['sterling'] = 500;\n\t    t['fraction'] = 167;\n\t    t['yen'] = 500;\n\t    t['florin'] = 500;\n\t    t['section'] = 500;\n\t    t['currency'] = 500;\n\t    t['quotesingle'] = 214;\n\t    t['quotedblleft'] = 556;\n\t    t['guillemotleft'] = 500;\n\t    t['guilsinglleft'] = 333;\n\t    t['guilsinglright'] = 333;\n\t    t['fi'] = 500;\n\t    t['fl'] = 500;\n\t    t['endash'] = 500;\n\t    t['dagger'] = 500;\n\t    t['daggerdbl'] = 500;\n\t    t['periodcentered'] = 250;\n\t    t['paragraph'] = 523;\n\t    t['bullet'] = 350;\n\t    t['quotesinglbase'] = 333;\n\t    t['quotedblbase'] = 556;\n\t    t['quotedblright'] = 556;\n\t    t['guillemotright'] = 500;\n\t    t['ellipsis'] = 889;\n\t    t['perthousand'] = 1000;\n\t    t['questiondown'] = 500;\n\t    t['grave'] = 333;\n\t    t['acute'] = 333;\n\t    t['circumflex'] = 333;\n\t    t['tilde'] = 333;\n\t    t['macron'] = 333;\n\t    t['breve'] = 333;\n\t    t['dotaccent'] = 333;\n\t    t['dieresis'] = 333;\n\t    t['ring'] = 333;\n\t    t['cedilla'] = 333;\n\t    t['hungarumlaut'] = 333;\n\t    t['ogonek'] = 333;\n\t    t['caron'] = 333;\n\t    t['emdash'] = 889;\n\t    t['AE'] = 889;\n\t    t['ordfeminine'] = 276;\n\t    t['Lslash'] = 556;\n\t    t['Oslash'] = 722;\n\t    t['OE'] = 944;\n\t    t['ordmasculine'] = 310;\n\t    t['ae'] = 667;\n\t    t['dotlessi'] = 278;\n\t    t['lslash'] = 278;\n\t    t['oslash'] = 500;\n\t    t['oe'] = 667;\n\t    t['germandbls'] = 500;\n\t    t['Idieresis'] = 333;\n\t    t['eacute'] = 444;\n\t    t['abreve'] = 500;\n\t    t['uhungarumlaut'] = 500;\n\t    t['ecaron'] = 444;\n\t    t['Ydieresis'] = 556;\n\t    t['divide'] = 675;\n\t    t['Yacute'] = 556;\n\t    t['Acircumflex'] = 611;\n\t    t['aacute'] = 500;\n\t    t['Ucircumflex'] = 722;\n\t    t['yacute'] = 444;\n\t    t['scommaaccent'] = 389;\n\t    t['ecircumflex'] = 444;\n\t    t['Uring'] = 722;\n\t    t['Udieresis'] = 722;\n\t    t['aogonek'] = 500;\n\t    t['Uacute'] = 722;\n\t    t['uogonek'] = 500;\n\t    t['Edieresis'] = 611;\n\t    t['Dcroat'] = 722;\n\t    t['commaaccent'] = 250;\n\t    t['copyright'] = 760;\n\t    t['Emacron'] = 611;\n\t    t['ccaron'] = 444;\n\t    t['aring'] = 500;\n\t    t['Ncommaaccent'] = 667;\n\t    t['lacute'] = 278;\n\t    t['agrave'] = 500;\n\t    t['Tcommaaccent'] = 556;\n\t    t['Cacute'] = 667;\n\t    t['atilde'] = 500;\n\t    t['Edotaccent'] = 611;\n\t    t['scaron'] = 389;\n\t    t['scedilla'] = 389;\n\t    t['iacute'] = 278;\n\t    t['lozenge'] = 471;\n\t    t['Rcaron'] = 611;\n\t    t['Gcommaaccent'] = 722;\n\t    t['ucircumflex'] = 500;\n\t    t['acircumflex'] = 500;\n\t    t['Amacron'] = 611;\n\t    t['rcaron'] = 389;\n\t    t['ccedilla'] = 444;\n\t    t['Zdotaccent'] = 556;\n\t    t['Thorn'] = 611;\n\t    t['Omacron'] = 722;\n\t    t['Racute'] = 611;\n\t    t['Sacute'] = 500;\n\t    t['dcaron'] = 544;\n\t    t['Umacron'] = 722;\n\t    t['uring'] = 500;\n\t    t['threesuperior'] = 300;\n\t    t['Ograve'] = 722;\n\t    t['Agrave'] = 611;\n\t    t['Abreve'] = 611;\n\t    t['multiply'] = 675;\n\t    t['uacute'] = 500;\n\t    t['Tcaron'] = 556;\n\t    t['partialdiff'] = 476;\n\t    t['ydieresis'] = 444;\n\t    t['Nacute'] = 667;\n\t    t['icircumflex'] = 278;\n\t    t['Ecircumflex'] = 611;\n\t    t['adieresis'] = 500;\n\t    t['edieresis'] = 444;\n\t    t['cacute'] = 444;\n\t    t['nacute'] = 500;\n\t    t['umacron'] = 500;\n\t    t['Ncaron'] = 667;\n\t    t['Iacute'] = 333;\n\t    t['plusminus'] = 675;\n\t    t['brokenbar'] = 275;\n\t    t['registered'] = 760;\n\t    t['Gbreve'] = 722;\n\t    t['Idotaccent'] = 333;\n\t    t['summation'] = 600;\n\t    t['Egrave'] = 611;\n\t    t['racute'] = 389;\n\t    t['omacron'] = 500;\n\t    t['Zacute'] = 556;\n\t    t['Zcaron'] = 556;\n\t    t['greaterequal'] = 549;\n\t    t['Eth'] = 722;\n\t    t['Ccedilla'] = 667;\n\t    t['lcommaaccent'] = 278;\n\t    t['tcaron'] = 300;\n\t    t['eogonek'] = 444;\n\t    t['Uogonek'] = 722;\n\t    t['Aacute'] = 611;\n\t    t['Adieresis'] = 611;\n\t    t['egrave'] = 444;\n\t    t['zacute'] = 389;\n\t    t['iogonek'] = 278;\n\t    t['Oacute'] = 722;\n\t    t['oacute'] = 500;\n\t    t['amacron'] = 500;\n\t    t['sacute'] = 389;\n\t    t['idieresis'] = 278;\n\t    t['Ocircumflex'] = 722;\n\t    t['Ugrave'] = 722;\n\t    t['Delta'] = 612;\n\t    t['thorn'] = 500;\n\t    t['twosuperior'] = 300;\n\t    t['Odieresis'] = 722;\n\t    t['mu'] = 500;\n\t    t['igrave'] = 278;\n\t    t['ohungarumlaut'] = 500;\n\t    t['Eogonek'] = 611;\n\t    t['dcroat'] = 500;\n\t    t['threequarters'] = 750;\n\t    t['Scedilla'] = 500;\n\t    t['lcaron'] = 300;\n\t    t['Kcommaaccent'] = 667;\n\t    t['Lacute'] = 556;\n\t    t['trademark'] = 980;\n\t    t['edotaccent'] = 444;\n\t    t['Igrave'] = 333;\n\t    t['Imacron'] = 333;\n\t    t['Lcaron'] = 611;\n\t    t['onehalf'] = 750;\n\t    t['lessequal'] = 549;\n\t    t['ocircumflex'] = 500;\n\t    t['ntilde'] = 500;\n\t    t['Uhungarumlaut'] = 722;\n\t    t['Eacute'] = 611;\n\t    t['emacron'] = 444;\n\t    t['gbreve'] = 500;\n\t    t['onequarter'] = 750;\n\t    t['Scaron'] = 500;\n\t    t['Scommaaccent'] = 500;\n\t    t['Ohungarumlaut'] = 722;\n\t    t['degree'] = 400;\n\t    t['ograve'] = 500;\n\t    t['Ccaron'] = 667;\n\t    t['ugrave'] = 500;\n\t    t['radical'] = 453;\n\t    t['Dcaron'] = 722;\n\t    t['rcommaaccent'] = 389;\n\t    t['Ntilde'] = 667;\n\t    t['otilde'] = 500;\n\t    t['Rcommaaccent'] = 611;\n\t    t['Lcommaaccent'] = 556;\n\t    t['Atilde'] = 611;\n\t    t['Aogonek'] = 611;\n\t    t['Aring'] = 611;\n\t    t['Otilde'] = 722;\n\t    t['zdotaccent'] = 389;\n\t    t['Ecaron'] = 611;\n\t    t['Iogonek'] = 333;\n\t    t['kcommaaccent'] = 444;\n\t    t['minus'] = 675;\n\t    t['Icircumflex'] = 333;\n\t    t['ncaron'] = 500;\n\t    t['tcommaaccent'] = 278;\n\t    t['logicalnot'] = 675;\n\t    t['odieresis'] = 500;\n\t    t['udieresis'] = 500;\n\t    t['notequal'] = 549;\n\t    t['gcommaaccent'] = 500;\n\t    t['eth'] = 500;\n\t    t['zcaron'] = 389;\n\t    t['ncommaaccent'] = 500;\n\t    t['onesuperior'] = 300;\n\t    t['imacron'] = 278;\n\t    t['Euro'] = 500;\n\t  });\n\t  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\n\t    t['space'] = 278;\n\t    t['a1'] = 974;\n\t    t['a2'] = 961;\n\t    t['a202'] = 974;\n\t    t['a3'] = 980;\n\t    t['a4'] = 719;\n\t    t['a5'] = 789;\n\t    t['a119'] = 790;\n\t    t['a118'] = 791;\n\t    t['a117'] = 690;\n\t    t['a11'] = 960;\n\t    t['a12'] = 939;\n\t    t['a13'] = 549;\n\t    t['a14'] = 855;\n\t    t['a15'] = 911;\n\t    t['a16'] = 933;\n\t    t['a105'] = 911;\n\t    t['a17'] = 945;\n\t    t['a18'] = 974;\n\t    t['a19'] = 755;\n\t    t['a20'] = 846;\n\t    t['a21'] = 762;\n\t    t['a22'] = 761;\n\t    t['a23'] = 571;\n\t    t['a24'] = 677;\n\t    t['a25'] = 763;\n\t    t['a26'] = 760;\n\t    t['a27'] = 759;\n\t    t['a28'] = 754;\n\t    t['a6'] = 494;\n\t    t['a7'] = 552;\n\t    t['a8'] = 537;\n\t    t['a9'] = 577;\n\t    t['a10'] = 692;\n\t    t['a29'] = 786;\n\t    t['a30'] = 788;\n\t    t['a31'] = 788;\n\t    t['a32'] = 790;\n\t    t['a33'] = 793;\n\t    t['a34'] = 794;\n\t    t['a35'] = 816;\n\t    t['a36'] = 823;\n\t    t['a37'] = 789;\n\t    t['a38'] = 841;\n\t    t['a39'] = 823;\n\t    t['a40'] = 833;\n\t    t['a41'] = 816;\n\t    t['a42'] = 831;\n\t    t['a43'] = 923;\n\t    t['a44'] = 744;\n\t    t['a45'] = 723;\n\t    t['a46'] = 749;\n\t    t['a47'] = 790;\n\t    t['a48'] = 792;\n\t    t['a49'] = 695;\n\t    t['a50'] = 776;\n\t    t['a51'] = 768;\n\t    t['a52'] = 792;\n\t    t['a53'] = 759;\n\t    t['a54'] = 707;\n\t    t['a55'] = 708;\n\t    t['a56'] = 682;\n\t    t['a57'] = 701;\n\t    t['a58'] = 826;\n\t    t['a59'] = 815;\n\t    t['a60'] = 789;\n\t    t['a61'] = 789;\n\t    t['a62'] = 707;\n\t    t['a63'] = 687;\n\t    t['a64'] = 696;\n\t    t['a65'] = 689;\n\t    t['a66'] = 786;\n\t    t['a67'] = 787;\n\t    t['a68'] = 713;\n\t    t['a69'] = 791;\n\t    t['a70'] = 785;\n\t    t['a71'] = 791;\n\t    t['a72'] = 873;\n\t    t['a73'] = 761;\n\t    t['a74'] = 762;\n\t    t['a203'] = 762;\n\t    t['a75'] = 759;\n\t    t['a204'] = 759;\n\t    t['a76'] = 892;\n\t    t['a77'] = 892;\n\t    t['a78'] = 788;\n\t    t['a79'] = 784;\n\t    t['a81'] = 438;\n\t    t['a82'] = 138;\n\t    t['a83'] = 277;\n\t    t['a84'] = 415;\n\t    t['a97'] = 392;\n\t    t['a98'] = 392;\n\t    t['a99'] = 668;\n\t    t['a100'] = 668;\n\t    t['a89'] = 390;\n\t    t['a90'] = 390;\n\t    t['a93'] = 317;\n\t    t['a94'] = 317;\n\t    t['a91'] = 276;\n\t    t['a92'] = 276;\n\t    t['a205'] = 509;\n\t    t['a85'] = 509;\n\t    t['a206'] = 410;\n\t    t['a86'] = 410;\n\t    t['a87'] = 234;\n\t    t['a88'] = 234;\n\t    t['a95'] = 334;\n\t    t['a96'] = 334;\n\t    t['a101'] = 732;\n\t    t['a102'] = 544;\n\t    t['a103'] = 544;\n\t    t['a104'] = 910;\n\t    t['a106'] = 667;\n\t    t['a107'] = 760;\n\t    t['a108'] = 760;\n\t    t['a112'] = 776;\n\t    t['a111'] = 595;\n\t    t['a110'] = 694;\n\t    t['a109'] = 626;\n\t    t['a120'] = 788;\n\t    t['a121'] = 788;\n\t    t['a122'] = 788;\n\t    t['a123'] = 788;\n\t    t['a124'] = 788;\n\t    t['a125'] = 788;\n\t    t['a126'] = 788;\n\t    t['a127'] = 788;\n\t    t['a128'] = 788;\n\t    t['a129'] = 788;\n\t    t['a130'] = 788;\n\t    t['a131'] = 788;\n\t    t['a132'] = 788;\n\t    t['a133'] = 788;\n\t    t['a134'] = 788;\n\t    t['a135'] = 788;\n\t    t['a136'] = 788;\n\t    t['a137'] = 788;\n\t    t['a138'] = 788;\n\t    t['a139'] = 788;\n\t    t['a140'] = 788;\n\t    t['a141'] = 788;\n\t    t['a142'] = 788;\n\t    t['a143'] = 788;\n\t    t['a144'] = 788;\n\t    t['a145'] = 788;\n\t    t['a146'] = 788;\n\t    t['a147'] = 788;\n\t    t['a148'] = 788;\n\t    t['a149'] = 788;\n\t    t['a150'] = 788;\n\t    t['a151'] = 788;\n\t    t['a152'] = 788;\n\t    t['a153'] = 788;\n\t    t['a154'] = 788;\n\t    t['a155'] = 788;\n\t    t['a156'] = 788;\n\t    t['a157'] = 788;\n\t    t['a158'] = 788;\n\t    t['a159'] = 788;\n\t    t['a160'] = 894;\n\t    t['a161'] = 838;\n\t    t['a163'] = 1016;\n\t    t['a164'] = 458;\n\t    t['a196'] = 748;\n\t    t['a165'] = 924;\n\t    t['a192'] = 748;\n\t    t['a166'] = 918;\n\t    t['a167'] = 927;\n\t    t['a168'] = 928;\n\t    t['a169'] = 928;\n\t    t['a170'] = 834;\n\t    t['a171'] = 873;\n\t    t['a172'] = 828;\n\t    t['a173'] = 924;\n\t    t['a162'] = 924;\n\t    t['a174'] = 917;\n\t    t['a175'] = 930;\n\t    t['a176'] = 931;\n\t    t['a177'] = 463;\n\t    t['a178'] = 883;\n\t    t['a179'] = 836;\n\t    t['a193'] = 836;\n\t    t['a180'] = 867;\n\t    t['a199'] = 867;\n\t    t['a181'] = 696;\n\t    t['a200'] = 696;\n\t    t['a182'] = 874;\n\t    t['a201'] = 874;\n\t    t['a183'] = 760;\n\t    t['a184'] = 946;\n\t    t['a197'] = 771;\n\t    t['a185'] = 865;\n\t    t['a194'] = 771;\n\t    t['a198'] = 888;\n\t    t['a186'] = 967;\n\t    t['a195'] = 888;\n\t    t['a187'] = 831;\n\t    t['a188'] = 873;\n\t    t['a189'] = 927;\n\t    t['a190'] = 970;\n\t    t['a191'] = 918;\n\t  });\n\t});\n\texports.getMetrics = getMetrics;\n\t\n\t/***/ }),\n\t/* 142 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.PostScriptParser = exports.PostScriptLexer = undefined;\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar PostScriptParser = function PostScriptParserClosure() {\n\t  function PostScriptParser(lexer) {\n\t    this.lexer = lexer;\n\t    this.operators = [];\n\t    this.token = null;\n\t    this.prev = null;\n\t  }\n\t  PostScriptParser.prototype = {\n\t    nextToken: function PostScriptParser_nextToken() {\n\t      this.prev = this.token;\n\t      this.token = this.lexer.getToken();\n\t    },\n\t    accept: function PostScriptParser_accept(type) {\n\t      if (this.token.type === type) {\n\t        this.nextToken();\n\t        return true;\n\t      }\n\t      return false;\n\t    },\n\t    expect: function PostScriptParser_expect(type) {\n\t      if (this.accept(type)) {\n\t        return true;\n\t      }\n\t      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n\t    },\n\t    parse: function PostScriptParser_parse() {\n\t      this.nextToken();\n\t      this.expect(PostScriptTokenTypes.LBRACE);\n\t      this.parseBlock();\n\t      this.expect(PostScriptTokenTypes.RBRACE);\n\t      return this.operators;\n\t    },\n\t    parseBlock: function PostScriptParser_parseBlock() {\n\t      while (true) {\n\t        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n\t          this.operators.push(this.prev.value);\n\t        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n\t          this.operators.push(this.prev.value);\n\t        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n\t          this.parseCondition();\n\t        } else {\n\t          return;\n\t        }\n\t      }\n\t    },\n\t    parseCondition: function PostScriptParser_parseCondition() {\n\t      var conditionLocation = this.operators.length;\n\t      this.operators.push(null, null);\n\t      this.parseBlock();\n\t      this.expect(PostScriptTokenTypes.RBRACE);\n\t      if (this.accept(PostScriptTokenTypes.IF)) {\n\t        this.operators[conditionLocation] = this.operators.length;\n\t        this.operators[conditionLocation + 1] = 'jz';\n\t      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n\t        var jumpLocation = this.operators.length;\n\t        this.operators.push(null, null);\n\t        var endOfTrue = this.operators.length;\n\t        this.parseBlock();\n\t        this.expect(PostScriptTokenTypes.RBRACE);\n\t        this.expect(PostScriptTokenTypes.IFELSE);\n\t        this.operators[jumpLocation] = this.operators.length;\n\t        this.operators[jumpLocation + 1] = 'j';\n\t        this.operators[conditionLocation] = endOfTrue;\n\t        this.operators[conditionLocation + 1] = 'jz';\n\t      } else {\n\t        throw new _util.FormatError('PS Function: error parsing conditional.');\n\t      }\n\t    }\n\t  };\n\t  return PostScriptParser;\n\t}();\n\tvar PostScriptTokenTypes = {\n\t  LBRACE: 0,\n\t  RBRACE: 1,\n\t  NUMBER: 2,\n\t  OPERATOR: 3,\n\t  IF: 4,\n\t  IFELSE: 5\n\t};\n\tvar PostScriptToken = function PostScriptTokenClosure() {\n\t  function PostScriptToken(type, value) {\n\t    this.type = type;\n\t    this.value = value;\n\t  }\n\t  var opCache = Object.create(null);\n\t  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n\t    var opValue = opCache[op];\n\t    if (opValue) {\n\t      return opValue;\n\t    }\n\t    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n\t  };\n\t  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n\t  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n\t  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n\t  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n\t  return PostScriptToken;\n\t}();\n\tvar PostScriptLexer = function PostScriptLexerClosure() {\n\t  function PostScriptLexer(stream) {\n\t    this.stream = stream;\n\t    this.nextChar();\n\t    this.strBuf = [];\n\t  }\n\t  PostScriptLexer.prototype = {\n\t    nextChar: function PostScriptLexer_nextChar() {\n\t      return this.currentChar = this.stream.getByte();\n\t    },\n\t    getToken: function PostScriptLexer_getToken() {\n\t      var comment = false;\n\t      var ch = this.currentChar;\n\t      while (true) {\n\t        if (ch < 0) {\n\t          return _primitives.EOF;\n\t        }\n\t        if (comment) {\n\t          if (ch === 0x0A || ch === 0x0D) {\n\t            comment = false;\n\t          }\n\t        } else if (ch === 0x25) {\n\t          comment = true;\n\t        } else if (!(0, _util.isSpace)(ch)) {\n\t          break;\n\t        }\n\t        ch = this.nextChar();\n\t      }\n\t      switch (ch | 0) {\n\t        case 0x30:\n\t        case 0x31:\n\t        case 0x32:\n\t        case 0x33:\n\t        case 0x34:\n\t        case 0x35:\n\t        case 0x36:\n\t        case 0x37:\n\t        case 0x38:\n\t        case 0x39:\n\t        case 0x2B:\n\t        case 0x2D:\n\t        case 0x2E:\n\t          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n\t        case 0x7B:\n\t          this.nextChar();\n\t          return PostScriptToken.LBRACE;\n\t        case 0x7D:\n\t          this.nextChar();\n\t          return PostScriptToken.RBRACE;\n\t      }\n\t      var strBuf = this.strBuf;\n\t      strBuf.length = 0;\n\t      strBuf[0] = String.fromCharCode(ch);\n\t      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n\t        strBuf.push(String.fromCharCode(ch));\n\t      }\n\t      var str = strBuf.join('');\n\t      switch (str.toLowerCase()) {\n\t        case 'if':\n\t          return PostScriptToken.IF;\n\t        case 'ifelse':\n\t          return PostScriptToken.IFELSE;\n\t        default:\n\t          return PostScriptToken.getOperator(str);\n\t      }\n\t    },\n\t    getNumber: function PostScriptLexer_getNumber() {\n\t      var ch = this.currentChar;\n\t      var strBuf = this.strBuf;\n\t      strBuf.length = 0;\n\t      strBuf[0] = String.fromCharCode(ch);\n\t      while ((ch = this.nextChar()) >= 0) {\n\t        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n\t          strBuf.push(String.fromCharCode(ch));\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t      var value = parseFloat(strBuf.join(''));\n\t      if (isNaN(value)) {\n\t        throw new _util.FormatError('Invalid floating point number: ' + value);\n\t      }\n\t      return value;\n\t    }\n\t  };\n\t  return PostScriptLexer;\n\t}();\n\texports.PostScriptLexer = PostScriptLexer;\n\texports.PostScriptParser = PostScriptParser;\n\t\n\t/***/ }),\n\t/* 143 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n\t  var MASK_HIGH = 0xffff0000;\n\t  var MASK_LOW = 0xffff;\n\t  function MurmurHash3_64(seed) {\n\t    var SEED = 0xc3d2e1f0;\n\t    this.h1 = seed ? seed & 0xffffffff : SEED;\n\t    this.h2 = seed ? seed & 0xffffffff : SEED;\n\t  }\n\t  MurmurHash3_64.prototype = {\n\t    update: function MurmurHash3_64_update(input) {\n\t      var i;\n\t      if (typeof input === 'string') {\n\t        var data = new Uint8Array(input.length * 2);\n\t        var length = 0;\n\t        for (i = 0; i < input.length; i++) {\n\t          var code = input.charCodeAt(i);\n\t          if (code <= 0xff) {\n\t            data[length++] = code;\n\t          } else {\n\t            data[length++] = code >>> 8;\n\t            data[length++] = code & 0xff;\n\t          }\n\t        }\n\t      } else if ((typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' && 'byteLength' in input) {\n\t        data = input;\n\t        length = data.byteLength;\n\t      } else {\n\t        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n\t      }\n\t      var blockCounts = length >> 2;\n\t      var tailLength = length - blockCounts * 4;\n\t      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n\t      var k1 = 0;\n\t      var k2 = 0;\n\t      var h1 = this.h1;\n\t      var h2 = this.h2;\n\t      var C1 = 0xcc9e2d51;\n\t      var C2 = 0x1b873593;\n\t      var C1_LOW = C1 & MASK_LOW;\n\t      var C2_LOW = C2 & MASK_LOW;\n\t      for (i = 0; i < blockCounts; i++) {\n\t        if (i & 1) {\n\t          k1 = dataUint32[i];\n\t          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n\t          k1 = k1 << 15 | k1 >>> 17;\n\t          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n\t          h1 ^= k1;\n\t          h1 = h1 << 13 | h1 >>> 19;\n\t          h1 = h1 * 5 + 0xe6546b64;\n\t        } else {\n\t          k2 = dataUint32[i];\n\t          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n\t          k2 = k2 << 15 | k2 >>> 17;\n\t          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n\t          h2 ^= k2;\n\t          h2 = h2 << 13 | h2 >>> 19;\n\t          h2 = h2 * 5 + 0xe6546b64;\n\t        }\n\t      }\n\t      k1 = 0;\n\t      switch (tailLength) {\n\t        case 3:\n\t          k1 ^= data[blockCounts * 4 + 2] << 16;\n\t        case 2:\n\t          k1 ^= data[blockCounts * 4 + 1] << 8;\n\t        case 1:\n\t          k1 ^= data[blockCounts * 4];\n\t          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n\t          k1 = k1 << 15 | k1 >>> 17;\n\t          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n\t          if (blockCounts & 1) {\n\t            h1 ^= k1;\n\t          } else {\n\t            h2 ^= k1;\n\t          }\n\t      }\n\t      this.h1 = h1;\n\t      this.h2 = h2;\n\t      return this;\n\t    },\n\t    hexdigest: function MurmurHash3_64_hexdigest() {\n\t      var h1 = this.h1;\n\t      var h2 = this.h2;\n\t      h1 ^= h2 >>> 1;\n\t      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n\t      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n\t      h1 ^= h2 >>> 1;\n\t      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n\t      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n\t      h1 ^= h2 >>> 1;\n\t      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\n\t        var hex = (arr[i] >>> 0).toString(16);\n\t        while (hex.length < 8) {\n\t          hex = '0' + hex;\n\t        }\n\t        str += hex;\n\t      }\n\t      return str;\n\t    }\n\t  };\n\t  return MurmurHash3_64;\n\t}();\n\texports.MurmurHash3_64 = MurmurHash3_64;\n\t\n\t/***/ }),\n\t/* 144 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.PDFImage = undefined;\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _stream = __w_pdfjs_require__(5);\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar _colorspace = __w_pdfjs_require__(27);\n\t\n\tvar _jpx = __w_pdfjs_require__(74);\n\t\n\tvar PDFImage = function PDFImageClosure() {\n\t  function handleImageData(image, nativeDecoder) {\n\t    if (nativeDecoder && nativeDecoder.canDecode(image)) {\n\t      return nativeDecoder.decode(image);\n\t    }\n\t    return Promise.resolve(image);\n\t  }\n\t  function decodeAndClamp(value, addend, coefficient, max) {\n\t    value = addend + value * coefficient;\n\t    return value < 0 ? 0 : value > max ? max : value;\n\t  }\n\t  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n\t    var length = w2 * h2;\n\t    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n\t    var xRatio = w1 / w2;\n\t    var yRatio = h1 / h2;\n\t    var i,\n\t        j,\n\t        py,\n\t        newIndex = 0,\n\t        oldIndex;\n\t    var xScaled = new Uint16Array(w2);\n\t    var w1Scanline = w1;\n\t    for (i = 0; i < w2; i++) {\n\t      xScaled[i] = Math.floor(i * xRatio);\n\t    }\n\t    for (i = 0; i < h2; i++) {\n\t      py = Math.floor(i * yRatio) * w1Scanline;\n\t      for (j = 0; j < w2; j++) {\n\t        oldIndex = py + xScaled[j];\n\t        dest[newIndex++] = src[oldIndex];\n\t      }\n\t    }\n\t    return dest;\n\t  }\n\t  function PDFImage(_ref) {\n\t    var xref = _ref.xref,\n\t        res = _ref.res,\n\t        image = _ref.image,\n\t        _ref$smask = _ref.smask,\n\t        smask = _ref$smask === undefined ? null : _ref$smask,\n\t        _ref$mask = _ref.mask,\n\t        mask = _ref$mask === undefined ? null : _ref$mask,\n\t        _ref$isMask = _ref.isMask,\n\t        isMask = _ref$isMask === undefined ? false : _ref$isMask,\n\t        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\t\n\t    this.image = image;\n\t    var dict = image.dict;\n\t    if (dict.has('Filter')) {\n\t      var filter = dict.get('Filter').name;\n\t      if (filter === 'JPXDecode') {\n\t        var jpxImage = new _jpx.JpxImage();\n\t        jpxImage.parseImageProperties(image.stream);\n\t        image.stream.reset();\n\t        image.bitsPerComponent = jpxImage.bitsPerComponent;\n\t        image.numComps = jpxImage.componentsCount;\n\t      } else if (filter === 'JBIG2Decode') {\n\t        image.bitsPerComponent = 1;\n\t        image.numComps = 1;\n\t      }\n\t    }\n\t    this.width = dict.get('Width', 'W');\n\t    this.height = dict.get('Height', 'H');\n\t    if (this.width < 1 || this.height < 1) {\n\t      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\n\t    }\n\t    this.interpolate = dict.get('Interpolate', 'I') || false;\n\t    this.imageMask = dict.get('ImageMask', 'IM') || false;\n\t    this.matte = dict.get('Matte') || false;\n\t    var bitsPerComponent = image.bitsPerComponent;\n\t    if (!bitsPerComponent) {\n\t      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n\t      if (!bitsPerComponent) {\n\t        if (this.imageMask) {\n\t          bitsPerComponent = 1;\n\t        } else {\n\t          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\n\t        }\n\t      }\n\t    }\n\t    this.bpc = bitsPerComponent;\n\t    if (!this.imageMask) {\n\t      var colorSpace = dict.get('ColorSpace', 'CS');\n\t      if (!colorSpace) {\n\t        (0, _util.info)('JPX images (which do not require color spaces)');\n\t        switch (image.numComps) {\n\t          case 1:\n\t            colorSpace = _primitives.Name.get('DeviceGray');\n\t            break;\n\t          case 3:\n\t            colorSpace = _primitives.Name.get('DeviceRGB');\n\t            break;\n\t          case 4:\n\t            colorSpace = _primitives.Name.get('DeviceCMYK');\n\t            break;\n\t          default:\n\t            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\n\t        }\n\t      }\n\t      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, res, pdfFunctionFactory);\n\t      this.numComps = this.colorSpace.numComps;\n\t    }\n\t    this.decode = dict.getArray('Decode', 'D');\n\t    this.needsDecode = false;\n\t    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\n\t      this.needsDecode = true;\n\t      var max = (1 << bitsPerComponent) - 1;\n\t      this.decodeCoefficients = [];\n\t      this.decodeAddends = [];\n\t      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n\t        var dmin = this.decode[i];\n\t        var dmax = this.decode[i + 1];\n\t        this.decodeCoefficients[j] = dmax - dmin;\n\t        this.decodeAddends[j] = max * dmin;\n\t      }\n\t    }\n\t    if (smask) {\n\t      this.smask = new PDFImage({\n\t        xref: xref,\n\t        res: res,\n\t        image: smask,\n\t        pdfFunctionFactory: pdfFunctionFactory\n\t      });\n\t    } else if (mask) {\n\t      if ((0, _primitives.isStream)(mask)) {\n\t        var maskDict = mask.dict,\n\t            imageMask = maskDict.get('ImageMask', 'IM');\n\t        if (!imageMask) {\n\t          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\n\t        } else {\n\t          this.mask = new PDFImage({\n\t            xref: xref,\n\t            res: res,\n\t            image: mask,\n\t            isMask: true,\n\t            pdfFunctionFactory: pdfFunctionFactory\n\t          });\n\t        }\n\t      } else {\n\t        this.mask = mask;\n\t      }\n\t    }\n\t  }\n\t  PDFImage.buildImage = function (_ref2) {\n\t    var handler = _ref2.handler,\n\t        xref = _ref2.xref,\n\t        res = _ref2.res,\n\t        image = _ref2.image,\n\t        _ref2$nativeDecoder = _ref2.nativeDecoder,\n\t        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\n\t        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\t\n\t    var imagePromise = handleImageData(image, nativeDecoder);\n\t    var smaskPromise;\n\t    var maskPromise;\n\t    var smask = image.dict.get('SMask');\n\t    var mask = image.dict.get('Mask');\n\t    if (smask) {\n\t      smaskPromise = handleImageData(smask, nativeDecoder);\n\t      maskPromise = Promise.resolve(null);\n\t    } else {\n\t      smaskPromise = Promise.resolve(null);\n\t      if (mask) {\n\t        if ((0, _primitives.isStream)(mask)) {\n\t          maskPromise = handleImageData(mask, nativeDecoder);\n\t        } else if (Array.isArray(mask)) {\n\t          maskPromise = Promise.resolve(mask);\n\t        } else {\n\t          (0, _util.warn)('Unsupported mask format.');\n\t          maskPromise = Promise.resolve(null);\n\t        }\n\t      } else {\n\t        maskPromise = Promise.resolve(null);\n\t      }\n\t    }\n\t    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\n\t      var _ref4 = _slicedToArray(_ref3, 3),\n\t          imageData = _ref4[0],\n\t          smaskData = _ref4[1],\n\t          maskData = _ref4[2];\n\t\n\t      return new PDFImage({\n\t        xref: xref,\n\t        res: res,\n\t        image: imageData,\n\t        smask: smaskData,\n\t        mask: maskData,\n\t        pdfFunctionFactory: pdfFunctionFactory\n\t      });\n\t    });\n\t  };\n\t  PDFImage.createMask = function (_ref5) {\n\t    var imgArray = _ref5.imgArray,\n\t        width = _ref5.width,\n\t        height = _ref5.height,\n\t        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\n\t        inverseDecode = _ref5.inverseDecode;\n\t\n\t    var computedLength = (width + 7 >> 3) * height;\n\t    var actualLength = imgArray.byteLength;\n\t    var haveFullData = computedLength === actualLength;\n\t    var data, i;\n\t    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n\t      data = imgArray;\n\t    } else if (!inverseDecode) {\n\t      data = new Uint8Array(actualLength);\n\t      data.set(imgArray);\n\t    } else {\n\t      data = new Uint8Array(computedLength);\n\t      data.set(imgArray);\n\t      for (i = actualLength; i < computedLength; i++) {\n\t        data[i] = 0xff;\n\t      }\n\t    }\n\t    if (inverseDecode) {\n\t      for (i = 0; i < actualLength; i++) {\n\t        data[i] ^= 0xFF;\n\t      }\n\t    }\n\t    return {\n\t      data: data,\n\t      width: width,\n\t      height: height\n\t    };\n\t  };\n\t  PDFImage.prototype = {\n\t    get drawWidth() {\n\t      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n\t    },\n\t    get drawHeight() {\n\t      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n\t    },\n\t    decodeBuffer: function decodeBuffer(buffer) {\n\t      var bpc = this.bpc;\n\t      var numComps = this.numComps;\n\t      var decodeAddends = this.decodeAddends;\n\t      var decodeCoefficients = this.decodeCoefficients;\n\t      var max = (1 << bpc) - 1;\n\t      var i, ii;\n\t      if (bpc === 1) {\n\t        for (i = 0, ii = buffer.length; i < ii; i++) {\n\t          buffer[i] = +!buffer[i];\n\t        }\n\t        return;\n\t      }\n\t      var index = 0;\n\t      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n\t        for (var j = 0; j < numComps; j++) {\n\t          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n\t          index++;\n\t        }\n\t      }\n\t    },\n\t    getComponents: function getComponents(buffer) {\n\t      var bpc = this.bpc;\n\t      if (bpc === 8) {\n\t        return buffer;\n\t      }\n\t      var width = this.width;\n\t      var height = this.height;\n\t      var numComps = this.numComps;\n\t      var length = width * height * numComps;\n\t      var bufferPos = 0;\n\t      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n\t      var rowComps = width * numComps;\n\t      var max = (1 << bpc) - 1;\n\t      var i = 0,\n\t          ii,\n\t          buf;\n\t      if (bpc === 1) {\n\t        var mask, loop1End, loop2End;\n\t        for (var j = 0; j < height; j++) {\n\t          loop1End = i + (rowComps & ~7);\n\t          loop2End = i + rowComps;\n\t          while (i < loop1End) {\n\t            buf = buffer[bufferPos++];\n\t            output[i] = buf >> 7 & 1;\n\t            output[i + 1] = buf >> 6 & 1;\n\t            output[i + 2] = buf >> 5 & 1;\n\t            output[i + 3] = buf >> 4 & 1;\n\t            output[i + 4] = buf >> 3 & 1;\n\t            output[i + 5] = buf >> 2 & 1;\n\t            output[i + 6] = buf >> 1 & 1;\n\t            output[i + 7] = buf & 1;\n\t            i += 8;\n\t          }\n\t          if (i < loop2End) {\n\t            buf = buffer[bufferPos++];\n\t            mask = 128;\n\t            while (i < loop2End) {\n\t              output[i++] = +!!(buf & mask);\n\t              mask >>= 1;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        var bits = 0;\n\t        buf = 0;\n\t        for (i = 0, ii = length; i < ii; ++i) {\n\t          if (i % rowComps === 0) {\n\t            buf = 0;\n\t            bits = 0;\n\t          }\n\t          while (bits < bpc) {\n\t            buf = buf << 8 | buffer[bufferPos++];\n\t            bits += 8;\n\t          }\n\t          var remainingBits = bits - bpc;\n\t          var value = buf >> remainingBits;\n\t          output[i] = value < 0 ? 0 : value > max ? max : value;\n\t          buf = buf & (1 << remainingBits) - 1;\n\t          bits = remainingBits;\n\t        }\n\t      }\n\t      return output;\n\t    },\n\t    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n\t      var smask = this.smask;\n\t      var mask = this.mask;\n\t      var alphaBuf, sw, sh, i, ii, j;\n\t      if (smask) {\n\t        sw = smask.width;\n\t        sh = smask.height;\n\t        alphaBuf = new Uint8Array(sw * sh);\n\t        smask.fillGrayBuffer(alphaBuf);\n\t        if (sw !== width || sh !== height) {\n\t          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n\t        }\n\t      } else if (mask) {\n\t        if (mask instanceof PDFImage) {\n\t          sw = mask.width;\n\t          sh = mask.height;\n\t          alphaBuf = new Uint8Array(sw * sh);\n\t          mask.numComps = 1;\n\t          mask.fillGrayBuffer(alphaBuf);\n\t          for (i = 0, ii = sw * sh; i < ii; ++i) {\n\t            alphaBuf[i] = 255 - alphaBuf[i];\n\t          }\n\t          if (sw !== width || sh !== height) {\n\t            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n\t          }\n\t        } else if (Array.isArray(mask)) {\n\t          alphaBuf = new Uint8Array(width * height);\n\t          var numComps = this.numComps;\n\t          for (i = 0, ii = width * height; i < ii; ++i) {\n\t            var opacity = 0;\n\t            var imageOffset = i * numComps;\n\t            for (j = 0; j < numComps; ++j) {\n\t              var color = image[imageOffset + j];\n\t              var maskOffset = j * 2;\n\t              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n\t                opacity = 255;\n\t                break;\n\t              }\n\t            }\n\t            alphaBuf[i] = opacity;\n\t          }\n\t        } else {\n\t          throw new _util.FormatError('Unknown mask format.');\n\t        }\n\t      }\n\t      if (alphaBuf) {\n\t        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n\t          rgbaBuf[j] = alphaBuf[i];\n\t        }\n\t      } else {\n\t        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n\t          rgbaBuf[j] = 255;\n\t        }\n\t      }\n\t    },\n\t    undoPreblend: function undoPreblend(buffer, width, height) {\n\t      var matte = this.smask && this.smask.matte;\n\t      if (!matte) {\n\t        return;\n\t      }\n\t      var matteRgb = this.colorSpace.getRgb(matte, 0);\n\t      var matteR = matteRgb[0];\n\t      var matteG = matteRgb[1];\n\t      var matteB = matteRgb[2];\n\t      var length = width * height * 4;\n\t      var r, g, b;\n\t      for (var i = 0; i < length; i += 4) {\n\t        var alpha = buffer[i + 3];\n\t        if (alpha === 0) {\n\t          buffer[i] = 255;\n\t          buffer[i + 1] = 255;\n\t          buffer[i + 2] = 255;\n\t          continue;\n\t        }\n\t        var k = 255 / alpha;\n\t        r = (buffer[i] - matteR) * k + matteR;\n\t        g = (buffer[i + 1] - matteG) * k + matteG;\n\t        b = (buffer[i + 2] - matteB) * k + matteB;\n\t        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n\t        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n\t        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n\t      }\n\t    },\n\t    createImageData: function createImageData() {\n\t      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\t\n\t      var drawWidth = this.drawWidth;\n\t      var drawHeight = this.drawHeight;\n\t      var imgData = {\n\t        width: drawWidth,\n\t        height: drawHeight\n\t      };\n\t      var numComps = this.numComps;\n\t      var originalWidth = this.width;\n\t      var originalHeight = this.height;\n\t      var bpc = this.bpc;\n\t      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n\t      var imgArray;\n\t      if (!forceRGBA) {\n\t        var kind;\n\t        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n\t          kind = _util.ImageKind.GRAYSCALE_1BPP;\n\t        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n\t          kind = _util.ImageKind.RGB_24BPP;\n\t        }\n\t        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n\t          imgData.kind = kind;\n\t          imgArray = this.getImageBytes(originalHeight * rowBytes);\n\t          if (this.image instanceof _stream.DecodeStream) {\n\t            imgData.data = imgArray;\n\t          } else {\n\t            var newArray = new Uint8Array(imgArray.length);\n\t            newArray.set(imgArray);\n\t            imgData.data = newArray;\n\t          }\n\t          if (this.needsDecode) {\n\t            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\n\t            var buffer = imgData.data;\n\t            for (var i = 0, ii = buffer.length; i < ii; i++) {\n\t              buffer[i] ^= 0xff;\n\t            }\n\t          }\n\t          return imgData;\n\t        }\n\t        if (this.image instanceof _stream.JpegStream && !this.smask && !this.mask && (this.colorSpace.name === 'DeviceGray' || this.colorSpace.name === 'DeviceRGB' || this.colorSpace.name === 'DeviceCMYK')) {\n\t          imgData.kind = _util.ImageKind.RGB_24BPP;\n\t          imgData.data = this.getImageBytes(originalHeight * rowBytes, drawWidth, drawHeight, true);\n\t          return imgData;\n\t        }\n\t      }\n\t      imgArray = this.getImageBytes(originalHeight * rowBytes);\n\t      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n\t      var comps = this.getComponents(imgArray);\n\t      var alpha01, maybeUndoPreblend;\n\t      if (!forceRGBA && !this.smask && !this.mask) {\n\t        imgData.kind = _util.ImageKind.RGB_24BPP;\n\t        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n\t        alpha01 = 0;\n\t        maybeUndoPreblend = false;\n\t      } else {\n\t        imgData.kind = _util.ImageKind.RGBA_32BPP;\n\t        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n\t        alpha01 = 1;\n\t        maybeUndoPreblend = true;\n\t        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n\t      }\n\t      if (this.needsDecode) {\n\t        this.decodeBuffer(comps);\n\t      }\n\t      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n\t      if (maybeUndoPreblend) {\n\t        this.undoPreblend(imgData.data, drawWidth, actualHeight);\n\t      }\n\t      return imgData;\n\t    },\n\t    fillGrayBuffer: function fillGrayBuffer(buffer) {\n\t      var numComps = this.numComps;\n\t      if (numComps !== 1) {\n\t        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\n\t      }\n\t      var width = this.width;\n\t      var height = this.height;\n\t      var bpc = this.bpc;\n\t      var rowBytes = width * numComps * bpc + 7 >> 3;\n\t      var imgArray = this.getImageBytes(height * rowBytes);\n\t      var comps = this.getComponents(imgArray);\n\t      var i, length;\n\t      if (bpc === 1) {\n\t        length = width * height;\n\t        if (this.needsDecode) {\n\t          for (i = 0; i < length; ++i) {\n\t            buffer[i] = comps[i] - 1 & 255;\n\t          }\n\t        } else {\n\t          for (i = 0; i < length; ++i) {\n\t            buffer[i] = -comps[i] & 255;\n\t          }\n\t        }\n\t        return;\n\t      }\n\t      if (this.needsDecode) {\n\t        this.decodeBuffer(comps);\n\t      }\n\t      length = width * height;\n\t      var scale = 255 / ((1 << bpc) - 1);\n\t      for (i = 0; i < length; ++i) {\n\t        buffer[i] = scale * comps[i] | 0;\n\t      }\n\t    },\n\t    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\n\t      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\t\n\t      this.image.reset();\n\t      this.image.drawWidth = drawWidth || this.width;\n\t      this.image.drawHeight = drawHeight || this.height;\n\t      this.image.forceRGB = !!forceRGB;\n\t      return this.image.getBytes(length);\n\t    }\n\t  };\n\t  return PDFImage;\n\t}();\n\texports.PDFImage = PDFImage;\n\t\n\t/***/ }),\n\t/* 145 */\n\t/***/ (function(module, exports, __w_pdfjs_require__) {\n\t\n\t\"use strict\";\n\t\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _util = __w_pdfjs_require__(0);\n\t\n\tvar _obj = __w_pdfjs_require__(73);\n\t\n\tvar _primitives = __w_pdfjs_require__(2);\n\t\n\tvar _colorspace = __w_pdfjs_require__(27);\n\t\n\tvar _evaluator = __w_pdfjs_require__(77);\n\t\n\tvar _stream = __w_pdfjs_require__(5);\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar AnnotationFactory = function () {\n\t  function AnnotationFactory() {\n\t    _classCallCheck(this, AnnotationFactory);\n\t  }\n\t\n\t  _createClass(AnnotationFactory, null, [{\n\t    key: 'create',\n\t    value: function create(xref, ref, pdfManager, idFactory) {\n\t      var dict = xref.fetchIfRef(ref);\n\t      if (!(0, _primitives.isDict)(dict)) {\n\t        return;\n\t      }\n\t      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n\t      var subtype = dict.get('Subtype');\n\t      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\n\t      var parameters = {\n\t        xref: xref,\n\t        dict: dict,\n\t        ref: (0, _primitives.isRef)(ref) ? ref : null,\n\t        subtype: subtype,\n\t        id: id,\n\t        pdfManager: pdfManager\n\t      };\n\t      switch (subtype) {\n\t        case 'Link':\n\t          return new LinkAnnotation(parameters);\n\t        case 'Text':\n\t          return new TextAnnotation(parameters);\n\t        case 'Widget':\n\t          var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n\t          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n\t          switch (fieldType) {\n\t            case 'Tx':\n\t              return new TextWidgetAnnotation(parameters);\n\t            case 'Btn':\n\t              return new ButtonWidgetAnnotation(parameters);\n\t            case 'Ch':\n\t              return new ChoiceWidgetAnnotation(parameters);\n\t          }\n\t          (0, _util.warn)('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n\t          return new WidgetAnnotation(parameters);\n\t        case 'Popup':\n\t          return new PopupAnnotation(parameters);\n\t        case 'Line':\n\t          return new LineAnnotation(parameters);\n\t        case 'Square':\n\t          return new SquareAnnotation(parameters);\n\t        case 'Circle':\n\t          return new CircleAnnotation(parameters);\n\t        case 'PolyLine':\n\t          return new PolylineAnnotation(parameters);\n\t        case 'Polygon':\n\t          return new PolygonAnnotation(parameters);\n\t        case 'Highlight':\n\t          return new HighlightAnnotation(parameters);\n\t        case 'Underline':\n\t          return new UnderlineAnnotation(parameters);\n\t        case 'Squiggly':\n\t          return new SquigglyAnnotation(parameters);\n\t        case 'StrikeOut':\n\t          return new StrikeOutAnnotation(parameters);\n\t        case 'Stamp':\n\t          return new StampAnnotation(parameters);\n\t        case 'FileAttachment':\n\t          return new FileAttachmentAnnotation(parameters);\n\t        default:\n\t          if (!subtype) {\n\t            (0, _util.warn)('Annotation is missing the required /Subtype.');\n\t          } else {\n\t            (0, _util.warn)('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n\t          }\n\t          return new Annotation(parameters);\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return AnnotationFactory;\n\t}();\n\t\n\tfunction getTransformMatrix(rect, bbox, matrix) {\n\t  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\n\t  var minX = bounds[0];\n\t  var minY = bounds[1];\n\t  var maxX = bounds[2];\n\t  var maxY = bounds[3];\n\t  if (minX === maxX || minY === maxY) {\n\t    return [1, 0, 0, 1, rect[0], rect[1]];\n\t  }\n\t  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n\t  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n\t  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\n\t}\n\t\n\tvar Annotation = function () {\n\t  function Annotation(params) {\n\t    _classCallCheck(this, Annotation);\n\t\n\t    var dict = params.dict;\n\t    this.setFlags(dict.get('F'));\n\t    this.setRectangle(dict.getArray('Rect'));\n\t    this.setColor(dict.getArray('C'));\n\t    this.setBorderStyle(dict);\n\t    this.setAppearance(dict);\n\t    this.data = {\n\t      annotationFlags: this.flags,\n\t      borderStyle: this.borderStyle,\n\t      color: this.color,\n\t      hasAppearance: !!this.appearance,\n\t      id: params.id,\n\t      rect: this.rectangle,\n\t      subtype: params.subtype\n\t    };\n\t  }\n\t\n\t  _createClass(Annotation, [{\n\t    key: '_hasFlag',\n\t    value: function _hasFlag(flags, flag) {\n\t      return !!(flags & flag);\n\t    }\n\t  }, {\n\t    key: '_isViewable',\n\t    value: function _isViewable(flags) {\n\t      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\n\t    }\n\t  }, {\n\t    key: '_isPrintable',\n\t    value: function _isPrintable(flags) {\n\t      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\n\t    }\n\t  }, {\n\t    key: 'setFlags',\n\t    value: function setFlags(flags) {\n\t      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\n\t    }\n\t  }, {\n\t    key: 'hasFlag',\n\t    value: function hasFlag(flag) {\n\t      return this._hasFlag(this.flags, flag);\n\t    }\n\t  }, {\n\t    key: 'setRectangle',\n\t    value: function setRectangle(rectangle) {\n\t      if (Array.isArray(rectangle) && rectangle.length === 4) {\n\t        this.rectangle = _util.Util.normalizeRect(rectangle);\n\t      } else {\n\t        this.rectangle = [0, 0, 0, 0];\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setColor',\n\t    value: function setColor(color) {\n\t      var rgbColor = new Uint8Array(3);\n\t      if (!Array.isArray(color)) {\n\t        this.color = rgbColor;\n\t        return;\n\t      }\n\t      switch (color.length) {\n\t        case 0:\n\t          this.color = null;\n\t          break;\n\t        case 1:\n\t          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n\t          this.color = rgbColor;\n\t          break;\n\t        case 3:\n\t          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n\t          this.color = rgbColor;\n\t          break;\n\t        case 4:\n\t          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n\t          this.color = rgbColor;\n\t          break;\n\t        default:\n\t          this.color = rgbColor;\n\t          break;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setBorderStyle',\n\t    value: function setBorderStyle(borderStyle) {\n\t      this.borderStyle = new AnnotationBorderStyle();\n\t      if (!(0, _primitives.isDict)(borderStyle)) {\n\t        return;\n\t      }\n\t      if (borderStyle.has('BS')) {\n\t        var dict = borderStyle.get('BS');\n\t        var dictType = dict.get('Type');\n\t        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\n\t          this.borderStyle.setWidth(dict.get('W'));\n\t          this.borderStyle.setStyle(dict.get('S'));\n\t          this.borderStyle.setDashArray(dict.getArray('D'));\n\t        }\n\t      } else if (borderStyle.has('Border')) {\n\t        var array = borderStyle.getArray('Border');\n\t        if (Array.isArray(array) && array.length >= 3) {\n\t          this.borderStyle.setHorizontalCornerRadius(array[0]);\n\t          this.borderStyle.setVerticalCornerRadius(array[1]);\n\t          this.borderStyle.setWidth(array[2]);\n\t          if (array.length === 4) {\n\t            this.borderStyle.setDashArray(array[3]);\n\t          }\n\t        }\n\t      } else {\n\t        this.borderStyle.setWidth(0);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setAppearance',\n\t    value: function setAppearance(dict) {\n\t      this.appearance = null;\n\t      var appearanceStates = dict.get('AP');\n\t      if (!(0, _primitives.isDict)(appearanceStates)) {\n\t        return;\n\t      }\n\t      var normalAppearanceState = appearanceStates.get('N');\n\t      if ((0, _primitives.isStream)(normalAppearanceState)) {\n\t        this.appearance = normalAppearanceState;\n\t        return;\n\t      }\n\t      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n\t        return;\n\t      }\n\t      var as = dict.get('AS');\n\t      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\n\t        return;\n\t      }\n\t      this.appearance = normalAppearanceState.get(as.name);\n\t    }\n\t  }, {\n\t    key: '_preparePopup',\n\t    value: function _preparePopup(dict) {\n\t      if (!dict.has('C')) {\n\t        this.data.color = null;\n\t      }\n\t      this.data.hasPopup = dict.has('Popup');\n\t      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\n\t      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\n\t    }\n\t  }, {\n\t    key: 'loadResources',\n\t    value: function loadResources(keys) {\n\t      return this.appearance.dict.getAsync('Resources').then(function (resources) {\n\t        if (!resources) {\n\t          return;\n\t        }\n\t        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\n\t        return objectLoader.load().then(function () {\n\t          return resources;\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'getOperatorList',\n\t    value: function getOperatorList(evaluator, task, renderForms) {\n\t      var _this = this;\n\t\n\t      if (!this.appearance) {\n\t        return Promise.resolve(new _evaluator.OperatorList());\n\t      }\n\t      var data = this.data;\n\t      var appearanceDict = this.appearance.dict;\n\t      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n\t      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\n\t      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\n\t      var transform = getTransformMatrix(data.rect, bbox, matrix);\n\t      return resourcesPromise.then(function (resources) {\n\t        var opList = new _evaluator.OperatorList();\n\t        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\n\t        return evaluator.getOperatorList({\n\t          stream: _this.appearance,\n\t          task: task,\n\t          resources: resources,\n\t          operatorList: opList\n\t        }).then(function () {\n\t          opList.addOp(_util.OPS.endAnnotation, []);\n\t          _this.appearance.reset();\n\t          return opList;\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'viewable',\n\t    get: function get() {\n\t      if (this.flags === 0) {\n\t        return true;\n\t      }\n\t      return this._isViewable(this.flags);\n\t    }\n\t  }, {\n\t    key: 'printable',\n\t    get: function get() {\n\t      if (this.flags === 0) {\n\t        return false;\n\t      }\n\t      return this._isPrintable(this.flags);\n\t    }\n\t  }]);\n\t\n\t  return Annotation;\n\t}();\n\t\n\tvar AnnotationBorderStyle = function () {\n\t  function AnnotationBorderStyle() {\n\t    _classCallCheck(this, AnnotationBorderStyle);\n\t\n\t    this.width = 1;\n\t    this.style = _util.AnnotationBorderStyleType.SOLID;\n\t    this.dashArray = [3];\n\t    this.horizontalCornerRadius = 0;\n\t    this.verticalCornerRadius = 0;\n\t  }\n\t\n\t  _createClass(AnnotationBorderStyle, [{\n\t    key: 'setWidth',\n\t    value: function setWidth(width) {\n\t      if (Number.isInteger(width)) {\n\t        this.width = width;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setStyle',\n\t    value: function setStyle(style) {\n\t      if (!style) {\n\t        return;\n\t      }\n\t      switch (style.name) {\n\t        case 'S':\n\t          this.style = _util.AnnotationBorderStyleType.SOLID;\n\t          break;\n\t        case 'D':\n\t          this.style = _util.AnnotationBorderStyleType.DASHED;\n\t          break;\n\t        case 'B':\n\t          this.style = _util.AnnotationBorderStyleType.BEVELED;\n\t          break;\n\t        case 'I':\n\t          this.style = _util.AnnotationBorderStyleType.INSET;\n\t          break;\n\t        case 'U':\n\t          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\n\t          break;\n\t        default:\n\t          break;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setDashArray',\n\t    value: function setDashArray(dashArray) {\n\t      if (Array.isArray(dashArray) && dashArray.length > 0) {\n\t        var isValid = true;\n\t        var allZeros = true;\n\t        for (var i = 0, len = dashArray.length; i < len; i++) {\n\t          var element = dashArray[i];\n\t          var validNumber = +element >= 0;\n\t          if (!validNumber) {\n\t            isValid = false;\n\t            break;\n\t          } else if (element > 0) {\n\t            allZeros = false;\n\t          }\n\t        }\n\t        if (isValid && !allZeros) {\n\t          this.dashArray = dashArray;\n\t        } else {\n\t          this.width = 0;\n\t        }\n\t      } else if (dashArray) {\n\t        this.width = 0;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setHorizontalCornerRadius',\n\t    value: function setHorizontalCornerRadius(radius) {\n\t      if (Number.isInteger(radius)) {\n\t        this.horizontalCornerRadius = radius;\n\t      }\n\t    }\n\t  }, {\n\t    key: 'setVerticalCornerRadius',\n\t    value: function setVerticalCornerRadius(radius) {\n\t      if (Number.isInteger(radius)) {\n\t        this.verticalCornerRadius = radius;\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return AnnotationBorderStyle;\n\t}();\n\t\n\tvar WidgetAnnotation = function (_Annotation) {\n\t  _inherits(WidgetAnnotation, _Annotation);\n\t\n\t  function WidgetAnnotation(params) {\n\t    _classCallCheck(this, WidgetAnnotation);\n\t\n\t    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\n\t\n\t    var dict = params.dict;\n\t    var data = _this2.data;\n\t    data.annotationType = _util.AnnotationType.WIDGET;\n\t    data.fieldName = _this2._constructFieldName(dict);\n\t    data.fieldValue = _util.Util.getInheritableProperty(dict, 'V', true);\n\t    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\n\t    data.defaultAppearance = _util.Util.getInheritableProperty(dict, 'DA') || '';\n\t    var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n\t    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n\t    _this2.fieldResources = _util.Util.getInheritableProperty(dict, 'DR') || _primitives.Dict.empty;\n\t    data.fieldFlags = _util.Util.getInheritableProperty(dict, 'Ff');\n\t    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\n\t      data.fieldFlags = 0;\n\t    }\n\t    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\n\t    if (data.fieldType === 'Sig') {\n\t      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\n\t    }\n\t    return _this2;\n\t  }\n\t\n\t  _createClass(WidgetAnnotation, [{\n\t    key: '_constructFieldName',\n\t    value: function _constructFieldName(dict) {\n\t      if (!dict.has('T') && !dict.has('Parent')) {\n\t        (0, _util.warn)('Unknown field name, falling back to empty field name.');\n\t        return '';\n\t      }\n\t      if (!dict.has('Parent')) {\n\t        return (0, _util.stringToPDFString)(dict.get('T'));\n\t      }\n\t      var fieldName = [];\n\t      if (dict.has('T')) {\n\t        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\n\t      }\n\t      var loopDict = dict;\n\t      while (loopDict.has('Parent')) {\n\t        loopDict = loopDict.get('Parent');\n\t        if (!(0, _primitives.isDict)(loopDict)) {\n\t          break;\n\t        }\n\t        if (loopDict.has('T')) {\n\t          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\n\t        }\n\t      }\n\t      return fieldName.join('.');\n\t    }\n\t  }, {\n\t    key: 'hasFieldFlag',\n\t    value: function hasFieldFlag(flag) {\n\t      return !!(this.data.fieldFlags & flag);\n\t    }\n\t  }, {\n\t    key: 'getOperatorList',\n\t    value: function getOperatorList(evaluator, task, renderForms) {\n\t      if (renderForms) {\n\t        return Promise.resolve(new _evaluator.OperatorList());\n\t      }\n\t      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n\t    }\n\t  }]);\n\t\n\t  return WidgetAnnotation;\n\t}(Annotation);\n\t\n\tvar TextWidgetAnnotation = function (_WidgetAnnotation) {\n\t  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\n\t\n\t  function TextWidgetAnnotation(params) {\n\t    _classCallCheck(this, TextWidgetAnnotation);\n\t\n\t    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\n\t\n\t    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\n\t    var alignment = _util.Util.getInheritableProperty(params.dict, 'Q');\n\t    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\n\t      alignment = null;\n\t    }\n\t    _this3.data.textAlignment = alignment;\n\t    var maximumLength = _util.Util.getInheritableProperty(params.dict, 'MaxLen');\n\t    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\n\t      maximumLength = null;\n\t    }\n\t    _this3.data.maxLen = maximumLength;\n\t    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\n\t    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\n\t    return _this3;\n\t  }\n\t\n\t  _createClass(TextWidgetAnnotation, [{\n\t    key: 'getOperatorList',\n\t    value: function getOperatorList(evaluator, task, renderForms) {\n\t      if (renderForms || this.appearance) {\n\t        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n\t      }\n\t      var operatorList = new _evaluator.OperatorList();\n\t      if (!this.data.defaultAppearance) {\n\t        return Promise.resolve(operatorList);\n\t      }\n\t      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\n\t      return evaluator.getOperatorList({\n\t        stream: stream,\n\t        task: task,\n\t        resources: this.fieldResources,\n\t        operatorList: operatorList\n\t      }).then(function () {\n\t        return operatorList;\n\t      });\n\t    }\n\t  }]);\n\t\n\t  return TextWidgetAnnotation;\n\t}(WidgetAnnotation);\n\t\n\tvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\n\t  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\n\t\n\t  function ButtonWidgetAnnotation(params) {\n\t    _classCallCheck(this, ButtonWidgetAnnotation);\n\t\n\t    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\n\t\n\t    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n\t    if (_this4.data.checkBox) {\n\t      if (!(0, _primitives.isName)(_this4.data.fieldValue)) {\n\t        return _possibleConstructorReturn(_this4);\n\t      }\n\t      _this4.data.fieldValue = _this4.data.fieldValue.name;\n\t    }\n\t    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n\t    if (_this4.data.radioButton) {\n\t      _this4.data.fieldValue = _this4.data.buttonValue = null;\n\t      var fieldParent = params.dict.get('Parent');\n\t      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\n\t        var fieldParentValue = fieldParent.get('V');\n\t        if ((0, _primitives.isName)(fieldParentValue)) {\n\t          _this4.data.fieldValue = fieldParentValue.name;\n\t        }\n\t      }\n\t      var appearanceStates = params.dict.get('AP');\n\t      if (!(0, _primitives.isDict)(appearanceStates)) {\n\t        return _possibleConstructorReturn(_this4);\n\t      }\n\t      var normalAppearanceState = appearanceStates.get('N');\n\t      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n\t        return _possibleConstructorReturn(_this4);\n\t      }\n\t      var keys = normalAppearanceState.getKeys();\n\t      for (var i = 0, ii = keys.length; i < ii; i++) {\n\t        if (keys[i] !== 'Off') {\n\t          _this4.data.buttonValue = keys[i];\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    return _this4;\n\t  }\n\t\n\t  return ButtonWidgetAnnotation;\n\t}(WidgetAnnotation);\n\t\n\tvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\n\t  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\n\t\n\t  function ChoiceWidgetAnnotation(params) {\n\t    _classCallCheck(this, ChoiceWidgetAnnotation);\n\t\n\t    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\n\t\n\t    _this5.data.options = [];\n\t    var options = _util.Util.getInheritableProperty(params.dict, 'Opt');\n\t    if (Array.isArray(options)) {\n\t      var xref = params.xref;\n\t      for (var i = 0, ii = options.length; i < ii; i++) {\n\t        var option = xref.fetchIfRef(options[i]);\n\t        var isOptionArray = Array.isArray(option);\n\t        _this5.data.options[i] = {\n\t          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n\t          displayValue: isOptionArray ? xref.fetchIfRef(option[1]) : option\n\t        };\n\t      }\n\t    }\n\t    if (!Array.isArray(_this5.data.fieldValue)) {\n\t      _this5.data.fieldValue = [_this5.data.fieldValue];\n\t    }\n\t    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\n\t    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\n\t    return _this5;\n\t  }\n\t\n\t  return ChoiceWidgetAnnotation;\n\t}(WidgetAnnotation);\n\t\n\tvar TextAnnotation = function (_Annotation2) {\n\t  _inherits(TextAnnotation, _Annotation2);\n\t\n\t  function TextAnnotation(parameters) {\n\t    _classCallCheck(this, TextAnnotation);\n\t\n\t    var DEFAULT_ICON_SIZE = 22;\n\t\n\t    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\n\t\n\t    _this6.data.annotationType = _util.AnnotationType.TEXT;\n\t    if (_this6.data.hasAppearance) {\n\t      _this6.data.name = 'NoIcon';\n\t    } else {\n\t      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\n\t      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\n\t      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n\t    }\n\t    _this6._preparePopup(parameters.dict);\n\t    return _this6;\n\t  }\n\t\n\t  return TextAnnotation;\n\t}(Annotation);\n\t\n\tvar LinkAnnotation = function (_Annotation3) {\n\t  _inherits(LinkAnnotation, _Annotation3);\n\t\n\t  function LinkAnnotation(params) {\n\t    _classCallCheck(this, LinkAnnotation);\n\t\n\t    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\n\t\n\t    _this7.data.annotationType = _util.AnnotationType.LINK;\n\t    _obj.Catalog.parseDestDictionary({\n\t      destDict: params.dict,\n\t      resultObj: _this7.data,\n\t      docBaseUrl: params.pdfManager.docBaseUrl\n\t    });\n\t    return _this7;\n\t  }\n\t\n\t  return LinkAnnotation;\n\t}(Annotation);\n\t\n\tvar PopupAnnotation = function (_Annotation4) {\n\t  _inherits(PopupAnnotation, _Annotation4);\n\t\n\t  function PopupAnnotation(parameters) {\n\t    _classCallCheck(this, PopupAnnotation);\n\t\n\t    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\n\t\n\t    _this8.data.annotationType = _util.AnnotationType.POPUP;\n\t    var dict = parameters.dict;\n\t    var parentItem = dict.get('Parent');\n\t    if (!parentItem) {\n\t      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\n\t      return _possibleConstructorReturn(_this8);\n\t    }\n\t    var parentSubtype = parentItem.get('Subtype');\n\t    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\n\t    _this8.data.parentId = dict.getRaw('Parent').toString();\n\t    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\n\t    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\n\t    if (!parentItem.has('C')) {\n\t      _this8.data.color = null;\n\t    } else {\n\t      _this8.setColor(parentItem.getArray('C'));\n\t      _this8.data.color = _this8.color;\n\t    }\n\t    if (!_this8.viewable) {\n\t      var parentFlags = parentItem.get('F');\n\t      if (_this8._isViewable(parentFlags)) {\n\t        _this8.setFlags(parentFlags);\n\t      }\n\t    }\n\t    return _this8;\n\t  }\n\t\n\t  return PopupAnnotation;\n\t}(Annotation);\n\t\n\tvar LineAnnotation = function (_Annotation5) {\n\t  _inherits(LineAnnotation, _Annotation5);\n\t\n\t  function LineAnnotation(parameters) {\n\t    _classCallCheck(this, LineAnnotation);\n\t\n\t    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\n\t\n\t    _this9.data.annotationType = _util.AnnotationType.LINE;\n\t    var dict = parameters.dict;\n\t    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\n\t    _this9._preparePopup(dict);\n\t    return _this9;\n\t  }\n\t\n\t  return LineAnnotation;\n\t}(Annotation);\n\t\n\tvar SquareAnnotation = function (_Annotation6) {\n\t  _inherits(SquareAnnotation, _Annotation6);\n\t\n\t  function SquareAnnotation(parameters) {\n\t    _classCallCheck(this, SquareAnnotation);\n\t\n\t    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\n\t\n\t    _this10.data.annotationType = _util.AnnotationType.SQUARE;\n\t    _this10._preparePopup(parameters.dict);\n\t    return _this10;\n\t  }\n\t\n\t  return SquareAnnotation;\n\t}(Annotation);\n\t\n\tvar CircleAnnotation = function (_Annotation7) {\n\t  _inherits(CircleAnnotation, _Annotation7);\n\t\n\t  function CircleAnnotation(parameters) {\n\t    _classCallCheck(this, CircleAnnotation);\n\t\n\t    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\n\t\n\t    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\n\t    _this11._preparePopup(parameters.dict);\n\t    return _this11;\n\t  }\n\t\n\t  return CircleAnnotation;\n\t}(Annotation);\n\t\n\tvar PolylineAnnotation = function (_Annotation8) {\n\t  _inherits(PolylineAnnotation, _Annotation8);\n\t\n\t  function PolylineAnnotation(parameters) {\n\t    _classCallCheck(this, PolylineAnnotation);\n\t\n\t    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\n\t\n\t    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\n\t    var dict = parameters.dict;\n\t    var rawVertices = dict.getArray('Vertices');\n\t    _this12.data.vertices = [];\n\t    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\n\t      _this12.data.vertices.push({\n\t        x: rawVertices[i],\n\t        y: rawVertices[i + 1]\n\t      });\n\t    }\n\t    _this12._preparePopup(dict);\n\t    return _this12;\n\t  }\n\t\n\t  return PolylineAnnotation;\n\t}(Annotation);\n\t\n\tvar PolygonAnnotation = function (_PolylineAnnotation) {\n\t  _inherits(PolygonAnnotation, _PolylineAnnotation);\n\t\n\t  function PolygonAnnotation(parameters) {\n\t    _classCallCheck(this, PolygonAnnotation);\n\t\n\t    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\n\t\n\t    _this13.data.annotationType = _util.AnnotationType.POLYGON;\n\t    return _this13;\n\t  }\n\t\n\t  return PolygonAnnotation;\n\t}(PolylineAnnotation);\n\t\n\tvar HighlightAnnotation = function (_Annotation9) {\n\t  _inherits(HighlightAnnotation, _Annotation9);\n\t\n\t  function HighlightAnnotation(parameters) {\n\t    _classCallCheck(this, HighlightAnnotation);\n\t\n\t    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\n\t\n\t    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\n\t    _this14._preparePopup(parameters.dict);\n\t    return _this14;\n\t  }\n\t\n\t  return HighlightAnnotation;\n\t}(Annotation);\n\t\n\tvar UnderlineAnnotation = function (_Annotation10) {\n\t  _inherits(UnderlineAnnotation, _Annotation10);\n\t\n\t  function UnderlineAnnotation(parameters) {\n\t    _classCallCheck(this, UnderlineAnnotation);\n\t\n\t    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\n\t\n\t    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\n\t    _this15._preparePopup(parameters.dict);\n\t    return _this15;\n\t  }\n\t\n\t  return UnderlineAnnotation;\n\t}(Annotation);\n\t\n\tvar SquigglyAnnotation = function (_Annotation11) {\n\t  _inherits(SquigglyAnnotation, _Annotation11);\n\t\n\t  function SquigglyAnnotation(parameters) {\n\t    _classCallCheck(this, SquigglyAnnotation);\n\t\n\t    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\n\t\n\t    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\n\t    _this16._preparePopup(parameters.dict);\n\t    return _this16;\n\t  }\n\t\n\t  return SquigglyAnnotation;\n\t}(Annotation);\n\t\n\tvar StrikeOutAnnotation = function (_Annotation12) {\n\t  _inherits(StrikeOutAnnotation, _Annotation12);\n\t\n\t  function StrikeOutAnnotation(parameters) {\n\t    _classCallCheck(this, StrikeOutAnnotation);\n\t\n\t    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\n\t\n\t    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\n\t    _this17._preparePopup(parameters.dict);\n\t    return _this17;\n\t  }\n\t\n\t  return StrikeOutAnnotation;\n\t}(Annotation);\n\t\n\tvar StampAnnotation = function (_Annotation13) {\n\t  _inherits(StampAnnotation, _Annotation13);\n\t\n\t  function StampAnnotation(parameters) {\n\t    _classCallCheck(this, StampAnnotation);\n\t\n\t    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\n\t\n\t    _this18.data.annotationType = _util.AnnotationType.STAMP;\n\t    _this18._preparePopup(parameters.dict);\n\t    return _this18;\n\t  }\n\t\n\t  return StampAnnotation;\n\t}(Annotation);\n\t\n\tvar FileAttachmentAnnotation = function (_Annotation14) {\n\t  _inherits(FileAttachmentAnnotation, _Annotation14);\n\t\n\t  function FileAttachmentAnnotation(parameters) {\n\t    _classCallCheck(this, FileAttachmentAnnotation);\n\t\n\t    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\n\t\n\t    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\n\t    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\n\t    _this19.data.file = file.serializable;\n\t    _this19._preparePopup(parameters.dict);\n\t    return _this19;\n\t  }\n\t\n\t  return FileAttachmentAnnotation;\n\t}(Annotation);\n\t\n\texports.Annotation = Annotation;\n\texports.AnnotationBorderStyle = AnnotationBorderStyle;\n\texports.AnnotationFactory = AnnotationFactory;\n\t\n\t/***/ })\n\t/******/ ]);\n\t});\n\t//# sourceMappingURL=pdf.worker.js.map\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(8), (function() { return this; }())))\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** static/js/1.3895c32f.chunk.js\n **/","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf.worker\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf.worker\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf.worker\"] = root.pdfjsDistBuildPdfWorker = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __w_pdfjs_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__w_pdfjs_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__w_pdfjs_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__w_pdfjs_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__w_pdfjs_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__w_pdfjs_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 82);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unreachable = exports.warn = exports.utf8StringToString = exports.stringToUTF8String = exports.stringToPDFString = exports.stringToBytes = exports.string32 = exports.shadow = exports.setVerbosityLevel = exports.ReadableStream = exports.removeNullCharacters = exports.readUint32 = exports.readUint16 = exports.readInt8 = exports.log2 = exports.loadJpegStream = exports.isEvalSupported = exports.isLittleEndian = exports.createValidAbsoluteUrl = exports.isSameOrigin = exports.isNodeJS = exports.isSpace = exports.isString = exports.isNum = exports.isEmptyObj = exports.isBool = exports.isArrayBuffer = exports.info = exports.getVerbosityLevel = exports.getLookupTableFactory = exports.deprecated = exports.createObjectURL = exports.createPromiseCapability = exports.createBlob = exports.bytesToString = exports.assert = exports.arraysToBytes = exports.arrayByteLength = exports.FormatError = exports.XRefParseException = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.StatTimer = exports.PasswordResponses = exports.PasswordException = exports.PageViewport = exports.NotImplementedException = exports.NativeImageDecoding = exports.MissingPDFException = exports.MissingDataException = exports.MessageHandler = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VERBOSITY_LEVELS = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n__w_pdfjs_require__(84);\n\nvar _streams_polyfill = __w_pdfjs_require__(125);\n\nvar FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\nvar NativeImageDecoding = {\n  NONE: 'none',\n  DECODE: 'decode',\n  DISPLAY: 'display'\n};\nvar TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4\n};\nvar ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3\n};\nvar AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26\n};\nvar AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200\n};\nvar AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000\n};\nvar AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5\n};\nvar StreamType = {\n  UNKNOWN: 0,\n  FLATE: 1,\n  LZW: 2,\n  DCT: 3,\n  JPX: 4,\n  JBIG: 5,\n  A85: 6,\n  AHX: 7,\n  CCF: 8,\n  RL: 9\n};\nvar FontType = {\n  UNKNOWN: 0,\n  TYPE1: 1,\n  TYPE1C: 2,\n  CIDFONTTYPE0: 3,\n  CIDFONTTYPE0C: 4,\n  TRUETYPE: 5,\n  CIDFONTTYPE2: 6,\n  TYPE3: 7,\n  OPENTYPE: 8,\n  TYPE0: 9,\n  MMTYPE1: 10\n};\nvar VERBOSITY_LEVELS = {\n  errors: 0,\n  warnings: 1,\n  infos: 5\n};\nvar CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2\n};\nvar OPS = {\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91\n};\nvar verbosity = VERBOSITY_LEVELS.warnings;\nfunction setVerbosityLevel(level) {\n  verbosity = level;\n}\nfunction getVerbosityLevel() {\n  return verbosity;\n}\nfunction info(msg) {\n  if (verbosity >= VERBOSITY_LEVELS.infos) {\n    console.log('Info: ' + msg);\n  }\n}\nfunction warn(msg) {\n  if (verbosity >= VERBOSITY_LEVELS.warnings) {\n    console.log('Warning: ' + msg);\n  }\n}\nfunction deprecated(details) {\n  console.log('Deprecated API usage: ' + details);\n}\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\nvar UNSUPPORTED_FEATURES = {\n  unknown: 'unknown',\n  forms: 'forms',\n  javaScript: 'javaScript',\n  smask: 'smask',\n  shadingPattern: 'shadingPattern',\n  font: 'font'\n};\nfunction isSameOrigin(baseUrl, otherUrl) {\n  try {\n    var base = new URL(baseUrl);\n    if (!base.origin || base.origin === 'null') {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n  var other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\nfunction isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case 'http:':\n    case 'https:':\n    case 'ftp:':\n    case 'mailto:':\n    case 'tel:':\n      return true;\n    default:\n      return false;\n  }\n}\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {}\n  return null;\n}\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value: value,\n    enumerable: true,\n    configurable: true,\n    writable: false\n  });\n  return value;\n}\nfunction getLookupTableFactory(initializer) {\n  var lookup;\n  return function () {\n    if (initializer) {\n      lookup = Object.create(null);\n      initializer(lookup);\n      initializer = null;\n    }\n    return lookup;\n  };\n}\nvar PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2\n};\nvar PasswordException = function PasswordExceptionClosure() {\n  function PasswordException(msg, code) {\n    this.name = 'PasswordException';\n    this.message = msg;\n    this.code = code;\n  }\n  PasswordException.prototype = new Error();\n  PasswordException.constructor = PasswordException;\n  return PasswordException;\n}();\nvar UnknownErrorException = function UnknownErrorExceptionClosure() {\n  function UnknownErrorException(msg, details) {\n    this.name = 'UnknownErrorException';\n    this.message = msg;\n    this.details = details;\n  }\n  UnknownErrorException.prototype = new Error();\n  UnknownErrorException.constructor = UnknownErrorException;\n  return UnknownErrorException;\n}();\nvar InvalidPDFException = function InvalidPDFExceptionClosure() {\n  function InvalidPDFException(msg) {\n    this.name = 'InvalidPDFException';\n    this.message = msg;\n  }\n  InvalidPDFException.prototype = new Error();\n  InvalidPDFException.constructor = InvalidPDFException;\n  return InvalidPDFException;\n}();\nvar MissingPDFException = function MissingPDFExceptionClosure() {\n  function MissingPDFException(msg) {\n    this.name = 'MissingPDFException';\n    this.message = msg;\n  }\n  MissingPDFException.prototype = new Error();\n  MissingPDFException.constructor = MissingPDFException;\n  return MissingPDFException;\n}();\nvar UnexpectedResponseException = function UnexpectedResponseExceptionClosure() {\n  function UnexpectedResponseException(msg, status) {\n    this.name = 'UnexpectedResponseException';\n    this.message = msg;\n    this.status = status;\n  }\n  UnexpectedResponseException.prototype = new Error();\n  UnexpectedResponseException.constructor = UnexpectedResponseException;\n  return UnexpectedResponseException;\n}();\nvar NotImplementedException = function NotImplementedExceptionClosure() {\n  function NotImplementedException(msg) {\n    this.message = msg;\n  }\n  NotImplementedException.prototype = new Error();\n  NotImplementedException.prototype.name = 'NotImplementedException';\n  NotImplementedException.constructor = NotImplementedException;\n  return NotImplementedException;\n}();\nvar MissingDataException = function MissingDataExceptionClosure() {\n  function MissingDataException(begin, end) {\n    this.begin = begin;\n    this.end = end;\n    this.message = 'Missing data [' + begin + ', ' + end + ')';\n  }\n  MissingDataException.prototype = new Error();\n  MissingDataException.prototype.name = 'MissingDataException';\n  MissingDataException.constructor = MissingDataException;\n  return MissingDataException;\n}();\nvar XRefParseException = function XRefParseExceptionClosure() {\n  function XRefParseException(msg) {\n    this.message = msg;\n  }\n  XRefParseException.prototype = new Error();\n  XRefParseException.prototype.name = 'XRefParseException';\n  XRefParseException.constructor = XRefParseException;\n  return XRefParseException;\n}();\nvar FormatError = function FormatErrorClosure() {\n  function FormatError(msg) {\n    this.message = msg;\n  }\n  FormatError.prototype = new Error();\n  FormatError.prototype.name = 'FormatError';\n  FormatError.constructor = FormatError;\n  return FormatError;\n}();\nvar AbortException = function AbortExceptionClosure() {\n  function AbortException(msg) {\n    this.name = 'AbortException';\n    this.message = msg;\n  }\n  AbortException.prototype = new Error();\n  AbortException.constructor = AbortException;\n  return AbortException;\n}();\nvar NullCharactersRegExp = /\\x00/g;\nfunction removeNullCharacters(str) {\n  if (typeof str !== 'string') {\n    warn('The argument for removeNullCharacters must be a string.');\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, '');\n}\nfunction bytesToString(bytes) {\n  assert(bytes !== null && (typeof bytes === 'undefined' ? 'undefined' : _typeof(bytes)) === 'object' && bytes.length !== undefined, 'Invalid argument for bytesToString');\n  var length = bytes.length;\n  var MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  var strBuf = [];\n  for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    var chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join('');\n}\nfunction stringToBytes(str) {\n  assert(typeof str === 'string', 'Invalid argument for stringToBytes');\n  var length = str.length;\n  var bytes = new Uint8Array(length);\n  for (var i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xFF;\n  }\n  return bytes;\n}\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined);\n  return arr.byteLength;\n}\nfunction arraysToBytes(arr) {\n  if (arr.length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  var resultLength = 0;\n  var i,\n      ii = arr.length;\n  var item, itemLength;\n  for (i = 0; i < ii; i++) {\n    item = arr[i];\n    itemLength = arrayByteLength(item);\n    resultLength += itemLength;\n  }\n  var pos = 0;\n  var data = new Uint8Array(resultLength);\n  for (i = 0; i < ii; i++) {\n    item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === 'string') {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\nfunction string32(value) {\n  return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n}\nfunction log2(x) {\n  var n = 1,\n      i = 0;\n  while (x > n) {\n    n <<= 1;\n    i++;\n  }\n  return i;\n}\nfunction readInt8(data, start) {\n  return data[start] << 24 >> 24;\n}\nfunction readUint16(data, offset) {\n  return data[offset] << 8 | data[offset + 1];\n}\nfunction readUint32(data, offset) {\n  return (data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3]) >>> 0;\n}\nfunction isLittleEndian() {\n  var buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  var view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nfunction isEvalSupported() {\n  try {\n    new Function('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nvar Util = function UtilClosure() {\n  function Util() {}\n  var rgbBuf = ['rgb(', 0, ',', 0, ',', 0, ')'];\n  Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join('');\n  };\n  Util.transform = function Util_transform(m1, m2) {\n    return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n  };\n  Util.applyTransform = function Util_applyTransform(p, m) {\n    var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  };\n  Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  };\n  Util.getAxialAlignedBoundingBox = function Util_getAxialAlignedBoundingBox(r, m) {\n    var p1 = Util.applyTransform(r, m);\n    var p2 = Util.applyTransform(r.slice(2, 4), m);\n    var p3 = Util.applyTransform([r[0], r[3]], m);\n    var p4 = Util.applyTransform([r[2], r[1]], m);\n    return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n  };\n  Util.inverseTransform = function Util_inverseTransform(m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n  };\n  Util.apply3dTransform = function Util_apply3dTransform(m, v) {\n    return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n  };\n  Util.singularValueDecompose2dScale = function Util_singularValueDecompose2dScale(m) {\n    var transpose = [m[0], m[2], m[1], m[3]];\n    var a = m[0] * transpose[0] + m[1] * transpose[2];\n    var b = m[0] * transpose[1] + m[1] * transpose[3];\n    var c = m[2] * transpose[0] + m[3] * transpose[2];\n    var d = m[2] * transpose[1] + m[3] * transpose[3];\n    var first = (a + d) / 2;\n    var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    var sx = first + second || 1;\n    var sy = first - second || 1;\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  };\n  Util.normalizeRect = function Util_normalizeRect(rect) {\n    var r = rect.slice(0);\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  };\n  Util.intersect = function Util_intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n    var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare),\n        orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare),\n        result = [];\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n    if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return false;\n    }\n    if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return false;\n    }\n    return result;\n  };\n  var ROMAN_NUMBER_MAP = ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM', '', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC', '', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'];\n  Util.toRoman = function Util_toRoman(number, lowerCase) {\n    assert(Number.isInteger(number) && number > 0, 'The number should be a positive integer.');\n    var pos,\n        romanBuf = [];\n    while (number >= 1000) {\n      number -= 1000;\n      romanBuf.push('M');\n    }\n    pos = number / 100 | 0;\n    number %= 100;\n    romanBuf.push(ROMAN_NUMBER_MAP[pos]);\n    pos = number / 10 | 0;\n    number %= 10;\n    romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\n    romanBuf.push(ROMAN_NUMBER_MAP[20 + number]);\n    var romanStr = romanBuf.join('');\n    return lowerCase ? romanStr.toLowerCase() : romanStr;\n  };\n  Util.appendToArray = function Util_appendToArray(arr1, arr2) {\n    Array.prototype.push.apply(arr1, arr2);\n  };\n  Util.prependToArray = function Util_prependToArray(arr1, arr2) {\n    Array.prototype.unshift.apply(arr1, arr2);\n  };\n  Util.extendObj = function extendObj(obj1, obj2) {\n    for (var key in obj2) {\n      obj1[key] = obj2[key];\n    }\n  };\n  Util.getInheritableProperty = function Util_getInheritableProperty(dict, name, getArray) {\n    while (dict && !dict.has(name)) {\n      dict = dict.get('Parent');\n    }\n    if (!dict) {\n      return null;\n    }\n    return getArray ? dict.getArray(name) : dict.get(name);\n  };\n  Util.inherit = function Util_inherit(sub, base, prototype) {\n    sub.prototype = Object.create(base.prototype);\n    sub.prototype.constructor = sub;\n    for (var prop in prototype) {\n      sub.prototype[prop] = prototype[prop];\n    }\n  };\n  Util.loadScript = function Util_loadScript(src, callback) {\n    var script = document.createElement('script');\n    var loaded = false;\n    script.setAttribute('src', src);\n    if (callback) {\n      script.onload = function () {\n        if (!loaded) {\n          callback();\n        }\n        loaded = true;\n      };\n    }\n    document.getElementsByTagName('head')[0].appendChild(script);\n  };\n  return Util;\n}();\nvar PageViewport = function PageViewportClosure() {\n  function PageViewport(viewBox, scale, rotation, offsetX, offsetY, dontFlip) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n    var centerX = (viewBox[2] + viewBox[0]) / 2;\n    var centerY = (viewBox[3] + viewBox[1]) / 2;\n    var rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      default:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n    }\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n    var offsetCanvasX, offsetCanvasY;\n    var width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n    this.width = width;\n    this.height = height;\n    this.fontScale = scale;\n  }\n  PageViewport.prototype = {\n    clone: function PageViewPort_clone(args) {\n      args = args || {};\n      var scale = 'scale' in args ? args.scale : this.scale;\n      var rotation = 'rotation' in args ? args.rotation : this.rotation;\n      return new PageViewport(this.viewBox.slice(), scale, rotation, this.offsetX, this.offsetY, args.dontFlip);\n    },\n    convertToViewportPoint: function PageViewport_convertToViewportPoint(x, y) {\n      return Util.applyTransform([x, y], this.transform);\n    },\n    convertToViewportRectangle: function PageViewport_convertToViewportRectangle(rect) {\n      var tl = Util.applyTransform([rect[0], rect[1]], this.transform);\n      var br = Util.applyTransform([rect[2], rect[3]], this.transform);\n      return [tl[0], tl[1], br[0], br[1]];\n    },\n    convertToPdfPoint: function PageViewport_convertToPdfPoint(x, y) {\n      return Util.applyInverseTransform([x, y], this.transform);\n    }\n  };\n  return PageViewport;\n}();\nvar PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\nfunction stringToPDFString(str) {\n  var i,\n      n = str.length,\n      strBuf = [];\n  if (str[0] === '\\xFE' && str[1] === '\\xFF') {\n    for (i = 2; i < n; i += 2) {\n      strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n    }\n  } else {\n    for (i = 0; i < n; ++i) {\n      var code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join('');\n}\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\nfunction isEmptyObj(obj) {\n  for (var key in obj) {\n    return false;\n  }\n  return true;\n}\nfunction isBool(v) {\n  return typeof v === 'boolean';\n}\nfunction isNum(v) {\n  return typeof v === 'number';\n}\nfunction isString(v) {\n  return typeof v === 'string';\n}\nfunction isArrayBuffer(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.byteLength !== undefined;\n}\nfunction isSpace(ch) {\n  return ch === 0x20 || ch === 0x09 || ch === 0x0D || ch === 0x0A;\n}\nfunction isNodeJS() {\n  return (typeof process === 'undefined' ? 'undefined' : _typeof(process)) === 'object' && process + '' === '[object process]';\n}\nfunction createPromiseCapability() {\n  var capability = {};\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = resolve;\n    capability.reject = reject;\n  });\n  return capability;\n}\nvar StatTimer = function StatTimerClosure() {\n  function rpad(str, pad, length) {\n    while (str.length < length) {\n      str += pad;\n    }\n    return str;\n  }\n  function StatTimer() {\n    this.started = Object.create(null);\n    this.times = [];\n    this.enabled = true;\n  }\n  StatTimer.prototype = {\n    time: function StatTimer_time(name) {\n      if (!this.enabled) {\n        return;\n      }\n      if (name in this.started) {\n        warn('Timer is already running for ' + name);\n      }\n      this.started[name] = Date.now();\n    },\n    timeEnd: function StatTimer_timeEnd(name) {\n      if (!this.enabled) {\n        return;\n      }\n      if (!(name in this.started)) {\n        warn('Timer has not been started for ' + name);\n      }\n      this.times.push({\n        'name': name,\n        'start': this.started[name],\n        'end': Date.now()\n      });\n      delete this.started[name];\n    },\n    toString: function StatTimer_toString() {\n      var i, ii;\n      var times = this.times;\n      var out = '';\n      var longest = 0;\n      for (i = 0, ii = times.length; i < ii; ++i) {\n        var name = times[i]['name'];\n        if (name.length > longest) {\n          longest = name.length;\n        }\n      }\n      for (i = 0, ii = times.length; i < ii; ++i) {\n        var span = times[i];\n        var duration = span.end - span.start;\n        out += rpad(span['name'], ' ', longest) + ' ' + duration + 'ms\\n';\n      }\n      return out;\n    }\n  };\n  return StatTimer;\n}();\nvar createBlob = function createBlob(data, contentType) {\n  if (typeof Blob !== 'undefined') {\n    return new Blob([data], { type: contentType });\n  }\n  throw new Error('The \"Blob\" constructor is not supported.');\n};\nvar createObjectURL = function createObjectURLClosure() {\n  var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  return function createObjectURL(data, contentType) {\n    var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (!forceDataSchema && URL.createObjectURL) {\n      var blob = createBlob(data, contentType);\n      return URL.createObjectURL(blob);\n    }\n    var buffer = 'data:' + contentType + ';base64,';\n    for (var i = 0, ii = data.length; i < ii; i += 3) {\n      var b1 = data[i] & 0xFF;\n      var b2 = data[i + 1] & 0xFF;\n      var b3 = data[i + 2] & 0xFF;\n      var d1 = b1 >> 2,\n          d2 = (b1 & 3) << 4 | b2 >> 4;\n      var d3 = i + 1 < ii ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\n      var d4 = i + 2 < ii ? b3 & 0x3F : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n}();\nfunction resolveCall(fn, args) {\n  var thisArg = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  if (!fn) {\n    return Promise.resolve(undefined);\n  }\n  return new Promise(function (resolve, reject) {\n    resolve(fn.apply(thisArg, args));\n  });\n}\nfunction wrapReason(reason) {\n  if ((typeof reason === 'undefined' ? 'undefined' : _typeof(reason)) !== 'object') {\n    return reason;\n  }\n  switch (reason.name) {\n    case 'AbortException':\n      return new AbortException(reason.message);\n    case 'MissingPDFException':\n      return new MissingPDFException(reason.message);\n    case 'UnexpectedResponseException':\n      return new UnexpectedResponseException(reason.message, reason.status);\n    default:\n      return new UnknownErrorException(reason.message, reason.details);\n  }\n}\nfunction makeReasonSerializable(reason) {\n  if (!(reason instanceof Error) || reason instanceof AbortException || reason instanceof MissingPDFException || reason instanceof UnexpectedResponseException || reason instanceof UnknownErrorException) {\n    return reason;\n  }\n  return new UnknownErrorException(reason.message, reason.toString());\n}\nfunction resolveOrReject(capability, success, reason) {\n  if (success) {\n    capability.resolve();\n  } else {\n    capability.reject(reason);\n  }\n}\nfunction finalize(promise) {\n  return Promise.resolve(promise).catch(function () {});\n}\nfunction MessageHandler(sourceName, targetName, comObj) {\n  var _this = this;\n\n  this.sourceName = sourceName;\n  this.targetName = targetName;\n  this.comObj = comObj;\n  this.callbackId = 1;\n  this.streamId = 1;\n  this.postMessageTransfers = true;\n  this.streamSinks = Object.create(null);\n  this.streamControllers = Object.create(null);\n  var callbacksCapabilities = this.callbacksCapabilities = Object.create(null);\n  var ah = this.actionHandler = Object.create(null);\n  this._onComObjOnMessage = function (event) {\n    var data = event.data;\n    if (data.targetName !== _this.sourceName) {\n      return;\n    }\n    if (data.stream) {\n      _this._processStreamMessage(data);\n    } else if (data.isReply) {\n      var callbackId = data.callbackId;\n      if (data.callbackId in callbacksCapabilities) {\n        var callback = callbacksCapabilities[callbackId];\n        delete callbacksCapabilities[callbackId];\n        if ('error' in data) {\n          callback.reject(wrapReason(data.error));\n        } else {\n          callback.resolve(data.data);\n        }\n      } else {\n        throw new Error('Cannot resolve callback ' + callbackId);\n      }\n    } else if (data.action in ah) {\n      var action = ah[data.action];\n      if (data.callbackId) {\n        var _sourceName = _this.sourceName;\n        var _targetName = data.sourceName;\n        Promise.resolve().then(function () {\n          return action[0].call(action[1], data.data);\n        }).then(function (result) {\n          comObj.postMessage({\n            sourceName: _sourceName,\n            targetName: _targetName,\n            isReply: true,\n            callbackId: data.callbackId,\n            data: result\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName: _sourceName,\n            targetName: _targetName,\n            isReply: true,\n            callbackId: data.callbackId,\n            error: makeReasonSerializable(reason)\n          });\n        });\n      } else if (data.streamId) {\n        _this._createStreamSink(data);\n      } else {\n        action[0].call(action[1], data.data);\n      }\n    } else {\n      throw new Error('Unknown action from worker: ' + data.action);\n    }\n  };\n  comObj.addEventListener('message', this._onComObjOnMessage);\n}\nMessageHandler.prototype = {\n  on: function on(actionName, handler, scope) {\n    var ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error('There is already an actionName called \"' + actionName + '\"');\n    }\n    ah[actionName] = [handler, scope];\n  },\n  send: function send(actionName, data, transfers) {\n    var message = {\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data: data\n    };\n    this.postMessage(message, transfers);\n  },\n  sendWithPromise: function sendWithPromise(actionName, data, transfers) {\n    var callbackId = this.callbackId++;\n    var message = {\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data: data,\n      callbackId: callbackId\n    };\n    var capability = createPromiseCapability();\n    this.callbacksCapabilities[callbackId] = capability;\n    try {\n      this.postMessage(message, transfers);\n    } catch (e) {\n      capability.reject(e);\n    }\n    return capability.promise;\n  },\n  sendWithStream: function sendWithStream(actionName, data, queueingStrategy, transfers) {\n    var _this2 = this;\n\n    var streamId = this.streamId++;\n    var sourceName = this.sourceName;\n    var targetName = this.targetName;\n    return new _streams_polyfill.ReadableStream({\n      start: function start(controller) {\n        var startCapability = createPromiseCapability();\n        _this2.streamControllers[streamId] = {\n          controller: controller,\n          startCall: startCapability,\n          isClosed: false\n        };\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          action: actionName,\n          streamId: streamId,\n          data: data,\n          desiredSize: controller.desiredSize\n        });\n        return startCapability.promise;\n      },\n      pull: function pull(controller) {\n        var pullCapability = createPromiseCapability();\n        _this2.streamControllers[streamId].pullCall = pullCapability;\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          stream: 'pull',\n          streamId: streamId,\n          desiredSize: controller.desiredSize\n        });\n        return pullCapability.promise;\n      },\n      cancel: function cancel(reason) {\n        var cancelCapability = createPromiseCapability();\n        _this2.streamControllers[streamId].cancelCall = cancelCapability;\n        _this2.streamControllers[streamId].isClosed = true;\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          stream: 'cancel',\n          reason: reason,\n          streamId: streamId\n        });\n        return cancelCapability.promise;\n      }\n    }, queueingStrategy);\n  },\n  _createStreamSink: function _createStreamSink(data) {\n    var _this3 = this;\n\n    var self = this;\n    var action = this.actionHandler[data.action];\n    var streamId = data.streamId;\n    var desiredSize = data.desiredSize;\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    var capability = createPromiseCapability();\n    var sendStreamRequest = function sendStreamRequest(_ref) {\n      var stream = _ref.stream,\n          chunk = _ref.chunk,\n          transfers = _ref.transfers,\n          success = _ref.success,\n          reason = _ref.reason;\n\n      _this3.postMessage({\n        sourceName: sourceName,\n        targetName: targetName,\n        stream: stream,\n        streamId: streamId,\n        chunk: chunk,\n        success: success,\n        reason: reason\n      }, transfers);\n    };\n    var streamSink = {\n      enqueue: function enqueue(chunk) {\n        var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n        var transfers = arguments[2];\n\n        if (this.isCancelled) {\n          return;\n        }\n        var lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        sendStreamRequest({\n          stream: 'enqueue',\n          chunk: chunk,\n          transfers: transfers\n        });\n      },\n      close: function close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        sendStreamRequest({ stream: 'close' });\n        delete self.streamSinks[streamId];\n      },\n      error: function error(reason) {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        sendStreamRequest({\n          stream: 'error',\n          reason: reason\n        });\n      },\n\n      sinkCapability: capability,\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: desiredSize,\n      ready: null\n    };\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    resolveCall(action[0], [data.data, streamSink], action[1]).then(function () {\n      sendStreamRequest({\n        stream: 'start_complete',\n        success: true\n      });\n    }, function (reason) {\n      sendStreamRequest({\n        stream: 'start_complete',\n        success: false,\n        reason: reason\n      });\n    });\n  },\n  _processStreamMessage: function _processStreamMessage(data) {\n    var _this4 = this;\n\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    var streamId = data.streamId;\n    var sendStreamResponse = function sendStreamResponse(_ref2) {\n      var stream = _ref2.stream,\n          success = _ref2.success,\n          reason = _ref2.reason;\n\n      _this4.comObj.postMessage({\n        sourceName: sourceName,\n        targetName: targetName,\n        stream: stream,\n        success: success,\n        streamId: streamId,\n        reason: reason\n      });\n    };\n    var deleteStreamController = function deleteStreamController() {\n      Promise.all([_this4.streamControllers[data.streamId].startCall, _this4.streamControllers[data.streamId].pullCall, _this4.streamControllers[data.streamId].cancelCall].map(function (capability) {\n        return capability && finalize(capability.promise);\n      })).then(function () {\n        delete _this4.streamControllers[data.streamId];\n      });\n    };\n    switch (data.stream) {\n      case 'start_complete':\n        resolveOrReject(this.streamControllers[data.streamId].startCall, data.success, wrapReason(data.reason));\n        break;\n      case 'pull_complete':\n        resolveOrReject(this.streamControllers[data.streamId].pullCall, data.success, wrapReason(data.reason));\n        break;\n      case 'pull':\n        if (!this.streamSinks[data.streamId]) {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: true\n          });\n          break;\n        }\n        if (this.streamSinks[data.streamId].desiredSize <= 0 && data.desiredSize > 0) {\n          this.streamSinks[data.streamId].sinkCapability.resolve();\n        }\n        this.streamSinks[data.streamId].desiredSize = data.desiredSize;\n        resolveCall(this.streamSinks[data.streamId].onPull).then(function () {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: true\n          });\n        }, function (reason) {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: false,\n            reason: reason\n          });\n        });\n        break;\n      case 'enqueue':\n        assert(this.streamControllers[data.streamId], 'enqueue should have stream controller');\n        if (!this.streamControllers[data.streamId].isClosed) {\n          this.streamControllers[data.streamId].controller.enqueue(data.chunk);\n        }\n        break;\n      case 'close':\n        assert(this.streamControllers[data.streamId], 'close should have stream controller');\n        if (this.streamControllers[data.streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[data.streamId].isClosed = true;\n        this.streamControllers[data.streamId].controller.close();\n        deleteStreamController();\n        break;\n      case 'error':\n        assert(this.streamControllers[data.streamId], 'error should have stream controller');\n        this.streamControllers[data.streamId].controller.error(wrapReason(data.reason));\n        deleteStreamController();\n        break;\n      case 'cancel_complete':\n        resolveOrReject(this.streamControllers[data.streamId].cancelCall, data.success, wrapReason(data.reason));\n        deleteStreamController();\n        break;\n      case 'cancel':\n        if (!this.streamSinks[data.streamId]) {\n          break;\n        }\n        resolveCall(this.streamSinks[data.streamId].onCancel, [wrapReason(data.reason)]).then(function () {\n          sendStreamResponse({\n            stream: 'cancel_complete',\n            success: true\n          });\n        }, function (reason) {\n          sendStreamResponse({\n            stream: 'cancel_complete',\n            success: false,\n            reason: reason\n          });\n        });\n        this.streamSinks[data.streamId].sinkCapability.reject(wrapReason(data.reason));\n        this.streamSinks[data.streamId].isCancelled = true;\n        delete this.streamSinks[data.streamId];\n        break;\n      default:\n        throw new Error('Unexpected stream case');\n    }\n  },\n  postMessage: function postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  },\n  destroy: function destroy() {\n    this.comObj.removeEventListener('message', this._onComObjOnMessage);\n  }\n};\nfunction loadJpegStream(id, imageUrl, objs) {\n  var img = new Image();\n  img.onload = function loadJpegStream_onloadClosure() {\n    objs.resolve(id, img);\n  };\n  img.onerror = function loadJpegStream_onerrorClosure() {\n    objs.resolve(id, null);\n    warn('Error during JPEG image loading');\n  };\n  img.src = imageUrl;\n}\nexports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\nexports.IDENTITY_MATRIX = IDENTITY_MATRIX;\nexports.OPS = OPS;\nexports.VERBOSITY_LEVELS = VERBOSITY_LEVELS;\nexports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\nexports.AnnotationBorderStyleType = AnnotationBorderStyleType;\nexports.AnnotationFieldFlag = AnnotationFieldFlag;\nexports.AnnotationFlag = AnnotationFlag;\nexports.AnnotationType = AnnotationType;\nexports.FontType = FontType;\nexports.ImageKind = ImageKind;\nexports.CMapCompressionType = CMapCompressionType;\nexports.AbortException = AbortException;\nexports.InvalidPDFException = InvalidPDFException;\nexports.MessageHandler = MessageHandler;\nexports.MissingDataException = MissingDataException;\nexports.MissingPDFException = MissingPDFException;\nexports.NativeImageDecoding = NativeImageDecoding;\nexports.NotImplementedException = NotImplementedException;\nexports.PageViewport = PageViewport;\nexports.PasswordException = PasswordException;\nexports.PasswordResponses = PasswordResponses;\nexports.StatTimer = StatTimer;\nexports.StreamType = StreamType;\nexports.TextRenderingMode = TextRenderingMode;\nexports.UnexpectedResponseException = UnexpectedResponseException;\nexports.UnknownErrorException = UnknownErrorException;\nexports.Util = Util;\nexports.XRefParseException = XRefParseException;\nexports.FormatError = FormatError;\nexports.arrayByteLength = arrayByteLength;\nexports.arraysToBytes = arraysToBytes;\nexports.assert = assert;\nexports.bytesToString = bytesToString;\nexports.createBlob = createBlob;\nexports.createPromiseCapability = createPromiseCapability;\nexports.createObjectURL = createObjectURL;\nexports.deprecated = deprecated;\nexports.getLookupTableFactory = getLookupTableFactory;\nexports.getVerbosityLevel = getVerbosityLevel;\nexports.info = info;\nexports.isArrayBuffer = isArrayBuffer;\nexports.isBool = isBool;\nexports.isEmptyObj = isEmptyObj;\nexports.isNum = isNum;\nexports.isString = isString;\nexports.isSpace = isSpace;\nexports.isNodeJS = isNodeJS;\nexports.isSameOrigin = isSameOrigin;\nexports.createValidAbsoluteUrl = createValidAbsoluteUrl;\nexports.isLittleEndian = isLittleEndian;\nexports.isEvalSupported = isEvalSupported;\nexports.loadJpegStream = loadJpegStream;\nexports.log2 = log2;\nexports.readInt8 = readInt8;\nexports.readUint16 = readUint16;\nexports.readUint32 = readUint32;\nexports.removeNullCharacters = removeNullCharacters;\nexports.ReadableStream = _streams_polyfill.ReadableStream;\nexports.setVerbosityLevel = setVerbosityLevel;\nexports.shadow = shadow;\nexports.string32 = string32;\nexports.stringToBytes = stringToBytes;\nexports.stringToPDFString = stringToPDFString;\nexports.stringToUTF8String = stringToUTF8String;\nexports.utf8StringToString = utf8StringToString;\nexports.warn = warn;\nexports.unreachable = unreachable;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif (typeof __g == 'number') __g = global;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar EOF = {};\nvar Name = function NameClosure() {\n  function Name(name) {\n    this.name = name;\n  }\n  Name.prototype = {};\n  var nameCache = Object.create(null);\n  Name.get = function Name_get(name) {\n    var nameValue = nameCache[name];\n    return nameValue ? nameValue : nameCache[name] = new Name(name);\n  };\n  return Name;\n}();\nvar Cmd = function CmdClosure() {\n  function Cmd(cmd) {\n    this.cmd = cmd;\n  }\n  Cmd.prototype = {};\n  var cmdCache = Object.create(null);\n  Cmd.get = function Cmd_get(cmd) {\n    var cmdValue = cmdCache[cmd];\n    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n  };\n  return Cmd;\n}();\nvar Dict = function DictClosure() {\n  var nonSerializable = function nonSerializableClosure() {\n    return nonSerializable;\n  };\n  function Dict(xref) {\n    this._map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable;\n  }\n  Dict.prototype = {\n    assignXref: function Dict_assignXref(newXref) {\n      this.xref = newXref;\n    },\n    get: function Dict_get(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      value = this._map[key3] || null;\n      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n    },\n    getAsync: function Dict_getAsync(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      value = this._map[key3] || null;\n      if (xref) {\n        return xref.fetchIfRefAsync(value, suppressEncryption);\n      }\n      return Promise.resolve(value);\n    },\n    getArray: function Dict_getArray(key1, key2, key3) {\n      var value = this.get(key1, key2, key3);\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (!Array.isArray(value) || !xref) {\n        return value;\n      }\n      value = value.slice();\n      for (var i = 0, ii = value.length; i < ii; i++) {\n        if (!isRef(value[i])) {\n          continue;\n        }\n        value[i] = xref.fetch(value[i], suppressEncryption);\n      }\n      return value;\n    },\n    getRaw: function Dict_getRaw(key) {\n      return this._map[key];\n    },\n    getKeys: function Dict_getKeys() {\n      return Object.keys(this._map);\n    },\n    set: function Dict_set(key, value) {\n      this._map[key] = value;\n    },\n    has: function Dict_has(key) {\n      return key in this._map;\n    },\n    forEach: function Dict_forEach(callback) {\n      for (var key in this._map) {\n        callback(key, this.get(key));\n      }\n    }\n  };\n  Dict.empty = new Dict(null);\n  Dict.merge = function (xref, dictArray) {\n    var mergedDict = new Dict(xref);\n    for (var i = 0, ii = dictArray.length; i < ii; i++) {\n      var dict = dictArray[i];\n      if (!isDict(dict)) {\n        continue;\n      }\n      for (var keyName in dict._map) {\n        if (mergedDict._map[keyName] !== undefined) {\n          continue;\n        }\n        mergedDict._map[keyName] = dict._map[keyName];\n      }\n    }\n    return mergedDict;\n  };\n  return Dict;\n}();\nvar Ref = function RefClosure() {\n  function Ref(num, gen) {\n    this.num = num;\n    this.gen = gen;\n  }\n  Ref.prototype = {\n    toString: function Ref_toString() {\n      var str = this.num + 'R';\n      if (this.gen !== 0) {\n        str += this.gen;\n      }\n      return str;\n    }\n  };\n  return Ref;\n}();\nvar RefSet = function RefSetClosure() {\n  function RefSet() {\n    this.dict = Object.create(null);\n  }\n  RefSet.prototype = {\n    has: function RefSet_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSet_put(ref) {\n      this.dict[ref.toString()] = true;\n    },\n    remove: function RefSet_remove(ref) {\n      delete this.dict[ref.toString()];\n    }\n  };\n  return RefSet;\n}();\nvar RefSetCache = function RefSetCacheClosure() {\n  function RefSetCache() {\n    this.dict = Object.create(null);\n  }\n  RefSetCache.prototype = {\n    get: function RefSetCache_get(ref) {\n      return this.dict[ref.toString()];\n    },\n    has: function RefSetCache_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSetCache_put(ref, obj) {\n      this.dict[ref.toString()] = obj;\n    },\n    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n      this.dict[ref.toString()] = this.get(aliasRef);\n    },\n    forEach: function RefSetCache_forEach(fn, thisArg) {\n      for (var i in this.dict) {\n        fn.call(thisArg, this.dict[i]);\n      }\n    },\n    clear: function RefSetCache_clear() {\n      this.dict = Object.create(null);\n    }\n  };\n  return RefSetCache;\n}();\nfunction isEOF(v) {\n  return v === EOF;\n}\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\nfunction isDict(v, type) {\n  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n}\nfunction isRef(v) {\n  return v instanceof Ref;\n}\nfunction isRefsEqual(v1, v2) {\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\nfunction isStream(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\n}\nexports.EOF = EOF;\nexports.Cmd = Cmd;\nexports.Dict = Dict;\nexports.Name = Name;\nexports.Ref = Ref;\nexports.RefSet = RefSet;\nexports.RefSetCache = RefSetCache;\nexports.isEOF = isEOF;\nexports.isCmd = isCmd;\nexports.isDict = isDict;\nexports.isName = isName;\nexports.isRef = isRef;\nexports.isRefsEqual = isRefsEqual;\nexports.isStream = isStream;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function (it) {\n  return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) === 'object' ? it !== null : typeof it === 'function';\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar store = __w_pdfjs_require__(54)('wks');\nvar uid = __w_pdfjs_require__(17);\nvar _Symbol = __w_pdfjs_require__(1).Symbol;\nvar USE_SYMBOL = typeof _Symbol == 'function';\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] = USE_SYMBOL && _Symbol[name] || (USE_SYMBOL ? _Symbol : uid)('Symbol.' + name));\n};\n$exports.store = store;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.JpxStream = exports.JpegStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _jpg = __w_pdfjs_require__(129);\n\nvar _jpx = __w_pdfjs_require__(74);\n\nvar Stream = function StreamClosure() {\n  function Stream(arrayBuffer, start, length, dict) {\n    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n    this.start = start || 0;\n    this.pos = this.start;\n    this.end = start + length || this.bytes.length;\n    this.dict = dict;\n  }\n  Stream.prototype = {\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function Stream_getByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.bytes[this.pos++];\n    },\n    getUint16: function Stream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function Stream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function Stream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function Stream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function Stream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    skip: function Stream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function Stream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function Stream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function Stream_makeSubStream(start, length, dict) {\n      return new Stream(this.bytes.buffer, start, length, dict);\n    }\n  };\n  return Stream;\n}();\nvar StringStream = function StringStreamClosure() {\n  function StringStream(str) {\n    var bytes = (0, _util.stringToBytes)(str);\n    Stream.call(this, bytes);\n  }\n  StringStream.prototype = Stream.prototype;\n  return StringStream;\n}();\nvar DecodeStream = function DecodeStreamClosure() {\n  var emptyBuffer = new Uint8Array(0);\n  function DecodeStream(maybeMinBufferLength) {\n    this.pos = 0;\n    this.bufferLength = 0;\n    this.eof = false;\n    this.buffer = emptyBuffer;\n    this.minBufferLength = 512;\n    if (maybeMinBufferLength) {\n      while (this.minBufferLength < maybeMinBufferLength) {\n        this.minBufferLength *= 2;\n      }\n    }\n  }\n  DecodeStream.prototype = {\n    get isEmpty() {\n      while (!this.eof && this.bufferLength === 0) {\n        this.readBlock();\n      }\n      return this.bufferLength === 0;\n    },\n    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n      var buffer = this.buffer;\n      if (requested <= buffer.byteLength) {\n        return buffer;\n      }\n      var size = this.minBufferLength;\n      while (size < requested) {\n        size *= 2;\n      }\n      var buffer2 = new Uint8Array(size);\n      buffer2.set(buffer);\n      return this.buffer = buffer2;\n    },\n    getByte: function DecodeStream_getByte() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) {\n          return -1;\n        }\n        this.readBlock();\n      }\n      return this.buffer[this.pos++];\n    },\n    getUint16: function DecodeStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function DecodeStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function DecodeStream_getBytes(length) {\n      var end,\n          pos = this.pos;\n      if (length) {\n        this.ensureBuffer(pos + length);\n        end = pos + length;\n        while (!this.eof && this.bufferLength < end) {\n          this.readBlock();\n        }\n        var bufEnd = this.bufferLength;\n        if (end > bufEnd) {\n          end = bufEnd;\n        }\n      } else {\n        while (!this.eof) {\n          this.readBlock();\n        }\n        end = this.bufferLength;\n      }\n      this.pos = end;\n      return this.buffer.subarray(pos, end);\n    },\n    peekByte: function DecodeStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function DecodeStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n      var end = start + length;\n      while (this.bufferLength <= end && !this.eof) {\n        this.readBlock();\n      }\n      return new Stream(this.buffer, start, length, dict);\n    },\n    skip: function DecodeStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function DecodeStream_reset() {\n      this.pos = 0;\n    },\n    getBaseStreams: function DecodeStream_getBaseStreams() {\n      if (this.str && this.str.getBaseStreams) {\n        return this.str.getBaseStreams();\n      }\n      return [];\n    }\n  };\n  return DecodeStream;\n}();\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n  function StreamsSequenceStream(streams) {\n    this.streams = streams;\n    DecodeStream.call(this, null);\n  }\n  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n    var streams = this.streams;\n    if (streams.length === 0) {\n      this.eof = true;\n      return;\n    }\n    var stream = streams.shift();\n    var chunk = stream.getBytes();\n    var bufferLength = this.bufferLength;\n    var newLength = bufferLength + chunk.length;\n    var buffer = this.ensureBuffer(newLength);\n    buffer.set(chunk, bufferLength);\n    this.bufferLength = newLength;\n  };\n  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n    var baseStreams = [];\n    for (var i = 0, ii = this.streams.length; i < ii; i++) {\n      var stream = this.streams[i];\n      if (stream.getBaseStreams) {\n        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\n      }\n    }\n    return baseStreams;\n  };\n  return StreamsSequenceStream;\n}();\nvar FlateStream = function FlateStreamClosure() {\n  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\n  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\n  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\n  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\n  function FlateStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    var cmf = str.getByte();\n    var flg = str.getByte();\n    if (cmf === -1 || flg === -1) {\n      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\n    }\n    if ((cmf & 0x0f) !== 0x08) {\n      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (((cmf << 8) + flg) % 31 !== 0) {\n      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (flg & 0x20) {\n      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n    }\n    this.codeSize = 0;\n    this.codeBuf = 0;\n    DecodeStream.call(this, maybeLength);\n  }\n  FlateStream.prototype = Object.create(DecodeStream.prototype);\n  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n    var str = this.str;\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < bits) {\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad encoding in flate stream');\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    b = codeBuf & (1 << bits) - 1;\n    this.codeBuf = codeBuf >> bits;\n    this.codeSize = codeSize -= bits;\n    return b;\n  };\n  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n    var str = this.str;\n    var codes = table[0];\n    var maxLen = table[1];\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < maxLen) {\n      if ((b = str.getByte()) === -1) {\n        break;\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    var code = codes[codeBuf & (1 << maxLen) - 1];\n    var codeLen = code >> 16;\n    var codeVal = code & 0xffff;\n    if (codeLen < 1 || codeSize < codeLen) {\n      throw new _util.FormatError('Bad encoding in flate stream');\n    }\n    this.codeBuf = codeBuf >> codeLen;\n    this.codeSize = codeSize - codeLen;\n    return codeVal;\n  };\n  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n    var n = lengths.length;\n    var maxLen = 0;\n    var i;\n    for (i = 0; i < n; ++i) {\n      if (lengths[i] > maxLen) {\n        maxLen = lengths[i];\n      }\n    }\n    var size = 1 << maxLen;\n    var codes = new Int32Array(size);\n    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n      for (var val = 0; val < n; ++val) {\n        if (lengths[val] === len) {\n          var code2 = 0;\n          var t = code;\n          for (i = 0; i < len; ++i) {\n            code2 = code2 << 1 | t & 1;\n            t >>= 1;\n          }\n          for (i = code2; i < size; i += skip) {\n            codes[i] = len << 16 | val;\n          }\n          ++code;\n        }\n      }\n    }\n    return [codes, maxLen];\n  };\n  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n    var buffer, len;\n    var str = this.str;\n    var hdr = this.getBits(3);\n    if (hdr & 1) {\n      this.eof = true;\n    }\n    hdr >>= 1;\n    if (hdr === 0) {\n      var b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var blockLen = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      blockLen |= b << 8;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var check = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      check |= b << 8;\n      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n        throw new _util.FormatError('Bad uncompressed block length in flate stream');\n      }\n      this.codeBuf = 0;\n      this.codeSize = 0;\n      var bufferLength = this.bufferLength;\n      buffer = this.ensureBuffer(bufferLength + blockLen);\n      var end = bufferLength + blockLen;\n      this.bufferLength = end;\n      if (blockLen === 0) {\n        if (str.peekByte() === -1) {\n          this.eof = true;\n        }\n      } else {\n        for (var n = bufferLength; n < end; ++n) {\n          if ((b = str.getByte()) === -1) {\n            this.eof = true;\n            break;\n          }\n          buffer[n] = b;\n        }\n      }\n      return;\n    }\n    var litCodeTable;\n    var distCodeTable;\n    if (hdr === 1) {\n      litCodeTable = fixedLitCodeTab;\n      distCodeTable = fixedDistCodeTab;\n    } else if (hdr === 2) {\n      var numLitCodes = this.getBits(5) + 257;\n      var numDistCodes = this.getBits(5) + 1;\n      var numCodeLenCodes = this.getBits(4) + 4;\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n      var i;\n      for (i = 0; i < numCodeLenCodes; ++i) {\n        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n      }\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n      len = 0;\n      i = 0;\n      var codes = numLitCodes + numDistCodes;\n      var codeLengths = new Uint8Array(codes);\n      var bitsLength, bitsOffset, what;\n      while (i < codes) {\n        var code = this.getCode(codeLenCodeTab);\n        if (code === 16) {\n          bitsLength = 2;\n          bitsOffset = 3;\n          what = len;\n        } else if (code === 17) {\n          bitsLength = 3;\n          bitsOffset = 3;\n          what = len = 0;\n        } else if (code === 18) {\n          bitsLength = 7;\n          bitsOffset = 11;\n          what = len = 0;\n        } else {\n          codeLengths[i++] = len = code;\n          continue;\n        }\n        var repeatLength = this.getBits(bitsLength) + bitsOffset;\n        while (repeatLength-- > 0) {\n          codeLengths[i++] = what;\n        }\n      }\n      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n    } else {\n      throw new _util.FormatError('Unknown block type in flate stream');\n    }\n    buffer = this.buffer;\n    var limit = buffer ? buffer.length : 0;\n    var pos = this.bufferLength;\n    while (true) {\n      var code1 = this.getCode(litCodeTable);\n      if (code1 < 256) {\n        if (pos + 1 >= limit) {\n          buffer = this.ensureBuffer(pos + 1);\n          limit = buffer.length;\n        }\n        buffer[pos++] = code1;\n        continue;\n      }\n      if (code1 === 256) {\n        this.bufferLength = pos;\n        return;\n      }\n      code1 -= 257;\n      code1 = lengthDecode[code1];\n      var code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      len = (code1 & 0xffff) + code2;\n      code1 = this.getCode(distCodeTable);\n      code1 = distDecode[code1];\n      code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      var dist = (code1 & 0xffff) + code2;\n      if (pos + len >= limit) {\n        buffer = this.ensureBuffer(pos + len);\n        limit = buffer.length;\n      }\n      for (var k = 0; k < len; ++k, ++pos) {\n        buffer[pos] = buffer[pos - dist];\n      }\n    }\n  };\n  return FlateStream;\n}();\nvar PredictorStream = function PredictorStreamClosure() {\n  function PredictorStream(str, maybeLength, params) {\n    if (!(0, _primitives.isDict)(params)) {\n      return str;\n    }\n    var predictor = this.predictor = params.get('Predictor') || 1;\n    if (predictor <= 1) {\n      return str;\n    }\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n      throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    if (predictor === 2) {\n      this.readBlock = this.readBlockTiff;\n    } else {\n      this.readBlock = this.readBlockPng;\n    }\n    this.str = str;\n    this.dict = str.dict;\n    var colors = this.colors = params.get('Colors') || 1;\n    var bits = this.bits = params.get('BitsPerComponent') || 8;\n    var columns = this.columns = params.get('Columns') || 1;\n    this.pixBytes = colors * bits + 7 >> 3;\n    this.rowBytes = columns * colors * bits + 7 >> 3;\n    DecodeStream.call(this, maybeLength);\n    return this;\n  }\n  PredictorStream.prototype = Object.create(DecodeStream.prototype);\n  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n    var rowBytes = this.rowBytes;\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var bits = this.bits;\n    var colors = this.colors;\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var inbuf = 0,\n        outbuf = 0;\n    var inbits = 0,\n        outbits = 0;\n    var pos = bufferLength;\n    var i;\n    if (bits === 1 && colors === 1) {\n      for (i = 0; i < rowBytes; ++i) {\n        var c = rawBytes[i] ^ inbuf;\n        c ^= c >> 1;\n        c ^= c >> 2;\n        c ^= c >> 4;\n        inbuf = (c & 1) << 7;\n        buffer[pos++] = c;\n      }\n    } else if (bits === 8) {\n      for (i = 0; i < colors; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; ++i) {\n        buffer[pos] = buffer[pos - colors] + rawBytes[i];\n        pos++;\n      }\n    } else if (bits === 16) {\n      var bytesPerPixel = colors * 2;\n      for (i = 0; i < bytesPerPixel; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; i += 2) {\n        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\n        buffer[pos++] = sum >> 8 & 0xFF;\n        buffer[pos++] = sum & 0xFF;\n      }\n    } else {\n      var compArray = new Uint8Array(colors + 1);\n      var bitMask = (1 << bits) - 1;\n      var j = 0,\n          k = bufferLength;\n      var columns = this.columns;\n      for (i = 0; i < columns; ++i) {\n        for (var kk = 0; kk < colors; ++kk) {\n          if (inbits < bits) {\n            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n            inbits += 8;\n          }\n          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n          inbits -= bits;\n          outbuf = outbuf << bits | compArray[kk];\n          outbits += bits;\n          if (outbits >= 8) {\n            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n            outbits -= 8;\n          }\n        }\n      }\n      if (outbits > 0) {\n        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n      }\n    }\n    this.bufferLength += rowBytes;\n  };\n  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n    var rowBytes = this.rowBytes;\n    var pixBytes = this.pixBytes;\n    var predictor = this.str.getByte();\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n    if (prevRow.length === 0) {\n      prevRow = new Uint8Array(rowBytes);\n    }\n    var i,\n        j = bufferLength,\n        up,\n        c;\n    switch (predictor) {\n      case 0:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        break;\n      case 1:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 2:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n        }\n        break;\n      case 3:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 4:\n        for (i = 0; i < pixBytes; ++i) {\n          up = prevRow[i];\n          c = rawBytes[i];\n          buffer[j++] = up + c;\n        }\n        for (; i < rowBytes; ++i) {\n          up = prevRow[i];\n          var upLeft = prevRow[i - pixBytes];\n          var left = buffer[j - pixBytes];\n          var p = left + up - upLeft;\n          var pa = p - left;\n          if (pa < 0) {\n            pa = -pa;\n          }\n          var pb = p - up;\n          if (pb < 0) {\n            pb = -pb;\n          }\n          var pc = p - upLeft;\n          if (pc < 0) {\n            pc = -pc;\n          }\n          c = rawBytes[i];\n          if (pa <= pb && pa <= pc) {\n            buffer[j++] = left + c;\n          } else if (pb <= pc) {\n            buffer[j++] = up + c;\n          } else {\n            buffer[j++] = upLeft + c;\n          }\n        }\n        break;\n      default:\n        throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    this.bufferLength += rowBytes;\n  };\n  return PredictorStream;\n}();\nvar JpegStream = function JpegStreamClosure() {\n  function JpegStream(stream, maybeLength, dict, params) {\n    var ch;\n    while ((ch = stream.getByte()) !== -1) {\n      if (ch === 0xFF) {\n        stream.skip(-1);\n        break;\n      }\n    }\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    DecodeStream.call(this, maybeLength);\n  }\n  JpegStream.prototype = Object.create(DecodeStream.prototype);\n  Object.defineProperty(JpegStream.prototype, 'bytes', {\n    get: function JpegStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpegStream.prototype.ensureBuffer = function JpegStream_ensureBuffer(req) {\n    if (this.bufferLength) {\n      return;\n    }\n    var jpegImage = new _jpg.JpegImage();\n    var decodeArr = this.dict.getArray('Decode', 'D');\n    if (this.forceRGB && Array.isArray(decodeArr)) {\n      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n      var decodeArrLength = decodeArr.length;\n      var transform = new Int32Array(decodeArrLength);\n      var transformNeeded = false;\n      var maxValue = (1 << bitsPerComponent) - 1;\n      for (var i = 0; i < decodeArrLength; i += 2) {\n        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n        transform[i + 1] = decodeArr[i] * maxValue | 0;\n        if (transform[i] !== 256 || transform[i + 1] !== 0) {\n          transformNeeded = true;\n        }\n      }\n      if (transformNeeded) {\n        jpegImage.decodeTransform = transform;\n      }\n    }\n    if ((0, _primitives.isDict)(this.params)) {\n      var colorTransform = this.params.get('ColorTransform');\n      if (Number.isInteger(colorTransform)) {\n        jpegImage.colorTransform = colorTransform;\n      }\n    }\n    jpegImage.parse(this.bytes);\n    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n    this.buffer = data;\n    this.bufferLength = data.length;\n    this.eof = true;\n  };\n  JpegStream.prototype.getBytes = function JpegStream_getBytes(length) {\n    this.ensureBuffer();\n    return this.buffer;\n  };\n  JpegStream.prototype.getIR = function JpegStream_getIR(forceDataSchema) {\n    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\n  };\n  return JpegStream;\n}();\nvar JpxStream = function JpxStreamClosure() {\n  function JpxStream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    DecodeStream.call(this, maybeLength);\n  }\n  JpxStream.prototype = Object.create(DecodeStream.prototype);\n  Object.defineProperty(JpxStream.prototype, 'bytes', {\n    get: function JpxStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpxStream.prototype.ensureBuffer = function JpxStream_ensureBuffer(req) {\n    if (this.bufferLength) {\n      return;\n    }\n    var jpxImage = new _jpx.JpxImage();\n    jpxImage.parse(this.bytes);\n    var width = jpxImage.width;\n    var height = jpxImage.height;\n    var componentsCount = jpxImage.componentsCount;\n    var tileCount = jpxImage.tiles.length;\n    if (tileCount === 1) {\n      this.buffer = jpxImage.tiles[0].items;\n    } else {\n      var data = new Uint8ClampedArray(width * height * componentsCount);\n      for (var k = 0; k < tileCount; k++) {\n        var tileComponents = jpxImage.tiles[k];\n        var tileWidth = tileComponents.width;\n        var tileHeight = tileComponents.height;\n        var tileLeft = tileComponents.left;\n        var tileTop = tileComponents.top;\n        var src = tileComponents.items;\n        var srcPosition = 0;\n        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n        var imgRowSize = width * componentsCount;\n        var tileRowSize = tileWidth * componentsCount;\n        for (var j = 0; j < tileHeight; j++) {\n          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n          data.set(rowBytes, dataPosition);\n          srcPosition += tileRowSize;\n          dataPosition += imgRowSize;\n        }\n      }\n      this.buffer = data;\n    }\n    this.bufferLength = this.buffer.length;\n    this.eof = true;\n  };\n  return JpxStream;\n}();\nvar DecryptStream = function DecryptStreamClosure() {\n  function DecryptStream(str, maybeLength, decrypt) {\n    this.str = str;\n    this.dict = str.dict;\n    this.decrypt = decrypt;\n    this.nextChunk = null;\n    this.initialized = false;\n    DecodeStream.call(this, maybeLength);\n  }\n  var chunkSize = 512;\n  DecryptStream.prototype = Object.create(DecodeStream.prototype);\n  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n    var chunk;\n    if (this.initialized) {\n      chunk = this.nextChunk;\n    } else {\n      chunk = this.str.getBytes(chunkSize);\n      this.initialized = true;\n    }\n    if (!chunk || chunk.length === 0) {\n      this.eof = true;\n      return;\n    }\n    this.nextChunk = this.str.getBytes(chunkSize);\n    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n    var decrypt = this.decrypt;\n    chunk = decrypt(chunk, !hasMoreData);\n    var bufferLength = this.bufferLength;\n    var i,\n        n = chunk.length;\n    var buffer = this.ensureBuffer(bufferLength + n);\n    for (i = 0; i < n; i++) {\n      buffer[bufferLength++] = chunk[i];\n    }\n    this.bufferLength = bufferLength;\n  };\n  return DecryptStream;\n}();\nvar Ascii85Stream = function Ascii85StreamClosure() {\n  function Ascii85Stream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.input = new Uint8Array(5);\n    if (maybeLength) {\n      maybeLength = 0.8 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n    var TILDA_CHAR = 0x7E;\n    var Z_LOWER_CHAR = 0x7A;\n    var EOF = -1;\n    var str = this.str;\n    var c = str.getByte();\n    while ((0, _util.isSpace)(c)) {\n      c = str.getByte();\n    }\n    if (c === EOF || c === TILDA_CHAR) {\n      this.eof = true;\n      return;\n    }\n    var bufferLength = this.bufferLength,\n        buffer;\n    var i;\n    if (c === Z_LOWER_CHAR) {\n      buffer = this.ensureBuffer(bufferLength + 4);\n      for (i = 0; i < 4; ++i) {\n        buffer[bufferLength + i] = 0;\n      }\n      this.bufferLength += 4;\n    } else {\n      var input = this.input;\n      input[0] = c;\n      for (i = 1; i < 5; ++i) {\n        c = str.getByte();\n        while ((0, _util.isSpace)(c)) {\n          c = str.getByte();\n        }\n        input[i] = c;\n        if (c === EOF || c === TILDA_CHAR) {\n          break;\n        }\n      }\n      buffer = this.ensureBuffer(bufferLength + i - 1);\n      this.bufferLength += i - 1;\n      if (i < 5) {\n        for (; i < 5; ++i) {\n          input[i] = 0x21 + 84;\n        }\n        this.eof = true;\n      }\n      var t = 0;\n      for (i = 0; i < 5; ++i) {\n        t = t * 85 + (input[i] - 0x21);\n      }\n      for (i = 3; i >= 0; --i) {\n        buffer[bufferLength + i] = t & 0xFF;\n        t >>= 8;\n      }\n    }\n  };\n  return Ascii85Stream;\n}();\nvar AsciiHexStream = function AsciiHexStreamClosure() {\n  function AsciiHexStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.firstDigit = -1;\n    if (maybeLength) {\n      maybeLength = 0.5 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n    var UPSTREAM_BLOCK_SIZE = 8000;\n    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n    if (!bytes.length) {\n      this.eof = true;\n      return;\n    }\n    var maxDecodeLength = bytes.length + 1 >> 1;\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n    var bufferLength = this.bufferLength;\n    var firstDigit = this.firstDigit;\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\n      var ch = bytes[i],\n          digit;\n      if (ch >= 0x30 && ch <= 0x39) {\n        digit = ch & 0x0F;\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n        digit = (ch & 0x0F) + 9;\n      } else if (ch === 0x3E) {\n        this.eof = true;\n        break;\n      } else {\n        continue;\n      }\n      if (firstDigit < 0) {\n        firstDigit = digit;\n      } else {\n        buffer[bufferLength++] = firstDigit << 4 | digit;\n        firstDigit = -1;\n      }\n    }\n    if (firstDigit >= 0 && this.eof) {\n      buffer[bufferLength++] = firstDigit << 4;\n      firstDigit = -1;\n    }\n    this.firstDigit = firstDigit;\n    this.bufferLength = bufferLength;\n  };\n  return AsciiHexStream;\n}();\nvar RunLengthStream = function RunLengthStreamClosure() {\n  function RunLengthStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    DecodeStream.call(this, maybeLength);\n  }\n  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n    var repeatHeader = this.str.getBytes(2);\n    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n      this.eof = true;\n      return;\n    }\n    var buffer;\n    var bufferLength = this.bufferLength;\n    var n = repeatHeader[0];\n    if (n < 128) {\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      buffer[bufferLength++] = repeatHeader[1];\n      if (n > 0) {\n        var source = this.str.getBytes(n);\n        buffer.set(source, bufferLength);\n        bufferLength += n;\n      }\n    } else {\n      n = 257 - n;\n      var b = repeatHeader[1];\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      for (var i = 0; i < n; i++) {\n        buffer[bufferLength++] = b;\n      }\n    }\n    this.bufferLength = bufferLength;\n  };\n  return RunLengthStream;\n}();\nvar LZWStream = function LZWStreamClosure() {\n  function LZWStream(str, maybeLength, earlyChange) {\n    this.str = str;\n    this.dict = str.dict;\n    this.cachedData = 0;\n    this.bitsCached = 0;\n    var maxLzwDictionarySize = 4096;\n    var lzwState = {\n      earlyChange: earlyChange,\n      codeLength: 9,\n      nextCode: 258,\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\n      currentSequenceLength: 0\n    };\n    for (var i = 0; i < 256; ++i) {\n      lzwState.dictionaryValues[i] = i;\n      lzwState.dictionaryLengths[i] = 1;\n    }\n    this.lzwState = lzwState;\n    DecodeStream.call(this, maybeLength);\n  }\n  LZWStream.prototype = Object.create(DecodeStream.prototype);\n  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n    var bitsCached = this.bitsCached;\n    var cachedData = this.cachedData;\n    while (bitsCached < n) {\n      var c = this.str.getByte();\n      if (c === -1) {\n        this.eof = true;\n        return null;\n      }\n      cachedData = cachedData << 8 | c;\n      bitsCached += 8;\n    }\n    this.bitsCached = bitsCached -= n;\n    this.cachedData = cachedData;\n    this.lastCode = null;\n    return cachedData >>> bitsCached & (1 << n) - 1;\n  };\n  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n    var blockSize = 512;\n    var estimatedDecodedSize = blockSize * 2,\n        decodedSizeDelta = blockSize;\n    var i, j, q;\n    var lzwState = this.lzwState;\n    if (!lzwState) {\n      return;\n    }\n    var earlyChange = lzwState.earlyChange;\n    var nextCode = lzwState.nextCode;\n    var dictionaryValues = lzwState.dictionaryValues;\n    var dictionaryLengths = lzwState.dictionaryLengths;\n    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n    var codeLength = lzwState.codeLength;\n    var prevCode = lzwState.prevCode;\n    var currentSequence = lzwState.currentSequence;\n    var currentSequenceLength = lzwState.currentSequenceLength;\n    var decodedLength = 0;\n    var currentBufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n    for (i = 0; i < blockSize; i++) {\n      var code = this.readBits(codeLength);\n      var hasPrev = currentSequenceLength > 0;\n      if (code < 256) {\n        currentSequence[0] = code;\n        currentSequenceLength = 1;\n      } else if (code >= 258) {\n        if (code < nextCode) {\n          currentSequenceLength = dictionaryLengths[code];\n          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n            currentSequence[j] = dictionaryValues[q];\n            q = dictionaryPrevCodes[q];\n          }\n        } else {\n          currentSequence[currentSequenceLength++] = currentSequence[0];\n        }\n      } else if (code === 256) {\n        codeLength = 9;\n        nextCode = 258;\n        currentSequenceLength = 0;\n        continue;\n      } else {\n        this.eof = true;\n        delete this.lzwState;\n        break;\n      }\n      if (hasPrev) {\n        dictionaryPrevCodes[nextCode] = prevCode;\n        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n        dictionaryValues[nextCode] = currentSequence[0];\n        nextCode++;\n        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n      }\n      prevCode = code;\n      decodedLength += currentSequenceLength;\n      if (estimatedDecodedSize < decodedLength) {\n        do {\n          estimatedDecodedSize += decodedSizeDelta;\n        } while (estimatedDecodedSize < decodedLength);\n        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n      }\n      for (j = 0; j < currentSequenceLength; j++) {\n        buffer[currentBufferLength++] = currentSequence[j];\n      }\n    }\n    lzwState.nextCode = nextCode;\n    lzwState.codeLength = codeLength;\n    lzwState.prevCode = prevCode;\n    lzwState.currentSequenceLength = currentSequenceLength;\n    this.bufferLength = currentBufferLength;\n  };\n  return LZWStream;\n}();\nvar NullStream = function NullStreamClosure() {\n  function NullStream() {\n    Stream.call(this, new Uint8Array(0));\n  }\n  NullStream.prototype = Stream.prototype;\n  return NullStream;\n}();\nexports.Ascii85Stream = Ascii85Stream;\nexports.AsciiHexStream = AsciiHexStream;\nexports.DecryptStream = DecryptStream;\nexports.DecodeStream = DecodeStream;\nexports.FlateStream = FlateStream;\nexports.JpegStream = JpegStream;\nexports.JpxStream = JpxStream;\nexports.NullStream = NullStream;\nexports.PredictorStream = PredictorStream;\nexports.RunLengthStream = RunLengthStream;\nexports.Stream = Stream;\nexports.StreamsSequenceStream = StreamsSequenceStream;\nexports.StringStream = StringStream;\nexports.LZWStream = LZWStream;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar core = module.exports = { version: '2.5.7' };\nif (typeof __e == 'number') __e = core;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(1);\nvar core = __w_pdfjs_require__(6);\nvar hide = __w_pdfjs_require__(8);\nvar redefine = __w_pdfjs_require__(16);\nvar ctx = __w_pdfjs_require__(13);\nvar PROTOTYPE = 'prototype';\nvar $export = function $export(type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    own = !IS_FORCED && target && target[key] !== undefined;\n    out = (own ? target : source)[key];\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    if (target) redefine(target, key, out, type & $export.U);\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n$export.F = 1;\n$export.G = 2;\n$export.S = 4;\n$export.P = 8;\n$export.B = 16;\n$export.W = 32;\n$export.U = 64;\n$export.R = 128;\nmodule.exports = $export;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar dP = __w_pdfjs_require__(15);\nvar createDesc = __w_pdfjs_require__(29);\nmodule.exports = __w_pdfjs_require__(10) ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = !__w_pdfjs_require__(11)(function () {\n  return Object.defineProperty({}, 'a', {\n    get: function get() {\n      return 7;\n    }\n  }).a != 7;\n});\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar aFunction = __w_pdfjs_require__(22);\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1:\n      return function (a) {\n        return fn.call(that, a);\n      };\n    case 2:\n      return function (a, b) {\n        return fn.call(that, a, b);\n      };\n    case 3:\n      return function (a, b, c) {\n        return fn.call(that, a, b, c);\n      };\n  }\n  return function () {\n    return fn.apply(that, arguments);\n  };\n};\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(18);\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0;\n};\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(9);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(48);\nvar toPrimitive = __w_pdfjs_require__(36);\nvar dP = Object.defineProperty;\nexports.f = __w_pdfjs_require__(10) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) {}\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(1);\nvar hide = __w_pdfjs_require__(8);\nvar has = __w_pdfjs_require__(12);\nvar SRC = __w_pdfjs_require__(17)('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n__w_pdfjs_require__(6).inspectSource = function (it) {\n  return $toString.call(it);\n};\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar defined = __w_pdfjs_require__(38);\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {};\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = false;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar redefine = __w_pdfjs_require__(16);\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    redefine(target, key, src[key], safe);\n  }return target;\n};\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {\n    throw TypeError(name + ': incorrect invocation!');\n  }\n  return it;\n};\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toString = {}.toString;\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar def = __w_pdfjs_require__(15).f;\nvar has = __w_pdfjs_require__(12);\nvar TAG = __w_pdfjs_require__(4)('toStringTag');\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {\n    configurable: true,\n    value: tag\n  });\n};\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorSpace = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar ColorSpace = function ColorSpaceClosure() {\n  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n    var COMPONENTS = 3;\n    alpha01 = alpha01 !== 1 ? 0 : alpha01;\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1 * COMPONENTS;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        newIndex += alpha01;\n      }\n    }\n  }\n  function ColorSpace() {\n    throw new Error('should not call ColorSpace constructor');\n  }\n  ColorSpace.prototype = {\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n      throw new Error('Should not call ColorSpace.getRgbItem');\n    },\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      throw new Error('Should not call ColorSpace.getRgbBuffer');\n    },\n    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n      throw new Error('Should not call ColorSpace.getOutputLength');\n    },\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\n      return false;\n    },\n    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n      var count = originalWidth * originalHeight;\n      var rgbBuf = null;\n      var numComponentColors = 1 << bpc;\n      var needsResizing = originalHeight !== height || originalWidth !== width;\n      var i, ii;\n      if (this.isPassthrough(bpc)) {\n        rgbBuf = comps;\n      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n        var key;\n        for (i = 0; i < numComponentColors; i++) {\n          allColors[i] = i;\n        }\n        var colorMap = new Uint8Array(numComponentColors * 3);\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n        var destPos, rgbPos;\n        if (!needsResizing) {\n          destPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            dest[destPos++] = colorMap[key];\n            dest[destPos++] = colorMap[key + 1];\n            dest[destPos++] = colorMap[key + 2];\n            destPos += alpha01;\n          }\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          rgbPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            rgbBuf[rgbPos++] = colorMap[key];\n            rgbBuf[rgbPos++] = colorMap[key + 1];\n            rgbBuf[rgbPos++] = colorMap[key + 2];\n          }\n        }\n      } else {\n        if (!needsResizing) {\n          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n        }\n      }\n      if (rgbBuf) {\n        if (needsResizing) {\n          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n        } else {\n          rgbPos = 0;\n          destPos = 0;\n          for (i = 0, ii = width * actualHeight; i < ii; i++) {\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            destPos += alpha01;\n          }\n        }\n      }\n    },\n    usesZeroToOneRange: true\n  };\n  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\n    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\n    return ColorSpace.fromIR(IR);\n  };\n  ColorSpace.fromIR = function (IR) {\n    var name = Array.isArray(IR) ? IR[0] : IR;\n    var whitePoint, blackPoint, gamma;\n    switch (name) {\n      case 'DeviceGrayCS':\n        return this.singletons.gray;\n      case 'DeviceRgbCS':\n        return this.singletons.rgb;\n      case 'DeviceCmykCS':\n        return this.singletons.cmyk;\n      case 'CalGrayCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\n      case 'CalRGBCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        var matrix = IR[4];\n        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n      case 'PatternCS':\n        var basePatternCS = IR[1];\n        if (basePatternCS) {\n          basePatternCS = ColorSpace.fromIR(basePatternCS);\n        }\n        return new PatternCS(basePatternCS);\n      case 'IndexedCS':\n        var baseIndexedCS = IR[1];\n        var hiVal = IR[2];\n        var lookup = IR[3];\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS), hiVal, lookup);\n      case 'AlternateCS':\n        var numComps = IR[1];\n        var alt = IR[2];\n        var tintFn = IR[3];\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt), tintFn);\n      case 'LabCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        var range = IR[3];\n        return new LabCS(whitePoint, blackPoint, range);\n      default:\n        throw new _util.FormatError('Unknown colorspace name: ' + name);\n    }\n  };\n  ColorSpace.parseToIR = function (cs, xref, res, pdfFunctionFactory) {\n    if ((0, _primitives.isName)(cs)) {\n      var colorSpaces = res.get('ColorSpace');\n      if ((0, _primitives.isDict)(colorSpaces)) {\n        var refcs = colorSpaces.get(cs.name);\n        if (refcs) {\n          cs = refcs;\n        }\n      }\n    }\n    cs = xref.fetchIfRef(cs);\n    if ((0, _primitives.isName)(cs)) {\n      switch (cs.name) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'Pattern':\n          return ['PatternCS', null];\n        default:\n          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\n      }\n    }\n    if (Array.isArray(cs)) {\n      var mode = xref.fetchIfRef(cs[0]).name;\n      var numComps, params, alt, whitePoint, blackPoint, gamma;\n      switch (mode) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'CalGray':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.get('Gamma');\n          return ['CalGrayCS', whitePoint, blackPoint, gamma];\n        case 'CalRGB':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.getArray('Gamma');\n          var matrix = params.getArray('Matrix');\n          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\n        case 'ICCBased':\n          var stream = xref.fetchIfRef(cs[1]);\n          var dict = stream.dict;\n          numComps = dict.get('N');\n          alt = dict.get('Alternate');\n          if (alt) {\n            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\n            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\n            if (altCS.numComps === numComps) {\n              return altIR;\n            }\n            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\n          }\n          if (numComps === 1) {\n            return 'DeviceGrayCS';\n          } else if (numComps === 3) {\n            return 'DeviceRgbCS';\n          } else if (numComps === 4) {\n            return 'DeviceCmykCS';\n          }\n          break;\n        case 'Pattern':\n          var basePatternCS = cs[1] || null;\n          if (basePatternCS) {\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\n          }\n          return ['PatternCS', basePatternCS];\n        case 'Indexed':\n        case 'I':\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\n          var hiVal = xref.fetchIfRef(cs[2]) + 1;\n          var lookup = xref.fetchIfRef(cs[3]);\n          if ((0, _primitives.isStream)(lookup)) {\n            lookup = lookup.getBytes();\n          }\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n        case 'Separation':\n        case 'DeviceN':\n          var name = xref.fetchIfRef(cs[1]);\n          numComps = Array.isArray(name) ? name.length : 1;\n          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\n          var tintFn = pdfFunctionFactory.create(xref.fetchIfRef(cs[3]));\n          return ['AlternateCS', numComps, alt, tintFn];\n        case 'Lab':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          var range = params.getArray('Range');\n          return ['LabCS', whitePoint, blackPoint, range];\n        default:\n          throw new _util.FormatError('unimplemented color space object \"' + mode + '\"');\n      }\n    }\n    throw new _util.FormatError('unrecognized color space object: \"' + cs + '\"');\n  };\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n    if (!Array.isArray(decode)) {\n      return true;\n    }\n    if (n * 2 !== decode.length) {\n      (0, _util.warn)('The decode map is not the correct length');\n      return true;\n    }\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n  ColorSpace.singletons = {\n    get gray() {\n      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\n    },\n    get rgb() {\n      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\n    },\n    get cmyk() {\n      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\n    }\n  };\n  return ColorSpace;\n}();\nvar AlternateCS = function AlternateCSClosure() {\n  function AlternateCS(numComps, base, tintFn) {\n    this.name = 'Alternate';\n    this.numComps = numComps;\n    this.defaultColor = new Float32Array(numComps);\n    for (var i = 0; i < numComps; ++i) {\n      this.defaultColor[i] = 1;\n    }\n    this.base = base;\n    this.tintFn = tintFn;\n    this.tmpBuf = new Float32Array(base.numComps);\n  }\n  AlternateCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var tmpBuf = this.tmpBuf;\n      this.tintFn(src, srcOffset, tmpBuf, 0);\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n    },\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var tintFn = this.tintFn;\n      var base = this.base;\n      var scale = 1 / ((1 << bits) - 1);\n      var baseNumComps = base.numComps;\n      var usesZeroToOneRange = base.usesZeroToOneRange;\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n      var pos = isPassthrough ? destOffset : 0;\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n      var numComps = this.numComps;\n      var scaled = new Float32Array(numComps);\n      var tinted = new Float32Array(baseNumComps);\n      var i, j;\n      for (i = 0; i < count; i++) {\n        for (j = 0; j < numComps; j++) {\n          scaled[j] = src[srcOffset++] * scale;\n        }\n        tintFn(scaled, 0, tinted, 0);\n        if (usesZeroToOneRange) {\n          for (j = 0; j < baseNumComps; j++) {\n            baseBuf[pos++] = tinted[j] * 255;\n          }\n        } else {\n          base.getRgbItem(tinted, 0, baseBuf, pos);\n          pos += baseNumComps;\n        }\n      }\n      if (!isPassthrough) {\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n      }\n    },\n    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return AlternateCS;\n}();\nvar PatternCS = function PatternCSClosure() {\n  function PatternCS(baseCS) {\n    this.name = 'Pattern';\n    this.base = baseCS;\n  }\n  PatternCS.prototype = {};\n  return PatternCS;\n}();\nvar IndexedCS = function IndexedCSClosure() {\n  function IndexedCS(base, highVal, lookup) {\n    this.name = 'Indexed';\n    this.numComps = 1;\n    this.defaultColor = new Uint8Array(this.numComps);\n    this.base = base;\n    this.highVal = highVal;\n    var baseNumComps = base.numComps;\n    var length = baseNumComps * highVal;\n    if ((0, _primitives.isStream)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      var bytes = lookup.getBytes(length);\n      this.lookup.set(bytes);\n    } else if ((0, _util.isString)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      for (var i = 0; i < length; ++i) {\n        this.lookup[i] = lookup.charCodeAt(i);\n      }\n    } else if (lookup instanceof Uint8Array || lookup instanceof Array) {\n      this.lookup = lookup;\n    } else {\n      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\n    }\n  }\n  IndexedCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var numComps = this.base.numComps;\n      var start = src[srcOffset] * numComps;\n      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\n    },\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var base = this.base;\n      var numComps = base.numComps;\n      var outputDelta = base.getOutputLength(numComps, alpha01);\n      var lookup = this.lookup;\n      for (var i = 0; i < count; ++i) {\n        var lookupPos = src[srcOffset++] * numComps;\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n        destOffset += outputDelta;\n      }\n    },\n    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: true\n  };\n  return IndexedCS;\n}();\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\n  function DeviceGrayCS() {\n    this.name = 'DeviceGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var c = src[srcOffset] * 255 | 0;\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n    },\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        var c = scale * src[j++] | 0;\n        dest[q++] = c;\n        dest[q++] = c;\n        dest[q++] = c;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceGrayCS;\n}();\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\n  function DeviceRgbCS() {\n    this.name = 'DeviceRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceRgbCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var r = src[srcOffset] * 255 | 0;\n      var g = src[srcOffset + 1] * 255 | 0;\n      var b = src[srcOffset + 2] * 255 | 0;\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n    },\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      if (bits === 8 && alpha01 === 0) {\n        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n        return;\n      }\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n      return bits === 8;\n    },\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceRgbCS;\n}();\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n    var c = src[srcOffset + 0] * srcScale;\n    var m = src[srcOffset + 1] * srcScale;\n    var y = src[srcOffset + 2] * srcScale;\n    var k = src[srcOffset + 3] * srcScale;\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n  }\n  function DeviceCmykCS() {\n    this.name = 'DeviceCMYK';\n    this.numComps = 4;\n    this.defaultColor = new Float32Array(this.numComps);\n    this.defaultColor[3] = 1;\n  }\n  DeviceCmykCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\n    },\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; i++) {\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\n        srcOffset += 4;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n      return inputLength / 4 * (3 + alpha01) | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceCmykCS;\n}();\nvar CalGrayCS = function CalGrayCSClosure() {\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\n    this.name = 'CalGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    gamma = gamma || 1;\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    this.G = gamma;\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n    }\n    if (this.G < 1) {\n      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n      this.G = 1;\n    }\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = src[srcOffset] * scale;\n    var AG = Math.pow(A, cs.G);\n    var L = cs.YW * AG;\n    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n    dest[destOffset] = val;\n    dest[destOffset + 1] = val;\n    dest[destOffset + 2] = val;\n  }\n  CalGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 1;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalGrayCS;\n}();\nvar CalRGBCS = function CalRGBCSClosure() {\n  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\n  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\n  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\n  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n  var tempNormalizeMatrix = new Float32Array(3);\n  var tempConvertMatrix1 = new Float32Array(3);\n  var tempConvertMatrix2 = new Float32Array(3);\n  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n    this.name = 'CalRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\n    }\n    blackPoint = blackPoint || new Float32Array(3);\n    gamma = gamma || new Float32Array([1, 1, 1]);\n    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n    var XW = whitePoint[0];\n    var YW = whitePoint[1];\n    var ZW = whitePoint[2];\n    this.whitePoint = whitePoint;\n    var XB = blackPoint[0];\n    var YB = blackPoint[1];\n    var ZB = blackPoint[2];\n    this.blackPoint = blackPoint;\n    this.GR = gamma[0];\n    this.GG = gamma[1];\n    this.GB = gamma[2];\n    this.MXA = matrix[0];\n    this.MYA = matrix[1];\n    this.MZA = matrix[2];\n    this.MXB = matrix[3];\n    this.MYB = matrix[4];\n    this.MZB = matrix[5];\n    this.MXC = matrix[6];\n    this.MYC = matrix[7];\n    this.MZC = matrix[8];\n    if (XW < 0 || ZW < 0 || YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (XB < 0 || YB < 0 || ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n      this.blackPoint = new Float32Array(3);\n    }\n    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n      this.GR = this.GG = this.GB = 1;\n    }\n    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n      this.MXA = this.MYB = this.MZC = 1;\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n    }\n  }\n  function matrixProduct(a, b, result) {\n    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n  }\n  function convertToFlat(sourceWhitePoint, LMS, result) {\n    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n  }\n  function convertToD65(sourceWhitePoint, LMS, result) {\n    var D65X = 0.95047;\n    var D65Y = 1;\n    var D65Z = 1.08883;\n    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n  }\n  function sRGBTransferFunction(color) {\n    if (color <= 0.0031308) {\n      return adjustToRange(0, 1, 12.92 * color);\n    }\n    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n  }\n  function adjustToRange(min, max, value) {\n    return Math.max(min, Math.min(max, value));\n  }\n  function decodeL(L) {\n    if (L < 0) {\n      return -decodeL(-L);\n    }\n    if (L > 8.0) {\n      return Math.pow((L + 16) / 116, 3);\n    }\n    return L * DECODE_L_CONSTANT;\n  }\n  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n      result[0] = XYZ_Flat[0];\n      result[1] = XYZ_Flat[1];\n      result[2] = XYZ_Flat[2];\n      return;\n    }\n    var zeroDecodeL = decodeL(0);\n    var X_DST = zeroDecodeL;\n    var X_SRC = decodeL(sourceBlackPoint[0]);\n    var Y_DST = zeroDecodeL;\n    var Y_SRC = decodeL(sourceBlackPoint[1]);\n    var Z_DST = zeroDecodeL;\n    var Z_SRC = decodeL(sourceBlackPoint[2]);\n    var X_Scale = (1 - X_DST) / (1 - X_SRC);\n    var X_Offset = 1 - X_Scale;\n    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n    var Y_Offset = 1 - Y_Scale;\n    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n    var Z_Offset = 1 - Z_Scale;\n    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n  }\n  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n      result[0] = XYZ_In[0];\n      result[1] = XYZ_In[1];\n      result[2] = XYZ_In[2];\n      return;\n    }\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_Flat = tempNormalizeMatrix;\n    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n  }\n  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_D65 = tempNormalizeMatrix;\n    convertToD65(sourceWhitePoint, LMS, LMS_D65);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = adjustToRange(0, 1, src[srcOffset] * scale);\n    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n    var AGR = Math.pow(A, cs.GR);\n    var BGG = Math.pow(B, cs.GG);\n    var CGB = Math.pow(C, cs.GB);\n    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n    var XYZ = tempConvertMatrix1;\n    XYZ[0] = X;\n    XYZ[1] = Y;\n    XYZ[2] = Z;\n    var XYZ_Flat = tempConvertMatrix2;\n    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n    var XYZ_Black = tempConvertMatrix1;\n    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n    var XYZ_D65 = tempConvertMatrix2;\n    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n    var SRGB = tempConvertMatrix1;\n    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n    var sR = sRGBTransferFunction(SRGB[0]);\n    var sG = sRGBTransferFunction(SRGB[1]);\n    var sB = sRGBTransferFunction(SRGB[2]);\n    dest[destOffset] = Math.round(sR * 255);\n    dest[destOffset + 1] = Math.round(sG * 255);\n    dest[destOffset + 2] = Math.round(sB * 255);\n  }\n  CalRGBCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalRGBCS;\n}();\nvar LabCS = function LabCSClosure() {\n  function LabCS(whitePoint, blackPoint, range) {\n    this.name = 'Lab';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    range = range || [-100, 100, -100, 100];\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.amin = range[0];\n    this.amax = range[1];\n    this.bmin = range[2];\n    this.bmax = range[3];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint, falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.amin > this.amax || this.bmin > this.bmax) {\n      (0, _util.info)('Invalid Range, falling back to defaults');\n      this.amin = -100;\n      this.amax = 100;\n      this.bmin = -100;\n      this.bmax = 100;\n    }\n  }\n  function fn_g(x) {\n    var result;\n    if (x >= 6 / 29) {\n      result = x * x * x;\n    } else {\n      result = 108 / 841 * (x - 4 / 29);\n    }\n    return result;\n  }\n  function decode(value, high1, low2, high2) {\n    return low2 + value * (high2 - low2) / high1;\n  }\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n    var Ls = src[srcOffset];\n    var as = src[srcOffset + 1];\n    var bs = src[srcOffset + 2];\n    if (maxVal !== false) {\n      Ls = decode(Ls, maxVal, 0, 100);\n      as = decode(as, maxVal, cs.amin, cs.amax);\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n    }\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n    var M = (Ls + 16) / 116;\n    var L = M + as / 500;\n    var N = M - bs / 200;\n    var X = cs.XW * fn_g(L);\n    var Y = cs.YW * fn_g(M);\n    var Z = cs.ZW * fn_g(N);\n    var r, g, b;\n    if (cs.ZW < 1) {\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n    } else {\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n    }\n    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n  }\n  LabCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n    },\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var maxVal = (1 << bits) - 1;\n      for (var i = 0; i < count; i++) {\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: false\n  };\n  return LabCS;\n}();\nexports.ColorSpace = ColorSpace;\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall'];\nvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls'];\nvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\nvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt'];\nvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191'];\nfunction getEncoding(encodingName) {\n  switch (encodingName) {\n    case 'WinAnsiEncoding':\n      return WinAnsiEncoding;\n    case 'StandardEncoding':\n      return StandardEncoding;\n    case 'MacRomanEncoding':\n      return MacRomanEncoding;\n    case 'SymbolSetEncoding':\n      return SymbolSetEncoding;\n    case 'ZapfDingbatsEncoding':\n      return ZapfDingbatsEncoding;\n    case 'ExpertEncoding':\n      return ExpertEncoding;\n    case 'MacExpertEncoding':\n      return MacExpertEncoding;\n    default:\n      return null;\n  }\n}\nexports.WinAnsiEncoding = WinAnsiEncoding;\nexports.StandardEncoding = StandardEncoding;\nexports.MacRomanEncoding = MacRomanEncoding;\nexports.SymbolSetEncoding = SymbolSetEncoding;\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\nexports.ExpertEncoding = ExpertEncoding;\nexports.getEncoding = getEncoding;\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar IObject = __w_pdfjs_require__(37);\nvar defined = __w_pdfjs_require__(38);\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(18);\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(25);\nvar TAG = __w_pdfjs_require__(4)('toStringTag');\nvar ARG = cof(function () {\n  return arguments;\n}()) == 'Arguments';\nvar tryGet = function tryGet(it, key) {\n  try {\n    return it[key];\n  } catch (e) {}\n};\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null' : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T : ARG ? cof(O) : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(13);\nvar call = __w_pdfjs_require__(107);\nvar isArrayIter = __w_pdfjs_require__(56);\nvar anObject = __w_pdfjs_require__(9);\nvar toLength = __w_pdfjs_require__(14);\nvar getIterFn = __w_pdfjs_require__(60);\nvar BREAK = {};\nvar RETURN = {};\nvar _exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () {\n    return iterable;\n  } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\n_exports.BREAK = BREAK;\n_exports.RETURN = RETURN;\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = exports.Linearization = exports.Lexer = undefined;\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _ccitt_stream = __w_pdfjs_require__(130);\n\nvar _jbig2_stream = __w_pdfjs_require__(132);\n\nvar MAX_LENGTH_TO_CACHE = 1000;\nvar Parser = function ParserClosure() {\n  function Parser(lexer, allowStreams, xref, recoveryMode) {\n    this.lexer = lexer;\n    this.allowStreams = allowStreams;\n    this.xref = xref;\n    this.recoveryMode = recoveryMode || false;\n    this.imageCache = Object.create(null);\n    this.refill();\n  }\n  Parser.prototype = {\n    refill: function Parser_refill() {\n      this.buf1 = this.lexer.getObj();\n      this.buf2 = this.lexer.getObj();\n    },\n    shift: function Parser_shift() {\n      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\n        this.buf1 = this.buf2;\n        this.buf2 = null;\n      } else {\n        this.buf1 = this.buf2;\n        this.buf2 = this.lexer.getObj();\n      }\n    },\n    tryShift: function Parser_tryShift() {\n      try {\n        this.shift();\n        return true;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        return false;\n      }\n    },\n    getObj: function Parser_getObj(cipherTransform) {\n      var buf1 = this.buf1;\n      this.shift();\n      if (buf1 instanceof _primitives.Cmd) {\n        switch (buf1.cmd) {\n          case 'BI':\n            return this.makeInlineImage(cipherTransform);\n          case '[':\n            var array = [];\n            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\n              array.push(this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside array');\n              }\n              return array;\n            }\n            this.shift();\n            return array;\n          case '<<':\n            var dict = new _primitives.Dict(this.xref);\n            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\n              if (!(0, _primitives.isName)(this.buf1)) {\n                (0, _util.info)('Malformed dictionary: key must be a name object');\n                this.shift();\n                continue;\n              }\n              var key = this.buf1.name;\n              this.shift();\n              if ((0, _primitives.isEOF)(this.buf1)) {\n                break;\n              }\n              dict.set(key, this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside dictionary');\n              }\n              return dict;\n            }\n            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\n              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n            }\n            this.shift();\n            return dict;\n          default:\n            return buf1;\n        }\n      }\n      if (Number.isInteger(buf1)) {\n        var num = buf1;\n        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\n          var ref = new _primitives.Ref(num, this.buf1);\n          this.shift();\n          this.shift();\n          return ref;\n        }\n        return num;\n      }\n      if ((0, _util.isString)(buf1)) {\n        var str = buf1;\n        if (cipherTransform) {\n          str = cipherTransform.decryptString(str);\n        }\n        return str;\n      }\n      return buf1;\n    },\n    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\n      var E = 0x45,\n          I = 0x49,\n          SPACE = 0x20,\n          LF = 0xA,\n          CR = 0xD;\n      var n = 10,\n          NUL = 0x0;\n      var startPos = stream.pos,\n          state = 0,\n          ch = void 0,\n          maybeEIPos = void 0;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else {\n          (0, _util.assert)(state === 2);\n          if (ch === SPACE || ch === LF || ch === CR) {\n            maybeEIPos = stream.pos;\n            var followingBytes = stream.peekBytes(n);\n            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n              ch = followingBytes[i];\n              if (ch === NUL && followingBytes[i + 1] !== NUL) {\n                continue;\n              }\n              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n                state = 0;\n                break;\n              }\n            }\n            if (state === 2) {\n              break;\n            }\n          } else {\n            state = 0;\n          }\n        }\n      }\n      if (ch === -1) {\n        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\n        if (maybeEIPos) {\n          (0, _util.warn)('... trying to recover by using the last \"EI\" occurrence.');\n          stream.skip(-(stream.pos - maybeEIPos));\n        }\n      }\n      return stream.pos - 4 - startPos;\n    },\n\n    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n      var startPos = stream.pos,\n          foundEOI = false,\n          b,\n          markerLength,\n          length;\n      while ((b = stream.getByte()) !== -1) {\n        if (b !== 0xFF) {\n          continue;\n        }\n        switch (stream.getByte()) {\n          case 0x00:\n            break;\n          case 0xFF:\n            stream.skip(-1);\n            break;\n          case 0xD9:\n            foundEOI = true;\n            break;\n          case 0xC0:\n          case 0xC1:\n          case 0xC2:\n          case 0xC3:\n          case 0xC5:\n          case 0xC6:\n          case 0xC7:\n          case 0xC9:\n          case 0xCA:\n          case 0xCB:\n          case 0xCD:\n          case 0xCE:\n          case 0xCF:\n          case 0xC4:\n          case 0xCC:\n          case 0xDA:\n          case 0xDB:\n          case 0xDC:\n          case 0xDD:\n          case 0xDE:\n          case 0xDF:\n          case 0xE0:\n          case 0xE1:\n          case 0xE2:\n          case 0xE3:\n          case 0xE4:\n          case 0xE5:\n          case 0xE6:\n          case 0xE7:\n          case 0xE8:\n          case 0xE9:\n          case 0xEA:\n          case 0xEB:\n          case 0xEC:\n          case 0xED:\n          case 0xEE:\n          case 0xEF:\n          case 0xFE:\n            markerLength = stream.getUint16();\n            if (markerLength > 2) {\n              stream.skip(markerLength - 2);\n            } else {\n              stream.skip(-2);\n            }\n            break;\n        }\n        if (foundEOI) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (b === -1) {\n        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n      var TILDE = 0x7E,\n          GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === TILDE && stream.peekByte() === GT) {\n          stream.skip();\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n      var GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === GT) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n      var E = 0x45,\n          I = 0x49;\n      var state = 0,\n          ch;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else if (state === 2) {\n          break;\n        }\n      }\n    },\n    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      var dict = new _primitives.Dict(this.xref);\n      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\n        if (!(0, _primitives.isName)(this.buf1)) {\n          throw new _util.FormatError('Dictionary key must be a name object');\n        }\n        var key = this.buf1.name;\n        this.shift();\n        if ((0, _primitives.isEOF)(this.buf1)) {\n          break;\n        }\n        dict.set(key, this.getObj(cipherTransform));\n      }\n      var filter = dict.get('Filter', 'F'),\n          filterName;\n      if ((0, _primitives.isName)(filter)) {\n        filterName = filter.name;\n      } else if (Array.isArray(filter)) {\n        var filterZero = this.xref.fetchIfRef(filter[0]);\n        if ((0, _primitives.isName)(filterZero)) {\n          filterName = filterZero.name;\n        }\n      }\n      var startPos = stream.pos,\n          length,\n          i,\n          ii;\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n        length = this.findDCTDecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\n        length = this.findASCII85DecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n      } else {\n        length = this.findDefaultInlineStreamEnd(stream);\n      }\n      var imageStream = stream.makeSubStream(startPos, length, dict);\n      var adler32;\n      if (length < MAX_LENGTH_TO_CACHE) {\n        var imageBytes = imageStream.getBytes();\n        imageStream.reset();\n        var a = 1;\n        var b = 0;\n        for (i = 0, ii = imageBytes.length; i < ii; ++i) {\n          a += imageBytes[i] & 0xff;\n          b += a;\n        }\n        adler32 = b % 65521 << 16 | a % 65521;\n        var cacheEntry = this.imageCache[adler32];\n        if (cacheEntry !== undefined) {\n          this.buf2 = _primitives.Cmd.get('EI');\n          this.shift();\n          cacheEntry.reset();\n          return cacheEntry;\n        }\n      }\n      if (cipherTransform) {\n        imageStream = cipherTransform.createStream(imageStream, length);\n      }\n      imageStream = this.filter(imageStream, dict, length);\n      imageStream.dict = dict;\n      if (adler32 !== undefined) {\n        imageStream.cacheKey = 'inline_' + length + '_' + adler32;\n        this.imageCache[adler32] = imageStream;\n      }\n      this.buf2 = _primitives.Cmd.get('EI');\n      this.shift();\n      return imageStream;\n    },\n    makeStream: function Parser_makeStream(dict, cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      lexer.skipToNextLine();\n      var pos = stream.pos - 1;\n      var length = dict.get('Length');\n      if (!Number.isInteger(length)) {\n        (0, _util.info)('Bad ' + length + ' attribute in stream');\n        length = 0;\n      }\n      stream.pos = pos + length;\n      lexer.nextChar();\n      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\n        this.shift();\n      } else {\n        stream.pos = pos;\n        var SCAN_BLOCK_SIZE = 2048;\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\n        var skipped = 0,\n            found = false,\n            i,\n            j;\n        while (stream.pos < stream.end) {\n          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n          if (scanLength <= 0) {\n            break;\n          }\n          found = false;\n          i = 0;\n          while (i < scanLength) {\n            j = 0;\n            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n              j++;\n            }\n            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n              found = true;\n              break;\n            }\n            i++;\n          }\n          if (found) {\n            skipped += i;\n            stream.pos += i;\n            break;\n          }\n          skipped += scanLength;\n          stream.pos += scanLength;\n        }\n        if (!found) {\n          throw new _util.FormatError('Missing endstream');\n        }\n        length = skipped;\n        lexer.nextChar();\n        this.shift();\n        this.shift();\n      }\n      this.shift();\n      stream = stream.makeSubStream(pos, length, dict);\n      if (cipherTransform) {\n        stream = cipherTransform.createStream(stream, length);\n      }\n      stream = this.filter(stream, dict, length);\n      stream.dict = dict;\n      return stream;\n    },\n    filter: function Parser_filter(stream, dict, length) {\n      var filter = dict.get('Filter', 'F');\n      var params = dict.get('DecodeParms', 'DP');\n      if ((0, _primitives.isName)(filter)) {\n        if (Array.isArray(params)) {\n          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\n        }\n        return this.makeFilter(stream, filter.name, length, params);\n      }\n      var maybeLength = length;\n      if (Array.isArray(filter)) {\n        var filterArray = filter;\n        var paramsArray = params;\n        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n          filter = this.xref.fetchIfRef(filterArray[i]);\n          if (!(0, _primitives.isName)(filter)) {\n            throw new _util.FormatError('Bad filter name: ' + filter);\n          }\n          params = null;\n          if (Array.isArray(paramsArray) && i in paramsArray) {\n            params = this.xref.fetchIfRef(paramsArray[i]);\n          }\n          stream = this.makeFilter(stream, filter.name, maybeLength, params);\n          maybeLength = null;\n        }\n      }\n      return stream;\n    },\n    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n      if (maybeLength === 0) {\n        (0, _util.warn)('Empty \"' + name + '\" stream.');\n        return new _stream.NullStream(stream);\n      }\n      try {\n        var xrefStreamStats = this.xref.stats.streamTypes;\n        if (name === 'FlateDecode' || name === 'Fl') {\n          xrefStreamStats[_util.StreamType.FLATE] = true;\n          if (params) {\n            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\n          }\n          return new _stream.FlateStream(stream, maybeLength);\n        }\n        if (name === 'LZWDecode' || name === 'LZW') {\n          xrefStreamStats[_util.StreamType.LZW] = true;\n          var earlyChange = 1;\n          if (params) {\n            if (params.has('EarlyChange')) {\n              earlyChange = params.get('EarlyChange');\n            }\n            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n          }\n          return new _stream.LZWStream(stream, maybeLength, earlyChange);\n        }\n        if (name === 'DCTDecode' || name === 'DCT') {\n          xrefStreamStats[_util.StreamType.DCT] = true;\n          return new _stream.JpegStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'JPXDecode' || name === 'JPX') {\n          xrefStreamStats[_util.StreamType.JPX] = true;\n          return new _stream.JpxStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'ASCII85Decode' || name === 'A85') {\n          xrefStreamStats[_util.StreamType.A85] = true;\n          return new _stream.Ascii85Stream(stream, maybeLength);\n        }\n        if (name === 'ASCIIHexDecode' || name === 'AHx') {\n          xrefStreamStats[_util.StreamType.AHX] = true;\n          return new _stream.AsciiHexStream(stream, maybeLength);\n        }\n        if (name === 'CCITTFaxDecode' || name === 'CCF') {\n          xrefStreamStats[_util.StreamType.CCF] = true;\n          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\n        }\n        if (name === 'RunLengthDecode' || name === 'RL') {\n          xrefStreamStats[_util.StreamType.RL] = true;\n          return new _stream.RunLengthStream(stream, maybeLength);\n        }\n        if (name === 'JBIG2Decode') {\n          xrefStreamStats[_util.StreamType.JBIG] = true;\n          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\n        }\n        (0, _util.warn)('filter \"' + name + '\" not supported yet');\n        return stream;\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid stream: \\\"' + ex + '\\\"');\n        return new _stream.NullStream(stream);\n      }\n    }\n  };\n  return Parser;\n}();\nvar Lexer = function LexerClosure() {\n  function Lexer(stream, knownCommands) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n    this.knownCommands = knownCommands;\n  }\n  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  function toHexDigit(ch) {\n    if (ch >= 0x30 && ch <= 0x39) {\n      return ch & 0x0F;\n    }\n    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n      return (ch & 0x0F) + 9;\n    }\n    return -1;\n  }\n  Lexer.prototype = {\n    nextChar: function Lexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    peekChar: function Lexer_peekChar() {\n      return this.stream.peekByte();\n    },\n    getNumber: function Lexer_getNumber() {\n      var ch = this.currentChar;\n      var eNotation = false;\n      var divideBy = 0;\n      var sign = 1;\n      if (ch === 0x2D) {\n        sign = -1;\n        ch = this.nextChar();\n        if (ch === 0x2D) {\n          ch = this.nextChar();\n        }\n      } else if (ch === 0x2B) {\n        ch = this.nextChar();\n      }\n      if (ch === 0x2E) {\n        divideBy = 10;\n        ch = this.nextChar();\n      }\n      if (ch === 0x0A || ch === 0x0D) {\n        do {\n          ch = this.nextChar();\n        } while (ch === 0x0A || ch === 0x0D);\n      }\n      if (ch < 0x30 || ch > 0x39) {\n        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\n      }\n      var baseValue = ch - 0x30;\n      var powerValue = 0;\n      var powerValueSign = 1;\n      while ((ch = this.nextChar()) >= 0) {\n        if (0x30 <= ch && ch <= 0x39) {\n          var currentDigit = ch - 0x30;\n          if (eNotation) {\n            powerValue = powerValue * 10 + currentDigit;\n          } else {\n            if (divideBy !== 0) {\n              divideBy *= 10;\n            }\n            baseValue = baseValue * 10 + currentDigit;\n          }\n        } else if (ch === 0x2E) {\n          if (divideBy === 0) {\n            divideBy = 1;\n          } else {\n            break;\n          }\n        } else if (ch === 0x2D) {\n          (0, _util.warn)('Badly formatted number');\n        } else if (ch === 0x45 || ch === 0x65) {\n          ch = this.peekChar();\n          if (ch === 0x2B || ch === 0x2D) {\n            powerValueSign = ch === 0x2D ? -1 : 1;\n            this.nextChar();\n          } else if (ch < 0x30 || ch > 0x39) {\n            break;\n          }\n          eNotation = true;\n        } else {\n          break;\n        }\n      }\n      if (divideBy !== 0) {\n        baseValue /= divideBy;\n      }\n      if (eNotation) {\n        baseValue *= Math.pow(10, powerValueSign * powerValue);\n      }\n      return sign * baseValue;\n    },\n    getString: function Lexer_getString() {\n      var numParen = 1;\n      var done = false;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.nextChar();\n      while (true) {\n        var charBuffered = false;\n        switch (ch | 0) {\n          case -1:\n            (0, _util.warn)('Unterminated string');\n            done = true;\n            break;\n          case 0x28:\n            ++numParen;\n            strBuf.push('(');\n            break;\n          case 0x29:\n            if (--numParen === 0) {\n              this.nextChar();\n              done = true;\n            } else {\n              strBuf.push(')');\n            }\n            break;\n          case 0x5C:\n            ch = this.nextChar();\n            switch (ch) {\n              case -1:\n                (0, _util.warn)('Unterminated string');\n                done = true;\n                break;\n              case 0x6E:\n                strBuf.push('\\n');\n                break;\n              case 0x72:\n                strBuf.push('\\r');\n                break;\n              case 0x74:\n                strBuf.push('\\t');\n                break;\n              case 0x62:\n                strBuf.push('\\b');\n                break;\n              case 0x66:\n                strBuf.push('\\f');\n                break;\n              case 0x5C:\n              case 0x28:\n              case 0x29:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n              case 0x30:\n              case 0x31:\n              case 0x32:\n              case 0x33:\n              case 0x34:\n              case 0x35:\n              case 0x36:\n              case 0x37:\n                var x = ch & 0x0F;\n                ch = this.nextChar();\n                charBuffered = true;\n                if (ch >= 0x30 && ch <= 0x37) {\n                  x = (x << 3) + (ch & 0x0F);\n                  ch = this.nextChar();\n                  if (ch >= 0x30 && ch <= 0x37) {\n                    charBuffered = false;\n                    x = (x << 3) + (ch & 0x0F);\n                  }\n                }\n                strBuf.push(String.fromCharCode(x));\n                break;\n              case 0x0D:\n                if (this.peekChar() === 0x0A) {\n                  this.nextChar();\n                }\n                break;\n              case 0x0A:\n                break;\n              default:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n            }\n            break;\n          default:\n            strBuf.push(String.fromCharCode(ch));\n            break;\n        }\n        if (done) {\n          break;\n        }\n        if (!charBuffered) {\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getName: function Lexer_getName() {\n      var ch, previousCh;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        if (ch === 0x23) {\n          ch = this.nextChar();\n          if (specialChars[ch]) {\n            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n            strBuf.push('#');\n            break;\n          }\n          var x = toHexDigit(ch);\n          if (x !== -1) {\n            previousCh = ch;\n            ch = this.nextChar();\n            var x2 = toHexDigit(ch);\n            if (x2 === -1) {\n              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n              strBuf.push('#', String.fromCharCode(previousCh));\n              if (specialChars[ch]) {\n                break;\n              }\n              strBuf.push(String.fromCharCode(ch));\n              continue;\n            }\n            strBuf.push(String.fromCharCode(x << 4 | x2));\n          } else {\n            strBuf.push('#', String.fromCharCode(ch));\n          }\n        } else {\n          strBuf.push(String.fromCharCode(ch));\n        }\n      }\n      if (strBuf.length > 127) {\n        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\n      }\n      return _primitives.Name.get(strBuf.join(''));\n    },\n    getHexString: function Lexer_getHexString() {\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.currentChar;\n      var isFirstHex = true;\n      var firstDigit;\n      var secondDigit;\n      while (true) {\n        if (ch < 0) {\n          (0, _util.warn)('Unterminated hex string');\n          break;\n        } else if (ch === 0x3E) {\n          this.nextChar();\n          break;\n        } else if (specialChars[ch] === 1) {\n          ch = this.nextChar();\n          continue;\n        } else {\n          if (isFirstHex) {\n            firstDigit = toHexDigit(ch);\n            if (firstDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n          } else {\n            secondDigit = toHexDigit(ch);\n            if (secondDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n          }\n          isFirstHex = !isFirstHex;\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getObj: function Lexer_getObj() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (specialChars[ch] !== 1) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return this.getNumber();\n        case 0x28:\n          return this.getString();\n        case 0x2F:\n          return this.getName();\n        case 0x5B:\n          this.nextChar();\n          return _primitives.Cmd.get('[');\n        case 0x5D:\n          this.nextChar();\n          return _primitives.Cmd.get(']');\n        case 0x3C:\n          ch = this.nextChar();\n          if (ch === 0x3C) {\n            this.nextChar();\n            return _primitives.Cmd.get('<<');\n          }\n          return this.getHexString();\n        case 0x3E:\n          ch = this.nextChar();\n          if (ch === 0x3E) {\n            this.nextChar();\n            return _primitives.Cmd.get('>>');\n          }\n          return _primitives.Cmd.get('>');\n        case 0x7B:\n          this.nextChar();\n          return _primitives.Cmd.get('{');\n        case 0x7D:\n          this.nextChar();\n          return _primitives.Cmd.get('}');\n        case 0x29:\n          this.nextChar();\n          throw new _util.FormatError('Illegal character: ' + ch);\n      }\n      var str = String.fromCharCode(ch);\n      var knownCommands = this.knownCommands;\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        var possibleCommand = str + String.fromCharCode(ch);\n        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n          break;\n        }\n        if (str.length === 128) {\n          throw new _util.FormatError('Command token too long: ' + str.length);\n        }\n        str = possibleCommand;\n        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      }\n      if (str === 'true') {\n        return true;\n      }\n      if (str === 'false') {\n        return false;\n      }\n      if (str === 'null') {\n        return null;\n      }\n      return _primitives.Cmd.get(str);\n    },\n    skipToNextLine: function Lexer_skipToNextLine() {\n      var ch = this.currentChar;\n      while (ch >= 0) {\n        if (ch === 0x0D) {\n          ch = this.nextChar();\n          if (ch === 0x0A) {\n            this.nextChar();\n          }\n          break;\n        } else if (ch === 0x0A) {\n          this.nextChar();\n          break;\n        }\n        ch = this.nextChar();\n      }\n    }\n  };\n  return Lexer;\n}();\nvar Linearization = {\n  create: function LinearizationCreate(stream) {\n    function getInt(name, allowZeroValue) {\n      var obj = linDict.get(name);\n      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n        return obj;\n      }\n      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n    }\n    function getHints() {\n      var hints = linDict.get('H'),\n          hintsLength,\n          item;\n      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n        for (var index = 0; index < hintsLength; index++) {\n          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\n            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n          }\n        }\n        return hints;\n      }\n      throw new Error('Hint array in the linearization dictionary is invalid.');\n    }\n    var parser = new Parser(new Lexer(stream), false, null);\n    var obj1 = parser.getObj();\n    var obj2 = parser.getObj();\n    var obj3 = parser.getObj();\n    var linDict = parser.getObj();\n    var obj, length;\n    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\n      return null;\n    } else if ((length = getInt('L')) !== stream.length) {\n      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n    }\n    return {\n      length: length,\n      hints: getHints(),\n      objectNumberFirst: getInt('O'),\n      endFirst: getInt('E'),\n      numPages: getInt('N'),\n      mainXRefEntriesOffset: getInt('T'),\n      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n    };\n  }\n};\nexports.Lexer = Lexer;\nexports.Linearization = Linearization;\nexports.Parser = Parser;\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar document = __w_pdfjs_require__(1).document;\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(25);\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar shared = __w_pdfjs_require__(54)('keys');\nvar uid = __w_pdfjs_require__(17);\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $keys = __w_pdfjs_require__(52);\nvar enumBugKeys = __w_pdfjs_require__(40);\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(13);\nvar IObject = __w_pdfjs_require__(37);\nvar toObject = __w_pdfjs_require__(19);\nvar toLength = __w_pdfjs_require__(14);\nvar asc = __w_pdfjs_require__(91);\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (; length > index; index++) {\n      if (NO_HOLES || index in self) {\n        val = self[index];\n        res = f(val, index, O);\n        if (TYPE) {\n          if (IS_MAP) result[index] = res;else if (res) switch (TYPE) {\n            case 3:\n              return true;\n            case 5:\n              return val;\n            case 6:\n              return index;\n            case 2:\n              result.push(val);\n          } else if (IS_EVERY) return false;\n        }\n      }\n    }return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(9);\nvar aFunction = __w_pdfjs_require__(22);\nvar SPECIES = __w_pdfjs_require__(4)('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\nvar SAFE_CLOSING = false;\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () {\n    SAFE_CLOSING = true;\n  };\n  Array.from(riter, function () {\n    throw 2;\n  });\n} catch (e) {}\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () {\n      return { done: safe = true };\n    };\n    arr[ITERATOR] = function () {\n      return iter;\n    };\n    exec(arr);\n  } catch (e) {}\n  return safe;\n};\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar aFunction = __w_pdfjs_require__(22);\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar META = __w_pdfjs_require__(17)('meta');\nvar isObject = __w_pdfjs_require__(3);\nvar has = __w_pdfjs_require__(12);\nvar setDesc = __w_pdfjs_require__(15).f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !__w_pdfjs_require__(11)(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function setMeta(it) {\n  setDesc(it, META, {\n    value: {\n      i: 'O' + ++id,\n      w: {}\n    }\n  });\n};\nvar fastKey = function fastKey(it, create) {\n  if (!isObject(it)) return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    if (!isExtensible(it)) return 'F';\n    if (!create) return 'E';\n    setMeta(it);\n  }\n  return it[META].i;\n};\nvar getWeak = function getWeak(it, create) {\n  if (!has(it, META)) {\n    if (!isExtensible(it)) return true;\n    if (!create) return false;\n    setMeta(it);\n  }\n  return it[META].w;\n};\nvar onFreeze = function onFreeze(it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\nvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n t['A'] = 0x0041;\n t['AE'] = 0x00C6;\n t['AEacute'] = 0x01FC;\n t['AEmacron'] = 0x01E2;\n t['AEsmall'] = 0xF7E6;\n t['Aacute'] = 0x00C1;\n t['Aacutesmall'] = 0xF7E1;\n t['Abreve'] = 0x0102;\n t['Abreveacute'] = 0x1EAE;\n t['Abrevecyrillic'] = 0x04D0;\n t['Abrevedotbelow'] = 0x1EB6;\n t['Abrevegrave'] = 0x1EB0;\n t['Abrevehookabove'] = 0x1EB2;\n t['Abrevetilde'] = 0x1EB4;\n t['Acaron'] = 0x01CD;\n t['Acircle'] = 0x24B6;\n t['Acircumflex'] = 0x00C2;\n t['Acircumflexacute'] = 0x1EA4;\n t['Acircumflexdotbelow'] = 0x1EAC;\n t['Acircumflexgrave'] = 0x1EA6;\n t['Acircumflexhookabove'] = 0x1EA8;\n t['Acircumflexsmall'] = 0xF7E2;\n t['Acircumflextilde'] = 0x1EAA;\n t['Acute'] = 0xF6C9;\n t['Acutesmall'] = 0xF7B4;\n t['Acyrillic'] = 0x0410;\n t['Adblgrave'] = 0x0200;\n t['Adieresis'] = 0x00C4;\n t['Adieresiscyrillic'] = 0x04D2;\n t['Adieresismacron'] = 0x01DE;\n t['Adieresissmall'] = 0xF7E4;\n t['Adotbelow'] = 0x1EA0;\n t['Adotmacron'] = 0x01E0;\n t['Agrave'] = 0x00C0;\n t['Agravesmall'] = 0xF7E0;\n t['Ahookabove'] = 0x1EA2;\n t['Aiecyrillic'] = 0x04D4;\n t['Ainvertedbreve'] = 0x0202;\n t['Alpha'] = 0x0391;\n t['Alphatonos'] = 0x0386;\n t['Amacron'] = 0x0100;\n t['Amonospace'] = 0xFF21;\n t['Aogonek'] = 0x0104;\n t['Aring'] = 0x00C5;\n t['Aringacute'] = 0x01FA;\n t['Aringbelow'] = 0x1E00;\n t['Aringsmall'] = 0xF7E5;\n t['Asmall'] = 0xF761;\n t['Atilde'] = 0x00C3;\n t['Atildesmall'] = 0xF7E3;\n t['Aybarmenian'] = 0x0531;\n t['B'] = 0x0042;\n t['Bcircle'] = 0x24B7;\n t['Bdotaccent'] = 0x1E02;\n t['Bdotbelow'] = 0x1E04;\n t['Becyrillic'] = 0x0411;\n t['Benarmenian'] = 0x0532;\n t['Beta'] = 0x0392;\n t['Bhook'] = 0x0181;\n t['Blinebelow'] = 0x1E06;\n t['Bmonospace'] = 0xFF22;\n t['Brevesmall'] = 0xF6F4;\n t['Bsmall'] = 0xF762;\n t['Btopbar'] = 0x0182;\n t['C'] = 0x0043;\n t['Caarmenian'] = 0x053E;\n t['Cacute'] = 0x0106;\n t['Caron'] = 0xF6CA;\n t['Caronsmall'] = 0xF6F5;\n t['Ccaron'] = 0x010C;\n t['Ccedilla'] = 0x00C7;\n t['Ccedillaacute'] = 0x1E08;\n t['Ccedillasmall'] = 0xF7E7;\n t['Ccircle'] = 0x24B8;\n t['Ccircumflex'] = 0x0108;\n t['Cdot'] = 0x010A;\n t['Cdotaccent'] = 0x010A;\n t['Cedillasmall'] = 0xF7B8;\n t['Chaarmenian'] = 0x0549;\n t['Cheabkhasiancyrillic'] = 0x04BC;\n t['Checyrillic'] = 0x0427;\n t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n t['Chedescendercyrillic'] = 0x04B6;\n t['Chedieresiscyrillic'] = 0x04F4;\n t['Cheharmenian'] = 0x0543;\n t['Chekhakassiancyrillic'] = 0x04CB;\n t['Cheverticalstrokecyrillic'] = 0x04B8;\n t['Chi'] = 0x03A7;\n t['Chook'] = 0x0187;\n t['Circumflexsmall'] = 0xF6F6;\n t['Cmonospace'] = 0xFF23;\n t['Coarmenian'] = 0x0551;\n t['Csmall'] = 0xF763;\n t['D'] = 0x0044;\n t['DZ'] = 0x01F1;\n t['DZcaron'] = 0x01C4;\n t['Daarmenian'] = 0x0534;\n t['Dafrican'] = 0x0189;\n t['Dcaron'] = 0x010E;\n t['Dcedilla'] = 0x1E10;\n t['Dcircle'] = 0x24B9;\n t['Dcircumflexbelow'] = 0x1E12;\n t['Dcroat'] = 0x0110;\n t['Ddotaccent'] = 0x1E0A;\n t['Ddotbelow'] = 0x1E0C;\n t['Decyrillic'] = 0x0414;\n t['Deicoptic'] = 0x03EE;\n t['Delta'] = 0x2206;\n t['Deltagreek'] = 0x0394;\n t['Dhook'] = 0x018A;\n t['Dieresis'] = 0xF6CB;\n t['DieresisAcute'] = 0xF6CC;\n t['DieresisGrave'] = 0xF6CD;\n t['Dieresissmall'] = 0xF7A8;\n t['Digammagreek'] = 0x03DC;\n t['Djecyrillic'] = 0x0402;\n t['Dlinebelow'] = 0x1E0E;\n t['Dmonospace'] = 0xFF24;\n t['Dotaccentsmall'] = 0xF6F7;\n t['Dslash'] = 0x0110;\n t['Dsmall'] = 0xF764;\n t['Dtopbar'] = 0x018B;\n t['Dz'] = 0x01F2;\n t['Dzcaron'] = 0x01C5;\n t['Dzeabkhasiancyrillic'] = 0x04E0;\n t['Dzecyrillic'] = 0x0405;\n t['Dzhecyrillic'] = 0x040F;\n t['E'] = 0x0045;\n t['Eacute'] = 0x00C9;\n t['Eacutesmall'] = 0xF7E9;\n t['Ebreve'] = 0x0114;\n t['Ecaron'] = 0x011A;\n t['Ecedillabreve'] = 0x1E1C;\n t['Echarmenian'] = 0x0535;\n t['Ecircle'] = 0x24BA;\n t['Ecircumflex'] = 0x00CA;\n t['Ecircumflexacute'] = 0x1EBE;\n t['Ecircumflexbelow'] = 0x1E18;\n t['Ecircumflexdotbelow'] = 0x1EC6;\n t['Ecircumflexgrave'] = 0x1EC0;\n t['Ecircumflexhookabove'] = 0x1EC2;\n t['Ecircumflexsmall'] = 0xF7EA;\n t['Ecircumflextilde'] = 0x1EC4;\n t['Ecyrillic'] = 0x0404;\n t['Edblgrave'] = 0x0204;\n t['Edieresis'] = 0x00CB;\n t['Edieresissmall'] = 0xF7EB;\n t['Edot'] = 0x0116;\n t['Edotaccent'] = 0x0116;\n t['Edotbelow'] = 0x1EB8;\n t['Efcyrillic'] = 0x0424;\n t['Egrave'] = 0x00C8;\n t['Egravesmall'] = 0xF7E8;\n t['Eharmenian'] = 0x0537;\n t['Ehookabove'] = 0x1EBA;\n t['Eightroman'] = 0x2167;\n t['Einvertedbreve'] = 0x0206;\n t['Eiotifiedcyrillic'] = 0x0464;\n t['Elcyrillic'] = 0x041B;\n t['Elevenroman'] = 0x216A;\n t['Emacron'] = 0x0112;\n t['Emacronacute'] = 0x1E16;\n t['Emacrongrave'] = 0x1E14;\n t['Emcyrillic'] = 0x041C;\n t['Emonospace'] = 0xFF25;\n t['Encyrillic'] = 0x041D;\n t['Endescendercyrillic'] = 0x04A2;\n t['Eng'] = 0x014A;\n t['Enghecyrillic'] = 0x04A4;\n t['Enhookcyrillic'] = 0x04C7;\n t['Eogonek'] = 0x0118;\n t['Eopen'] = 0x0190;\n t['Epsilon'] = 0x0395;\n t['Epsilontonos'] = 0x0388;\n t['Ercyrillic'] = 0x0420;\n t['Ereversed'] = 0x018E;\n t['Ereversedcyrillic'] = 0x042D;\n t['Escyrillic'] = 0x0421;\n t['Esdescendercyrillic'] = 0x04AA;\n t['Esh'] = 0x01A9;\n t['Esmall'] = 0xF765;\n t['Eta'] = 0x0397;\n t['Etarmenian'] = 0x0538;\n t['Etatonos'] = 0x0389;\n t['Eth'] = 0x00D0;\n t['Ethsmall'] = 0xF7F0;\n t['Etilde'] = 0x1EBC;\n t['Etildebelow'] = 0x1E1A;\n t['Euro'] = 0x20AC;\n t['Ezh'] = 0x01B7;\n t['Ezhcaron'] = 0x01EE;\n t['Ezhreversed'] = 0x01B8;\n t['F'] = 0x0046;\n t['Fcircle'] = 0x24BB;\n t['Fdotaccent'] = 0x1E1E;\n t['Feharmenian'] = 0x0556;\n t['Feicoptic'] = 0x03E4;\n t['Fhook'] = 0x0191;\n t['Fitacyrillic'] = 0x0472;\n t['Fiveroman'] = 0x2164;\n t['Fmonospace'] = 0xFF26;\n t['Fourroman'] = 0x2163;\n t['Fsmall'] = 0xF766;\n t['G'] = 0x0047;\n t['GBsquare'] = 0x3387;\n t['Gacute'] = 0x01F4;\n t['Gamma'] = 0x0393;\n t['Gammaafrican'] = 0x0194;\n t['Gangiacoptic'] = 0x03EA;\n t['Gbreve'] = 0x011E;\n t['Gcaron'] = 0x01E6;\n t['Gcedilla'] = 0x0122;\n t['Gcircle'] = 0x24BC;\n t['Gcircumflex'] = 0x011C;\n t['Gcommaaccent'] = 0x0122;\n t['Gdot'] = 0x0120;\n t['Gdotaccent'] = 0x0120;\n t['Gecyrillic'] = 0x0413;\n t['Ghadarmenian'] = 0x0542;\n t['Ghemiddlehookcyrillic'] = 0x0494;\n t['Ghestrokecyrillic'] = 0x0492;\n t['Gheupturncyrillic'] = 0x0490;\n t['Ghook'] = 0x0193;\n t['Gimarmenian'] = 0x0533;\n t['Gjecyrillic'] = 0x0403;\n t['Gmacron'] = 0x1E20;\n t['Gmonospace'] = 0xFF27;\n t['Grave'] = 0xF6CE;\n t['Gravesmall'] = 0xF760;\n t['Gsmall'] = 0xF767;\n t['Gsmallhook'] = 0x029B;\n t['Gstroke'] = 0x01E4;\n t['H'] = 0x0048;\n t['H18533'] = 0x25CF;\n t['H18543'] = 0x25AA;\n t['H18551'] = 0x25AB;\n t['H22073'] = 0x25A1;\n t['HPsquare'] = 0x33CB;\n t['Haabkhasiancyrillic'] = 0x04A8;\n t['Hadescendercyrillic'] = 0x04B2;\n t['Hardsigncyrillic'] = 0x042A;\n t['Hbar'] = 0x0126;\n t['Hbrevebelow'] = 0x1E2A;\n t['Hcedilla'] = 0x1E28;\n t['Hcircle'] = 0x24BD;\n t['Hcircumflex'] = 0x0124;\n t['Hdieresis'] = 0x1E26;\n t['Hdotaccent'] = 0x1E22;\n t['Hdotbelow'] = 0x1E24;\n t['Hmonospace'] = 0xFF28;\n t['Hoarmenian'] = 0x0540;\n t['Horicoptic'] = 0x03E8;\n t['Hsmall'] = 0xF768;\n t['Hungarumlaut'] = 0xF6CF;\n t['Hungarumlautsmall'] = 0xF6F8;\n t['Hzsquare'] = 0x3390;\n t['I'] = 0x0049;\n t['IAcyrillic'] = 0x042F;\n t['IJ'] = 0x0132;\n t['IUcyrillic'] = 0x042E;\n t['Iacute'] = 0x00CD;\n t['Iacutesmall'] = 0xF7ED;\n t['Ibreve'] = 0x012C;\n t['Icaron'] = 0x01CF;\n t['Icircle'] = 0x24BE;\n t['Icircumflex'] = 0x00CE;\n t['Icircumflexsmall'] = 0xF7EE;\n t['Icyrillic'] = 0x0406;\n t['Idblgrave'] = 0x0208;\n t['Idieresis'] = 0x00CF;\n t['Idieresisacute'] = 0x1E2E;\n t['Idieresiscyrillic'] = 0x04E4;\n t['Idieresissmall'] = 0xF7EF;\n t['Idot'] = 0x0130;\n t['Idotaccent'] = 0x0130;\n t['Idotbelow'] = 0x1ECA;\n t['Iebrevecyrillic'] = 0x04D6;\n t['Iecyrillic'] = 0x0415;\n t['Ifraktur'] = 0x2111;\n t['Igrave'] = 0x00CC;\n t['Igravesmall'] = 0xF7EC;\n t['Ihookabove'] = 0x1EC8;\n t['Iicyrillic'] = 0x0418;\n t['Iinvertedbreve'] = 0x020A;\n t['Iishortcyrillic'] = 0x0419;\n t['Imacron'] = 0x012A;\n t['Imacroncyrillic'] = 0x04E2;\n t['Imonospace'] = 0xFF29;\n t['Iniarmenian'] = 0x053B;\n t['Iocyrillic'] = 0x0401;\n t['Iogonek'] = 0x012E;\n t['Iota'] = 0x0399;\n t['Iotaafrican'] = 0x0196;\n t['Iotadieresis'] = 0x03AA;\n t['Iotatonos'] = 0x038A;\n t['Ismall'] = 0xF769;\n t['Istroke'] = 0x0197;\n t['Itilde'] = 0x0128;\n t['Itildebelow'] = 0x1E2C;\n t['Izhitsacyrillic'] = 0x0474;\n t['Izhitsadblgravecyrillic'] = 0x0476;\n t['J'] = 0x004A;\n t['Jaarmenian'] = 0x0541;\n t['Jcircle'] = 0x24BF;\n t['Jcircumflex'] = 0x0134;\n t['Jecyrillic'] = 0x0408;\n t['Jheharmenian'] = 0x054B;\n t['Jmonospace'] = 0xFF2A;\n t['Jsmall'] = 0xF76A;\n t['K'] = 0x004B;\n t['KBsquare'] = 0x3385;\n t['KKsquare'] = 0x33CD;\n t['Kabashkircyrillic'] = 0x04A0;\n t['Kacute'] = 0x1E30;\n t['Kacyrillic'] = 0x041A;\n t['Kadescendercyrillic'] = 0x049A;\n t['Kahookcyrillic'] = 0x04C3;\n t['Kappa'] = 0x039A;\n t['Kastrokecyrillic'] = 0x049E;\n t['Kaverticalstrokecyrillic'] = 0x049C;\n t['Kcaron'] = 0x01E8;\n t['Kcedilla'] = 0x0136;\n t['Kcircle'] = 0x24C0;\n t['Kcommaaccent'] = 0x0136;\n t['Kdotbelow'] = 0x1E32;\n t['Keharmenian'] = 0x0554;\n t['Kenarmenian'] = 0x053F;\n t['Khacyrillic'] = 0x0425;\n t['Kheicoptic'] = 0x03E6;\n t['Khook'] = 0x0198;\n t['Kjecyrillic'] = 0x040C;\n t['Klinebelow'] = 0x1E34;\n t['Kmonospace'] = 0xFF2B;\n t['Koppacyrillic'] = 0x0480;\n t['Koppagreek'] = 0x03DE;\n t['Ksicyrillic'] = 0x046E;\n t['Ksmall'] = 0xF76B;\n t['L'] = 0x004C;\n t['LJ'] = 0x01C7;\n t['LL'] = 0xF6BF;\n t['Lacute'] = 0x0139;\n t['Lambda'] = 0x039B;\n t['Lcaron'] = 0x013D;\n t['Lcedilla'] = 0x013B;\n t['Lcircle'] = 0x24C1;\n t['Lcircumflexbelow'] = 0x1E3C;\n t['Lcommaaccent'] = 0x013B;\n t['Ldot'] = 0x013F;\n t['Ldotaccent'] = 0x013F;\n t['Ldotbelow'] = 0x1E36;\n t['Ldotbelowmacron'] = 0x1E38;\n t['Liwnarmenian'] = 0x053C;\n t['Lj'] = 0x01C8;\n t['Ljecyrillic'] = 0x0409;\n t['Llinebelow'] = 0x1E3A;\n t['Lmonospace'] = 0xFF2C;\n t['Lslash'] = 0x0141;\n t['Lslashsmall'] = 0xF6F9;\n t['Lsmall'] = 0xF76C;\n t['M'] = 0x004D;\n t['MBsquare'] = 0x3386;\n t['Macron'] = 0xF6D0;\n t['Macronsmall'] = 0xF7AF;\n t['Macute'] = 0x1E3E;\n t['Mcircle'] = 0x24C2;\n t['Mdotaccent'] = 0x1E40;\n t['Mdotbelow'] = 0x1E42;\n t['Menarmenian'] = 0x0544;\n t['Mmonospace'] = 0xFF2D;\n t['Msmall'] = 0xF76D;\n t['Mturned'] = 0x019C;\n t['Mu'] = 0x039C;\n t['N'] = 0x004E;\n t['NJ'] = 0x01CA;\n t['Nacute'] = 0x0143;\n t['Ncaron'] = 0x0147;\n t['Ncedilla'] = 0x0145;\n t['Ncircle'] = 0x24C3;\n t['Ncircumflexbelow'] = 0x1E4A;\n t['Ncommaaccent'] = 0x0145;\n t['Ndotaccent'] = 0x1E44;\n t['Ndotbelow'] = 0x1E46;\n t['Nhookleft'] = 0x019D;\n t['Nineroman'] = 0x2168;\n t['Nj'] = 0x01CB;\n t['Njecyrillic'] = 0x040A;\n t['Nlinebelow'] = 0x1E48;\n t['Nmonospace'] = 0xFF2E;\n t['Nowarmenian'] = 0x0546;\n t['Nsmall'] = 0xF76E;\n t['Ntilde'] = 0x00D1;\n t['Ntildesmall'] = 0xF7F1;\n t['Nu'] = 0x039D;\n t['O'] = 0x004F;\n t['OE'] = 0x0152;\n t['OEsmall'] = 0xF6FA;\n t['Oacute'] = 0x00D3;\n t['Oacutesmall'] = 0xF7F3;\n t['Obarredcyrillic'] = 0x04E8;\n t['Obarreddieresiscyrillic'] = 0x04EA;\n t['Obreve'] = 0x014E;\n t['Ocaron'] = 0x01D1;\n t['Ocenteredtilde'] = 0x019F;\n t['Ocircle'] = 0x24C4;\n t['Ocircumflex'] = 0x00D4;\n t['Ocircumflexacute'] = 0x1ED0;\n t['Ocircumflexdotbelow'] = 0x1ED8;\n t['Ocircumflexgrave'] = 0x1ED2;\n t['Ocircumflexhookabove'] = 0x1ED4;\n t['Ocircumflexsmall'] = 0xF7F4;\n t['Ocircumflextilde'] = 0x1ED6;\n t['Ocyrillic'] = 0x041E;\n t['Odblacute'] = 0x0150;\n t['Odblgrave'] = 0x020C;\n t['Odieresis'] = 0x00D6;\n t['Odieresiscyrillic'] = 0x04E6;\n t['Odieresissmall'] = 0xF7F6;\n t['Odotbelow'] = 0x1ECC;\n t['Ogoneksmall'] = 0xF6FB;\n t['Ograve'] = 0x00D2;\n t['Ogravesmall'] = 0xF7F2;\n t['Oharmenian'] = 0x0555;\n t['Ohm'] = 0x2126;\n t['Ohookabove'] = 0x1ECE;\n t['Ohorn'] = 0x01A0;\n t['Ohornacute'] = 0x1EDA;\n t['Ohorndotbelow'] = 0x1EE2;\n t['Ohorngrave'] = 0x1EDC;\n t['Ohornhookabove'] = 0x1EDE;\n t['Ohorntilde'] = 0x1EE0;\n t['Ohungarumlaut'] = 0x0150;\n t['Oi'] = 0x01A2;\n t['Oinvertedbreve'] = 0x020E;\n t['Omacron'] = 0x014C;\n t['Omacronacute'] = 0x1E52;\n t['Omacrongrave'] = 0x1E50;\n t['Omega'] = 0x2126;\n t['Omegacyrillic'] = 0x0460;\n t['Omegagreek'] = 0x03A9;\n t['Omegaroundcyrillic'] = 0x047A;\n t['Omegatitlocyrillic'] = 0x047C;\n t['Omegatonos'] = 0x038F;\n t['Omicron'] = 0x039F;\n t['Omicrontonos'] = 0x038C;\n t['Omonospace'] = 0xFF2F;\n t['Oneroman'] = 0x2160;\n t['Oogonek'] = 0x01EA;\n t['Oogonekmacron'] = 0x01EC;\n t['Oopen'] = 0x0186;\n t['Oslash'] = 0x00D8;\n t['Oslashacute'] = 0x01FE;\n t['Oslashsmall'] = 0xF7F8;\n t['Osmall'] = 0xF76F;\n t['Ostrokeacute'] = 0x01FE;\n t['Otcyrillic'] = 0x047E;\n t['Otilde'] = 0x00D5;\n t['Otildeacute'] = 0x1E4C;\n t['Otildedieresis'] = 0x1E4E;\n t['Otildesmall'] = 0xF7F5;\n t['P'] = 0x0050;\n t['Pacute'] = 0x1E54;\n t['Pcircle'] = 0x24C5;\n t['Pdotaccent'] = 0x1E56;\n t['Pecyrillic'] = 0x041F;\n t['Peharmenian'] = 0x054A;\n t['Pemiddlehookcyrillic'] = 0x04A6;\n t['Phi'] = 0x03A6;\n t['Phook'] = 0x01A4;\n t['Pi'] = 0x03A0;\n t['Piwrarmenian'] = 0x0553;\n t['Pmonospace'] = 0xFF30;\n t['Psi'] = 0x03A8;\n t['Psicyrillic'] = 0x0470;\n t['Psmall'] = 0xF770;\n t['Q'] = 0x0051;\n t['Qcircle'] = 0x24C6;\n t['Qmonospace'] = 0xFF31;\n t['Qsmall'] = 0xF771;\n t['R'] = 0x0052;\n t['Raarmenian'] = 0x054C;\n t['Racute'] = 0x0154;\n t['Rcaron'] = 0x0158;\n t['Rcedilla'] = 0x0156;\n t['Rcircle'] = 0x24C7;\n t['Rcommaaccent'] = 0x0156;\n t['Rdblgrave'] = 0x0210;\n t['Rdotaccent'] = 0x1E58;\n t['Rdotbelow'] = 0x1E5A;\n t['Rdotbelowmacron'] = 0x1E5C;\n t['Reharmenian'] = 0x0550;\n t['Rfraktur'] = 0x211C;\n t['Rho'] = 0x03A1;\n t['Ringsmall'] = 0xF6FC;\n t['Rinvertedbreve'] = 0x0212;\n t['Rlinebelow'] = 0x1E5E;\n t['Rmonospace'] = 0xFF32;\n t['Rsmall'] = 0xF772;\n t['Rsmallinverted'] = 0x0281;\n t['Rsmallinvertedsuperior'] = 0x02B6;\n t['S'] = 0x0053;\n t['SF010000'] = 0x250C;\n t['SF020000'] = 0x2514;\n t['SF030000'] = 0x2510;\n t['SF040000'] = 0x2518;\n t['SF050000'] = 0x253C;\n t['SF060000'] = 0x252C;\n t['SF070000'] = 0x2534;\n t['SF080000'] = 0x251C;\n t['SF090000'] = 0x2524;\n t['SF100000'] = 0x2500;\n t['SF110000'] = 0x2502;\n t['SF190000'] = 0x2561;\n t['SF200000'] = 0x2562;\n t['SF210000'] = 0x2556;\n t['SF220000'] = 0x2555;\n t['SF230000'] = 0x2563;\n t['SF240000'] = 0x2551;\n t['SF250000'] = 0x2557;\n t['SF260000'] = 0x255D;\n t['SF270000'] = 0x255C;\n t['SF280000'] = 0x255B;\n t['SF360000'] = 0x255E;\n t['SF370000'] = 0x255F;\n t['SF380000'] = 0x255A;\n t['SF390000'] = 0x2554;\n t['SF400000'] = 0x2569;\n t['SF410000'] = 0x2566;\n t['SF420000'] = 0x2560;\n t['SF430000'] = 0x2550;\n t['SF440000'] = 0x256C;\n t['SF450000'] = 0x2567;\n t['SF460000'] = 0x2568;\n t['SF470000'] = 0x2564;\n t['SF480000'] = 0x2565;\n t['SF490000'] = 0x2559;\n t['SF500000'] = 0x2558;\n t['SF510000'] = 0x2552;\n t['SF520000'] = 0x2553;\n t['SF530000'] = 0x256B;\n t['SF540000'] = 0x256A;\n t['Sacute'] = 0x015A;\n t['Sacutedotaccent'] = 0x1E64;\n t['Sampigreek'] = 0x03E0;\n t['Scaron'] = 0x0160;\n t['Scarondotaccent'] = 0x1E66;\n t['Scaronsmall'] = 0xF6FD;\n t['Scedilla'] = 0x015E;\n t['Schwa'] = 0x018F;\n t['Schwacyrillic'] = 0x04D8;\n t['Schwadieresiscyrillic'] = 0x04DA;\n t['Scircle'] = 0x24C8;\n t['Scircumflex'] = 0x015C;\n t['Scommaaccent'] = 0x0218;\n t['Sdotaccent'] = 0x1E60;\n t['Sdotbelow'] = 0x1E62;\n t['Sdotbelowdotaccent'] = 0x1E68;\n t['Seharmenian'] = 0x054D;\n t['Sevenroman'] = 0x2166;\n t['Shaarmenian'] = 0x0547;\n t['Shacyrillic'] = 0x0428;\n t['Shchacyrillic'] = 0x0429;\n t['Sheicoptic'] = 0x03E2;\n t['Shhacyrillic'] = 0x04BA;\n t['Shimacoptic'] = 0x03EC;\n t['Sigma'] = 0x03A3;\n t['Sixroman'] = 0x2165;\n t['Smonospace'] = 0xFF33;\n t['Softsigncyrillic'] = 0x042C;\n t['Ssmall'] = 0xF773;\n t['Stigmagreek'] = 0x03DA;\n t['T'] = 0x0054;\n t['Tau'] = 0x03A4;\n t['Tbar'] = 0x0166;\n t['Tcaron'] = 0x0164;\n t['Tcedilla'] = 0x0162;\n t['Tcircle'] = 0x24C9;\n t['Tcircumflexbelow'] = 0x1E70;\n t['Tcommaaccent'] = 0x0162;\n t['Tdotaccent'] = 0x1E6A;\n t['Tdotbelow'] = 0x1E6C;\n t['Tecyrillic'] = 0x0422;\n t['Tedescendercyrillic'] = 0x04AC;\n t['Tenroman'] = 0x2169;\n t['Tetsecyrillic'] = 0x04B4;\n t['Theta'] = 0x0398;\n t['Thook'] = 0x01AC;\n t['Thorn'] = 0x00DE;\n t['Thornsmall'] = 0xF7FE;\n t['Threeroman'] = 0x2162;\n t['Tildesmall'] = 0xF6FE;\n t['Tiwnarmenian'] = 0x054F;\n t['Tlinebelow'] = 0x1E6E;\n t['Tmonospace'] = 0xFF34;\n t['Toarmenian'] = 0x0539;\n t['Tonefive'] = 0x01BC;\n t['Tonesix'] = 0x0184;\n t['Tonetwo'] = 0x01A7;\n t['Tretroflexhook'] = 0x01AE;\n t['Tsecyrillic'] = 0x0426;\n t['Tshecyrillic'] = 0x040B;\n t['Tsmall'] = 0xF774;\n t['Twelveroman'] = 0x216B;\n t['Tworoman'] = 0x2161;\n t['U'] = 0x0055;\n t['Uacute'] = 0x00DA;\n t['Uacutesmall'] = 0xF7FA;\n t['Ubreve'] = 0x016C;\n t['Ucaron'] = 0x01D3;\n t['Ucircle'] = 0x24CA;\n t['Ucircumflex'] = 0x00DB;\n t['Ucircumflexbelow'] = 0x1E76;\n t['Ucircumflexsmall'] = 0xF7FB;\n t['Ucyrillic'] = 0x0423;\n t['Udblacute'] = 0x0170;\n t['Udblgrave'] = 0x0214;\n t['Udieresis'] = 0x00DC;\n t['Udieresisacute'] = 0x01D7;\n t['Udieresisbelow'] = 0x1E72;\n t['Udieresiscaron'] = 0x01D9;\n t['Udieresiscyrillic'] = 0x04F0;\n t['Udieresisgrave'] = 0x01DB;\n t['Udieresismacron'] = 0x01D5;\n t['Udieresissmall'] = 0xF7FC;\n t['Udotbelow'] = 0x1EE4;\n t['Ugrave'] = 0x00D9;\n t['Ugravesmall'] = 0xF7F9;\n t['Uhookabove'] = 0x1EE6;\n t['Uhorn'] = 0x01AF;\n t['Uhornacute'] = 0x1EE8;\n t['Uhorndotbelow'] = 0x1EF0;\n t['Uhorngrave'] = 0x1EEA;\n t['Uhornhookabove'] = 0x1EEC;\n t['Uhorntilde'] = 0x1EEE;\n t['Uhungarumlaut'] = 0x0170;\n t['Uhungarumlautcyrillic'] = 0x04F2;\n t['Uinvertedbreve'] = 0x0216;\n t['Ukcyrillic'] = 0x0478;\n t['Umacron'] = 0x016A;\n t['Umacroncyrillic'] = 0x04EE;\n t['Umacrondieresis'] = 0x1E7A;\n t['Umonospace'] = 0xFF35;\n t['Uogonek'] = 0x0172;\n t['Upsilon'] = 0x03A5;\n t['Upsilon1'] = 0x03D2;\n t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n t['Upsilonafrican'] = 0x01B1;\n t['Upsilondieresis'] = 0x03AB;\n t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n t['Upsilonhooksymbol'] = 0x03D2;\n t['Upsilontonos'] = 0x038E;\n t['Uring'] = 0x016E;\n t['Ushortcyrillic'] = 0x040E;\n t['Usmall'] = 0xF775;\n t['Ustraightcyrillic'] = 0x04AE;\n t['Ustraightstrokecyrillic'] = 0x04B0;\n t['Utilde'] = 0x0168;\n t['Utildeacute'] = 0x1E78;\n t['Utildebelow'] = 0x1E74;\n t['V'] = 0x0056;\n t['Vcircle'] = 0x24CB;\n t['Vdotbelow'] = 0x1E7E;\n t['Vecyrillic'] = 0x0412;\n t['Vewarmenian'] = 0x054E;\n t['Vhook'] = 0x01B2;\n t['Vmonospace'] = 0xFF36;\n t['Voarmenian'] = 0x0548;\n t['Vsmall'] = 0xF776;\n t['Vtilde'] = 0x1E7C;\n t['W'] = 0x0057;\n t['Wacute'] = 0x1E82;\n t['Wcircle'] = 0x24CC;\n t['Wcircumflex'] = 0x0174;\n t['Wdieresis'] = 0x1E84;\n t['Wdotaccent'] = 0x1E86;\n t['Wdotbelow'] = 0x1E88;\n t['Wgrave'] = 0x1E80;\n t['Wmonospace'] = 0xFF37;\n t['Wsmall'] = 0xF777;\n t['X'] = 0x0058;\n t['Xcircle'] = 0x24CD;\n t['Xdieresis'] = 0x1E8C;\n t['Xdotaccent'] = 0x1E8A;\n t['Xeharmenian'] = 0x053D;\n t['Xi'] = 0x039E;\n t['Xmonospace'] = 0xFF38;\n t['Xsmall'] = 0xF778;\n t['Y'] = 0x0059;\n t['Yacute'] = 0x00DD;\n t['Yacutesmall'] = 0xF7FD;\n t['Yatcyrillic'] = 0x0462;\n t['Ycircle'] = 0x24CE;\n t['Ycircumflex'] = 0x0176;\n t['Ydieresis'] = 0x0178;\n t['Ydieresissmall'] = 0xF7FF;\n t['Ydotaccent'] = 0x1E8E;\n t['Ydotbelow'] = 0x1EF4;\n t['Yericyrillic'] = 0x042B;\n t['Yerudieresiscyrillic'] = 0x04F8;\n t['Ygrave'] = 0x1EF2;\n t['Yhook'] = 0x01B3;\n t['Yhookabove'] = 0x1EF6;\n t['Yiarmenian'] = 0x0545;\n t['Yicyrillic'] = 0x0407;\n t['Yiwnarmenian'] = 0x0552;\n t['Ymonospace'] = 0xFF39;\n t['Ysmall'] = 0xF779;\n t['Ytilde'] = 0x1EF8;\n t['Yusbigcyrillic'] = 0x046A;\n t['Yusbigiotifiedcyrillic'] = 0x046C;\n t['Yuslittlecyrillic'] = 0x0466;\n t['Yuslittleiotifiedcyrillic'] = 0x0468;\n t['Z'] = 0x005A;\n t['Zaarmenian'] = 0x0536;\n t['Zacute'] = 0x0179;\n t['Zcaron'] = 0x017D;\n t['Zcaronsmall'] = 0xF6FF;\n t['Zcircle'] = 0x24CF;\n t['Zcircumflex'] = 0x1E90;\n t['Zdot'] = 0x017B;\n t['Zdotaccent'] = 0x017B;\n t['Zdotbelow'] = 0x1E92;\n t['Zecyrillic'] = 0x0417;\n t['Zedescendercyrillic'] = 0x0498;\n t['Zedieresiscyrillic'] = 0x04DE;\n t['Zeta'] = 0x0396;\n t['Zhearmenian'] = 0x053A;\n t['Zhebrevecyrillic'] = 0x04C1;\n t['Zhecyrillic'] = 0x0416;\n t['Zhedescendercyrillic'] = 0x0496;\n t['Zhedieresiscyrillic'] = 0x04DC;\n t['Zlinebelow'] = 0x1E94;\n t['Zmonospace'] = 0xFF3A;\n t['Zsmall'] = 0xF77A;\n t['Zstroke'] = 0x01B5;\n t['a'] = 0x0061;\n t['aabengali'] = 0x0986;\n t['aacute'] = 0x00E1;\n t['aadeva'] = 0x0906;\n t['aagujarati'] = 0x0A86;\n t['aagurmukhi'] = 0x0A06;\n t['aamatragurmukhi'] = 0x0A3E;\n t['aarusquare'] = 0x3303;\n t['aavowelsignbengali'] = 0x09BE;\n t['aavowelsigndeva'] = 0x093E;\n t['aavowelsigngujarati'] = 0x0ABE;\n t['abbreviationmarkarmenian'] = 0x055F;\n t['abbreviationsigndeva'] = 0x0970;\n t['abengali'] = 0x0985;\n t['abopomofo'] = 0x311A;\n t['abreve'] = 0x0103;\n t['abreveacute'] = 0x1EAF;\n t['abrevecyrillic'] = 0x04D1;\n t['abrevedotbelow'] = 0x1EB7;\n t['abrevegrave'] = 0x1EB1;\n t['abrevehookabove'] = 0x1EB3;\n t['abrevetilde'] = 0x1EB5;\n t['acaron'] = 0x01CE;\n t['acircle'] = 0x24D0;\n t['acircumflex'] = 0x00E2;\n t['acircumflexacute'] = 0x1EA5;\n t['acircumflexdotbelow'] = 0x1EAD;\n t['acircumflexgrave'] = 0x1EA7;\n t['acircumflexhookabove'] = 0x1EA9;\n t['acircumflextilde'] = 0x1EAB;\n t['acute'] = 0x00B4;\n t['acutebelowcmb'] = 0x0317;\n t['acutecmb'] = 0x0301;\n t['acutecomb'] = 0x0301;\n t['acutedeva'] = 0x0954;\n t['acutelowmod'] = 0x02CF;\n t['acutetonecmb'] = 0x0341;\n t['acyrillic'] = 0x0430;\n t['adblgrave'] = 0x0201;\n t['addakgurmukhi'] = 0x0A71;\n t['adeva'] = 0x0905;\n t['adieresis'] = 0x00E4;\n t['adieresiscyrillic'] = 0x04D3;\n t['adieresismacron'] = 0x01DF;\n t['adotbelow'] = 0x1EA1;\n t['adotmacron'] = 0x01E1;\n t['ae'] = 0x00E6;\n t['aeacute'] = 0x01FD;\n t['aekorean'] = 0x3150;\n t['aemacron'] = 0x01E3;\n t['afii00208'] = 0x2015;\n t['afii08941'] = 0x20A4;\n t['afii10017'] = 0x0410;\n t['afii10018'] = 0x0411;\n t['afii10019'] = 0x0412;\n t['afii10020'] = 0x0413;\n t['afii10021'] = 0x0414;\n t['afii10022'] = 0x0415;\n t['afii10023'] = 0x0401;\n t['afii10024'] = 0x0416;\n t['afii10025'] = 0x0417;\n t['afii10026'] = 0x0418;\n t['afii10027'] = 0x0419;\n t['afii10028'] = 0x041A;\n t['afii10029'] = 0x041B;\n t['afii10030'] = 0x041C;\n t['afii10031'] = 0x041D;\n t['afii10032'] = 0x041E;\n t['afii10033'] = 0x041F;\n t['afii10034'] = 0x0420;\n t['afii10035'] = 0x0421;\n t['afii10036'] = 0x0422;\n t['afii10037'] = 0x0423;\n t['afii10038'] = 0x0424;\n t['afii10039'] = 0x0425;\n t['afii10040'] = 0x0426;\n t['afii10041'] = 0x0427;\n t['afii10042'] = 0x0428;\n t['afii10043'] = 0x0429;\n t['afii10044'] = 0x042A;\n t['afii10045'] = 0x042B;\n t['afii10046'] = 0x042C;\n t['afii10047'] = 0x042D;\n t['afii10048'] = 0x042E;\n t['afii10049'] = 0x042F;\n t['afii10050'] = 0x0490;\n t['afii10051'] = 0x0402;\n t['afii10052'] = 0x0403;\n t['afii10053'] = 0x0404;\n t['afii10054'] = 0x0405;\n t['afii10055'] = 0x0406;\n t['afii10056'] = 0x0407;\n t['afii10057'] = 0x0408;\n t['afii10058'] = 0x0409;\n t['afii10059'] = 0x040A;\n t['afii10060'] = 0x040B;\n t['afii10061'] = 0x040C;\n t['afii10062'] = 0x040E;\n t['afii10063'] = 0xF6C4;\n t['afii10064'] = 0xF6C5;\n t['afii10065'] = 0x0430;\n t['afii10066'] = 0x0431;\n t['afii10067'] = 0x0432;\n t['afii10068'] = 0x0433;\n t['afii10069'] = 0x0434;\n t['afii10070'] = 0x0435;\n t['afii10071'] = 0x0451;\n t['afii10072'] = 0x0436;\n t['afii10073'] = 0x0437;\n t['afii10074'] = 0x0438;\n t['afii10075'] = 0x0439;\n t['afii10076'] = 0x043A;\n t['afii10077'] = 0x043B;\n t['afii10078'] = 0x043C;\n t['afii10079'] = 0x043D;\n t['afii10080'] = 0x043E;\n t['afii10081'] = 0x043F;\n t['afii10082'] = 0x0440;\n t['afii10083'] = 0x0441;\n t['afii10084'] = 0x0442;\n t['afii10085'] = 0x0443;\n t['afii10086'] = 0x0444;\n t['afii10087'] = 0x0445;\n t['afii10088'] = 0x0446;\n t['afii10089'] = 0x0447;\n t['afii10090'] = 0x0448;\n t['afii10091'] = 0x0449;\n t['afii10092'] = 0x044A;\n t['afii10093'] = 0x044B;\n t['afii10094'] = 0x044C;\n t['afii10095'] = 0x044D;\n t['afii10096'] = 0x044E;\n t['afii10097'] = 0x044F;\n t['afii10098'] = 0x0491;\n t['afii10099'] = 0x0452;\n t['afii10100'] = 0x0453;\n t['afii10101'] = 0x0454;\n t['afii10102'] = 0x0455;\n t['afii10103'] = 0x0456;\n t['afii10104'] = 0x0457;\n t['afii10105'] = 0x0458;\n t['afii10106'] = 0x0459;\n t['afii10107'] = 0x045A;\n t['afii10108'] = 0x045B;\n t['afii10109'] = 0x045C;\n t['afii10110'] = 0x045E;\n t['afii10145'] = 0x040F;\n t['afii10146'] = 0x0462;\n t['afii10147'] = 0x0472;\n t['afii10148'] = 0x0474;\n t['afii10192'] = 0xF6C6;\n t['afii10193'] = 0x045F;\n t['afii10194'] = 0x0463;\n t['afii10195'] = 0x0473;\n t['afii10196'] = 0x0475;\n t['afii10831'] = 0xF6C7;\n t['afii10832'] = 0xF6C8;\n t['afii10846'] = 0x04D9;\n t['afii299'] = 0x200E;\n t['afii300'] = 0x200F;\n t['afii301'] = 0x200D;\n t['afii57381'] = 0x066A;\n t['afii57388'] = 0x060C;\n t['afii57392'] = 0x0660;\n t['afii57393'] = 0x0661;\n t['afii57394'] = 0x0662;\n t['afii57395'] = 0x0663;\n t['afii57396'] = 0x0664;\n t['afii57397'] = 0x0665;\n t['afii57398'] = 0x0666;\n t['afii57399'] = 0x0667;\n t['afii57400'] = 0x0668;\n t['afii57401'] = 0x0669;\n t['afii57403'] = 0x061B;\n t['afii57407'] = 0x061F;\n t['afii57409'] = 0x0621;\n t['afii57410'] = 0x0622;\n t['afii57411'] = 0x0623;\n t['afii57412'] = 0x0624;\n t['afii57413'] = 0x0625;\n t['afii57414'] = 0x0626;\n t['afii57415'] = 0x0627;\n t['afii57416'] = 0x0628;\n t['afii57417'] = 0x0629;\n t['afii57418'] = 0x062A;\n t['afii57419'] = 0x062B;\n t['afii57420'] = 0x062C;\n t['afii57421'] = 0x062D;\n t['afii57422'] = 0x062E;\n t['afii57423'] = 0x062F;\n t['afii57424'] = 0x0630;\n t['afii57425'] = 0x0631;\n t['afii57426'] = 0x0632;\n t['afii57427'] = 0x0633;\n t['afii57428'] = 0x0634;\n t['afii57429'] = 0x0635;\n t['afii57430'] = 0x0636;\n t['afii57431'] = 0x0637;\n t['afii57432'] = 0x0638;\n t['afii57433'] = 0x0639;\n t['afii57434'] = 0x063A;\n t['afii57440'] = 0x0640;\n t['afii57441'] = 0x0641;\n t['afii57442'] = 0x0642;\n t['afii57443'] = 0x0643;\n t['afii57444'] = 0x0644;\n t['afii57445'] = 0x0645;\n t['afii57446'] = 0x0646;\n t['afii57448'] = 0x0648;\n t['afii57449'] = 0x0649;\n t['afii57450'] = 0x064A;\n t['afii57451'] = 0x064B;\n t['afii57452'] = 0x064C;\n t['afii57453'] = 0x064D;\n t['afii57454'] = 0x064E;\n t['afii57455'] = 0x064F;\n t['afii57456'] = 0x0650;\n t['afii57457'] = 0x0651;\n t['afii57458'] = 0x0652;\n t['afii57470'] = 0x0647;\n t['afii57505'] = 0x06A4;\n t['afii57506'] = 0x067E;\n t['afii57507'] = 0x0686;\n t['afii57508'] = 0x0698;\n t['afii57509'] = 0x06AF;\n t['afii57511'] = 0x0679;\n t['afii57512'] = 0x0688;\n t['afii57513'] = 0x0691;\n t['afii57514'] = 0x06BA;\n t['afii57519'] = 0x06D2;\n t['afii57534'] = 0x06D5;\n t['afii57636'] = 0x20AA;\n t['afii57645'] = 0x05BE;\n t['afii57658'] = 0x05C3;\n t['afii57664'] = 0x05D0;\n t['afii57665'] = 0x05D1;\n t['afii57666'] = 0x05D2;\n t['afii57667'] = 0x05D3;\n t['afii57668'] = 0x05D4;\n t['afii57669'] = 0x05D5;\n t['afii57670'] = 0x05D6;\n t['afii57671'] = 0x05D7;\n t['afii57672'] = 0x05D8;\n t['afii57673'] = 0x05D9;\n t['afii57674'] = 0x05DA;\n t['afii57675'] = 0x05DB;\n t['afii57676'] = 0x05DC;\n t['afii57677'] = 0x05DD;\n t['afii57678'] = 0x05DE;\n t['afii57679'] = 0x05DF;\n t['afii57680'] = 0x05E0;\n t['afii57681'] = 0x05E1;\n t['afii57682'] = 0x05E2;\n t['afii57683'] = 0x05E3;\n t['afii57684'] = 0x05E4;\n t['afii57685'] = 0x05E5;\n t['afii57686'] = 0x05E6;\n t['afii57687'] = 0x05E7;\n t['afii57688'] = 0x05E8;\n t['afii57689'] = 0x05E9;\n t['afii57690'] = 0x05EA;\n t['afii57694'] = 0xFB2A;\n t['afii57695'] = 0xFB2B;\n t['afii57700'] = 0xFB4B;\n t['afii57705'] = 0xFB1F;\n t['afii57716'] = 0x05F0;\n t['afii57717'] = 0x05F1;\n t['afii57718'] = 0x05F2;\n t['afii57723'] = 0xFB35;\n t['afii57793'] = 0x05B4;\n t['afii57794'] = 0x05B5;\n t['afii57795'] = 0x05B6;\n t['afii57796'] = 0x05BB;\n t['afii57797'] = 0x05B8;\n t['afii57798'] = 0x05B7;\n t['afii57799'] = 0x05B0;\n t['afii57800'] = 0x05B2;\n t['afii57801'] = 0x05B1;\n t['afii57802'] = 0x05B3;\n t['afii57803'] = 0x05C2;\n t['afii57804'] = 0x05C1;\n t['afii57806'] = 0x05B9;\n t['afii57807'] = 0x05BC;\n t['afii57839'] = 0x05BD;\n t['afii57841'] = 0x05BF;\n t['afii57842'] = 0x05C0;\n t['afii57929'] = 0x02BC;\n t['afii61248'] = 0x2105;\n t['afii61289'] = 0x2113;\n t['afii61352'] = 0x2116;\n t['afii61573'] = 0x202C;\n t['afii61574'] = 0x202D;\n t['afii61575'] = 0x202E;\n t['afii61664'] = 0x200C;\n t['afii63167'] = 0x066D;\n t['afii64937'] = 0x02BD;\n t['agrave'] = 0x00E0;\n t['agujarati'] = 0x0A85;\n t['agurmukhi'] = 0x0A05;\n t['ahiragana'] = 0x3042;\n t['ahookabove'] = 0x1EA3;\n t['aibengali'] = 0x0990;\n t['aibopomofo'] = 0x311E;\n t['aideva'] = 0x0910;\n t['aiecyrillic'] = 0x04D5;\n t['aigujarati'] = 0x0A90;\n t['aigurmukhi'] = 0x0A10;\n t['aimatragurmukhi'] = 0x0A48;\n t['ainarabic'] = 0x0639;\n t['ainfinalarabic'] = 0xFECA;\n t['aininitialarabic'] = 0xFECB;\n t['ainmedialarabic'] = 0xFECC;\n t['ainvertedbreve'] = 0x0203;\n t['aivowelsignbengali'] = 0x09C8;\n t['aivowelsigndeva'] = 0x0948;\n t['aivowelsigngujarati'] = 0x0AC8;\n t['akatakana'] = 0x30A2;\n t['akatakanahalfwidth'] = 0xFF71;\n t['akorean'] = 0x314F;\n t['alef'] = 0x05D0;\n t['alefarabic'] = 0x0627;\n t['alefdageshhebrew'] = 0xFB30;\n t['aleffinalarabic'] = 0xFE8E;\n t['alefhamzaabovearabic'] = 0x0623;\n t['alefhamzaabovefinalarabic'] = 0xFE84;\n t['alefhamzabelowarabic'] = 0x0625;\n t['alefhamzabelowfinalarabic'] = 0xFE88;\n t['alefhebrew'] = 0x05D0;\n t['aleflamedhebrew'] = 0xFB4F;\n t['alefmaddaabovearabic'] = 0x0622;\n t['alefmaddaabovefinalarabic'] = 0xFE82;\n t['alefmaksuraarabic'] = 0x0649;\n t['alefmaksurafinalarabic'] = 0xFEF0;\n t['alefmaksurainitialarabic'] = 0xFEF3;\n t['alefmaksuramedialarabic'] = 0xFEF4;\n t['alefpatahhebrew'] = 0xFB2E;\n t['alefqamatshebrew'] = 0xFB2F;\n t['aleph'] = 0x2135;\n t['allequal'] = 0x224C;\n t['alpha'] = 0x03B1;\n t['alphatonos'] = 0x03AC;\n t['amacron'] = 0x0101;\n t['amonospace'] = 0xFF41;\n t['ampersand'] = 0x0026;\n t['ampersandmonospace'] = 0xFF06;\n t['ampersandsmall'] = 0xF726;\n t['amsquare'] = 0x33C2;\n t['anbopomofo'] = 0x3122;\n t['angbopomofo'] = 0x3124;\n t['angbracketleft'] = 0x3008;\n t['angbracketright'] = 0x3009;\n t['angkhankhuthai'] = 0x0E5A;\n t['angle'] = 0x2220;\n t['anglebracketleft'] = 0x3008;\n t['anglebracketleftvertical'] = 0xFE3F;\n t['anglebracketright'] = 0x3009;\n t['anglebracketrightvertical'] = 0xFE40;\n t['angleleft'] = 0x2329;\n t['angleright'] = 0x232A;\n t['angstrom'] = 0x212B;\n t['anoteleia'] = 0x0387;\n t['anudattadeva'] = 0x0952;\n t['anusvarabengali'] = 0x0982;\n t['anusvaradeva'] = 0x0902;\n t['anusvaragujarati'] = 0x0A82;\n t['aogonek'] = 0x0105;\n t['apaatosquare'] = 0x3300;\n t['aparen'] = 0x249C;\n t['apostrophearmenian'] = 0x055A;\n t['apostrophemod'] = 0x02BC;\n t['apple'] = 0xF8FF;\n t['approaches'] = 0x2250;\n t['approxequal'] = 0x2248;\n t['approxequalorimage'] = 0x2252;\n t['approximatelyequal'] = 0x2245;\n t['araeaekorean'] = 0x318E;\n t['araeakorean'] = 0x318D;\n t['arc'] = 0x2312;\n t['arighthalfring'] = 0x1E9A;\n t['aring'] = 0x00E5;\n t['aringacute'] = 0x01FB;\n t['aringbelow'] = 0x1E01;\n t['arrowboth'] = 0x2194;\n t['arrowdashdown'] = 0x21E3;\n t['arrowdashleft'] = 0x21E0;\n t['arrowdashright'] = 0x21E2;\n t['arrowdashup'] = 0x21E1;\n t['arrowdblboth'] = 0x21D4;\n t['arrowdbldown'] = 0x21D3;\n t['arrowdblleft'] = 0x21D0;\n t['arrowdblright'] = 0x21D2;\n t['arrowdblup'] = 0x21D1;\n t['arrowdown'] = 0x2193;\n t['arrowdownleft'] = 0x2199;\n t['arrowdownright'] = 0x2198;\n t['arrowdownwhite'] = 0x21E9;\n t['arrowheaddownmod'] = 0x02C5;\n t['arrowheadleftmod'] = 0x02C2;\n t['arrowheadrightmod'] = 0x02C3;\n t['arrowheadupmod'] = 0x02C4;\n t['arrowhorizex'] = 0xF8E7;\n t['arrowleft'] = 0x2190;\n t['arrowleftdbl'] = 0x21D0;\n t['arrowleftdblstroke'] = 0x21CD;\n t['arrowleftoverright'] = 0x21C6;\n t['arrowleftwhite'] = 0x21E6;\n t['arrowright'] = 0x2192;\n t['arrowrightdblstroke'] = 0x21CF;\n t['arrowrightheavy'] = 0x279E;\n t['arrowrightoverleft'] = 0x21C4;\n t['arrowrightwhite'] = 0x21E8;\n t['arrowtableft'] = 0x21E4;\n t['arrowtabright'] = 0x21E5;\n t['arrowup'] = 0x2191;\n t['arrowupdn'] = 0x2195;\n t['arrowupdnbse'] = 0x21A8;\n t['arrowupdownbase'] = 0x21A8;\n t['arrowupleft'] = 0x2196;\n t['arrowupleftofdown'] = 0x21C5;\n t['arrowupright'] = 0x2197;\n t['arrowupwhite'] = 0x21E7;\n t['arrowvertex'] = 0xF8E6;\n t['asciicircum'] = 0x005E;\n t['asciicircummonospace'] = 0xFF3E;\n t['asciitilde'] = 0x007E;\n t['asciitildemonospace'] = 0xFF5E;\n t['ascript'] = 0x0251;\n t['ascriptturned'] = 0x0252;\n t['asmallhiragana'] = 0x3041;\n t['asmallkatakana'] = 0x30A1;\n t['asmallkatakanahalfwidth'] = 0xFF67;\n t['asterisk'] = 0x002A;\n t['asteriskaltonearabic'] = 0x066D;\n t['asteriskarabic'] = 0x066D;\n t['asteriskmath'] = 0x2217;\n t['asteriskmonospace'] = 0xFF0A;\n t['asterisksmall'] = 0xFE61;\n t['asterism'] = 0x2042;\n t['asuperior'] = 0xF6E9;\n t['asymptoticallyequal'] = 0x2243;\n t['at'] = 0x0040;\n t['atilde'] = 0x00E3;\n t['atmonospace'] = 0xFF20;\n t['atsmall'] = 0xFE6B;\n t['aturned'] = 0x0250;\n t['aubengali'] = 0x0994;\n t['aubopomofo'] = 0x3120;\n t['audeva'] = 0x0914;\n t['augujarati'] = 0x0A94;\n t['augurmukhi'] = 0x0A14;\n t['aulengthmarkbengali'] = 0x09D7;\n t['aumatragurmukhi'] = 0x0A4C;\n t['auvowelsignbengali'] = 0x09CC;\n t['auvowelsigndeva'] = 0x094C;\n t['auvowelsigngujarati'] = 0x0ACC;\n t['avagrahadeva'] = 0x093D;\n t['aybarmenian'] = 0x0561;\n t['ayin'] = 0x05E2;\n t['ayinaltonehebrew'] = 0xFB20;\n t['ayinhebrew'] = 0x05E2;\n t['b'] = 0x0062;\n t['babengali'] = 0x09AC;\n t['backslash'] = 0x005C;\n t['backslashmonospace'] = 0xFF3C;\n t['badeva'] = 0x092C;\n t['bagujarati'] = 0x0AAC;\n t['bagurmukhi'] = 0x0A2C;\n t['bahiragana'] = 0x3070;\n t['bahtthai'] = 0x0E3F;\n t['bakatakana'] = 0x30D0;\n t['bar'] = 0x007C;\n t['barmonospace'] = 0xFF5C;\n t['bbopomofo'] = 0x3105;\n t['bcircle'] = 0x24D1;\n t['bdotaccent'] = 0x1E03;\n t['bdotbelow'] = 0x1E05;\n t['beamedsixteenthnotes'] = 0x266C;\n t['because'] = 0x2235;\n t['becyrillic'] = 0x0431;\n t['beharabic'] = 0x0628;\n t['behfinalarabic'] = 0xFE90;\n t['behinitialarabic'] = 0xFE91;\n t['behiragana'] = 0x3079;\n t['behmedialarabic'] = 0xFE92;\n t['behmeeminitialarabic'] = 0xFC9F;\n t['behmeemisolatedarabic'] = 0xFC08;\n t['behnoonfinalarabic'] = 0xFC6D;\n t['bekatakana'] = 0x30D9;\n t['benarmenian'] = 0x0562;\n t['bet'] = 0x05D1;\n t['beta'] = 0x03B2;\n t['betasymbolgreek'] = 0x03D0;\n t['betdagesh'] = 0xFB31;\n t['betdageshhebrew'] = 0xFB31;\n t['bethebrew'] = 0x05D1;\n t['betrafehebrew'] = 0xFB4C;\n t['bhabengali'] = 0x09AD;\n t['bhadeva'] = 0x092D;\n t['bhagujarati'] = 0x0AAD;\n t['bhagurmukhi'] = 0x0A2D;\n t['bhook'] = 0x0253;\n t['bihiragana'] = 0x3073;\n t['bikatakana'] = 0x30D3;\n t['bilabialclick'] = 0x0298;\n t['bindigurmukhi'] = 0x0A02;\n t['birusquare'] = 0x3331;\n t['blackcircle'] = 0x25CF;\n t['blackdiamond'] = 0x25C6;\n t['blackdownpointingtriangle'] = 0x25BC;\n t['blackleftpointingpointer'] = 0x25C4;\n t['blackleftpointingtriangle'] = 0x25C0;\n t['blacklenticularbracketleft'] = 0x3010;\n t['blacklenticularbracketleftvertical'] = 0xFE3B;\n t['blacklenticularbracketright'] = 0x3011;\n t['blacklenticularbracketrightvertical'] = 0xFE3C;\n t['blacklowerlefttriangle'] = 0x25E3;\n t['blacklowerrighttriangle'] = 0x25E2;\n t['blackrectangle'] = 0x25AC;\n t['blackrightpointingpointer'] = 0x25BA;\n t['blackrightpointingtriangle'] = 0x25B6;\n t['blacksmallsquare'] = 0x25AA;\n t['blacksmilingface'] = 0x263B;\n t['blacksquare'] = 0x25A0;\n t['blackstar'] = 0x2605;\n t['blackupperlefttriangle'] = 0x25E4;\n t['blackupperrighttriangle'] = 0x25E5;\n t['blackuppointingsmalltriangle'] = 0x25B4;\n t['blackuppointingtriangle'] = 0x25B2;\n t['blank'] = 0x2423;\n t['blinebelow'] = 0x1E07;\n t['block'] = 0x2588;\n t['bmonospace'] = 0xFF42;\n t['bobaimaithai'] = 0x0E1A;\n t['bohiragana'] = 0x307C;\n t['bokatakana'] = 0x30DC;\n t['bparen'] = 0x249D;\n t['bqsquare'] = 0x33C3;\n t['braceex'] = 0xF8F4;\n t['braceleft'] = 0x007B;\n t['braceleftbt'] = 0xF8F3;\n t['braceleftmid'] = 0xF8F2;\n t['braceleftmonospace'] = 0xFF5B;\n t['braceleftsmall'] = 0xFE5B;\n t['bracelefttp'] = 0xF8F1;\n t['braceleftvertical'] = 0xFE37;\n t['braceright'] = 0x007D;\n t['bracerightbt'] = 0xF8FE;\n t['bracerightmid'] = 0xF8FD;\n t['bracerightmonospace'] = 0xFF5D;\n t['bracerightsmall'] = 0xFE5C;\n t['bracerighttp'] = 0xF8FC;\n t['bracerightvertical'] = 0xFE38;\n t['bracketleft'] = 0x005B;\n t['bracketleftbt'] = 0xF8F0;\n t['bracketleftex'] = 0xF8EF;\n t['bracketleftmonospace'] = 0xFF3B;\n t['bracketlefttp'] = 0xF8EE;\n t['bracketright'] = 0x005D;\n t['bracketrightbt'] = 0xF8FB;\n t['bracketrightex'] = 0xF8FA;\n t['bracketrightmonospace'] = 0xFF3D;\n t['bracketrighttp'] = 0xF8F9;\n t['breve'] = 0x02D8;\n t['brevebelowcmb'] = 0x032E;\n t['brevecmb'] = 0x0306;\n t['breveinvertedbelowcmb'] = 0x032F;\n t['breveinvertedcmb'] = 0x0311;\n t['breveinverteddoublecmb'] = 0x0361;\n t['bridgebelowcmb'] = 0x032A;\n t['bridgeinvertedbelowcmb'] = 0x033A;\n t['brokenbar'] = 0x00A6;\n t['bstroke'] = 0x0180;\n t['bsuperior'] = 0xF6EA;\n t['btopbar'] = 0x0183;\n t['buhiragana'] = 0x3076;\n t['bukatakana'] = 0x30D6;\n t['bullet'] = 0x2022;\n t['bulletinverse'] = 0x25D8;\n t['bulletoperator'] = 0x2219;\n t['bullseye'] = 0x25CE;\n t['c'] = 0x0063;\n t['caarmenian'] = 0x056E;\n t['cabengali'] = 0x099A;\n t['cacute'] = 0x0107;\n t['cadeva'] = 0x091A;\n t['cagujarati'] = 0x0A9A;\n t['cagurmukhi'] = 0x0A1A;\n t['calsquare'] = 0x3388;\n t['candrabindubengali'] = 0x0981;\n t['candrabinducmb'] = 0x0310;\n t['candrabindudeva'] = 0x0901;\n t['candrabindugujarati'] = 0x0A81;\n t['capslock'] = 0x21EA;\n t['careof'] = 0x2105;\n t['caron'] = 0x02C7;\n t['caronbelowcmb'] = 0x032C;\n t['caroncmb'] = 0x030C;\n t['carriagereturn'] = 0x21B5;\n t['cbopomofo'] = 0x3118;\n t['ccaron'] = 0x010D;\n t['ccedilla'] = 0x00E7;\n t['ccedillaacute'] = 0x1E09;\n t['ccircle'] = 0x24D2;\n t['ccircumflex'] = 0x0109;\n t['ccurl'] = 0x0255;\n t['cdot'] = 0x010B;\n t['cdotaccent'] = 0x010B;\n t['cdsquare'] = 0x33C5;\n t['cedilla'] = 0x00B8;\n t['cedillacmb'] = 0x0327;\n t['cent'] = 0x00A2;\n t['centigrade'] = 0x2103;\n t['centinferior'] = 0xF6DF;\n t['centmonospace'] = 0xFFE0;\n t['centoldstyle'] = 0xF7A2;\n t['centsuperior'] = 0xF6E0;\n t['chaarmenian'] = 0x0579;\n t['chabengali'] = 0x099B;\n t['chadeva'] = 0x091B;\n t['chagujarati'] = 0x0A9B;\n t['chagurmukhi'] = 0x0A1B;\n t['chbopomofo'] = 0x3114;\n t['cheabkhasiancyrillic'] = 0x04BD;\n t['checkmark'] = 0x2713;\n t['checyrillic'] = 0x0447;\n t['chedescenderabkhasiancyrillic'] = 0x04BF;\n t['chedescendercyrillic'] = 0x04B7;\n t['chedieresiscyrillic'] = 0x04F5;\n t['cheharmenian'] = 0x0573;\n t['chekhakassiancyrillic'] = 0x04CC;\n t['cheverticalstrokecyrillic'] = 0x04B9;\n t['chi'] = 0x03C7;\n t['chieuchacirclekorean'] = 0x3277;\n t['chieuchaparenkorean'] = 0x3217;\n t['chieuchcirclekorean'] = 0x3269;\n t['chieuchkorean'] = 0x314A;\n t['chieuchparenkorean'] = 0x3209;\n t['chochangthai'] = 0x0E0A;\n t['chochanthai'] = 0x0E08;\n t['chochingthai'] = 0x0E09;\n t['chochoethai'] = 0x0E0C;\n t['chook'] = 0x0188;\n t['cieucacirclekorean'] = 0x3276;\n t['cieucaparenkorean'] = 0x3216;\n t['cieuccirclekorean'] = 0x3268;\n t['cieuckorean'] = 0x3148;\n t['cieucparenkorean'] = 0x3208;\n t['cieucuparenkorean'] = 0x321C;\n t['circle'] = 0x25CB;\n t['circlecopyrt'] = 0x00A9;\n t['circlemultiply'] = 0x2297;\n t['circleot'] = 0x2299;\n t['circleplus'] = 0x2295;\n t['circlepostalmark'] = 0x3036;\n t['circlewithlefthalfblack'] = 0x25D0;\n t['circlewithrighthalfblack'] = 0x25D1;\n t['circumflex'] = 0x02C6;\n t['circumflexbelowcmb'] = 0x032D;\n t['circumflexcmb'] = 0x0302;\n t['clear'] = 0x2327;\n t['clickalveolar'] = 0x01C2;\n t['clickdental'] = 0x01C0;\n t['clicklateral'] = 0x01C1;\n t['clickretroflex'] = 0x01C3;\n t['club'] = 0x2663;\n t['clubsuitblack'] = 0x2663;\n t['clubsuitwhite'] = 0x2667;\n t['cmcubedsquare'] = 0x33A4;\n t['cmonospace'] = 0xFF43;\n t['cmsquaredsquare'] = 0x33A0;\n t['coarmenian'] = 0x0581;\n t['colon'] = 0x003A;\n t['colonmonetary'] = 0x20A1;\n t['colonmonospace'] = 0xFF1A;\n t['colonsign'] = 0x20A1;\n t['colonsmall'] = 0xFE55;\n t['colontriangularhalfmod'] = 0x02D1;\n t['colontriangularmod'] = 0x02D0;\n t['comma'] = 0x002C;\n t['commaabovecmb'] = 0x0313;\n t['commaaboverightcmb'] = 0x0315;\n t['commaaccent'] = 0xF6C3;\n t['commaarabic'] = 0x060C;\n t['commaarmenian'] = 0x055D;\n t['commainferior'] = 0xF6E1;\n t['commamonospace'] = 0xFF0C;\n t['commareversedabovecmb'] = 0x0314;\n t['commareversedmod'] = 0x02BD;\n t['commasmall'] = 0xFE50;\n t['commasuperior'] = 0xF6E2;\n t['commaturnedabovecmb'] = 0x0312;\n t['commaturnedmod'] = 0x02BB;\n t['compass'] = 0x263C;\n t['congruent'] = 0x2245;\n t['contourintegral'] = 0x222E;\n t['control'] = 0x2303;\n t['controlACK'] = 0x0006;\n t['controlBEL'] = 0x0007;\n t['controlBS'] = 0x0008;\n t['controlCAN'] = 0x0018;\n t['controlCR'] = 0x000D;\n t['controlDC1'] = 0x0011;\n t['controlDC2'] = 0x0012;\n t['controlDC3'] = 0x0013;\n t['controlDC4'] = 0x0014;\n t['controlDEL'] = 0x007F;\n t['controlDLE'] = 0x0010;\n t['controlEM'] = 0x0019;\n t['controlENQ'] = 0x0005;\n t['controlEOT'] = 0x0004;\n t['controlESC'] = 0x001B;\n t['controlETB'] = 0x0017;\n t['controlETX'] = 0x0003;\n t['controlFF'] = 0x000C;\n t['controlFS'] = 0x001C;\n t['controlGS'] = 0x001D;\n t['controlHT'] = 0x0009;\n t['controlLF'] = 0x000A;\n t['controlNAK'] = 0x0015;\n t['controlNULL'] = 0x0000;\n t['controlRS'] = 0x001E;\n t['controlSI'] = 0x000F;\n t['controlSO'] = 0x000E;\n t['controlSOT'] = 0x0002;\n t['controlSTX'] = 0x0001;\n t['controlSUB'] = 0x001A;\n t['controlSYN'] = 0x0016;\n t['controlUS'] = 0x001F;\n t['controlVT'] = 0x000B;\n t['copyright'] = 0x00A9;\n t['copyrightsans'] = 0xF8E9;\n t['copyrightserif'] = 0xF6D9;\n t['cornerbracketleft'] = 0x300C;\n t['cornerbracketlefthalfwidth'] = 0xFF62;\n t['cornerbracketleftvertical'] = 0xFE41;\n t['cornerbracketright'] = 0x300D;\n t['cornerbracketrighthalfwidth'] = 0xFF63;\n t['cornerbracketrightvertical'] = 0xFE42;\n t['corporationsquare'] = 0x337F;\n t['cosquare'] = 0x33C7;\n t['coverkgsquare'] = 0x33C6;\n t['cparen'] = 0x249E;\n t['cruzeiro'] = 0x20A2;\n t['cstretched'] = 0x0297;\n t['curlyand'] = 0x22CF;\n t['curlyor'] = 0x22CE;\n t['currency'] = 0x00A4;\n t['cyrBreve'] = 0xF6D1;\n t['cyrFlex'] = 0xF6D2;\n t['cyrbreve'] = 0xF6D4;\n t['cyrflex'] = 0xF6D5;\n t['d'] = 0x0064;\n t['daarmenian'] = 0x0564;\n t['dabengali'] = 0x09A6;\n t['dadarabic'] = 0x0636;\n t['dadeva'] = 0x0926;\n t['dadfinalarabic'] = 0xFEBE;\n t['dadinitialarabic'] = 0xFEBF;\n t['dadmedialarabic'] = 0xFEC0;\n t['dagesh'] = 0x05BC;\n t['dageshhebrew'] = 0x05BC;\n t['dagger'] = 0x2020;\n t['daggerdbl'] = 0x2021;\n t['dagujarati'] = 0x0AA6;\n t['dagurmukhi'] = 0x0A26;\n t['dahiragana'] = 0x3060;\n t['dakatakana'] = 0x30C0;\n t['dalarabic'] = 0x062F;\n t['dalet'] = 0x05D3;\n t['daletdagesh'] = 0xFB33;\n t['daletdageshhebrew'] = 0xFB33;\n t['dalethebrew'] = 0x05D3;\n t['dalfinalarabic'] = 0xFEAA;\n t['dammaarabic'] = 0x064F;\n t['dammalowarabic'] = 0x064F;\n t['dammatanaltonearabic'] = 0x064C;\n t['dammatanarabic'] = 0x064C;\n t['danda'] = 0x0964;\n t['dargahebrew'] = 0x05A7;\n t['dargalefthebrew'] = 0x05A7;\n t['dasiapneumatacyrilliccmb'] = 0x0485;\n t['dblGrave'] = 0xF6D3;\n t['dblanglebracketleft'] = 0x300A;\n t['dblanglebracketleftvertical'] = 0xFE3D;\n t['dblanglebracketright'] = 0x300B;\n t['dblanglebracketrightvertical'] = 0xFE3E;\n t['dblarchinvertedbelowcmb'] = 0x032B;\n t['dblarrowleft'] = 0x21D4;\n t['dblarrowright'] = 0x21D2;\n t['dbldanda'] = 0x0965;\n t['dblgrave'] = 0xF6D6;\n t['dblgravecmb'] = 0x030F;\n t['dblintegral'] = 0x222C;\n t['dbllowline'] = 0x2017;\n t['dbllowlinecmb'] = 0x0333;\n t['dbloverlinecmb'] = 0x033F;\n t['dblprimemod'] = 0x02BA;\n t['dblverticalbar'] = 0x2016;\n t['dblverticallineabovecmb'] = 0x030E;\n t['dbopomofo'] = 0x3109;\n t['dbsquare'] = 0x33C8;\n t['dcaron'] = 0x010F;\n t['dcedilla'] = 0x1E11;\n t['dcircle'] = 0x24D3;\n t['dcircumflexbelow'] = 0x1E13;\n t['dcroat'] = 0x0111;\n t['ddabengali'] = 0x09A1;\n t['ddadeva'] = 0x0921;\n t['ddagujarati'] = 0x0AA1;\n t['ddagurmukhi'] = 0x0A21;\n t['ddalarabic'] = 0x0688;\n t['ddalfinalarabic'] = 0xFB89;\n t['dddhadeva'] = 0x095C;\n t['ddhabengali'] = 0x09A2;\n t['ddhadeva'] = 0x0922;\n t['ddhagujarati'] = 0x0AA2;\n t['ddhagurmukhi'] = 0x0A22;\n t['ddotaccent'] = 0x1E0B;\n t['ddotbelow'] = 0x1E0D;\n t['decimalseparatorarabic'] = 0x066B;\n t['decimalseparatorpersian'] = 0x066B;\n t['decyrillic'] = 0x0434;\n t['degree'] = 0x00B0;\n t['dehihebrew'] = 0x05AD;\n t['dehiragana'] = 0x3067;\n t['deicoptic'] = 0x03EF;\n t['dekatakana'] = 0x30C7;\n t['deleteleft'] = 0x232B;\n t['deleteright'] = 0x2326;\n t['delta'] = 0x03B4;\n t['deltaturned'] = 0x018D;\n t['denominatorminusonenumeratorbengali'] = 0x09F8;\n t['dezh'] = 0x02A4;\n t['dhabengali'] = 0x09A7;\n t['dhadeva'] = 0x0927;\n t['dhagujarati'] = 0x0AA7;\n t['dhagurmukhi'] = 0x0A27;\n t['dhook'] = 0x0257;\n t['dialytikatonos'] = 0x0385;\n t['dialytikatonoscmb'] = 0x0344;\n t['diamond'] = 0x2666;\n t['diamondsuitwhite'] = 0x2662;\n t['dieresis'] = 0x00A8;\n t['dieresisacute'] = 0xF6D7;\n t['dieresisbelowcmb'] = 0x0324;\n t['dieresiscmb'] = 0x0308;\n t['dieresisgrave'] = 0xF6D8;\n t['dieresistonos'] = 0x0385;\n t['dihiragana'] = 0x3062;\n t['dikatakana'] = 0x30C2;\n t['dittomark'] = 0x3003;\n t['divide'] = 0x00F7;\n t['divides'] = 0x2223;\n t['divisionslash'] = 0x2215;\n t['djecyrillic'] = 0x0452;\n t['dkshade'] = 0x2593;\n t['dlinebelow'] = 0x1E0F;\n t['dlsquare'] = 0x3397;\n t['dmacron'] = 0x0111;\n t['dmonospace'] = 0xFF44;\n t['dnblock'] = 0x2584;\n t['dochadathai'] = 0x0E0E;\n t['dodekthai'] = 0x0E14;\n t['dohiragana'] = 0x3069;\n t['dokatakana'] = 0x30C9;\n t['dollar'] = 0x0024;\n t['dollarinferior'] = 0xF6E3;\n t['dollarmonospace'] = 0xFF04;\n t['dollaroldstyle'] = 0xF724;\n t['dollarsmall'] = 0xFE69;\n t['dollarsuperior'] = 0xF6E4;\n t['dong'] = 0x20AB;\n t['dorusquare'] = 0x3326;\n t['dotaccent'] = 0x02D9;\n t['dotaccentcmb'] = 0x0307;\n t['dotbelowcmb'] = 0x0323;\n t['dotbelowcomb'] = 0x0323;\n t['dotkatakana'] = 0x30FB;\n t['dotlessi'] = 0x0131;\n t['dotlessj'] = 0xF6BE;\n t['dotlessjstrokehook'] = 0x0284;\n t['dotmath'] = 0x22C5;\n t['dottedcircle'] = 0x25CC;\n t['doubleyodpatah'] = 0xFB1F;\n t['doubleyodpatahhebrew'] = 0xFB1F;\n t['downtackbelowcmb'] = 0x031E;\n t['downtackmod'] = 0x02D5;\n t['dparen'] = 0x249F;\n t['dsuperior'] = 0xF6EB;\n t['dtail'] = 0x0256;\n t['dtopbar'] = 0x018C;\n t['duhiragana'] = 0x3065;\n t['dukatakana'] = 0x30C5;\n t['dz'] = 0x01F3;\n t['dzaltone'] = 0x02A3;\n t['dzcaron'] = 0x01C6;\n t['dzcurl'] = 0x02A5;\n t['dzeabkhasiancyrillic'] = 0x04E1;\n t['dzecyrillic'] = 0x0455;\n t['dzhecyrillic'] = 0x045F;\n t['e'] = 0x0065;\n t['eacute'] = 0x00E9;\n t['earth'] = 0x2641;\n t['ebengali'] = 0x098F;\n t['ebopomofo'] = 0x311C;\n t['ebreve'] = 0x0115;\n t['ecandradeva'] = 0x090D;\n t['ecandragujarati'] = 0x0A8D;\n t['ecandravowelsigndeva'] = 0x0945;\n t['ecandravowelsigngujarati'] = 0x0AC5;\n t['ecaron'] = 0x011B;\n t['ecedillabreve'] = 0x1E1D;\n t['echarmenian'] = 0x0565;\n t['echyiwnarmenian'] = 0x0587;\n t['ecircle'] = 0x24D4;\n t['ecircumflex'] = 0x00EA;\n t['ecircumflexacute'] = 0x1EBF;\n t['ecircumflexbelow'] = 0x1E19;\n t['ecircumflexdotbelow'] = 0x1EC7;\n t['ecircumflexgrave'] = 0x1EC1;\n t['ecircumflexhookabove'] = 0x1EC3;\n t['ecircumflextilde'] = 0x1EC5;\n t['ecyrillic'] = 0x0454;\n t['edblgrave'] = 0x0205;\n t['edeva'] = 0x090F;\n t['edieresis'] = 0x00EB;\n t['edot'] = 0x0117;\n t['edotaccent'] = 0x0117;\n t['edotbelow'] = 0x1EB9;\n t['eegurmukhi'] = 0x0A0F;\n t['eematragurmukhi'] = 0x0A47;\n t['efcyrillic'] = 0x0444;\n t['egrave'] = 0x00E8;\n t['egujarati'] = 0x0A8F;\n t['eharmenian'] = 0x0567;\n t['ehbopomofo'] = 0x311D;\n t['ehiragana'] = 0x3048;\n t['ehookabove'] = 0x1EBB;\n t['eibopomofo'] = 0x311F;\n t['eight'] = 0x0038;\n t['eightarabic'] = 0x0668;\n t['eightbengali'] = 0x09EE;\n t['eightcircle'] = 0x2467;\n t['eightcircleinversesansserif'] = 0x2791;\n t['eightdeva'] = 0x096E;\n t['eighteencircle'] = 0x2471;\n t['eighteenparen'] = 0x2485;\n t['eighteenperiod'] = 0x2499;\n t['eightgujarati'] = 0x0AEE;\n t['eightgurmukhi'] = 0x0A6E;\n t['eighthackarabic'] = 0x0668;\n t['eighthangzhou'] = 0x3028;\n t['eighthnotebeamed'] = 0x266B;\n t['eightideographicparen'] = 0x3227;\n t['eightinferior'] = 0x2088;\n t['eightmonospace'] = 0xFF18;\n t['eightoldstyle'] = 0xF738;\n t['eightparen'] = 0x247B;\n t['eightperiod'] = 0x248F;\n t['eightpersian'] = 0x06F8;\n t['eightroman'] = 0x2177;\n t['eightsuperior'] = 0x2078;\n t['eightthai'] = 0x0E58;\n t['einvertedbreve'] = 0x0207;\n t['eiotifiedcyrillic'] = 0x0465;\n t['ekatakana'] = 0x30A8;\n t['ekatakanahalfwidth'] = 0xFF74;\n t['ekonkargurmukhi'] = 0x0A74;\n t['ekorean'] = 0x3154;\n t['elcyrillic'] = 0x043B;\n t['element'] = 0x2208;\n t['elevencircle'] = 0x246A;\n t['elevenparen'] = 0x247E;\n t['elevenperiod'] = 0x2492;\n t['elevenroman'] = 0x217A;\n t['ellipsis'] = 0x2026;\n t['ellipsisvertical'] = 0x22EE;\n t['emacron'] = 0x0113;\n t['emacronacute'] = 0x1E17;\n t['emacrongrave'] = 0x1E15;\n t['emcyrillic'] = 0x043C;\n t['emdash'] = 0x2014;\n t['emdashvertical'] = 0xFE31;\n t['emonospace'] = 0xFF45;\n t['emphasismarkarmenian'] = 0x055B;\n t['emptyset'] = 0x2205;\n t['enbopomofo'] = 0x3123;\n t['encyrillic'] = 0x043D;\n t['endash'] = 0x2013;\n t['endashvertical'] = 0xFE32;\n t['endescendercyrillic'] = 0x04A3;\n t['eng'] = 0x014B;\n t['engbopomofo'] = 0x3125;\n t['enghecyrillic'] = 0x04A5;\n t['enhookcyrillic'] = 0x04C8;\n t['enspace'] = 0x2002;\n t['eogonek'] = 0x0119;\n t['eokorean'] = 0x3153;\n t['eopen'] = 0x025B;\n t['eopenclosed'] = 0x029A;\n t['eopenreversed'] = 0x025C;\n t['eopenreversedclosed'] = 0x025E;\n t['eopenreversedhook'] = 0x025D;\n t['eparen'] = 0x24A0;\n t['epsilon'] = 0x03B5;\n t['epsilontonos'] = 0x03AD;\n t['equal'] = 0x003D;\n t['equalmonospace'] = 0xFF1D;\n t['equalsmall'] = 0xFE66;\n t['equalsuperior'] = 0x207C;\n t['equivalence'] = 0x2261;\n t['erbopomofo'] = 0x3126;\n t['ercyrillic'] = 0x0440;\n t['ereversed'] = 0x0258;\n t['ereversedcyrillic'] = 0x044D;\n t['escyrillic'] = 0x0441;\n t['esdescendercyrillic'] = 0x04AB;\n t['esh'] = 0x0283;\n t['eshcurl'] = 0x0286;\n t['eshortdeva'] = 0x090E;\n t['eshortvowelsigndeva'] = 0x0946;\n t['eshreversedloop'] = 0x01AA;\n t['eshsquatreversed'] = 0x0285;\n t['esmallhiragana'] = 0x3047;\n t['esmallkatakana'] = 0x30A7;\n t['esmallkatakanahalfwidth'] = 0xFF6A;\n t['estimated'] = 0x212E;\n t['esuperior'] = 0xF6EC;\n t['eta'] = 0x03B7;\n t['etarmenian'] = 0x0568;\n t['etatonos'] = 0x03AE;\n t['eth'] = 0x00F0;\n t['etilde'] = 0x1EBD;\n t['etildebelow'] = 0x1E1B;\n t['etnahtafoukhhebrew'] = 0x0591;\n t['etnahtafoukhlefthebrew'] = 0x0591;\n t['etnahtahebrew'] = 0x0591;\n t['etnahtalefthebrew'] = 0x0591;\n t['eturned'] = 0x01DD;\n t['eukorean'] = 0x3161;\n t['euro'] = 0x20AC;\n t['evowelsignbengali'] = 0x09C7;\n t['evowelsigndeva'] = 0x0947;\n t['evowelsigngujarati'] = 0x0AC7;\n t['exclam'] = 0x0021;\n t['exclamarmenian'] = 0x055C;\n t['exclamdbl'] = 0x203C;\n t['exclamdown'] = 0x00A1;\n t['exclamdownsmall'] = 0xF7A1;\n t['exclammonospace'] = 0xFF01;\n t['exclamsmall'] = 0xF721;\n t['existential'] = 0x2203;\n t['ezh'] = 0x0292;\n t['ezhcaron'] = 0x01EF;\n t['ezhcurl'] = 0x0293;\n t['ezhreversed'] = 0x01B9;\n t['ezhtail'] = 0x01BA;\n t['f'] = 0x0066;\n t['fadeva'] = 0x095E;\n t['fagurmukhi'] = 0x0A5E;\n t['fahrenheit'] = 0x2109;\n t['fathaarabic'] = 0x064E;\n t['fathalowarabic'] = 0x064E;\n t['fathatanarabic'] = 0x064B;\n t['fbopomofo'] = 0x3108;\n t['fcircle'] = 0x24D5;\n t['fdotaccent'] = 0x1E1F;\n t['feharabic'] = 0x0641;\n t['feharmenian'] = 0x0586;\n t['fehfinalarabic'] = 0xFED2;\n t['fehinitialarabic'] = 0xFED3;\n t['fehmedialarabic'] = 0xFED4;\n t['feicoptic'] = 0x03E5;\n t['female'] = 0x2640;\n t['ff'] = 0xFB00;\n t['ffi'] = 0xFB03;\n t['ffl'] = 0xFB04;\n t['fi'] = 0xFB01;\n t['fifteencircle'] = 0x246E;\n t['fifteenparen'] = 0x2482;\n t['fifteenperiod'] = 0x2496;\n t['figuredash'] = 0x2012;\n t['filledbox'] = 0x25A0;\n t['filledrect'] = 0x25AC;\n t['finalkaf'] = 0x05DA;\n t['finalkafdagesh'] = 0xFB3A;\n t['finalkafdageshhebrew'] = 0xFB3A;\n t['finalkafhebrew'] = 0x05DA;\n t['finalmem'] = 0x05DD;\n t['finalmemhebrew'] = 0x05DD;\n t['finalnun'] = 0x05DF;\n t['finalnunhebrew'] = 0x05DF;\n t['finalpe'] = 0x05E3;\n t['finalpehebrew'] = 0x05E3;\n t['finaltsadi'] = 0x05E5;\n t['finaltsadihebrew'] = 0x05E5;\n t['firsttonechinese'] = 0x02C9;\n t['fisheye'] = 0x25C9;\n t['fitacyrillic'] = 0x0473;\n t['five'] = 0x0035;\n t['fivearabic'] = 0x0665;\n t['fivebengali'] = 0x09EB;\n t['fivecircle'] = 0x2464;\n t['fivecircleinversesansserif'] = 0x278E;\n t['fivedeva'] = 0x096B;\n t['fiveeighths'] = 0x215D;\n t['fivegujarati'] = 0x0AEB;\n t['fivegurmukhi'] = 0x0A6B;\n t['fivehackarabic'] = 0x0665;\n t['fivehangzhou'] = 0x3025;\n t['fiveideographicparen'] = 0x3224;\n t['fiveinferior'] = 0x2085;\n t['fivemonospace'] = 0xFF15;\n t['fiveoldstyle'] = 0xF735;\n t['fiveparen'] = 0x2478;\n t['fiveperiod'] = 0x248C;\n t['fivepersian'] = 0x06F5;\n t['fiveroman'] = 0x2174;\n t['fivesuperior'] = 0x2075;\n t['fivethai'] = 0x0E55;\n t['fl'] = 0xFB02;\n t['florin'] = 0x0192;\n t['fmonospace'] = 0xFF46;\n t['fmsquare'] = 0x3399;\n t['fofanthai'] = 0x0E1F;\n t['fofathai'] = 0x0E1D;\n t['fongmanthai'] = 0x0E4F;\n t['forall'] = 0x2200;\n t['four'] = 0x0034;\n t['fourarabic'] = 0x0664;\n t['fourbengali'] = 0x09EA;\n t['fourcircle'] = 0x2463;\n t['fourcircleinversesansserif'] = 0x278D;\n t['fourdeva'] = 0x096A;\n t['fourgujarati'] = 0x0AEA;\n t['fourgurmukhi'] = 0x0A6A;\n t['fourhackarabic'] = 0x0664;\n t['fourhangzhou'] = 0x3024;\n t['fourideographicparen'] = 0x3223;\n t['fourinferior'] = 0x2084;\n t['fourmonospace'] = 0xFF14;\n t['fournumeratorbengali'] = 0x09F7;\n t['fouroldstyle'] = 0xF734;\n t['fourparen'] = 0x2477;\n t['fourperiod'] = 0x248B;\n t['fourpersian'] = 0x06F4;\n t['fourroman'] = 0x2173;\n t['foursuperior'] = 0x2074;\n t['fourteencircle'] = 0x246D;\n t['fourteenparen'] = 0x2481;\n t['fourteenperiod'] = 0x2495;\n t['fourthai'] = 0x0E54;\n t['fourthtonechinese'] = 0x02CB;\n t['fparen'] = 0x24A1;\n t['fraction'] = 0x2044;\n t['franc'] = 0x20A3;\n t['g'] = 0x0067;\n t['gabengali'] = 0x0997;\n t['gacute'] = 0x01F5;\n t['gadeva'] = 0x0917;\n t['gafarabic'] = 0x06AF;\n t['gaffinalarabic'] = 0xFB93;\n t['gafinitialarabic'] = 0xFB94;\n t['gafmedialarabic'] = 0xFB95;\n t['gagujarati'] = 0x0A97;\n t['gagurmukhi'] = 0x0A17;\n t['gahiragana'] = 0x304C;\n t['gakatakana'] = 0x30AC;\n t['gamma'] = 0x03B3;\n t['gammalatinsmall'] = 0x0263;\n t['gammasuperior'] = 0x02E0;\n t['gangiacoptic'] = 0x03EB;\n t['gbopomofo'] = 0x310D;\n t['gbreve'] = 0x011F;\n t['gcaron'] = 0x01E7;\n t['gcedilla'] = 0x0123;\n t['gcircle'] = 0x24D6;\n t['gcircumflex'] = 0x011D;\n t['gcommaaccent'] = 0x0123;\n t['gdot'] = 0x0121;\n t['gdotaccent'] = 0x0121;\n t['gecyrillic'] = 0x0433;\n t['gehiragana'] = 0x3052;\n t['gekatakana'] = 0x30B2;\n t['geometricallyequal'] = 0x2251;\n t['gereshaccenthebrew'] = 0x059C;\n t['gereshhebrew'] = 0x05F3;\n t['gereshmuqdamhebrew'] = 0x059D;\n t['germandbls'] = 0x00DF;\n t['gershayimaccenthebrew'] = 0x059E;\n t['gershayimhebrew'] = 0x05F4;\n t['getamark'] = 0x3013;\n t['ghabengali'] = 0x0998;\n t['ghadarmenian'] = 0x0572;\n t['ghadeva'] = 0x0918;\n t['ghagujarati'] = 0x0A98;\n t['ghagurmukhi'] = 0x0A18;\n t['ghainarabic'] = 0x063A;\n t['ghainfinalarabic'] = 0xFECE;\n t['ghaininitialarabic'] = 0xFECF;\n t['ghainmedialarabic'] = 0xFED0;\n t['ghemiddlehookcyrillic'] = 0x0495;\n t['ghestrokecyrillic'] = 0x0493;\n t['gheupturncyrillic'] = 0x0491;\n t['ghhadeva'] = 0x095A;\n t['ghhagurmukhi'] = 0x0A5A;\n t['ghook'] = 0x0260;\n t['ghzsquare'] = 0x3393;\n t['gihiragana'] = 0x304E;\n t['gikatakana'] = 0x30AE;\n t['gimarmenian'] = 0x0563;\n t['gimel'] = 0x05D2;\n t['gimeldagesh'] = 0xFB32;\n t['gimeldageshhebrew'] = 0xFB32;\n t['gimelhebrew'] = 0x05D2;\n t['gjecyrillic'] = 0x0453;\n t['glottalinvertedstroke'] = 0x01BE;\n t['glottalstop'] = 0x0294;\n t['glottalstopinverted'] = 0x0296;\n t['glottalstopmod'] = 0x02C0;\n t['glottalstopreversed'] = 0x0295;\n t['glottalstopreversedmod'] = 0x02C1;\n t['glottalstopreversedsuperior'] = 0x02E4;\n t['glottalstopstroke'] = 0x02A1;\n t['glottalstopstrokereversed'] = 0x02A2;\n t['gmacron'] = 0x1E21;\n t['gmonospace'] = 0xFF47;\n t['gohiragana'] = 0x3054;\n t['gokatakana'] = 0x30B4;\n t['gparen'] = 0x24A2;\n t['gpasquare'] = 0x33AC;\n t['gradient'] = 0x2207;\n t['grave'] = 0x0060;\n t['gravebelowcmb'] = 0x0316;\n t['gravecmb'] = 0x0300;\n t['gravecomb'] = 0x0300;\n t['gravedeva'] = 0x0953;\n t['gravelowmod'] = 0x02CE;\n t['gravemonospace'] = 0xFF40;\n t['gravetonecmb'] = 0x0340;\n t['greater'] = 0x003E;\n t['greaterequal'] = 0x2265;\n t['greaterequalorless'] = 0x22DB;\n t['greatermonospace'] = 0xFF1E;\n t['greaterorequivalent'] = 0x2273;\n t['greaterorless'] = 0x2277;\n t['greateroverequal'] = 0x2267;\n t['greatersmall'] = 0xFE65;\n t['gscript'] = 0x0261;\n t['gstroke'] = 0x01E5;\n t['guhiragana'] = 0x3050;\n t['guillemotleft'] = 0x00AB;\n t['guillemotright'] = 0x00BB;\n t['guilsinglleft'] = 0x2039;\n t['guilsinglright'] = 0x203A;\n t['gukatakana'] = 0x30B0;\n t['guramusquare'] = 0x3318;\n t['gysquare'] = 0x33C9;\n t['h'] = 0x0068;\n t['haabkhasiancyrillic'] = 0x04A9;\n t['haaltonearabic'] = 0x06C1;\n t['habengali'] = 0x09B9;\n t['hadescendercyrillic'] = 0x04B3;\n t['hadeva'] = 0x0939;\n t['hagujarati'] = 0x0AB9;\n t['hagurmukhi'] = 0x0A39;\n t['haharabic'] = 0x062D;\n t['hahfinalarabic'] = 0xFEA2;\n t['hahinitialarabic'] = 0xFEA3;\n t['hahiragana'] = 0x306F;\n t['hahmedialarabic'] = 0xFEA4;\n t['haitusquare'] = 0x332A;\n t['hakatakana'] = 0x30CF;\n t['hakatakanahalfwidth'] = 0xFF8A;\n t['halantgurmukhi'] = 0x0A4D;\n t['hamzaarabic'] = 0x0621;\n t['hamzalowarabic'] = 0x0621;\n t['hangulfiller'] = 0x3164;\n t['hardsigncyrillic'] = 0x044A;\n t['harpoonleftbarbup'] = 0x21BC;\n t['harpoonrightbarbup'] = 0x21C0;\n t['hasquare'] = 0x33CA;\n t['hatafpatah'] = 0x05B2;\n t['hatafpatah16'] = 0x05B2;\n t['hatafpatah23'] = 0x05B2;\n t['hatafpatah2f'] = 0x05B2;\n t['hatafpatahhebrew'] = 0x05B2;\n t['hatafpatahnarrowhebrew'] = 0x05B2;\n t['hatafpatahquarterhebrew'] = 0x05B2;\n t['hatafpatahwidehebrew'] = 0x05B2;\n t['hatafqamats'] = 0x05B3;\n t['hatafqamats1b'] = 0x05B3;\n t['hatafqamats28'] = 0x05B3;\n t['hatafqamats34'] = 0x05B3;\n t['hatafqamatshebrew'] = 0x05B3;\n t['hatafqamatsnarrowhebrew'] = 0x05B3;\n t['hatafqamatsquarterhebrew'] = 0x05B3;\n t['hatafqamatswidehebrew'] = 0x05B3;\n t['hatafsegol'] = 0x05B1;\n t['hatafsegol17'] = 0x05B1;\n t['hatafsegol24'] = 0x05B1;\n t['hatafsegol30'] = 0x05B1;\n t['hatafsegolhebrew'] = 0x05B1;\n t['hatafsegolnarrowhebrew'] = 0x05B1;\n t['hatafsegolquarterhebrew'] = 0x05B1;\n t['hatafsegolwidehebrew'] = 0x05B1;\n t['hbar'] = 0x0127;\n t['hbopomofo'] = 0x310F;\n t['hbrevebelow'] = 0x1E2B;\n t['hcedilla'] = 0x1E29;\n t['hcircle'] = 0x24D7;\n t['hcircumflex'] = 0x0125;\n t['hdieresis'] = 0x1E27;\n t['hdotaccent'] = 0x1E23;\n t['hdotbelow'] = 0x1E25;\n t['he'] = 0x05D4;\n t['heart'] = 0x2665;\n t['heartsuitblack'] = 0x2665;\n t['heartsuitwhite'] = 0x2661;\n t['hedagesh'] = 0xFB34;\n t['hedageshhebrew'] = 0xFB34;\n t['hehaltonearabic'] = 0x06C1;\n t['heharabic'] = 0x0647;\n t['hehebrew'] = 0x05D4;\n t['hehfinalaltonearabic'] = 0xFBA7;\n t['hehfinalalttwoarabic'] = 0xFEEA;\n t['hehfinalarabic'] = 0xFEEA;\n t['hehhamzaabovefinalarabic'] = 0xFBA5;\n t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n t['hehinitialaltonearabic'] = 0xFBA8;\n t['hehinitialarabic'] = 0xFEEB;\n t['hehiragana'] = 0x3078;\n t['hehmedialaltonearabic'] = 0xFBA9;\n t['hehmedialarabic'] = 0xFEEC;\n t['heiseierasquare'] = 0x337B;\n t['hekatakana'] = 0x30D8;\n t['hekatakanahalfwidth'] = 0xFF8D;\n t['hekutaarusquare'] = 0x3336;\n t['henghook'] = 0x0267;\n t['herutusquare'] = 0x3339;\n t['het'] = 0x05D7;\n t['hethebrew'] = 0x05D7;\n t['hhook'] = 0x0266;\n t['hhooksuperior'] = 0x02B1;\n t['hieuhacirclekorean'] = 0x327B;\n t['hieuhaparenkorean'] = 0x321B;\n t['hieuhcirclekorean'] = 0x326D;\n t['hieuhkorean'] = 0x314E;\n t['hieuhparenkorean'] = 0x320D;\n t['hihiragana'] = 0x3072;\n t['hikatakana'] = 0x30D2;\n t['hikatakanahalfwidth'] = 0xFF8B;\n t['hiriq'] = 0x05B4;\n t['hiriq14'] = 0x05B4;\n t['hiriq21'] = 0x05B4;\n t['hiriq2d'] = 0x05B4;\n t['hiriqhebrew'] = 0x05B4;\n t['hiriqnarrowhebrew'] = 0x05B4;\n t['hiriqquarterhebrew'] = 0x05B4;\n t['hiriqwidehebrew'] = 0x05B4;\n t['hlinebelow'] = 0x1E96;\n t['hmonospace'] = 0xFF48;\n t['hoarmenian'] = 0x0570;\n t['hohipthai'] = 0x0E2B;\n t['hohiragana'] = 0x307B;\n t['hokatakana'] = 0x30DB;\n t['hokatakanahalfwidth'] = 0xFF8E;\n t['holam'] = 0x05B9;\n t['holam19'] = 0x05B9;\n t['holam26'] = 0x05B9;\n t['holam32'] = 0x05B9;\n t['holamhebrew'] = 0x05B9;\n t['holamnarrowhebrew'] = 0x05B9;\n t['holamquarterhebrew'] = 0x05B9;\n t['holamwidehebrew'] = 0x05B9;\n t['honokhukthai'] = 0x0E2E;\n t['hookabovecomb'] = 0x0309;\n t['hookcmb'] = 0x0309;\n t['hookpalatalizedbelowcmb'] = 0x0321;\n t['hookretroflexbelowcmb'] = 0x0322;\n t['hoonsquare'] = 0x3342;\n t['horicoptic'] = 0x03E9;\n t['horizontalbar'] = 0x2015;\n t['horncmb'] = 0x031B;\n t['hotsprings'] = 0x2668;\n t['house'] = 0x2302;\n t['hparen'] = 0x24A3;\n t['hsuperior'] = 0x02B0;\n t['hturned'] = 0x0265;\n t['huhiragana'] = 0x3075;\n t['huiitosquare'] = 0x3333;\n t['hukatakana'] = 0x30D5;\n t['hukatakanahalfwidth'] = 0xFF8C;\n t['hungarumlaut'] = 0x02DD;\n t['hungarumlautcmb'] = 0x030B;\n t['hv'] = 0x0195;\n t['hyphen'] = 0x002D;\n t['hypheninferior'] = 0xF6E5;\n t['hyphenmonospace'] = 0xFF0D;\n t['hyphensmall'] = 0xFE63;\n t['hyphensuperior'] = 0xF6E6;\n t['hyphentwo'] = 0x2010;\n t['i'] = 0x0069;\n t['iacute'] = 0x00ED;\n t['iacyrillic'] = 0x044F;\n t['ibengali'] = 0x0987;\n t['ibopomofo'] = 0x3127;\n t['ibreve'] = 0x012D;\n t['icaron'] = 0x01D0;\n t['icircle'] = 0x24D8;\n t['icircumflex'] = 0x00EE;\n t['icyrillic'] = 0x0456;\n t['idblgrave'] = 0x0209;\n t['ideographearthcircle'] = 0x328F;\n t['ideographfirecircle'] = 0x328B;\n t['ideographicallianceparen'] = 0x323F;\n t['ideographiccallparen'] = 0x323A;\n t['ideographiccentrecircle'] = 0x32A5;\n t['ideographicclose'] = 0x3006;\n t['ideographiccomma'] = 0x3001;\n t['ideographiccommaleft'] = 0xFF64;\n t['ideographiccongratulationparen'] = 0x3237;\n t['ideographiccorrectcircle'] = 0x32A3;\n t['ideographicearthparen'] = 0x322F;\n t['ideographicenterpriseparen'] = 0x323D;\n t['ideographicexcellentcircle'] = 0x329D;\n t['ideographicfestivalparen'] = 0x3240;\n t['ideographicfinancialcircle'] = 0x3296;\n t['ideographicfinancialparen'] = 0x3236;\n t['ideographicfireparen'] = 0x322B;\n t['ideographichaveparen'] = 0x3232;\n t['ideographichighcircle'] = 0x32A4;\n t['ideographiciterationmark'] = 0x3005;\n t['ideographiclaborcircle'] = 0x3298;\n t['ideographiclaborparen'] = 0x3238;\n t['ideographicleftcircle'] = 0x32A7;\n t['ideographiclowcircle'] = 0x32A6;\n t['ideographicmedicinecircle'] = 0x32A9;\n t['ideographicmetalparen'] = 0x322E;\n t['ideographicmoonparen'] = 0x322A;\n t['ideographicnameparen'] = 0x3234;\n t['ideographicperiod'] = 0x3002;\n t['ideographicprintcircle'] = 0x329E;\n t['ideographicreachparen'] = 0x3243;\n t['ideographicrepresentparen'] = 0x3239;\n t['ideographicresourceparen'] = 0x323E;\n t['ideographicrightcircle'] = 0x32A8;\n t['ideographicsecretcircle'] = 0x3299;\n t['ideographicselfparen'] = 0x3242;\n t['ideographicsocietyparen'] = 0x3233;\n t['ideographicspace'] = 0x3000;\n t['ideographicspecialparen'] = 0x3235;\n t['ideographicstockparen'] = 0x3231;\n t['ideographicstudyparen'] = 0x323B;\n t['ideographicsunparen'] = 0x3230;\n t['ideographicsuperviseparen'] = 0x323C;\n t['ideographicwaterparen'] = 0x322C;\n t['ideographicwoodparen'] = 0x322D;\n t['ideographiczero'] = 0x3007;\n t['ideographmetalcircle'] = 0x328E;\n t['ideographmooncircle'] = 0x328A;\n t['ideographnamecircle'] = 0x3294;\n t['ideographsuncircle'] = 0x3290;\n t['ideographwatercircle'] = 0x328C;\n t['ideographwoodcircle'] = 0x328D;\n t['ideva'] = 0x0907;\n t['idieresis'] = 0x00EF;\n t['idieresisacute'] = 0x1E2F;\n t['idieresiscyrillic'] = 0x04E5;\n t['idotbelow'] = 0x1ECB;\n t['iebrevecyrillic'] = 0x04D7;\n t['iecyrillic'] = 0x0435;\n t['ieungacirclekorean'] = 0x3275;\n t['ieungaparenkorean'] = 0x3215;\n t['ieungcirclekorean'] = 0x3267;\n t['ieungkorean'] = 0x3147;\n t['ieungparenkorean'] = 0x3207;\n t['igrave'] = 0x00EC;\n t['igujarati'] = 0x0A87;\n t['igurmukhi'] = 0x0A07;\n t['ihiragana'] = 0x3044;\n t['ihookabove'] = 0x1EC9;\n t['iibengali'] = 0x0988;\n t['iicyrillic'] = 0x0438;\n t['iideva'] = 0x0908;\n t['iigujarati'] = 0x0A88;\n t['iigurmukhi'] = 0x0A08;\n t['iimatragurmukhi'] = 0x0A40;\n t['iinvertedbreve'] = 0x020B;\n t['iishortcyrillic'] = 0x0439;\n t['iivowelsignbengali'] = 0x09C0;\n t['iivowelsigndeva'] = 0x0940;\n t['iivowelsigngujarati'] = 0x0AC0;\n t['ij'] = 0x0133;\n t['ikatakana'] = 0x30A4;\n t['ikatakanahalfwidth'] = 0xFF72;\n t['ikorean'] = 0x3163;\n t['ilde'] = 0x02DC;\n t['iluyhebrew'] = 0x05AC;\n t['imacron'] = 0x012B;\n t['imacroncyrillic'] = 0x04E3;\n t['imageorapproximatelyequal'] = 0x2253;\n t['imatragurmukhi'] = 0x0A3F;\n t['imonospace'] = 0xFF49;\n t['increment'] = 0x2206;\n t['infinity'] = 0x221E;\n t['iniarmenian'] = 0x056B;\n t['integral'] = 0x222B;\n t['integralbottom'] = 0x2321;\n t['integralbt'] = 0x2321;\n t['integralex'] = 0xF8F5;\n t['integraltop'] = 0x2320;\n t['integraltp'] = 0x2320;\n t['intersection'] = 0x2229;\n t['intisquare'] = 0x3305;\n t['invbullet'] = 0x25D8;\n t['invcircle'] = 0x25D9;\n t['invsmileface'] = 0x263B;\n t['iocyrillic'] = 0x0451;\n t['iogonek'] = 0x012F;\n t['iota'] = 0x03B9;\n t['iotadieresis'] = 0x03CA;\n t['iotadieresistonos'] = 0x0390;\n t['iotalatin'] = 0x0269;\n t['iotatonos'] = 0x03AF;\n t['iparen'] = 0x24A4;\n t['irigurmukhi'] = 0x0A72;\n t['ismallhiragana'] = 0x3043;\n t['ismallkatakana'] = 0x30A3;\n t['ismallkatakanahalfwidth'] = 0xFF68;\n t['issharbengali'] = 0x09FA;\n t['istroke'] = 0x0268;\n t['isuperior'] = 0xF6ED;\n t['iterationhiragana'] = 0x309D;\n t['iterationkatakana'] = 0x30FD;\n t['itilde'] = 0x0129;\n t['itildebelow'] = 0x1E2D;\n t['iubopomofo'] = 0x3129;\n t['iucyrillic'] = 0x044E;\n t['ivowelsignbengali'] = 0x09BF;\n t['ivowelsigndeva'] = 0x093F;\n t['ivowelsigngujarati'] = 0x0ABF;\n t['izhitsacyrillic'] = 0x0475;\n t['izhitsadblgravecyrillic'] = 0x0477;\n t['j'] = 0x006A;\n t['jaarmenian'] = 0x0571;\n t['jabengali'] = 0x099C;\n t['jadeva'] = 0x091C;\n t['jagujarati'] = 0x0A9C;\n t['jagurmukhi'] = 0x0A1C;\n t['jbopomofo'] = 0x3110;\n t['jcaron'] = 0x01F0;\n t['jcircle'] = 0x24D9;\n t['jcircumflex'] = 0x0135;\n t['jcrossedtail'] = 0x029D;\n t['jdotlessstroke'] = 0x025F;\n t['jecyrillic'] = 0x0458;\n t['jeemarabic'] = 0x062C;\n t['jeemfinalarabic'] = 0xFE9E;\n t['jeeminitialarabic'] = 0xFE9F;\n t['jeemmedialarabic'] = 0xFEA0;\n t['jeharabic'] = 0x0698;\n t['jehfinalarabic'] = 0xFB8B;\n t['jhabengali'] = 0x099D;\n t['jhadeva'] = 0x091D;\n t['jhagujarati'] = 0x0A9D;\n t['jhagurmukhi'] = 0x0A1D;\n t['jheharmenian'] = 0x057B;\n t['jis'] = 0x3004;\n t['jmonospace'] = 0xFF4A;\n t['jparen'] = 0x24A5;\n t['jsuperior'] = 0x02B2;\n t['k'] = 0x006B;\n t['kabashkircyrillic'] = 0x04A1;\n t['kabengali'] = 0x0995;\n t['kacute'] = 0x1E31;\n t['kacyrillic'] = 0x043A;\n t['kadescendercyrillic'] = 0x049B;\n t['kadeva'] = 0x0915;\n t['kaf'] = 0x05DB;\n t['kafarabic'] = 0x0643;\n t['kafdagesh'] = 0xFB3B;\n t['kafdageshhebrew'] = 0xFB3B;\n t['kaffinalarabic'] = 0xFEDA;\n t['kafhebrew'] = 0x05DB;\n t['kafinitialarabic'] = 0xFEDB;\n t['kafmedialarabic'] = 0xFEDC;\n t['kafrafehebrew'] = 0xFB4D;\n t['kagujarati'] = 0x0A95;\n t['kagurmukhi'] = 0x0A15;\n t['kahiragana'] = 0x304B;\n t['kahookcyrillic'] = 0x04C4;\n t['kakatakana'] = 0x30AB;\n t['kakatakanahalfwidth'] = 0xFF76;\n t['kappa'] = 0x03BA;\n t['kappasymbolgreek'] = 0x03F0;\n t['kapyeounmieumkorean'] = 0x3171;\n t['kapyeounphieuphkorean'] = 0x3184;\n t['kapyeounpieupkorean'] = 0x3178;\n t['kapyeounssangpieupkorean'] = 0x3179;\n t['karoriisquare'] = 0x330D;\n t['kashidaautoarabic'] = 0x0640;\n t['kashidaautonosidebearingarabic'] = 0x0640;\n t['kasmallkatakana'] = 0x30F5;\n t['kasquare'] = 0x3384;\n t['kasraarabic'] = 0x0650;\n t['kasratanarabic'] = 0x064D;\n t['kastrokecyrillic'] = 0x049F;\n t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n t['kaverticalstrokecyrillic'] = 0x049D;\n t['kbopomofo'] = 0x310E;\n t['kcalsquare'] = 0x3389;\n t['kcaron'] = 0x01E9;\n t['kcedilla'] = 0x0137;\n t['kcircle'] = 0x24DA;\n t['kcommaaccent'] = 0x0137;\n t['kdotbelow'] = 0x1E33;\n t['keharmenian'] = 0x0584;\n t['kehiragana'] = 0x3051;\n t['kekatakana'] = 0x30B1;\n t['kekatakanahalfwidth'] = 0xFF79;\n t['kenarmenian'] = 0x056F;\n t['kesmallkatakana'] = 0x30F6;\n t['kgreenlandic'] = 0x0138;\n t['khabengali'] = 0x0996;\n t['khacyrillic'] = 0x0445;\n t['khadeva'] = 0x0916;\n t['khagujarati'] = 0x0A96;\n t['khagurmukhi'] = 0x0A16;\n t['khaharabic'] = 0x062E;\n t['khahfinalarabic'] = 0xFEA6;\n t['khahinitialarabic'] = 0xFEA7;\n t['khahmedialarabic'] = 0xFEA8;\n t['kheicoptic'] = 0x03E7;\n t['khhadeva'] = 0x0959;\n t['khhagurmukhi'] = 0x0A59;\n t['khieukhacirclekorean'] = 0x3278;\n t['khieukhaparenkorean'] = 0x3218;\n t['khieukhcirclekorean'] = 0x326A;\n t['khieukhkorean'] = 0x314B;\n t['khieukhparenkorean'] = 0x320A;\n t['khokhaithai'] = 0x0E02;\n t['khokhonthai'] = 0x0E05;\n t['khokhuatthai'] = 0x0E03;\n t['khokhwaithai'] = 0x0E04;\n t['khomutthai'] = 0x0E5B;\n t['khook'] = 0x0199;\n t['khorakhangthai'] = 0x0E06;\n t['khzsquare'] = 0x3391;\n t['kihiragana'] = 0x304D;\n t['kikatakana'] = 0x30AD;\n t['kikatakanahalfwidth'] = 0xFF77;\n t['kiroguramusquare'] = 0x3315;\n t['kiromeetorusquare'] = 0x3316;\n t['kirosquare'] = 0x3314;\n t['kiyeokacirclekorean'] = 0x326E;\n t['kiyeokaparenkorean'] = 0x320E;\n t['kiyeokcirclekorean'] = 0x3260;\n t['kiyeokkorean'] = 0x3131;\n t['kiyeokparenkorean'] = 0x3200;\n t['kiyeoksioskorean'] = 0x3133;\n t['kjecyrillic'] = 0x045C;\n t['klinebelow'] = 0x1E35;\n t['klsquare'] = 0x3398;\n t['kmcubedsquare'] = 0x33A6;\n t['kmonospace'] = 0xFF4B;\n t['kmsquaredsquare'] = 0x33A2;\n t['kohiragana'] = 0x3053;\n t['kohmsquare'] = 0x33C0;\n t['kokaithai'] = 0x0E01;\n t['kokatakana'] = 0x30B3;\n t['kokatakanahalfwidth'] = 0xFF7A;\n t['kooposquare'] = 0x331E;\n t['koppacyrillic'] = 0x0481;\n t['koreanstandardsymbol'] = 0x327F;\n t['koroniscmb'] = 0x0343;\n t['kparen'] = 0x24A6;\n t['kpasquare'] = 0x33AA;\n t['ksicyrillic'] = 0x046F;\n t['ktsquare'] = 0x33CF;\n t['kturned'] = 0x029E;\n t['kuhiragana'] = 0x304F;\n t['kukatakana'] = 0x30AF;\n t['kukatakanahalfwidth'] = 0xFF78;\n t['kvsquare'] = 0x33B8;\n t['kwsquare'] = 0x33BE;\n t['l'] = 0x006C;\n t['labengali'] = 0x09B2;\n t['lacute'] = 0x013A;\n t['ladeva'] = 0x0932;\n t['lagujarati'] = 0x0AB2;\n t['lagurmukhi'] = 0x0A32;\n t['lakkhangyaothai'] = 0x0E45;\n t['lamaleffinalarabic'] = 0xFEFC;\n t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n t['lamalefisolatedarabic'] = 0xFEFB;\n t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n t['lamarabic'] = 0x0644;\n t['lambda'] = 0x03BB;\n t['lambdastroke'] = 0x019B;\n t['lamed'] = 0x05DC;\n t['lameddagesh'] = 0xFB3C;\n t['lameddageshhebrew'] = 0xFB3C;\n t['lamedhebrew'] = 0x05DC;\n t['lamfinalarabic'] = 0xFEDE;\n t['lamhahinitialarabic'] = 0xFCCA;\n t['laminitialarabic'] = 0xFEDF;\n t['lamjeeminitialarabic'] = 0xFCC9;\n t['lamkhahinitialarabic'] = 0xFCCB;\n t['lamlamhehisolatedarabic'] = 0xFDF2;\n t['lammedialarabic'] = 0xFEE0;\n t['lammeemhahinitialarabic'] = 0xFD88;\n t['lammeeminitialarabic'] = 0xFCCC;\n t['largecircle'] = 0x25EF;\n t['lbar'] = 0x019A;\n t['lbelt'] = 0x026C;\n t['lbopomofo'] = 0x310C;\n t['lcaron'] = 0x013E;\n t['lcedilla'] = 0x013C;\n t['lcircle'] = 0x24DB;\n t['lcircumflexbelow'] = 0x1E3D;\n t['lcommaaccent'] = 0x013C;\n t['ldot'] = 0x0140;\n t['ldotaccent'] = 0x0140;\n t['ldotbelow'] = 0x1E37;\n t['ldotbelowmacron'] = 0x1E39;\n t['leftangleabovecmb'] = 0x031A;\n t['lefttackbelowcmb'] = 0x0318;\n t['less'] = 0x003C;\n t['lessequal'] = 0x2264;\n t['lessequalorgreater'] = 0x22DA;\n t['lessmonospace'] = 0xFF1C;\n t['lessorequivalent'] = 0x2272;\n t['lessorgreater'] = 0x2276;\n t['lessoverequal'] = 0x2266;\n t['lesssmall'] = 0xFE64;\n t['lezh'] = 0x026E;\n t['lfblock'] = 0x258C;\n t['lhookretroflex'] = 0x026D;\n t['lira'] = 0x20A4;\n t['liwnarmenian'] = 0x056C;\n t['lj'] = 0x01C9;\n t['ljecyrillic'] = 0x0459;\n t['ll'] = 0xF6C0;\n t['lladeva'] = 0x0933;\n t['llagujarati'] = 0x0AB3;\n t['llinebelow'] = 0x1E3B;\n t['llladeva'] = 0x0934;\n t['llvocalicbengali'] = 0x09E1;\n t['llvocalicdeva'] = 0x0961;\n t['llvocalicvowelsignbengali'] = 0x09E3;\n t['llvocalicvowelsigndeva'] = 0x0963;\n t['lmiddletilde'] = 0x026B;\n t['lmonospace'] = 0xFF4C;\n t['lmsquare'] = 0x33D0;\n t['lochulathai'] = 0x0E2C;\n t['logicaland'] = 0x2227;\n t['logicalnot'] = 0x00AC;\n t['logicalnotreversed'] = 0x2310;\n t['logicalor'] = 0x2228;\n t['lolingthai'] = 0x0E25;\n t['longs'] = 0x017F;\n t['lowlinecenterline'] = 0xFE4E;\n t['lowlinecmb'] = 0x0332;\n t['lowlinedashed'] = 0xFE4D;\n t['lozenge'] = 0x25CA;\n t['lparen'] = 0x24A7;\n t['lslash'] = 0x0142;\n t['lsquare'] = 0x2113;\n t['lsuperior'] = 0xF6EE;\n t['ltshade'] = 0x2591;\n t['luthai'] = 0x0E26;\n t['lvocalicbengali'] = 0x098C;\n t['lvocalicdeva'] = 0x090C;\n t['lvocalicvowelsignbengali'] = 0x09E2;\n t['lvocalicvowelsigndeva'] = 0x0962;\n t['lxsquare'] = 0x33D3;\n t['m'] = 0x006D;\n t['mabengali'] = 0x09AE;\n t['macron'] = 0x00AF;\n t['macronbelowcmb'] = 0x0331;\n t['macroncmb'] = 0x0304;\n t['macronlowmod'] = 0x02CD;\n t['macronmonospace'] = 0xFFE3;\n t['macute'] = 0x1E3F;\n t['madeva'] = 0x092E;\n t['magujarati'] = 0x0AAE;\n t['magurmukhi'] = 0x0A2E;\n t['mahapakhhebrew'] = 0x05A4;\n t['mahapakhlefthebrew'] = 0x05A4;\n t['mahiragana'] = 0x307E;\n t['maichattawalowleftthai'] = 0xF895;\n t['maichattawalowrightthai'] = 0xF894;\n t['maichattawathai'] = 0x0E4B;\n t['maichattawaupperleftthai'] = 0xF893;\n t['maieklowleftthai'] = 0xF88C;\n t['maieklowrightthai'] = 0xF88B;\n t['maiekthai'] = 0x0E48;\n t['maiekupperleftthai'] = 0xF88A;\n t['maihanakatleftthai'] = 0xF884;\n t['maihanakatthai'] = 0x0E31;\n t['maitaikhuleftthai'] = 0xF889;\n t['maitaikhuthai'] = 0x0E47;\n t['maitholowleftthai'] = 0xF88F;\n t['maitholowrightthai'] = 0xF88E;\n t['maithothai'] = 0x0E49;\n t['maithoupperleftthai'] = 0xF88D;\n t['maitrilowleftthai'] = 0xF892;\n t['maitrilowrightthai'] = 0xF891;\n t['maitrithai'] = 0x0E4A;\n t['maitriupperleftthai'] = 0xF890;\n t['maiyamokthai'] = 0x0E46;\n t['makatakana'] = 0x30DE;\n t['makatakanahalfwidth'] = 0xFF8F;\n t['male'] = 0x2642;\n t['mansyonsquare'] = 0x3347;\n t['maqafhebrew'] = 0x05BE;\n t['mars'] = 0x2642;\n t['masoracirclehebrew'] = 0x05AF;\n t['masquare'] = 0x3383;\n t['mbopomofo'] = 0x3107;\n t['mbsquare'] = 0x33D4;\n t['mcircle'] = 0x24DC;\n t['mcubedsquare'] = 0x33A5;\n t['mdotaccent'] = 0x1E41;\n t['mdotbelow'] = 0x1E43;\n t['meemarabic'] = 0x0645;\n t['meemfinalarabic'] = 0xFEE2;\n t['meeminitialarabic'] = 0xFEE3;\n t['meemmedialarabic'] = 0xFEE4;\n t['meemmeeminitialarabic'] = 0xFCD1;\n t['meemmeemisolatedarabic'] = 0xFC48;\n t['meetorusquare'] = 0x334D;\n t['mehiragana'] = 0x3081;\n t['meizierasquare'] = 0x337E;\n t['mekatakana'] = 0x30E1;\n t['mekatakanahalfwidth'] = 0xFF92;\n t['mem'] = 0x05DE;\n t['memdagesh'] = 0xFB3E;\n t['memdageshhebrew'] = 0xFB3E;\n t['memhebrew'] = 0x05DE;\n t['menarmenian'] = 0x0574;\n t['merkhahebrew'] = 0x05A5;\n t['merkhakefulahebrew'] = 0x05A6;\n t['merkhakefulalefthebrew'] = 0x05A6;\n t['merkhalefthebrew'] = 0x05A5;\n t['mhook'] = 0x0271;\n t['mhzsquare'] = 0x3392;\n t['middledotkatakanahalfwidth'] = 0xFF65;\n t['middot'] = 0x00B7;\n t['mieumacirclekorean'] = 0x3272;\n t['mieumaparenkorean'] = 0x3212;\n t['mieumcirclekorean'] = 0x3264;\n t['mieumkorean'] = 0x3141;\n t['mieumpansioskorean'] = 0x3170;\n t['mieumparenkorean'] = 0x3204;\n t['mieumpieupkorean'] = 0x316E;\n t['mieumsioskorean'] = 0x316F;\n t['mihiragana'] = 0x307F;\n t['mikatakana'] = 0x30DF;\n t['mikatakanahalfwidth'] = 0xFF90;\n t['minus'] = 0x2212;\n t['minusbelowcmb'] = 0x0320;\n t['minuscircle'] = 0x2296;\n t['minusmod'] = 0x02D7;\n t['minusplus'] = 0x2213;\n t['minute'] = 0x2032;\n t['miribaarusquare'] = 0x334A;\n t['mirisquare'] = 0x3349;\n t['mlonglegturned'] = 0x0270;\n t['mlsquare'] = 0x3396;\n t['mmcubedsquare'] = 0x33A3;\n t['mmonospace'] = 0xFF4D;\n t['mmsquaredsquare'] = 0x339F;\n t['mohiragana'] = 0x3082;\n t['mohmsquare'] = 0x33C1;\n t['mokatakana'] = 0x30E2;\n t['mokatakanahalfwidth'] = 0xFF93;\n t['molsquare'] = 0x33D6;\n t['momathai'] = 0x0E21;\n t['moverssquare'] = 0x33A7;\n t['moverssquaredsquare'] = 0x33A8;\n t['mparen'] = 0x24A8;\n t['mpasquare'] = 0x33AB;\n t['mssquare'] = 0x33B3;\n t['msuperior'] = 0xF6EF;\n t['mturned'] = 0x026F;\n t['mu'] = 0x00B5;\n t['mu1'] = 0x00B5;\n t['muasquare'] = 0x3382;\n t['muchgreater'] = 0x226B;\n t['muchless'] = 0x226A;\n t['mufsquare'] = 0x338C;\n t['mugreek'] = 0x03BC;\n t['mugsquare'] = 0x338D;\n t['muhiragana'] = 0x3080;\n t['mukatakana'] = 0x30E0;\n t['mukatakanahalfwidth'] = 0xFF91;\n t['mulsquare'] = 0x3395;\n t['multiply'] = 0x00D7;\n t['mumsquare'] = 0x339B;\n t['munahhebrew'] = 0x05A3;\n t['munahlefthebrew'] = 0x05A3;\n t['musicalnote'] = 0x266A;\n t['musicalnotedbl'] = 0x266B;\n t['musicflatsign'] = 0x266D;\n t['musicsharpsign'] = 0x266F;\n t['mussquare'] = 0x33B2;\n t['muvsquare'] = 0x33B6;\n t['muwsquare'] = 0x33BC;\n t['mvmegasquare'] = 0x33B9;\n t['mvsquare'] = 0x33B7;\n t['mwmegasquare'] = 0x33BF;\n t['mwsquare'] = 0x33BD;\n t['n'] = 0x006E;\n t['nabengali'] = 0x09A8;\n t['nabla'] = 0x2207;\n t['nacute'] = 0x0144;\n t['nadeva'] = 0x0928;\n t['nagujarati'] = 0x0AA8;\n t['nagurmukhi'] = 0x0A28;\n t['nahiragana'] = 0x306A;\n t['nakatakana'] = 0x30CA;\n t['nakatakanahalfwidth'] = 0xFF85;\n t['napostrophe'] = 0x0149;\n t['nasquare'] = 0x3381;\n t['nbopomofo'] = 0x310B;\n t['nbspace'] = 0x00A0;\n t['ncaron'] = 0x0148;\n t['ncedilla'] = 0x0146;\n t['ncircle'] = 0x24DD;\n t['ncircumflexbelow'] = 0x1E4B;\n t['ncommaaccent'] = 0x0146;\n t['ndotaccent'] = 0x1E45;\n t['ndotbelow'] = 0x1E47;\n t['nehiragana'] = 0x306D;\n t['nekatakana'] = 0x30CD;\n t['nekatakanahalfwidth'] = 0xFF88;\n t['newsheqelsign'] = 0x20AA;\n t['nfsquare'] = 0x338B;\n t['ngabengali'] = 0x0999;\n t['ngadeva'] = 0x0919;\n t['ngagujarati'] = 0x0A99;\n t['ngagurmukhi'] = 0x0A19;\n t['ngonguthai'] = 0x0E07;\n t['nhiragana'] = 0x3093;\n t['nhookleft'] = 0x0272;\n t['nhookretroflex'] = 0x0273;\n t['nieunacirclekorean'] = 0x326F;\n t['nieunaparenkorean'] = 0x320F;\n t['nieuncieuckorean'] = 0x3135;\n t['nieuncirclekorean'] = 0x3261;\n t['nieunhieuhkorean'] = 0x3136;\n t['nieunkorean'] = 0x3134;\n t['nieunpansioskorean'] = 0x3168;\n t['nieunparenkorean'] = 0x3201;\n t['nieunsioskorean'] = 0x3167;\n t['nieuntikeutkorean'] = 0x3166;\n t['nihiragana'] = 0x306B;\n t['nikatakana'] = 0x30CB;\n t['nikatakanahalfwidth'] = 0xFF86;\n t['nikhahitleftthai'] = 0xF899;\n t['nikhahitthai'] = 0x0E4D;\n t['nine'] = 0x0039;\n t['ninearabic'] = 0x0669;\n t['ninebengali'] = 0x09EF;\n t['ninecircle'] = 0x2468;\n t['ninecircleinversesansserif'] = 0x2792;\n t['ninedeva'] = 0x096F;\n t['ninegujarati'] = 0x0AEF;\n t['ninegurmukhi'] = 0x0A6F;\n t['ninehackarabic'] = 0x0669;\n t['ninehangzhou'] = 0x3029;\n t['nineideographicparen'] = 0x3228;\n t['nineinferior'] = 0x2089;\n t['ninemonospace'] = 0xFF19;\n t['nineoldstyle'] = 0xF739;\n t['nineparen'] = 0x247C;\n t['nineperiod'] = 0x2490;\n t['ninepersian'] = 0x06F9;\n t['nineroman'] = 0x2178;\n t['ninesuperior'] = 0x2079;\n t['nineteencircle'] = 0x2472;\n t['nineteenparen'] = 0x2486;\n t['nineteenperiod'] = 0x249A;\n t['ninethai'] = 0x0E59;\n t['nj'] = 0x01CC;\n t['njecyrillic'] = 0x045A;\n t['nkatakana'] = 0x30F3;\n t['nkatakanahalfwidth'] = 0xFF9D;\n t['nlegrightlong'] = 0x019E;\n t['nlinebelow'] = 0x1E49;\n t['nmonospace'] = 0xFF4E;\n t['nmsquare'] = 0x339A;\n t['nnabengali'] = 0x09A3;\n t['nnadeva'] = 0x0923;\n t['nnagujarati'] = 0x0AA3;\n t['nnagurmukhi'] = 0x0A23;\n t['nnnadeva'] = 0x0929;\n t['nohiragana'] = 0x306E;\n t['nokatakana'] = 0x30CE;\n t['nokatakanahalfwidth'] = 0xFF89;\n t['nonbreakingspace'] = 0x00A0;\n t['nonenthai'] = 0x0E13;\n t['nonuthai'] = 0x0E19;\n t['noonarabic'] = 0x0646;\n t['noonfinalarabic'] = 0xFEE6;\n t['noonghunnaarabic'] = 0x06BA;\n t['noonghunnafinalarabic'] = 0xFB9F;\n t['nooninitialarabic'] = 0xFEE7;\n t['noonjeeminitialarabic'] = 0xFCD2;\n t['noonjeemisolatedarabic'] = 0xFC4B;\n t['noonmedialarabic'] = 0xFEE8;\n t['noonmeeminitialarabic'] = 0xFCD5;\n t['noonmeemisolatedarabic'] = 0xFC4E;\n t['noonnoonfinalarabic'] = 0xFC8D;\n t['notcontains'] = 0x220C;\n t['notelement'] = 0x2209;\n t['notelementof'] = 0x2209;\n t['notequal'] = 0x2260;\n t['notgreater'] = 0x226F;\n t['notgreaternorequal'] = 0x2271;\n t['notgreaternorless'] = 0x2279;\n t['notidentical'] = 0x2262;\n t['notless'] = 0x226E;\n t['notlessnorequal'] = 0x2270;\n t['notparallel'] = 0x2226;\n t['notprecedes'] = 0x2280;\n t['notsubset'] = 0x2284;\n t['notsucceeds'] = 0x2281;\n t['notsuperset'] = 0x2285;\n t['nowarmenian'] = 0x0576;\n t['nparen'] = 0x24A9;\n t['nssquare'] = 0x33B1;\n t['nsuperior'] = 0x207F;\n t['ntilde'] = 0x00F1;\n t['nu'] = 0x03BD;\n t['nuhiragana'] = 0x306C;\n t['nukatakana'] = 0x30CC;\n t['nukatakanahalfwidth'] = 0xFF87;\n t['nuktabengali'] = 0x09BC;\n t['nuktadeva'] = 0x093C;\n t['nuktagujarati'] = 0x0ABC;\n t['nuktagurmukhi'] = 0x0A3C;\n t['numbersign'] = 0x0023;\n t['numbersignmonospace'] = 0xFF03;\n t['numbersignsmall'] = 0xFE5F;\n t['numeralsigngreek'] = 0x0374;\n t['numeralsignlowergreek'] = 0x0375;\n t['numero'] = 0x2116;\n t['nun'] = 0x05E0;\n t['nundagesh'] = 0xFB40;\n t['nundageshhebrew'] = 0xFB40;\n t['nunhebrew'] = 0x05E0;\n t['nvsquare'] = 0x33B5;\n t['nwsquare'] = 0x33BB;\n t['nyabengali'] = 0x099E;\n t['nyadeva'] = 0x091E;\n t['nyagujarati'] = 0x0A9E;\n t['nyagurmukhi'] = 0x0A1E;\n t['o'] = 0x006F;\n t['oacute'] = 0x00F3;\n t['oangthai'] = 0x0E2D;\n t['obarred'] = 0x0275;\n t['obarredcyrillic'] = 0x04E9;\n t['obarreddieresiscyrillic'] = 0x04EB;\n t['obengali'] = 0x0993;\n t['obopomofo'] = 0x311B;\n t['obreve'] = 0x014F;\n t['ocandradeva'] = 0x0911;\n t['ocandragujarati'] = 0x0A91;\n t['ocandravowelsigndeva'] = 0x0949;\n t['ocandravowelsigngujarati'] = 0x0AC9;\n t['ocaron'] = 0x01D2;\n t['ocircle'] = 0x24DE;\n t['ocircumflex'] = 0x00F4;\n t['ocircumflexacute'] = 0x1ED1;\n t['ocircumflexdotbelow'] = 0x1ED9;\n t['ocircumflexgrave'] = 0x1ED3;\n t['ocircumflexhookabove'] = 0x1ED5;\n t['ocircumflextilde'] = 0x1ED7;\n t['ocyrillic'] = 0x043E;\n t['odblacute'] = 0x0151;\n t['odblgrave'] = 0x020D;\n t['odeva'] = 0x0913;\n t['odieresis'] = 0x00F6;\n t['odieresiscyrillic'] = 0x04E7;\n t['odotbelow'] = 0x1ECD;\n t['oe'] = 0x0153;\n t['oekorean'] = 0x315A;\n t['ogonek'] = 0x02DB;\n t['ogonekcmb'] = 0x0328;\n t['ograve'] = 0x00F2;\n t['ogujarati'] = 0x0A93;\n t['oharmenian'] = 0x0585;\n t['ohiragana'] = 0x304A;\n t['ohookabove'] = 0x1ECF;\n t['ohorn'] = 0x01A1;\n t['ohornacute'] = 0x1EDB;\n t['ohorndotbelow'] = 0x1EE3;\n t['ohorngrave'] = 0x1EDD;\n t['ohornhookabove'] = 0x1EDF;\n t['ohorntilde'] = 0x1EE1;\n t['ohungarumlaut'] = 0x0151;\n t['oi'] = 0x01A3;\n t['oinvertedbreve'] = 0x020F;\n t['okatakana'] = 0x30AA;\n t['okatakanahalfwidth'] = 0xFF75;\n t['okorean'] = 0x3157;\n t['olehebrew'] = 0x05AB;\n t['omacron'] = 0x014D;\n t['omacronacute'] = 0x1E53;\n t['omacrongrave'] = 0x1E51;\n t['omdeva'] = 0x0950;\n t['omega'] = 0x03C9;\n t['omega1'] = 0x03D6;\n t['omegacyrillic'] = 0x0461;\n t['omegalatinclosed'] = 0x0277;\n t['omegaroundcyrillic'] = 0x047B;\n t['omegatitlocyrillic'] = 0x047D;\n t['omegatonos'] = 0x03CE;\n t['omgujarati'] = 0x0AD0;\n t['omicron'] = 0x03BF;\n t['omicrontonos'] = 0x03CC;\n t['omonospace'] = 0xFF4F;\n t['one'] = 0x0031;\n t['onearabic'] = 0x0661;\n t['onebengali'] = 0x09E7;\n t['onecircle'] = 0x2460;\n t['onecircleinversesansserif'] = 0x278A;\n t['onedeva'] = 0x0967;\n t['onedotenleader'] = 0x2024;\n t['oneeighth'] = 0x215B;\n t['onefitted'] = 0xF6DC;\n t['onegujarati'] = 0x0AE7;\n t['onegurmukhi'] = 0x0A67;\n t['onehackarabic'] = 0x0661;\n t['onehalf'] = 0x00BD;\n t['onehangzhou'] = 0x3021;\n t['oneideographicparen'] = 0x3220;\n t['oneinferior'] = 0x2081;\n t['onemonospace'] = 0xFF11;\n t['onenumeratorbengali'] = 0x09F4;\n t['oneoldstyle'] = 0xF731;\n t['oneparen'] = 0x2474;\n t['oneperiod'] = 0x2488;\n t['onepersian'] = 0x06F1;\n t['onequarter'] = 0x00BC;\n t['oneroman'] = 0x2170;\n t['onesuperior'] = 0x00B9;\n t['onethai'] = 0x0E51;\n t['onethird'] = 0x2153;\n t['oogonek'] = 0x01EB;\n t['oogonekmacron'] = 0x01ED;\n t['oogurmukhi'] = 0x0A13;\n t['oomatragurmukhi'] = 0x0A4B;\n t['oopen'] = 0x0254;\n t['oparen'] = 0x24AA;\n t['openbullet'] = 0x25E6;\n t['option'] = 0x2325;\n t['ordfeminine'] = 0x00AA;\n t['ordmasculine'] = 0x00BA;\n t['orthogonal'] = 0x221F;\n t['oshortdeva'] = 0x0912;\n t['oshortvowelsigndeva'] = 0x094A;\n t['oslash'] = 0x00F8;\n t['oslashacute'] = 0x01FF;\n t['osmallhiragana'] = 0x3049;\n t['osmallkatakana'] = 0x30A9;\n t['osmallkatakanahalfwidth'] = 0xFF6B;\n t['ostrokeacute'] = 0x01FF;\n t['osuperior'] = 0xF6F0;\n t['otcyrillic'] = 0x047F;\n t['otilde'] = 0x00F5;\n t['otildeacute'] = 0x1E4D;\n t['otildedieresis'] = 0x1E4F;\n t['oubopomofo'] = 0x3121;\n t['overline'] = 0x203E;\n t['overlinecenterline'] = 0xFE4A;\n t['overlinecmb'] = 0x0305;\n t['overlinedashed'] = 0xFE49;\n t['overlinedblwavy'] = 0xFE4C;\n t['overlinewavy'] = 0xFE4B;\n t['overscore'] = 0x00AF;\n t['ovowelsignbengali'] = 0x09CB;\n t['ovowelsigndeva'] = 0x094B;\n t['ovowelsigngujarati'] = 0x0ACB;\n t['p'] = 0x0070;\n t['paampssquare'] = 0x3380;\n t['paasentosquare'] = 0x332B;\n t['pabengali'] = 0x09AA;\n t['pacute'] = 0x1E55;\n t['padeva'] = 0x092A;\n t['pagedown'] = 0x21DF;\n t['pageup'] = 0x21DE;\n t['pagujarati'] = 0x0AAA;\n t['pagurmukhi'] = 0x0A2A;\n t['pahiragana'] = 0x3071;\n t['paiyannoithai'] = 0x0E2F;\n t['pakatakana'] = 0x30D1;\n t['palatalizationcyrilliccmb'] = 0x0484;\n t['palochkacyrillic'] = 0x04C0;\n t['pansioskorean'] = 0x317F;\n t['paragraph'] = 0x00B6;\n t['parallel'] = 0x2225;\n t['parenleft'] = 0x0028;\n t['parenleftaltonearabic'] = 0xFD3E;\n t['parenleftbt'] = 0xF8ED;\n t['parenleftex'] = 0xF8EC;\n t['parenleftinferior'] = 0x208D;\n t['parenleftmonospace'] = 0xFF08;\n t['parenleftsmall'] = 0xFE59;\n t['parenleftsuperior'] = 0x207D;\n t['parenlefttp'] = 0xF8EB;\n t['parenleftvertical'] = 0xFE35;\n t['parenright'] = 0x0029;\n t['parenrightaltonearabic'] = 0xFD3F;\n t['parenrightbt'] = 0xF8F8;\n t['parenrightex'] = 0xF8F7;\n t['parenrightinferior'] = 0x208E;\n t['parenrightmonospace'] = 0xFF09;\n t['parenrightsmall'] = 0xFE5A;\n t['parenrightsuperior'] = 0x207E;\n t['parenrighttp'] = 0xF8F6;\n t['parenrightvertical'] = 0xFE36;\n t['partialdiff'] = 0x2202;\n t['paseqhebrew'] = 0x05C0;\n t['pashtahebrew'] = 0x0599;\n t['pasquare'] = 0x33A9;\n t['patah'] = 0x05B7;\n t['patah11'] = 0x05B7;\n t['patah1d'] = 0x05B7;\n t['patah2a'] = 0x05B7;\n t['patahhebrew'] = 0x05B7;\n t['patahnarrowhebrew'] = 0x05B7;\n t['patahquarterhebrew'] = 0x05B7;\n t['patahwidehebrew'] = 0x05B7;\n t['pazerhebrew'] = 0x05A1;\n t['pbopomofo'] = 0x3106;\n t['pcircle'] = 0x24DF;\n t['pdotaccent'] = 0x1E57;\n t['pe'] = 0x05E4;\n t['pecyrillic'] = 0x043F;\n t['pedagesh'] = 0xFB44;\n t['pedageshhebrew'] = 0xFB44;\n t['peezisquare'] = 0x333B;\n t['pefinaldageshhebrew'] = 0xFB43;\n t['peharabic'] = 0x067E;\n t['peharmenian'] = 0x057A;\n t['pehebrew'] = 0x05E4;\n t['pehfinalarabic'] = 0xFB57;\n t['pehinitialarabic'] = 0xFB58;\n t['pehiragana'] = 0x307A;\n t['pehmedialarabic'] = 0xFB59;\n t['pekatakana'] = 0x30DA;\n t['pemiddlehookcyrillic'] = 0x04A7;\n t['perafehebrew'] = 0xFB4E;\n t['percent'] = 0x0025;\n t['percentarabic'] = 0x066A;\n t['percentmonospace'] = 0xFF05;\n t['percentsmall'] = 0xFE6A;\n t['period'] = 0x002E;\n t['periodarmenian'] = 0x0589;\n t['periodcentered'] = 0x00B7;\n t['periodhalfwidth'] = 0xFF61;\n t['periodinferior'] = 0xF6E7;\n t['periodmonospace'] = 0xFF0E;\n t['periodsmall'] = 0xFE52;\n t['periodsuperior'] = 0xF6E8;\n t['perispomenigreekcmb'] = 0x0342;\n t['perpendicular'] = 0x22A5;\n t['perthousand'] = 0x2030;\n t['peseta'] = 0x20A7;\n t['pfsquare'] = 0x338A;\n t['phabengali'] = 0x09AB;\n t['phadeva'] = 0x092B;\n t['phagujarati'] = 0x0AAB;\n t['phagurmukhi'] = 0x0A2B;\n t['phi'] = 0x03C6;\n t['phi1'] = 0x03D5;\n t['phieuphacirclekorean'] = 0x327A;\n t['phieuphaparenkorean'] = 0x321A;\n t['phieuphcirclekorean'] = 0x326C;\n t['phieuphkorean'] = 0x314D;\n t['phieuphparenkorean'] = 0x320C;\n t['philatin'] = 0x0278;\n t['phinthuthai'] = 0x0E3A;\n t['phisymbolgreek'] = 0x03D5;\n t['phook'] = 0x01A5;\n t['phophanthai'] = 0x0E1E;\n t['phophungthai'] = 0x0E1C;\n t['phosamphaothai'] = 0x0E20;\n t['pi'] = 0x03C0;\n t['pieupacirclekorean'] = 0x3273;\n t['pieupaparenkorean'] = 0x3213;\n t['pieupcieuckorean'] = 0x3176;\n t['pieupcirclekorean'] = 0x3265;\n t['pieupkiyeokkorean'] = 0x3172;\n t['pieupkorean'] = 0x3142;\n t['pieupparenkorean'] = 0x3205;\n t['pieupsioskiyeokkorean'] = 0x3174;\n t['pieupsioskorean'] = 0x3144;\n t['pieupsiostikeutkorean'] = 0x3175;\n t['pieupthieuthkorean'] = 0x3177;\n t['pieuptikeutkorean'] = 0x3173;\n t['pihiragana'] = 0x3074;\n t['pikatakana'] = 0x30D4;\n t['pisymbolgreek'] = 0x03D6;\n t['piwrarmenian'] = 0x0583;\n t['plus'] = 0x002B;\n t['plusbelowcmb'] = 0x031F;\n t['pluscircle'] = 0x2295;\n t['plusminus'] = 0x00B1;\n t['plusmod'] = 0x02D6;\n t['plusmonospace'] = 0xFF0B;\n t['plussmall'] = 0xFE62;\n t['plussuperior'] = 0x207A;\n t['pmonospace'] = 0xFF50;\n t['pmsquare'] = 0x33D8;\n t['pohiragana'] = 0x307D;\n t['pointingindexdownwhite'] = 0x261F;\n t['pointingindexleftwhite'] = 0x261C;\n t['pointingindexrightwhite'] = 0x261E;\n t['pointingindexupwhite'] = 0x261D;\n t['pokatakana'] = 0x30DD;\n t['poplathai'] = 0x0E1B;\n t['postalmark'] = 0x3012;\n t['postalmarkface'] = 0x3020;\n t['pparen'] = 0x24AB;\n t['precedes'] = 0x227A;\n t['prescription'] = 0x211E;\n t['primemod'] = 0x02B9;\n t['primereversed'] = 0x2035;\n t['product'] = 0x220F;\n t['projective'] = 0x2305;\n t['prolongedkana'] = 0x30FC;\n t['propellor'] = 0x2318;\n t['propersubset'] = 0x2282;\n t['propersuperset'] = 0x2283;\n t['proportion'] = 0x2237;\n t['proportional'] = 0x221D;\n t['psi'] = 0x03C8;\n t['psicyrillic'] = 0x0471;\n t['psilipneumatacyrilliccmb'] = 0x0486;\n t['pssquare'] = 0x33B0;\n t['puhiragana'] = 0x3077;\n t['pukatakana'] = 0x30D7;\n t['pvsquare'] = 0x33B4;\n t['pwsquare'] = 0x33BA;\n t['q'] = 0x0071;\n t['qadeva'] = 0x0958;\n t['qadmahebrew'] = 0x05A8;\n t['qafarabic'] = 0x0642;\n t['qaffinalarabic'] = 0xFED6;\n t['qafinitialarabic'] = 0xFED7;\n t['qafmedialarabic'] = 0xFED8;\n t['qamats'] = 0x05B8;\n t['qamats10'] = 0x05B8;\n t['qamats1a'] = 0x05B8;\n t['qamats1c'] = 0x05B8;\n t['qamats27'] = 0x05B8;\n t['qamats29'] = 0x05B8;\n t['qamats33'] = 0x05B8;\n t['qamatsde'] = 0x05B8;\n t['qamatshebrew'] = 0x05B8;\n t['qamatsnarrowhebrew'] = 0x05B8;\n t['qamatsqatanhebrew'] = 0x05B8;\n t['qamatsqatannarrowhebrew'] = 0x05B8;\n t['qamatsqatanquarterhebrew'] = 0x05B8;\n t['qamatsqatanwidehebrew'] = 0x05B8;\n t['qamatsquarterhebrew'] = 0x05B8;\n t['qamatswidehebrew'] = 0x05B8;\n t['qarneyparahebrew'] = 0x059F;\n t['qbopomofo'] = 0x3111;\n t['qcircle'] = 0x24E0;\n t['qhook'] = 0x02A0;\n t['qmonospace'] = 0xFF51;\n t['qof'] = 0x05E7;\n t['qofdagesh'] = 0xFB47;\n t['qofdageshhebrew'] = 0xFB47;\n t['qofhebrew'] = 0x05E7;\n t['qparen'] = 0x24AC;\n t['quarternote'] = 0x2669;\n t['qubuts'] = 0x05BB;\n t['qubuts18'] = 0x05BB;\n t['qubuts25'] = 0x05BB;\n t['qubuts31'] = 0x05BB;\n t['qubutshebrew'] = 0x05BB;\n t['qubutsnarrowhebrew'] = 0x05BB;\n t['qubutsquarterhebrew'] = 0x05BB;\n t['qubutswidehebrew'] = 0x05BB;\n t['question'] = 0x003F;\n t['questionarabic'] = 0x061F;\n t['questionarmenian'] = 0x055E;\n t['questiondown'] = 0x00BF;\n t['questiondownsmall'] = 0xF7BF;\n t['questiongreek'] = 0x037E;\n t['questionmonospace'] = 0xFF1F;\n t['questionsmall'] = 0xF73F;\n t['quotedbl'] = 0x0022;\n t['quotedblbase'] = 0x201E;\n t['quotedblleft'] = 0x201C;\n t['quotedblmonospace'] = 0xFF02;\n t['quotedblprime'] = 0x301E;\n t['quotedblprimereversed'] = 0x301D;\n t['quotedblright'] = 0x201D;\n t['quoteleft'] = 0x2018;\n t['quoteleftreversed'] = 0x201B;\n t['quotereversed'] = 0x201B;\n t['quoteright'] = 0x2019;\n t['quoterightn'] = 0x0149;\n t['quotesinglbase'] = 0x201A;\n t['quotesingle'] = 0x0027;\n t['quotesinglemonospace'] = 0xFF07;\n t['r'] = 0x0072;\n t['raarmenian'] = 0x057C;\n t['rabengali'] = 0x09B0;\n t['racute'] = 0x0155;\n t['radeva'] = 0x0930;\n t['radical'] = 0x221A;\n t['radicalex'] = 0xF8E5;\n t['radoverssquare'] = 0x33AE;\n t['radoverssquaredsquare'] = 0x33AF;\n t['radsquare'] = 0x33AD;\n t['rafe'] = 0x05BF;\n t['rafehebrew'] = 0x05BF;\n t['ragujarati'] = 0x0AB0;\n t['ragurmukhi'] = 0x0A30;\n t['rahiragana'] = 0x3089;\n t['rakatakana'] = 0x30E9;\n t['rakatakanahalfwidth'] = 0xFF97;\n t['ralowerdiagonalbengali'] = 0x09F1;\n t['ramiddlediagonalbengali'] = 0x09F0;\n t['ramshorn'] = 0x0264;\n t['ratio'] = 0x2236;\n t['rbopomofo'] = 0x3116;\n t['rcaron'] = 0x0159;\n t['rcedilla'] = 0x0157;\n t['rcircle'] = 0x24E1;\n t['rcommaaccent'] = 0x0157;\n t['rdblgrave'] = 0x0211;\n t['rdotaccent'] = 0x1E59;\n t['rdotbelow'] = 0x1E5B;\n t['rdotbelowmacron'] = 0x1E5D;\n t['referencemark'] = 0x203B;\n t['reflexsubset'] = 0x2286;\n t['reflexsuperset'] = 0x2287;\n t['registered'] = 0x00AE;\n t['registersans'] = 0xF8E8;\n t['registerserif'] = 0xF6DA;\n t['reharabic'] = 0x0631;\n t['reharmenian'] = 0x0580;\n t['rehfinalarabic'] = 0xFEAE;\n t['rehiragana'] = 0x308C;\n t['rekatakana'] = 0x30EC;\n t['rekatakanahalfwidth'] = 0xFF9A;\n t['resh'] = 0x05E8;\n t['reshdageshhebrew'] = 0xFB48;\n t['reshhebrew'] = 0x05E8;\n t['reversedtilde'] = 0x223D;\n t['reviahebrew'] = 0x0597;\n t['reviamugrashhebrew'] = 0x0597;\n t['revlogicalnot'] = 0x2310;\n t['rfishhook'] = 0x027E;\n t['rfishhookreversed'] = 0x027F;\n t['rhabengali'] = 0x09DD;\n t['rhadeva'] = 0x095D;\n t['rho'] = 0x03C1;\n t['rhook'] = 0x027D;\n t['rhookturned'] = 0x027B;\n t['rhookturnedsuperior'] = 0x02B5;\n t['rhosymbolgreek'] = 0x03F1;\n t['rhotichookmod'] = 0x02DE;\n t['rieulacirclekorean'] = 0x3271;\n t['rieulaparenkorean'] = 0x3211;\n t['rieulcirclekorean'] = 0x3263;\n t['rieulhieuhkorean'] = 0x3140;\n t['rieulkiyeokkorean'] = 0x313A;\n t['rieulkiyeoksioskorean'] = 0x3169;\n t['rieulkorean'] = 0x3139;\n t['rieulmieumkorean'] = 0x313B;\n t['rieulpansioskorean'] = 0x316C;\n t['rieulparenkorean'] = 0x3203;\n t['rieulphieuphkorean'] = 0x313F;\n t['rieulpieupkorean'] = 0x313C;\n t['rieulpieupsioskorean'] = 0x316B;\n t['rieulsioskorean'] = 0x313D;\n t['rieulthieuthkorean'] = 0x313E;\n t['rieultikeutkorean'] = 0x316A;\n t['rieulyeorinhieuhkorean'] = 0x316D;\n t['rightangle'] = 0x221F;\n t['righttackbelowcmb'] = 0x0319;\n t['righttriangle'] = 0x22BF;\n t['rihiragana'] = 0x308A;\n t['rikatakana'] = 0x30EA;\n t['rikatakanahalfwidth'] = 0xFF98;\n t['ring'] = 0x02DA;\n t['ringbelowcmb'] = 0x0325;\n t['ringcmb'] = 0x030A;\n t['ringhalfleft'] = 0x02BF;\n t['ringhalfleftarmenian'] = 0x0559;\n t['ringhalfleftbelowcmb'] = 0x031C;\n t['ringhalfleftcentered'] = 0x02D3;\n t['ringhalfright'] = 0x02BE;\n t['ringhalfrightbelowcmb'] = 0x0339;\n t['ringhalfrightcentered'] = 0x02D2;\n t['rinvertedbreve'] = 0x0213;\n t['rittorusquare'] = 0x3351;\n t['rlinebelow'] = 0x1E5F;\n t['rlongleg'] = 0x027C;\n t['rlonglegturned'] = 0x027A;\n t['rmonospace'] = 0xFF52;\n t['rohiragana'] = 0x308D;\n t['rokatakana'] = 0x30ED;\n t['rokatakanahalfwidth'] = 0xFF9B;\n t['roruathai'] = 0x0E23;\n t['rparen'] = 0x24AD;\n t['rrabengali'] = 0x09DC;\n t['rradeva'] = 0x0931;\n t['rragurmukhi'] = 0x0A5C;\n t['rreharabic'] = 0x0691;\n t['rrehfinalarabic'] = 0xFB8D;\n t['rrvocalicbengali'] = 0x09E0;\n t['rrvocalicdeva'] = 0x0960;\n t['rrvocalicgujarati'] = 0x0AE0;\n t['rrvocalicvowelsignbengali'] = 0x09C4;\n t['rrvocalicvowelsigndeva'] = 0x0944;\n t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n t['rsuperior'] = 0xF6F1;\n t['rtblock'] = 0x2590;\n t['rturned'] = 0x0279;\n t['rturnedsuperior'] = 0x02B4;\n t['ruhiragana'] = 0x308B;\n t['rukatakana'] = 0x30EB;\n t['rukatakanahalfwidth'] = 0xFF99;\n t['rupeemarkbengali'] = 0x09F2;\n t['rupeesignbengali'] = 0x09F3;\n t['rupiah'] = 0xF6DD;\n t['ruthai'] = 0x0E24;\n t['rvocalicbengali'] = 0x098B;\n t['rvocalicdeva'] = 0x090B;\n t['rvocalicgujarati'] = 0x0A8B;\n t['rvocalicvowelsignbengali'] = 0x09C3;\n t['rvocalicvowelsigndeva'] = 0x0943;\n t['rvocalicvowelsigngujarati'] = 0x0AC3;\n t['s'] = 0x0073;\n t['sabengali'] = 0x09B8;\n t['sacute'] = 0x015B;\n t['sacutedotaccent'] = 0x1E65;\n t['sadarabic'] = 0x0635;\n t['sadeva'] = 0x0938;\n t['sadfinalarabic'] = 0xFEBA;\n t['sadinitialarabic'] = 0xFEBB;\n t['sadmedialarabic'] = 0xFEBC;\n t['sagujarati'] = 0x0AB8;\n t['sagurmukhi'] = 0x0A38;\n t['sahiragana'] = 0x3055;\n t['sakatakana'] = 0x30B5;\n t['sakatakanahalfwidth'] = 0xFF7B;\n t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n t['samekh'] = 0x05E1;\n t['samekhdagesh'] = 0xFB41;\n t['samekhdageshhebrew'] = 0xFB41;\n t['samekhhebrew'] = 0x05E1;\n t['saraaathai'] = 0x0E32;\n t['saraaethai'] = 0x0E41;\n t['saraaimaimalaithai'] = 0x0E44;\n t['saraaimaimuanthai'] = 0x0E43;\n t['saraamthai'] = 0x0E33;\n t['saraathai'] = 0x0E30;\n t['saraethai'] = 0x0E40;\n t['saraiileftthai'] = 0xF886;\n t['saraiithai'] = 0x0E35;\n t['saraileftthai'] = 0xF885;\n t['saraithai'] = 0x0E34;\n t['saraothai'] = 0x0E42;\n t['saraueeleftthai'] = 0xF888;\n t['saraueethai'] = 0x0E37;\n t['saraueleftthai'] = 0xF887;\n t['sarauethai'] = 0x0E36;\n t['sarauthai'] = 0x0E38;\n t['sarauuthai'] = 0x0E39;\n t['sbopomofo'] = 0x3119;\n t['scaron'] = 0x0161;\n t['scarondotaccent'] = 0x1E67;\n t['scedilla'] = 0x015F;\n t['schwa'] = 0x0259;\n t['schwacyrillic'] = 0x04D9;\n t['schwadieresiscyrillic'] = 0x04DB;\n t['schwahook'] = 0x025A;\n t['scircle'] = 0x24E2;\n t['scircumflex'] = 0x015D;\n t['scommaaccent'] = 0x0219;\n t['sdotaccent'] = 0x1E61;\n t['sdotbelow'] = 0x1E63;\n t['sdotbelowdotaccent'] = 0x1E69;\n t['seagullbelowcmb'] = 0x033C;\n t['second'] = 0x2033;\n t['secondtonechinese'] = 0x02CA;\n t['section'] = 0x00A7;\n t['seenarabic'] = 0x0633;\n t['seenfinalarabic'] = 0xFEB2;\n t['seeninitialarabic'] = 0xFEB3;\n t['seenmedialarabic'] = 0xFEB4;\n t['segol'] = 0x05B6;\n t['segol13'] = 0x05B6;\n t['segol1f'] = 0x05B6;\n t['segol2c'] = 0x05B6;\n t['segolhebrew'] = 0x05B6;\n t['segolnarrowhebrew'] = 0x05B6;\n t['segolquarterhebrew'] = 0x05B6;\n t['segoltahebrew'] = 0x0592;\n t['segolwidehebrew'] = 0x05B6;\n t['seharmenian'] = 0x057D;\n t['sehiragana'] = 0x305B;\n t['sekatakana'] = 0x30BB;\n t['sekatakanahalfwidth'] = 0xFF7E;\n t['semicolon'] = 0x003B;\n t['semicolonarabic'] = 0x061B;\n t['semicolonmonospace'] = 0xFF1B;\n t['semicolonsmall'] = 0xFE54;\n t['semivoicedmarkkana'] = 0x309C;\n t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n t['sentisquare'] = 0x3322;\n t['sentosquare'] = 0x3323;\n t['seven'] = 0x0037;\n t['sevenarabic'] = 0x0667;\n t['sevenbengali'] = 0x09ED;\n t['sevencircle'] = 0x2466;\n t['sevencircleinversesansserif'] = 0x2790;\n t['sevendeva'] = 0x096D;\n t['seveneighths'] = 0x215E;\n t['sevengujarati'] = 0x0AED;\n t['sevengurmukhi'] = 0x0A6D;\n t['sevenhackarabic'] = 0x0667;\n t['sevenhangzhou'] = 0x3027;\n t['sevenideographicparen'] = 0x3226;\n t['seveninferior'] = 0x2087;\n t['sevenmonospace'] = 0xFF17;\n t['sevenoldstyle'] = 0xF737;\n t['sevenparen'] = 0x247A;\n t['sevenperiod'] = 0x248E;\n t['sevenpersian'] = 0x06F7;\n t['sevenroman'] = 0x2176;\n t['sevensuperior'] = 0x2077;\n t['seventeencircle'] = 0x2470;\n t['seventeenparen'] = 0x2484;\n t['seventeenperiod'] = 0x2498;\n t['seventhai'] = 0x0E57;\n t['sfthyphen'] = 0x00AD;\n t['shaarmenian'] = 0x0577;\n t['shabengali'] = 0x09B6;\n t['shacyrillic'] = 0x0448;\n t['shaddaarabic'] = 0x0651;\n t['shaddadammaarabic'] = 0xFC61;\n t['shaddadammatanarabic'] = 0xFC5E;\n t['shaddafathaarabic'] = 0xFC60;\n t['shaddakasraarabic'] = 0xFC62;\n t['shaddakasratanarabic'] = 0xFC5F;\n t['shade'] = 0x2592;\n t['shadedark'] = 0x2593;\n t['shadelight'] = 0x2591;\n t['shademedium'] = 0x2592;\n t['shadeva'] = 0x0936;\n t['shagujarati'] = 0x0AB6;\n t['shagurmukhi'] = 0x0A36;\n t['shalshelethebrew'] = 0x0593;\n t['shbopomofo'] = 0x3115;\n t['shchacyrillic'] = 0x0449;\n t['sheenarabic'] = 0x0634;\n t['sheenfinalarabic'] = 0xFEB6;\n t['sheeninitialarabic'] = 0xFEB7;\n t['sheenmedialarabic'] = 0xFEB8;\n t['sheicoptic'] = 0x03E3;\n t['sheqel'] = 0x20AA;\n t['sheqelhebrew'] = 0x20AA;\n t['sheva'] = 0x05B0;\n t['sheva115'] = 0x05B0;\n t['sheva15'] = 0x05B0;\n t['sheva22'] = 0x05B0;\n t['sheva2e'] = 0x05B0;\n t['shevahebrew'] = 0x05B0;\n t['shevanarrowhebrew'] = 0x05B0;\n t['shevaquarterhebrew'] = 0x05B0;\n t['shevawidehebrew'] = 0x05B0;\n t['shhacyrillic'] = 0x04BB;\n t['shimacoptic'] = 0x03ED;\n t['shin'] = 0x05E9;\n t['shindagesh'] = 0xFB49;\n t['shindageshhebrew'] = 0xFB49;\n t['shindageshshindot'] = 0xFB2C;\n t['shindageshshindothebrew'] = 0xFB2C;\n t['shindageshsindot'] = 0xFB2D;\n t['shindageshsindothebrew'] = 0xFB2D;\n t['shindothebrew'] = 0x05C1;\n t['shinhebrew'] = 0x05E9;\n t['shinshindot'] = 0xFB2A;\n t['shinshindothebrew'] = 0xFB2A;\n t['shinsindot'] = 0xFB2B;\n t['shinsindothebrew'] = 0xFB2B;\n t['shook'] = 0x0282;\n t['sigma'] = 0x03C3;\n t['sigma1'] = 0x03C2;\n t['sigmafinal'] = 0x03C2;\n t['sigmalunatesymbolgreek'] = 0x03F2;\n t['sihiragana'] = 0x3057;\n t['sikatakana'] = 0x30B7;\n t['sikatakanahalfwidth'] = 0xFF7C;\n t['siluqhebrew'] = 0x05BD;\n t['siluqlefthebrew'] = 0x05BD;\n t['similar'] = 0x223C;\n t['sindothebrew'] = 0x05C2;\n t['siosacirclekorean'] = 0x3274;\n t['siosaparenkorean'] = 0x3214;\n t['sioscieuckorean'] = 0x317E;\n t['sioscirclekorean'] = 0x3266;\n t['sioskiyeokkorean'] = 0x317A;\n t['sioskorean'] = 0x3145;\n t['siosnieunkorean'] = 0x317B;\n t['siosparenkorean'] = 0x3206;\n t['siospieupkorean'] = 0x317D;\n t['siostikeutkorean'] = 0x317C;\n t['six'] = 0x0036;\n t['sixarabic'] = 0x0666;\n t['sixbengali'] = 0x09EC;\n t['sixcircle'] = 0x2465;\n t['sixcircleinversesansserif'] = 0x278F;\n t['sixdeva'] = 0x096C;\n t['sixgujarati'] = 0x0AEC;\n t['sixgurmukhi'] = 0x0A6C;\n t['sixhackarabic'] = 0x0666;\n t['sixhangzhou'] = 0x3026;\n t['sixideographicparen'] = 0x3225;\n t['sixinferior'] = 0x2086;\n t['sixmonospace'] = 0xFF16;\n t['sixoldstyle'] = 0xF736;\n t['sixparen'] = 0x2479;\n t['sixperiod'] = 0x248D;\n t['sixpersian'] = 0x06F6;\n t['sixroman'] = 0x2175;\n t['sixsuperior'] = 0x2076;\n t['sixteencircle'] = 0x246F;\n t['sixteencurrencydenominatorbengali'] = 0x09F9;\n t['sixteenparen'] = 0x2483;\n t['sixteenperiod'] = 0x2497;\n t['sixthai'] = 0x0E56;\n t['slash'] = 0x002F;\n t['slashmonospace'] = 0xFF0F;\n t['slong'] = 0x017F;\n t['slongdotaccent'] = 0x1E9B;\n t['smileface'] = 0x263A;\n t['smonospace'] = 0xFF53;\n t['sofpasuqhebrew'] = 0x05C3;\n t['softhyphen'] = 0x00AD;\n t['softsigncyrillic'] = 0x044C;\n t['sohiragana'] = 0x305D;\n t['sokatakana'] = 0x30BD;\n t['sokatakanahalfwidth'] = 0xFF7F;\n t['soliduslongoverlaycmb'] = 0x0338;\n t['solidusshortoverlaycmb'] = 0x0337;\n t['sorusithai'] = 0x0E29;\n t['sosalathai'] = 0x0E28;\n t['sosothai'] = 0x0E0B;\n t['sosuathai'] = 0x0E2A;\n t['space'] = 0x0020;\n t['spacehackarabic'] = 0x0020;\n t['spade'] = 0x2660;\n t['spadesuitblack'] = 0x2660;\n t['spadesuitwhite'] = 0x2664;\n t['sparen'] = 0x24AE;\n t['squarebelowcmb'] = 0x033B;\n t['squarecc'] = 0x33C4;\n t['squarecm'] = 0x339D;\n t['squarediagonalcrosshatchfill'] = 0x25A9;\n t['squarehorizontalfill'] = 0x25A4;\n t['squarekg'] = 0x338F;\n t['squarekm'] = 0x339E;\n t['squarekmcapital'] = 0x33CE;\n t['squareln'] = 0x33D1;\n t['squarelog'] = 0x33D2;\n t['squaremg'] = 0x338E;\n t['squaremil'] = 0x33D5;\n t['squaremm'] = 0x339C;\n t['squaremsquared'] = 0x33A1;\n t['squareorthogonalcrosshatchfill'] = 0x25A6;\n t['squareupperlefttolowerrightfill'] = 0x25A7;\n t['squareupperrighttolowerleftfill'] = 0x25A8;\n t['squareverticalfill'] = 0x25A5;\n t['squarewhitewithsmallblack'] = 0x25A3;\n t['srsquare'] = 0x33DB;\n t['ssabengali'] = 0x09B7;\n t['ssadeva'] = 0x0937;\n t['ssagujarati'] = 0x0AB7;\n t['ssangcieuckorean'] = 0x3149;\n t['ssanghieuhkorean'] = 0x3185;\n t['ssangieungkorean'] = 0x3180;\n t['ssangkiyeokkorean'] = 0x3132;\n t['ssangnieunkorean'] = 0x3165;\n t['ssangpieupkorean'] = 0x3143;\n t['ssangsioskorean'] = 0x3146;\n t['ssangtikeutkorean'] = 0x3138;\n t['ssuperior'] = 0xF6F2;\n t['sterling'] = 0x00A3;\n t['sterlingmonospace'] = 0xFFE1;\n t['strokelongoverlaycmb'] = 0x0336;\n t['strokeshortoverlaycmb'] = 0x0335;\n t['subset'] = 0x2282;\n t['subsetnotequal'] = 0x228A;\n t['subsetorequal'] = 0x2286;\n t['succeeds'] = 0x227B;\n t['suchthat'] = 0x220B;\n t['suhiragana'] = 0x3059;\n t['sukatakana'] = 0x30B9;\n t['sukatakanahalfwidth'] = 0xFF7D;\n t['sukunarabic'] = 0x0652;\n t['summation'] = 0x2211;\n t['sun'] = 0x263C;\n t['superset'] = 0x2283;\n t['supersetnotequal'] = 0x228B;\n t['supersetorequal'] = 0x2287;\n t['svsquare'] = 0x33DC;\n t['syouwaerasquare'] = 0x337C;\n t['t'] = 0x0074;\n t['tabengali'] = 0x09A4;\n t['tackdown'] = 0x22A4;\n t['tackleft'] = 0x22A3;\n t['tadeva'] = 0x0924;\n t['tagujarati'] = 0x0AA4;\n t['tagurmukhi'] = 0x0A24;\n t['taharabic'] = 0x0637;\n t['tahfinalarabic'] = 0xFEC2;\n t['tahinitialarabic'] = 0xFEC3;\n t['tahiragana'] = 0x305F;\n t['tahmedialarabic'] = 0xFEC4;\n t['taisyouerasquare'] = 0x337D;\n t['takatakana'] = 0x30BF;\n t['takatakanahalfwidth'] = 0xFF80;\n t['tatweelarabic'] = 0x0640;\n t['tau'] = 0x03C4;\n t['tav'] = 0x05EA;\n t['tavdages'] = 0xFB4A;\n t['tavdagesh'] = 0xFB4A;\n t['tavdageshhebrew'] = 0xFB4A;\n t['tavhebrew'] = 0x05EA;\n t['tbar'] = 0x0167;\n t['tbopomofo'] = 0x310A;\n t['tcaron'] = 0x0165;\n t['tccurl'] = 0x02A8;\n t['tcedilla'] = 0x0163;\n t['tcheharabic'] = 0x0686;\n t['tchehfinalarabic'] = 0xFB7B;\n t['tchehinitialarabic'] = 0xFB7C;\n t['tchehmedialarabic'] = 0xFB7D;\n t['tcircle'] = 0x24E3;\n t['tcircumflexbelow'] = 0x1E71;\n t['tcommaaccent'] = 0x0163;\n t['tdieresis'] = 0x1E97;\n t['tdotaccent'] = 0x1E6B;\n t['tdotbelow'] = 0x1E6D;\n t['tecyrillic'] = 0x0442;\n t['tedescendercyrillic'] = 0x04AD;\n t['teharabic'] = 0x062A;\n t['tehfinalarabic'] = 0xFE96;\n t['tehhahinitialarabic'] = 0xFCA2;\n t['tehhahisolatedarabic'] = 0xFC0C;\n t['tehinitialarabic'] = 0xFE97;\n t['tehiragana'] = 0x3066;\n t['tehjeeminitialarabic'] = 0xFCA1;\n t['tehjeemisolatedarabic'] = 0xFC0B;\n t['tehmarbutaarabic'] = 0x0629;\n t['tehmarbutafinalarabic'] = 0xFE94;\n t['tehmedialarabic'] = 0xFE98;\n t['tehmeeminitialarabic'] = 0xFCA4;\n t['tehmeemisolatedarabic'] = 0xFC0E;\n t['tehnoonfinalarabic'] = 0xFC73;\n t['tekatakana'] = 0x30C6;\n t['tekatakanahalfwidth'] = 0xFF83;\n t['telephone'] = 0x2121;\n t['telephoneblack'] = 0x260E;\n t['telishagedolahebrew'] = 0x05A0;\n t['telishaqetanahebrew'] = 0x05A9;\n t['tencircle'] = 0x2469;\n t['tenideographicparen'] = 0x3229;\n t['tenparen'] = 0x247D;\n t['tenperiod'] = 0x2491;\n t['tenroman'] = 0x2179;\n t['tesh'] = 0x02A7;\n t['tet'] = 0x05D8;\n t['tetdagesh'] = 0xFB38;\n t['tetdageshhebrew'] = 0xFB38;\n t['tethebrew'] = 0x05D8;\n t['tetsecyrillic'] = 0x04B5;\n t['tevirhebrew'] = 0x059B;\n t['tevirlefthebrew'] = 0x059B;\n t['thabengali'] = 0x09A5;\n t['thadeva'] = 0x0925;\n t['thagujarati'] = 0x0AA5;\n t['thagurmukhi'] = 0x0A25;\n t['thalarabic'] = 0x0630;\n t['thalfinalarabic'] = 0xFEAC;\n t['thanthakhatlowleftthai'] = 0xF898;\n t['thanthakhatlowrightthai'] = 0xF897;\n t['thanthakhatthai'] = 0x0E4C;\n t['thanthakhatupperleftthai'] = 0xF896;\n t['theharabic'] = 0x062B;\n t['thehfinalarabic'] = 0xFE9A;\n t['thehinitialarabic'] = 0xFE9B;\n t['thehmedialarabic'] = 0xFE9C;\n t['thereexists'] = 0x2203;\n t['therefore'] = 0x2234;\n t['theta'] = 0x03B8;\n t['theta1'] = 0x03D1;\n t['thetasymbolgreek'] = 0x03D1;\n t['thieuthacirclekorean'] = 0x3279;\n t['thieuthaparenkorean'] = 0x3219;\n t['thieuthcirclekorean'] = 0x326B;\n t['thieuthkorean'] = 0x314C;\n t['thieuthparenkorean'] = 0x320B;\n t['thirteencircle'] = 0x246C;\n t['thirteenparen'] = 0x2480;\n t['thirteenperiod'] = 0x2494;\n t['thonangmonthothai'] = 0x0E11;\n t['thook'] = 0x01AD;\n t['thophuthaothai'] = 0x0E12;\n t['thorn'] = 0x00FE;\n t['thothahanthai'] = 0x0E17;\n t['thothanthai'] = 0x0E10;\n t['thothongthai'] = 0x0E18;\n t['thothungthai'] = 0x0E16;\n t['thousandcyrillic'] = 0x0482;\n t['thousandsseparatorarabic'] = 0x066C;\n t['thousandsseparatorpersian'] = 0x066C;\n t['three'] = 0x0033;\n t['threearabic'] = 0x0663;\n t['threebengali'] = 0x09E9;\n t['threecircle'] = 0x2462;\n t['threecircleinversesansserif'] = 0x278C;\n t['threedeva'] = 0x0969;\n t['threeeighths'] = 0x215C;\n t['threegujarati'] = 0x0AE9;\n t['threegurmukhi'] = 0x0A69;\n t['threehackarabic'] = 0x0663;\n t['threehangzhou'] = 0x3023;\n t['threeideographicparen'] = 0x3222;\n t['threeinferior'] = 0x2083;\n t['threemonospace'] = 0xFF13;\n t['threenumeratorbengali'] = 0x09F6;\n t['threeoldstyle'] = 0xF733;\n t['threeparen'] = 0x2476;\n t['threeperiod'] = 0x248A;\n t['threepersian'] = 0x06F3;\n t['threequarters'] = 0x00BE;\n t['threequartersemdash'] = 0xF6DE;\n t['threeroman'] = 0x2172;\n t['threesuperior'] = 0x00B3;\n t['threethai'] = 0x0E53;\n t['thzsquare'] = 0x3394;\n t['tihiragana'] = 0x3061;\n t['tikatakana'] = 0x30C1;\n t['tikatakanahalfwidth'] = 0xFF81;\n t['tikeutacirclekorean'] = 0x3270;\n t['tikeutaparenkorean'] = 0x3210;\n t['tikeutcirclekorean'] = 0x3262;\n t['tikeutkorean'] = 0x3137;\n t['tikeutparenkorean'] = 0x3202;\n t['tilde'] = 0x02DC;\n t['tildebelowcmb'] = 0x0330;\n t['tildecmb'] = 0x0303;\n t['tildecomb'] = 0x0303;\n t['tildedoublecmb'] = 0x0360;\n t['tildeoperator'] = 0x223C;\n t['tildeoverlaycmb'] = 0x0334;\n t['tildeverticalcmb'] = 0x033E;\n t['timescircle'] = 0x2297;\n t['tipehahebrew'] = 0x0596;\n t['tipehalefthebrew'] = 0x0596;\n t['tippigurmukhi'] = 0x0A70;\n t['titlocyrilliccmb'] = 0x0483;\n t['tiwnarmenian'] = 0x057F;\n t['tlinebelow'] = 0x1E6F;\n t['tmonospace'] = 0xFF54;\n t['toarmenian'] = 0x0569;\n t['tohiragana'] = 0x3068;\n t['tokatakana'] = 0x30C8;\n t['tokatakanahalfwidth'] = 0xFF84;\n t['tonebarextrahighmod'] = 0x02E5;\n t['tonebarextralowmod'] = 0x02E9;\n t['tonebarhighmod'] = 0x02E6;\n t['tonebarlowmod'] = 0x02E8;\n t['tonebarmidmod'] = 0x02E7;\n t['tonefive'] = 0x01BD;\n t['tonesix'] = 0x0185;\n t['tonetwo'] = 0x01A8;\n t['tonos'] = 0x0384;\n t['tonsquare'] = 0x3327;\n t['topatakthai'] = 0x0E0F;\n t['tortoiseshellbracketleft'] = 0x3014;\n t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n t['tortoiseshellbracketleftvertical'] = 0xFE39;\n t['tortoiseshellbracketright'] = 0x3015;\n t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n t['totaothai'] = 0x0E15;\n t['tpalatalhook'] = 0x01AB;\n t['tparen'] = 0x24AF;\n t['trademark'] = 0x2122;\n t['trademarksans'] = 0xF8EA;\n t['trademarkserif'] = 0xF6DB;\n t['tretroflexhook'] = 0x0288;\n t['triagdn'] = 0x25BC;\n t['triaglf'] = 0x25C4;\n t['triagrt'] = 0x25BA;\n t['triagup'] = 0x25B2;\n t['ts'] = 0x02A6;\n t['tsadi'] = 0x05E6;\n t['tsadidagesh'] = 0xFB46;\n t['tsadidageshhebrew'] = 0xFB46;\n t['tsadihebrew'] = 0x05E6;\n t['tsecyrillic'] = 0x0446;\n t['tsere'] = 0x05B5;\n t['tsere12'] = 0x05B5;\n t['tsere1e'] = 0x05B5;\n t['tsere2b'] = 0x05B5;\n t['tserehebrew'] = 0x05B5;\n t['tserenarrowhebrew'] = 0x05B5;\n t['tserequarterhebrew'] = 0x05B5;\n t['tserewidehebrew'] = 0x05B5;\n t['tshecyrillic'] = 0x045B;\n t['tsuperior'] = 0xF6F3;\n t['ttabengali'] = 0x099F;\n t['ttadeva'] = 0x091F;\n t['ttagujarati'] = 0x0A9F;\n t['ttagurmukhi'] = 0x0A1F;\n t['tteharabic'] = 0x0679;\n t['ttehfinalarabic'] = 0xFB67;\n t['ttehinitialarabic'] = 0xFB68;\n t['ttehmedialarabic'] = 0xFB69;\n t['tthabengali'] = 0x09A0;\n t['tthadeva'] = 0x0920;\n t['tthagujarati'] = 0x0AA0;\n t['tthagurmukhi'] = 0x0A20;\n t['tturned'] = 0x0287;\n t['tuhiragana'] = 0x3064;\n t['tukatakana'] = 0x30C4;\n t['tukatakanahalfwidth'] = 0xFF82;\n t['tusmallhiragana'] = 0x3063;\n t['tusmallkatakana'] = 0x30C3;\n t['tusmallkatakanahalfwidth'] = 0xFF6F;\n t['twelvecircle'] = 0x246B;\n t['twelveparen'] = 0x247F;\n t['twelveperiod'] = 0x2493;\n t['twelveroman'] = 0x217B;\n t['twentycircle'] = 0x2473;\n t['twentyhangzhou'] = 0x5344;\n t['twentyparen'] = 0x2487;\n t['twentyperiod'] = 0x249B;\n t['two'] = 0x0032;\n t['twoarabic'] = 0x0662;\n t['twobengali'] = 0x09E8;\n t['twocircle'] = 0x2461;\n t['twocircleinversesansserif'] = 0x278B;\n t['twodeva'] = 0x0968;\n t['twodotenleader'] = 0x2025;\n t['twodotleader'] = 0x2025;\n t['twodotleadervertical'] = 0xFE30;\n t['twogujarati'] = 0x0AE8;\n t['twogurmukhi'] = 0x0A68;\n t['twohackarabic'] = 0x0662;\n t['twohangzhou'] = 0x3022;\n t['twoideographicparen'] = 0x3221;\n t['twoinferior'] = 0x2082;\n t['twomonospace'] = 0xFF12;\n t['twonumeratorbengali'] = 0x09F5;\n t['twooldstyle'] = 0xF732;\n t['twoparen'] = 0x2475;\n t['twoperiod'] = 0x2489;\n t['twopersian'] = 0x06F2;\n t['tworoman'] = 0x2171;\n t['twostroke'] = 0x01BB;\n t['twosuperior'] = 0x00B2;\n t['twothai'] = 0x0E52;\n t['twothirds'] = 0x2154;\n t['u'] = 0x0075;\n t['uacute'] = 0x00FA;\n t['ubar'] = 0x0289;\n t['ubengali'] = 0x0989;\n t['ubopomofo'] = 0x3128;\n t['ubreve'] = 0x016D;\n t['ucaron'] = 0x01D4;\n t['ucircle'] = 0x24E4;\n t['ucircumflex'] = 0x00FB;\n t['ucircumflexbelow'] = 0x1E77;\n t['ucyrillic'] = 0x0443;\n t['udattadeva'] = 0x0951;\n t['udblacute'] = 0x0171;\n t['udblgrave'] = 0x0215;\n t['udeva'] = 0x0909;\n t['udieresis'] = 0x00FC;\n t['udieresisacute'] = 0x01D8;\n t['udieresisbelow'] = 0x1E73;\n t['udieresiscaron'] = 0x01DA;\n t['udieresiscyrillic'] = 0x04F1;\n t['udieresisgrave'] = 0x01DC;\n t['udieresismacron'] = 0x01D6;\n t['udotbelow'] = 0x1EE5;\n t['ugrave'] = 0x00F9;\n t['ugujarati'] = 0x0A89;\n t['ugurmukhi'] = 0x0A09;\n t['uhiragana'] = 0x3046;\n t['uhookabove'] = 0x1EE7;\n t['uhorn'] = 0x01B0;\n t['uhornacute'] = 0x1EE9;\n t['uhorndotbelow'] = 0x1EF1;\n t['uhorngrave'] = 0x1EEB;\n t['uhornhookabove'] = 0x1EED;\n t['uhorntilde'] = 0x1EEF;\n t['uhungarumlaut'] = 0x0171;\n t['uhungarumlautcyrillic'] = 0x04F3;\n t['uinvertedbreve'] = 0x0217;\n t['ukatakana'] = 0x30A6;\n t['ukatakanahalfwidth'] = 0xFF73;\n t['ukcyrillic'] = 0x0479;\n t['ukorean'] = 0x315C;\n t['umacron'] = 0x016B;\n t['umacroncyrillic'] = 0x04EF;\n t['umacrondieresis'] = 0x1E7B;\n t['umatragurmukhi'] = 0x0A41;\n t['umonospace'] = 0xFF55;\n t['underscore'] = 0x005F;\n t['underscoredbl'] = 0x2017;\n t['underscoremonospace'] = 0xFF3F;\n t['underscorevertical'] = 0xFE33;\n t['underscorewavy'] = 0xFE4F;\n t['union'] = 0x222A;\n t['universal'] = 0x2200;\n t['uogonek'] = 0x0173;\n t['uparen'] = 0x24B0;\n t['upblock'] = 0x2580;\n t['upperdothebrew'] = 0x05C4;\n t['upsilon'] = 0x03C5;\n t['upsilondieresis'] = 0x03CB;\n t['upsilondieresistonos'] = 0x03B0;\n t['upsilonlatin'] = 0x028A;\n t['upsilontonos'] = 0x03CD;\n t['uptackbelowcmb'] = 0x031D;\n t['uptackmod'] = 0x02D4;\n t['uragurmukhi'] = 0x0A73;\n t['uring'] = 0x016F;\n t['ushortcyrillic'] = 0x045E;\n t['usmallhiragana'] = 0x3045;\n t['usmallkatakana'] = 0x30A5;\n t['usmallkatakanahalfwidth'] = 0xFF69;\n t['ustraightcyrillic'] = 0x04AF;\n t['ustraightstrokecyrillic'] = 0x04B1;\n t['utilde'] = 0x0169;\n t['utildeacute'] = 0x1E79;\n t['utildebelow'] = 0x1E75;\n t['uubengali'] = 0x098A;\n t['uudeva'] = 0x090A;\n t['uugujarati'] = 0x0A8A;\n t['uugurmukhi'] = 0x0A0A;\n t['uumatragurmukhi'] = 0x0A42;\n t['uuvowelsignbengali'] = 0x09C2;\n t['uuvowelsigndeva'] = 0x0942;\n t['uuvowelsigngujarati'] = 0x0AC2;\n t['uvowelsignbengali'] = 0x09C1;\n t['uvowelsigndeva'] = 0x0941;\n t['uvowelsigngujarati'] = 0x0AC1;\n t['v'] = 0x0076;\n t['vadeva'] = 0x0935;\n t['vagujarati'] = 0x0AB5;\n t['vagurmukhi'] = 0x0A35;\n t['vakatakana'] = 0x30F7;\n t['vav'] = 0x05D5;\n t['vavdagesh'] = 0xFB35;\n t['vavdagesh65'] = 0xFB35;\n t['vavdageshhebrew'] = 0xFB35;\n t['vavhebrew'] = 0x05D5;\n t['vavholam'] = 0xFB4B;\n t['vavholamhebrew'] = 0xFB4B;\n t['vavvavhebrew'] = 0x05F0;\n t['vavyodhebrew'] = 0x05F1;\n t['vcircle'] = 0x24E5;\n t['vdotbelow'] = 0x1E7F;\n t['vecyrillic'] = 0x0432;\n t['veharabic'] = 0x06A4;\n t['vehfinalarabic'] = 0xFB6B;\n t['vehinitialarabic'] = 0xFB6C;\n t['vehmedialarabic'] = 0xFB6D;\n t['vekatakana'] = 0x30F9;\n t['venus'] = 0x2640;\n t['verticalbar'] = 0x007C;\n t['verticallineabovecmb'] = 0x030D;\n t['verticallinebelowcmb'] = 0x0329;\n t['verticallinelowmod'] = 0x02CC;\n t['verticallinemod'] = 0x02C8;\n t['vewarmenian'] = 0x057E;\n t['vhook'] = 0x028B;\n t['vikatakana'] = 0x30F8;\n t['viramabengali'] = 0x09CD;\n t['viramadeva'] = 0x094D;\n t['viramagujarati'] = 0x0ACD;\n t['visargabengali'] = 0x0983;\n t['visargadeva'] = 0x0903;\n t['visargagujarati'] = 0x0A83;\n t['vmonospace'] = 0xFF56;\n t['voarmenian'] = 0x0578;\n t['voicediterationhiragana'] = 0x309E;\n t['voicediterationkatakana'] = 0x30FE;\n t['voicedmarkkana'] = 0x309B;\n t['voicedmarkkanahalfwidth'] = 0xFF9E;\n t['vokatakana'] = 0x30FA;\n t['vparen'] = 0x24B1;\n t['vtilde'] = 0x1E7D;\n t['vturned'] = 0x028C;\n t['vuhiragana'] = 0x3094;\n t['vukatakana'] = 0x30F4;\n t['w'] = 0x0077;\n t['wacute'] = 0x1E83;\n t['waekorean'] = 0x3159;\n t['wahiragana'] = 0x308F;\n t['wakatakana'] = 0x30EF;\n t['wakatakanahalfwidth'] = 0xFF9C;\n t['wakorean'] = 0x3158;\n t['wasmallhiragana'] = 0x308E;\n t['wasmallkatakana'] = 0x30EE;\n t['wattosquare'] = 0x3357;\n t['wavedash'] = 0x301C;\n t['wavyunderscorevertical'] = 0xFE34;\n t['wawarabic'] = 0x0648;\n t['wawfinalarabic'] = 0xFEEE;\n t['wawhamzaabovearabic'] = 0x0624;\n t['wawhamzaabovefinalarabic'] = 0xFE86;\n t['wbsquare'] = 0x33DD;\n t['wcircle'] = 0x24E6;\n t['wcircumflex'] = 0x0175;\n t['wdieresis'] = 0x1E85;\n t['wdotaccent'] = 0x1E87;\n t['wdotbelow'] = 0x1E89;\n t['wehiragana'] = 0x3091;\n t['weierstrass'] = 0x2118;\n t['wekatakana'] = 0x30F1;\n t['wekorean'] = 0x315E;\n t['weokorean'] = 0x315D;\n t['wgrave'] = 0x1E81;\n t['whitebullet'] = 0x25E6;\n t['whitecircle'] = 0x25CB;\n t['whitecircleinverse'] = 0x25D9;\n t['whitecornerbracketleft'] = 0x300E;\n t['whitecornerbracketleftvertical'] = 0xFE43;\n t['whitecornerbracketright'] = 0x300F;\n t['whitecornerbracketrightvertical'] = 0xFE44;\n t['whitediamond'] = 0x25C7;\n t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n t['whitedownpointingsmalltriangle'] = 0x25BF;\n t['whitedownpointingtriangle'] = 0x25BD;\n t['whiteleftpointingsmalltriangle'] = 0x25C3;\n t['whiteleftpointingtriangle'] = 0x25C1;\n t['whitelenticularbracketleft'] = 0x3016;\n t['whitelenticularbracketright'] = 0x3017;\n t['whiterightpointingsmalltriangle'] = 0x25B9;\n t['whiterightpointingtriangle'] = 0x25B7;\n t['whitesmallsquare'] = 0x25AB;\n t['whitesmilingface'] = 0x263A;\n t['whitesquare'] = 0x25A1;\n t['whitestar'] = 0x2606;\n t['whitetelephone'] = 0x260F;\n t['whitetortoiseshellbracketleft'] = 0x3018;\n t['whitetortoiseshellbracketright'] = 0x3019;\n t['whiteuppointingsmalltriangle'] = 0x25B5;\n t['whiteuppointingtriangle'] = 0x25B3;\n t['wihiragana'] = 0x3090;\n t['wikatakana'] = 0x30F0;\n t['wikorean'] = 0x315F;\n t['wmonospace'] = 0xFF57;\n t['wohiragana'] = 0x3092;\n t['wokatakana'] = 0x30F2;\n t['wokatakanahalfwidth'] = 0xFF66;\n t['won'] = 0x20A9;\n t['wonmonospace'] = 0xFFE6;\n t['wowaenthai'] = 0x0E27;\n t['wparen'] = 0x24B2;\n t['wring'] = 0x1E98;\n t['wsuperior'] = 0x02B7;\n t['wturned'] = 0x028D;\n t['wynn'] = 0x01BF;\n t['x'] = 0x0078;\n t['xabovecmb'] = 0x033D;\n t['xbopomofo'] = 0x3112;\n t['xcircle'] = 0x24E7;\n t['xdieresis'] = 0x1E8D;\n t['xdotaccent'] = 0x1E8B;\n t['xeharmenian'] = 0x056D;\n t['xi'] = 0x03BE;\n t['xmonospace'] = 0xFF58;\n t['xparen'] = 0x24B3;\n t['xsuperior'] = 0x02E3;\n t['y'] = 0x0079;\n t['yaadosquare'] = 0x334E;\n t['yabengali'] = 0x09AF;\n t['yacute'] = 0x00FD;\n t['yadeva'] = 0x092F;\n t['yaekorean'] = 0x3152;\n t['yagujarati'] = 0x0AAF;\n t['yagurmukhi'] = 0x0A2F;\n t['yahiragana'] = 0x3084;\n t['yakatakana'] = 0x30E4;\n t['yakatakanahalfwidth'] = 0xFF94;\n t['yakorean'] = 0x3151;\n t['yamakkanthai'] = 0x0E4E;\n t['yasmallhiragana'] = 0x3083;\n t['yasmallkatakana'] = 0x30E3;\n t['yasmallkatakanahalfwidth'] = 0xFF6C;\n t['yatcyrillic'] = 0x0463;\n t['ycircle'] = 0x24E8;\n t['ycircumflex'] = 0x0177;\n t['ydieresis'] = 0x00FF;\n t['ydotaccent'] = 0x1E8F;\n t['ydotbelow'] = 0x1EF5;\n t['yeharabic'] = 0x064A;\n t['yehbarreearabic'] = 0x06D2;\n t['yehbarreefinalarabic'] = 0xFBAF;\n t['yehfinalarabic'] = 0xFEF2;\n t['yehhamzaabovearabic'] = 0x0626;\n t['yehhamzaabovefinalarabic'] = 0xFE8A;\n t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n t['yehhamzaabovemedialarabic'] = 0xFE8C;\n t['yehinitialarabic'] = 0xFEF3;\n t['yehmedialarabic'] = 0xFEF4;\n t['yehmeeminitialarabic'] = 0xFCDD;\n t['yehmeemisolatedarabic'] = 0xFC58;\n t['yehnoonfinalarabic'] = 0xFC94;\n t['yehthreedotsbelowarabic'] = 0x06D1;\n t['yekorean'] = 0x3156;\n t['yen'] = 0x00A5;\n t['yenmonospace'] = 0xFFE5;\n t['yeokorean'] = 0x3155;\n t['yeorinhieuhkorean'] = 0x3186;\n t['yerahbenyomohebrew'] = 0x05AA;\n t['yerahbenyomolefthebrew'] = 0x05AA;\n t['yericyrillic'] = 0x044B;\n t['yerudieresiscyrillic'] = 0x04F9;\n t['yesieungkorean'] = 0x3181;\n t['yesieungpansioskorean'] = 0x3183;\n t['yesieungsioskorean'] = 0x3182;\n t['yetivhebrew'] = 0x059A;\n t['ygrave'] = 0x1EF3;\n t['yhook'] = 0x01B4;\n t['yhookabove'] = 0x1EF7;\n t['yiarmenian'] = 0x0575;\n t['yicyrillic'] = 0x0457;\n t['yikorean'] = 0x3162;\n t['yinyang'] = 0x262F;\n t['yiwnarmenian'] = 0x0582;\n t['ymonospace'] = 0xFF59;\n t['yod'] = 0x05D9;\n t['yoddagesh'] = 0xFB39;\n t['yoddageshhebrew'] = 0xFB39;\n t['yodhebrew'] = 0x05D9;\n t['yodyodhebrew'] = 0x05F2;\n t['yodyodpatahhebrew'] = 0xFB1F;\n t['yohiragana'] = 0x3088;\n t['yoikorean'] = 0x3189;\n t['yokatakana'] = 0x30E8;\n t['yokatakanahalfwidth'] = 0xFF96;\n t['yokorean'] = 0x315B;\n t['yosmallhiragana'] = 0x3087;\n t['yosmallkatakana'] = 0x30E7;\n t['yosmallkatakanahalfwidth'] = 0xFF6E;\n t['yotgreek'] = 0x03F3;\n t['yoyaekorean'] = 0x3188;\n t['yoyakorean'] = 0x3187;\n t['yoyakthai'] = 0x0E22;\n t['yoyingthai'] = 0x0E0D;\n t['yparen'] = 0x24B4;\n t['ypogegrammeni'] = 0x037A;\n t['ypogegrammenigreekcmb'] = 0x0345;\n t['yr'] = 0x01A6;\n t['yring'] = 0x1E99;\n t['ysuperior'] = 0x02B8;\n t['ytilde'] = 0x1EF9;\n t['yturned'] = 0x028E;\n t['yuhiragana'] = 0x3086;\n t['yuikorean'] = 0x318C;\n t['yukatakana'] = 0x30E6;\n t['yukatakanahalfwidth'] = 0xFF95;\n t['yukorean'] = 0x3160;\n t['yusbigcyrillic'] = 0x046B;\n t['yusbigiotifiedcyrillic'] = 0x046D;\n t['yuslittlecyrillic'] = 0x0467;\n t['yuslittleiotifiedcyrillic'] = 0x0469;\n t['yusmallhiragana'] = 0x3085;\n t['yusmallkatakana'] = 0x30E5;\n t['yusmallkatakanahalfwidth'] = 0xFF6D;\n t['yuyekorean'] = 0x318B;\n t['yuyeokorean'] = 0x318A;\n t['yyabengali'] = 0x09DF;\n t['yyadeva'] = 0x095F;\n t['z'] = 0x007A;\n t['zaarmenian'] = 0x0566;\n t['zacute'] = 0x017A;\n t['zadeva'] = 0x095B;\n t['zagurmukhi'] = 0x0A5B;\n t['zaharabic'] = 0x0638;\n t['zahfinalarabic'] = 0xFEC6;\n t['zahinitialarabic'] = 0xFEC7;\n t['zahiragana'] = 0x3056;\n t['zahmedialarabic'] = 0xFEC8;\n t['zainarabic'] = 0x0632;\n t['zainfinalarabic'] = 0xFEB0;\n t['zakatakana'] = 0x30B6;\n t['zaqefgadolhebrew'] = 0x0595;\n t['zaqefqatanhebrew'] = 0x0594;\n t['zarqahebrew'] = 0x0598;\n t['zayin'] = 0x05D6;\n t['zayindagesh'] = 0xFB36;\n t['zayindageshhebrew'] = 0xFB36;\n t['zayinhebrew'] = 0x05D6;\n t['zbopomofo'] = 0x3117;\n t['zcaron'] = 0x017E;\n t['zcircle'] = 0x24E9;\n t['zcircumflex'] = 0x1E91;\n t['zcurl'] = 0x0291;\n t['zdot'] = 0x017C;\n t['zdotaccent'] = 0x017C;\n t['zdotbelow'] = 0x1E93;\n t['zecyrillic'] = 0x0437;\n t['zedescendercyrillic'] = 0x0499;\n t['zedieresiscyrillic'] = 0x04DF;\n t['zehiragana'] = 0x305C;\n t['zekatakana'] = 0x30BC;\n t['zero'] = 0x0030;\n t['zeroarabic'] = 0x0660;\n t['zerobengali'] = 0x09E6;\n t['zerodeva'] = 0x0966;\n t['zerogujarati'] = 0x0AE6;\n t['zerogurmukhi'] = 0x0A66;\n t['zerohackarabic'] = 0x0660;\n t['zeroinferior'] = 0x2080;\n t['zeromonospace'] = 0xFF10;\n t['zerooldstyle'] = 0xF730;\n t['zeropersian'] = 0x06F0;\n t['zerosuperior'] = 0x2070;\n t['zerothai'] = 0x0E50;\n t['zerowidthjoiner'] = 0xFEFF;\n t['zerowidthnonjoiner'] = 0x200C;\n t['zerowidthspace'] = 0x200B;\n t['zeta'] = 0x03B6;\n t['zhbopomofo'] = 0x3113;\n t['zhearmenian'] = 0x056A;\n t['zhebrevecyrillic'] = 0x04C2;\n t['zhecyrillic'] = 0x0436;\n t['zhedescendercyrillic'] = 0x0497;\n t['zhedieresiscyrillic'] = 0x04DD;\n t['zihiragana'] = 0x3058;\n t['zikatakana'] = 0x30B8;\n t['zinorhebrew'] = 0x05AE;\n t['zlinebelow'] = 0x1E95;\n t['zmonospace'] = 0xFF5A;\n t['zohiragana'] = 0x305E;\n t['zokatakana'] = 0x30BE;\n t['zparen'] = 0x24B5;\n t['zretroflexhook'] = 0x0290;\n t['zstroke'] = 0x01B6;\n t['zuhiragana'] = 0x305A;\n t['zukatakana'] = 0x30BA;\n t['.notdef'] = 0x0000;\n t['angbracketleftbig'] = 0x2329;\n t['angbracketleftBig'] = 0x2329;\n t['angbracketleftbigg'] = 0x2329;\n t['angbracketleftBigg'] = 0x2329;\n t['angbracketrightBig'] = 0x232A;\n t['angbracketrightbig'] = 0x232A;\n t['angbracketrightBigg'] = 0x232A;\n t['angbracketrightbigg'] = 0x232A;\n t['arrowhookleft'] = 0x21AA;\n t['arrowhookright'] = 0x21A9;\n t['arrowlefttophalf'] = 0x21BC;\n t['arrowleftbothalf'] = 0x21BD;\n t['arrownortheast'] = 0x2197;\n t['arrownorthwest'] = 0x2196;\n t['arrowrighttophalf'] = 0x21C0;\n t['arrowrightbothalf'] = 0x21C1;\n t['arrowsoutheast'] = 0x2198;\n t['arrowsouthwest'] = 0x2199;\n t['backslashbig'] = 0x2216;\n t['backslashBig'] = 0x2216;\n t['backslashBigg'] = 0x2216;\n t['backslashbigg'] = 0x2216;\n t['bardbl'] = 0x2016;\n t['bracehtipdownleft'] = 0xFE37;\n t['bracehtipdownright'] = 0xFE37;\n t['bracehtipupleft'] = 0xFE38;\n t['bracehtipupright'] = 0xFE38;\n t['braceleftBig'] = 0x007B;\n t['braceleftbig'] = 0x007B;\n t['braceleftbigg'] = 0x007B;\n t['braceleftBigg'] = 0x007B;\n t['bracerightBig'] = 0x007D;\n t['bracerightbig'] = 0x007D;\n t['bracerightbigg'] = 0x007D;\n t['bracerightBigg'] = 0x007D;\n t['bracketleftbig'] = 0x005B;\n t['bracketleftBig'] = 0x005B;\n t['bracketleftbigg'] = 0x005B;\n t['bracketleftBigg'] = 0x005B;\n t['bracketrightBig'] = 0x005D;\n t['bracketrightbig'] = 0x005D;\n t['bracketrightbigg'] = 0x005D;\n t['bracketrightBigg'] = 0x005D;\n t['ceilingleftbig'] = 0x2308;\n t['ceilingleftBig'] = 0x2308;\n t['ceilingleftBigg'] = 0x2308;\n t['ceilingleftbigg'] = 0x2308;\n t['ceilingrightbig'] = 0x2309;\n t['ceilingrightBig'] = 0x2309;\n t['ceilingrightbigg'] = 0x2309;\n t['ceilingrightBigg'] = 0x2309;\n t['circledotdisplay'] = 0x2299;\n t['circledottext'] = 0x2299;\n t['circlemultiplydisplay'] = 0x2297;\n t['circlemultiplytext'] = 0x2297;\n t['circleplusdisplay'] = 0x2295;\n t['circleplustext'] = 0x2295;\n t['contintegraldisplay'] = 0x222E;\n t['contintegraltext'] = 0x222E;\n t['coproductdisplay'] = 0x2210;\n t['coproducttext'] = 0x2210;\n t['floorleftBig'] = 0x230A;\n t['floorleftbig'] = 0x230A;\n t['floorleftbigg'] = 0x230A;\n t['floorleftBigg'] = 0x230A;\n t['floorrightbig'] = 0x230B;\n t['floorrightBig'] = 0x230B;\n t['floorrightBigg'] = 0x230B;\n t['floorrightbigg'] = 0x230B;\n t['hatwide'] = 0x0302;\n t['hatwider'] = 0x0302;\n t['hatwidest'] = 0x0302;\n t['intercal'] = 0x1D40;\n t['integraldisplay'] = 0x222B;\n t['integraltext'] = 0x222B;\n t['intersectiondisplay'] = 0x22C2;\n t['intersectiontext'] = 0x22C2;\n t['logicalanddisplay'] = 0x2227;\n t['logicalandtext'] = 0x2227;\n t['logicalordisplay'] = 0x2228;\n t['logicalortext'] = 0x2228;\n t['parenleftBig'] = 0x0028;\n t['parenleftbig'] = 0x0028;\n t['parenleftBigg'] = 0x0028;\n t['parenleftbigg'] = 0x0028;\n t['parenrightBig'] = 0x0029;\n t['parenrightbig'] = 0x0029;\n t['parenrightBigg'] = 0x0029;\n t['parenrightbigg'] = 0x0029;\n t['prime'] = 0x2032;\n t['productdisplay'] = 0x220F;\n t['producttext'] = 0x220F;\n t['radicalbig'] = 0x221A;\n t['radicalBig'] = 0x221A;\n t['radicalBigg'] = 0x221A;\n t['radicalbigg'] = 0x221A;\n t['radicalbt'] = 0x221A;\n t['radicaltp'] = 0x221A;\n t['radicalvertex'] = 0x221A;\n t['slashbig'] = 0x002F;\n t['slashBig'] = 0x002F;\n t['slashBigg'] = 0x002F;\n t['slashbigg'] = 0x002F;\n t['summationdisplay'] = 0x2211;\n t['summationtext'] = 0x2211;\n t['tildewide'] = 0x02DC;\n t['tildewider'] = 0x02DC;\n t['tildewidest'] = 0x02DC;\n t['uniondisplay'] = 0x22C3;\n t['unionmultidisplay'] = 0x228E;\n t['unionmultitext'] = 0x228E;\n t['unionsqdisplay'] = 0x2294;\n t['unionsqtext'] = 0x2294;\n t['uniontext'] = 0x22C3;\n t['vextenddouble'] = 0x2225;\n t['vextendsingle'] = 0x2223;\n});\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n t['space'] = 0x0020;\n t['a1'] = 0x2701;\n t['a2'] = 0x2702;\n t['a202'] = 0x2703;\n t['a3'] = 0x2704;\n t['a4'] = 0x260E;\n t['a5'] = 0x2706;\n t['a119'] = 0x2707;\n t['a118'] = 0x2708;\n t['a117'] = 0x2709;\n t['a11'] = 0x261B;\n t['a12'] = 0x261E;\n t['a13'] = 0x270C;\n t['a14'] = 0x270D;\n t['a15'] = 0x270E;\n t['a16'] = 0x270F;\n t['a105'] = 0x2710;\n t['a17'] = 0x2711;\n t['a18'] = 0x2712;\n t['a19'] = 0x2713;\n t['a20'] = 0x2714;\n t['a21'] = 0x2715;\n t['a22'] = 0x2716;\n t['a23'] = 0x2717;\n t['a24'] = 0x2718;\n t['a25'] = 0x2719;\n t['a26'] = 0x271A;\n t['a27'] = 0x271B;\n t['a28'] = 0x271C;\n t['a6'] = 0x271D;\n t['a7'] = 0x271E;\n t['a8'] = 0x271F;\n t['a9'] = 0x2720;\n t['a10'] = 0x2721;\n t['a29'] = 0x2722;\n t['a30'] = 0x2723;\n t['a31'] = 0x2724;\n t['a32'] = 0x2725;\n t['a33'] = 0x2726;\n t['a34'] = 0x2727;\n t['a35'] = 0x2605;\n t['a36'] = 0x2729;\n t['a37'] = 0x272A;\n t['a38'] = 0x272B;\n t['a39'] = 0x272C;\n t['a40'] = 0x272D;\n t['a41'] = 0x272E;\n t['a42'] = 0x272F;\n t['a43'] = 0x2730;\n t['a44'] = 0x2731;\n t['a45'] = 0x2732;\n t['a46'] = 0x2733;\n t['a47'] = 0x2734;\n t['a48'] = 0x2735;\n t['a49'] = 0x2736;\n t['a50'] = 0x2737;\n t['a51'] = 0x2738;\n t['a52'] = 0x2739;\n t['a53'] = 0x273A;\n t['a54'] = 0x273B;\n t['a55'] = 0x273C;\n t['a56'] = 0x273D;\n t['a57'] = 0x273E;\n t['a58'] = 0x273F;\n t['a59'] = 0x2740;\n t['a60'] = 0x2741;\n t['a61'] = 0x2742;\n t['a62'] = 0x2743;\n t['a63'] = 0x2744;\n t['a64'] = 0x2745;\n t['a65'] = 0x2746;\n t['a66'] = 0x2747;\n t['a67'] = 0x2748;\n t['a68'] = 0x2749;\n t['a69'] = 0x274A;\n t['a70'] = 0x274B;\n t['a71'] = 0x25CF;\n t['a72'] = 0x274D;\n t['a73'] = 0x25A0;\n t['a74'] = 0x274F;\n t['a203'] = 0x2750;\n t['a75'] = 0x2751;\n t['a204'] = 0x2752;\n t['a76'] = 0x25B2;\n t['a77'] = 0x25BC;\n t['a78'] = 0x25C6;\n t['a79'] = 0x2756;\n t['a81'] = 0x25D7;\n t['a82'] = 0x2758;\n t['a83'] = 0x2759;\n t['a84'] = 0x275A;\n t['a97'] = 0x275B;\n t['a98'] = 0x275C;\n t['a99'] = 0x275D;\n t['a100'] = 0x275E;\n t['a101'] = 0x2761;\n t['a102'] = 0x2762;\n t['a103'] = 0x2763;\n t['a104'] = 0x2764;\n t['a106'] = 0x2765;\n t['a107'] = 0x2766;\n t['a108'] = 0x2767;\n t['a112'] = 0x2663;\n t['a111'] = 0x2666;\n t['a110'] = 0x2665;\n t['a109'] = 0x2660;\n t['a120'] = 0x2460;\n t['a121'] = 0x2461;\n t['a122'] = 0x2462;\n t['a123'] = 0x2463;\n t['a124'] = 0x2464;\n t['a125'] = 0x2465;\n t['a126'] = 0x2466;\n t['a127'] = 0x2467;\n t['a128'] = 0x2468;\n t['a129'] = 0x2469;\n t['a130'] = 0x2776;\n t['a131'] = 0x2777;\n t['a132'] = 0x2778;\n t['a133'] = 0x2779;\n t['a134'] = 0x277A;\n t['a135'] = 0x277B;\n t['a136'] = 0x277C;\n t['a137'] = 0x277D;\n t['a138'] = 0x277E;\n t['a139'] = 0x277F;\n t['a140'] = 0x2780;\n t['a141'] = 0x2781;\n t['a142'] = 0x2782;\n t['a143'] = 0x2783;\n t['a144'] = 0x2784;\n t['a145'] = 0x2785;\n t['a146'] = 0x2786;\n t['a147'] = 0x2787;\n t['a148'] = 0x2788;\n t['a149'] = 0x2789;\n t['a150'] = 0x278A;\n t['a151'] = 0x278B;\n t['a152'] = 0x278C;\n t['a153'] = 0x278D;\n t['a154'] = 0x278E;\n t['a155'] = 0x278F;\n t['a156'] = 0x2790;\n t['a157'] = 0x2791;\n t['a158'] = 0x2792;\n t['a159'] = 0x2793;\n t['a160'] = 0x2794;\n t['a161'] = 0x2192;\n t['a163'] = 0x2194;\n t['a164'] = 0x2195;\n t['a196'] = 0x2798;\n t['a165'] = 0x2799;\n t['a192'] = 0x279A;\n t['a166'] = 0x279B;\n t['a167'] = 0x279C;\n t['a168'] = 0x279D;\n t['a169'] = 0x279E;\n t['a170'] = 0x279F;\n t['a171'] = 0x27A0;\n t['a172'] = 0x27A1;\n t['a173'] = 0x27A2;\n t['a162'] = 0x27A3;\n t['a174'] = 0x27A4;\n t['a175'] = 0x27A5;\n t['a176'] = 0x27A6;\n t['a177'] = 0x27A7;\n t['a178'] = 0x27A8;\n t['a179'] = 0x27A9;\n t['a193'] = 0x27AA;\n t['a180'] = 0x27AB;\n t['a199'] = 0x27AC;\n t['a181'] = 0x27AD;\n t['a200'] = 0x27AE;\n t['a182'] = 0x27AF;\n t['a201'] = 0x27B1;\n t['a183'] = 0x27B2;\n t['a184'] = 0x27B3;\n t['a197'] = 0x27B4;\n t['a185'] = 0x27B5;\n t['a194'] = 0x27B6;\n t['a198'] = 0x27B7;\n t['a186'] = 0x27B8;\n t['a195'] = 0x27B9;\n t['a187'] = 0x27BA;\n t['a188'] = 0x27BB;\n t['a189'] = 0x27BC;\n t['a190'] = 0x27BD;\n t['a191'] = 0x27BE;\n t['a89'] = 0x2768;\n t['a90'] = 0x2769;\n t['a93'] = 0x276A;\n t['a94'] = 0x276B;\n t['a91'] = 0x276C;\n t['a92'] = 0x276D;\n t['a205'] = 0x276E;\n t['a85'] = 0x276F;\n t['a206'] = 0x2770;\n t['a86'] = 0x2771;\n t['a87'] = 0x2772;\n t['a88'] = 0x2773;\n t['a95'] = 0x2774;\n t['a96'] = 0x2775;\n t['.notdef'] = 0x0000;\n});\nexports.getGlyphsUnicode = getGlyphsUnicode;\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = !__w_pdfjs_require__(10) && !__w_pdfjs_require__(11)(function () {\n  return Object.defineProperty(__w_pdfjs_require__(35)('div'), 'a', {\n    get: function get() {\n      return 7;\n    }\n  }).a != 7;\n});\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(1);\nvar hide = __w_pdfjs_require__(8);\nvar uid = __w_pdfjs_require__(17);\nvar TYPED = uid('typed_array');\nvar VIEW = uid('view');\nvar ABV = !!(global.ArrayBuffer && global.DataView);\nvar CONSTR = ABV;\nvar i = 0;\nvar l = 9;\nvar Typed;\nvar TypedArrayConstructors = 'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'.split(',');\nwhile (i < l) {\n  if (Typed = global[TypedArrayConstructors[i++]]) {\n    hide(Typed.prototype, TYPED, true);\n    hide(Typed.prototype, VIEW, true);\n  } else CONSTR = false;\n}\nmodule.exports = {\n  ABV: ABV,\n  CONSTR: CONSTR,\n  TYPED: TYPED,\n  VIEW: VIEW\n};\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(18);\nvar toLength = __w_pdfjs_require__(14);\nmodule.exports = function (it) {\n  if (it === undefined) return 0;\n  var number = toInteger(it);\n  var length = toLength(number);\n  if (number !== length) throw RangeError('Wrong length!');\n  return length;\n};\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $keys = __w_pdfjs_require__(52);\nvar hiddenKeys = __w_pdfjs_require__(40).concat('length', 'prototype');\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return $keys(O, hiddenKeys);\n};\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar has = __w_pdfjs_require__(12);\nvar toIObject = __w_pdfjs_require__(30);\nvar arrayIndexOf = __w_pdfjs_require__(53)(false);\nvar IE_PROTO = __w_pdfjs_require__(39)('IE_PROTO');\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) {\n    if (key != IE_PROTO) has(O, key) && result.push(key);\n  }while (names.length > i) {\n    if (has(O, key = names[i++])) {\n      ~arrayIndexOf(result, key) || result.push(key);\n    }\n  }return result;\n};\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toIObject = __w_pdfjs_require__(30);\nvar toLength = __w_pdfjs_require__(14);\nvar toAbsoluteIndex = __w_pdfjs_require__(31);\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      if (value != value) return true;\n    } else for (; length > index; index++) {\n      if (IS_INCLUDES || index in O) {\n        if (O[index] === el) return IS_INCLUDES || index || 0;\n      }\n    }return !IS_INCLUDES && -1;\n  };\n};\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar core = __w_pdfjs_require__(6);\nvar global = __w_pdfjs_require__(1);\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: __w_pdfjs_require__(21) ? 'pure' : 'global',\n  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'\n});\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toObject = __w_pdfjs_require__(19);\nvar toAbsoluteIndex = __w_pdfjs_require__(31);\nvar toLength = __w_pdfjs_require__(14);\nmodule.exports = function fill(value) {\n  var O = toObject(this);\n  var length = toLength(O.length);\n  var aLen = arguments.length;\n  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);\n  var end = aLen > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) {\n    O[index++] = value;\n  }return O;\n};\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar Iterators = __w_pdfjs_require__(20);\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\nvar ArrayProto = Array.prototype;\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(9);\nvar dPs = __w_pdfjs_require__(90);\nvar enumBugKeys = __w_pdfjs_require__(40);\nvar IE_PROTO = __w_pdfjs_require__(39)('IE_PROTO');\nvar Empty = function Empty() {};\nvar PROTOTYPE = 'prototype';\nvar _createDict = function createDict() {\n  var iframe = __w_pdfjs_require__(35)('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  __w_pdfjs_require__(58).appendChild(iframe);\n  iframe.src = 'javascript:';\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  _createDict = iframeDocument.F;\n  while (i--) {\n    delete _createDict[PROTOTYPE][enumBugKeys[i]];\n  }return _createDict();\n};\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    result[IE_PROTO] = O;\n  } else result = _createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar document = __w_pdfjs_require__(1).document;\nmodule.exports = document && document.documentElement;\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar has = __w_pdfjs_require__(12);\nvar toObject = __w_pdfjs_require__(19);\nvar IE_PROTO = __w_pdfjs_require__(39)('IE_PROTO');\nvar ObjectProto = Object.prototype;\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  }\n  return O instanceof Object ? ObjectProto : null;\n};\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar classof = __w_pdfjs_require__(32);\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\nvar Iterators = __w_pdfjs_require__(20);\nmodule.exports = __w_pdfjs_require__(6).getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];\n};\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar addToUnscopables = __w_pdfjs_require__(94);\nvar step = __w_pdfjs_require__(95);\nvar Iterators = __w_pdfjs_require__(20);\nvar toIObject = __w_pdfjs_require__(30);\nmodule.exports = __w_pdfjs_require__(62)(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated);\n  this._i = 0;\n  this._k = kind;\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\nIterators.Arguments = Iterators.Array;\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar LIBRARY = __w_pdfjs_require__(21);\nvar $export = __w_pdfjs_require__(7);\nvar redefine = __w_pdfjs_require__(16);\nvar hide = __w_pdfjs_require__(8);\nvar Iterators = __w_pdfjs_require__(20);\nvar $iterCreate = __w_pdfjs_require__(96);\nvar setToStringTag = __w_pdfjs_require__(26);\nvar getPrototypeOf = __w_pdfjs_require__(59);\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys());\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar returnThis = function returnThis() {\n  return this;\n};\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function getMethod(kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS:\n        return function keys() {\n          return new Constructor(this, kind);\n        };\n      case VALUES:\n        return function values() {\n          return new Constructor(this, kind);\n        };\n    }\n    return function entries() {\n      return new Constructor(this, kind);\n    };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      setToStringTag(IteratorPrototype, TAG, true);\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() {\n      return $native.call(this);\n    };\n  }\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(1);\nvar dP = __w_pdfjs_require__(15);\nvar DESCRIPTORS = __w_pdfjs_require__(10);\nvar SPECIES = __w_pdfjs_require__(4)('species');\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function get() {\n      return this;\n    }\n  });\n};\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pIE = __w_pdfjs_require__(65);\nvar createDesc = __w_pdfjs_require__(29);\nvar toIObject = __w_pdfjs_require__(30);\nvar toPrimitive = __w_pdfjs_require__(36);\nvar has = __w_pdfjs_require__(12);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(48);\nvar gOPD = Object.getOwnPropertyDescriptor;\nexports.f = __w_pdfjs_require__(10) ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) {}\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nexports.f = {}.propertyIsEnumerable;\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar classof = __w_pdfjs_require__(32);\nvar test = {};\ntest[__w_pdfjs_require__(4)('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  __w_pdfjs_require__(16)(Object.prototype, 'toString', function toString() {\n    return '[object ' + classof(this) + ']';\n  }, true);\n}\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $iterators = __w_pdfjs_require__(61);\nvar getKeys = __w_pdfjs_require__(41);\nvar redefine = __w_pdfjs_require__(16);\nvar global = __w_pdfjs_require__(1);\nvar hide = __w_pdfjs_require__(8);\nvar Iterators = __w_pdfjs_require__(20);\nvar wks = __w_pdfjs_require__(4);\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\nvar DOMIterables = {\n  CSSRuleList: true,\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true,\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true,\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) {\n      if (!proto[key]) redefine(proto, key, $iterators[key], true);\n    }\n  }\n}\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(13);\nvar invoke = __w_pdfjs_require__(108);\nvar html = __w_pdfjs_require__(58);\nvar cel = __w_pdfjs_require__(35);\nvar global = __w_pdfjs_require__(1);\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function run() {\n  var id = +this;\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function listener(event) {\n  run.call(event.data);\n};\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) {\n      args.push(arguments[i++]);\n    }queue[++counter] = function () {\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  if (__w_pdfjs_require__(25)(process) == 'process') {\n    defer = function defer(id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  } else if (Dispatch && Dispatch.now) {\n    defer = function defer(id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function defer(id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function defer(id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  } else {\n    defer = function defer(id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (exec) {\n  try {\n    return {\n      e: false,\n      v: exec()\n    };\n  } catch (e) {\n    return {\n      e: true,\n      v: e\n    };\n  }\n};\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(9);\nvar isObject = __w_pdfjs_require__(3);\nvar newPromiseCapability = __w_pdfjs_require__(45);\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChunkedStreamManager = exports.ChunkedStream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar ChunkedStream = function ChunkedStreamClosure() {\n  function ChunkedStream(length, chunkSize, manager) {\n    this.bytes = new Uint8Array(length);\n    this.start = 0;\n    this.pos = 0;\n    this.end = length;\n    this.chunkSize = chunkSize;\n    this.loadedChunks = [];\n    this.numChunksLoaded = 0;\n    this.numChunks = Math.ceil(length / chunkSize);\n    this.manager = manager;\n    this.progressiveDataLength = 0;\n    this.lastSuccessfulEnsureByteChunk = -1;\n  }\n  ChunkedStream.prototype = {\n    getMissingChunks: function ChunkedStream_getMissingChunks() {\n      var chunks = [];\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          chunks.push(chunk);\n        }\n      }\n      return chunks;\n    },\n    getBaseStreams: function ChunkedStream_getBaseStreams() {\n      return [this];\n    },\n    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n      return this.numChunksLoaded === this.numChunks;\n    },\n    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n      var end = begin + chunk.byteLength;\n      if (begin % this.chunkSize !== 0) {\n        throw new Error('Bad begin offset: ' + begin);\n      }\n      var length = this.bytes.length;\n      if (end % this.chunkSize !== 0 && end !== length) {\n        throw new Error('Bad end offset: ' + end);\n      }\n      this.bytes.set(new Uint8Array(chunk), begin);\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n      var position = this.progressiveDataLength;\n      var beginChunk = Math.floor(position / this.chunkSize);\n      this.bytes.set(new Uint8Array(data), position);\n      position += data.byteLength;\n      this.progressiveDataLength = position;\n      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    ensureByte: function ChunkedStream_ensureByte(pos) {\n      var chunk = Math.floor(pos / this.chunkSize);\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n        return;\n      }\n      if (!this.loadedChunks[chunk]) {\n        throw new _util.MissingDataException(pos, pos + 1);\n      }\n      this.lastSuccessfulEnsureByteChunk = chunk;\n    },\n    ensureRange: function ChunkedStream_ensureRange(begin, end) {\n      if (begin >= end) {\n        return;\n      }\n      if (end <= this.progressiveDataLength) {\n        return;\n      }\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          throw new _util.MissingDataException(begin, end);\n        }\n      }\n    },\n    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n      var chunk,\n          numChunks = this.numChunks;\n      for (var i = 0; i < numChunks; ++i) {\n        chunk = (beginChunk + i) % numChunks;\n        if (!this.loadedChunks[chunk]) {\n          return chunk;\n        }\n      }\n      return null;\n    },\n    hasChunk: function ChunkedStream_hasChunk(chunk) {\n      return !!this.loadedChunks[chunk];\n    },\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function ChunkedStream_getByte() {\n      var pos = this.pos;\n      if (pos >= this.end) {\n        return -1;\n      }\n      this.ensureByte(pos);\n      return this.bytes[this.pos++];\n    },\n    getUint16: function ChunkedStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function ChunkedStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function ChunkedStream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        this.ensureRange(pos, strEnd);\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.ensureRange(pos, end);\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function ChunkedStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function ChunkedStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    getByteRange: function ChunkedStream_getBytes(begin, end) {\n      this.ensureRange(begin, end);\n      return this.bytes.subarray(begin, end);\n    },\n    skip: function ChunkedStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function ChunkedStream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function ChunkedStream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n      this.ensureRange(start, start + length);\n      function ChunkedStreamSubstream() {}\n      ChunkedStreamSubstream.prototype = Object.create(this);\n      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n        var chunkSize = this.chunkSize;\n        var beginChunk = Math.floor(this.start / chunkSize);\n        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n        var missingChunks = [];\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!this.loadedChunks[chunk]) {\n            missingChunks.push(chunk);\n          }\n        }\n        return missingChunks;\n      };\n      var subStream = new ChunkedStreamSubstream();\n      subStream.pos = subStream.start = start;\n      subStream.end = start + length || this.end;\n      subStream.dict = dict;\n      return subStream;\n    }\n  };\n  return ChunkedStream;\n}();\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n  function ChunkedStreamManager(pdfNetworkStream, args) {\n    var chunkSize = args.rangeChunkSize;\n    var length = args.length;\n    this.stream = new ChunkedStream(length, chunkSize, this);\n    this.length = length;\n    this.chunkSize = chunkSize;\n    this.pdfNetworkStream = pdfNetworkStream;\n    this.url = args.url;\n    this.disableAutoFetch = args.disableAutoFetch;\n    this.msgHandler = args.msgHandler;\n    this.currRequestId = 0;\n    this.chunksNeededByRequest = Object.create(null);\n    this.requestsByChunk = Object.create(null);\n    this.promisesByRequest = Object.create(null);\n    this.progressiveDataLength = 0;\n    this.aborted = false;\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n  }\n  ChunkedStreamManager.prototype = {\n    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n      var _this = this;\n\n      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n      if (!rangeReader.isStreamingSupported) {\n        rangeReader.onProgress = this.onProgress.bind(this);\n      }\n      var chunks = [],\n          loaded = 0;\n      var manager = this;\n      var promise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            if (!chunk.done) {\n              var data = chunk.value;\n              chunks.push(data);\n              loaded += (0, _util.arrayByteLength)(data);\n              if (rangeReader.isStreamingSupported) {\n                manager.onProgress({ loaded: loaded });\n              }\n              rangeReader.read().then(readChunk, reject);\n              return;\n            }\n            var chunkData = (0, _util.arraysToBytes)(chunks);\n            chunks = null;\n            resolve(chunkData);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        rangeReader.read().then(readChunk, reject);\n      });\n      promise.then(function (data) {\n        if (_this.aborted) {\n          return;\n        }\n        _this.onReceiveData({\n          chunk: data,\n          begin: begin\n        });\n      });\n    },\n    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n      var missingChunks = this.stream.getMissingChunks();\n      this._requestChunks(missingChunks);\n      return this._loadedStreamCapability.promise;\n    },\n    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n      var requestId = this.currRequestId++;\n      var i, ii;\n      var chunksNeeded = Object.create(null);\n      this.chunksNeededByRequest[requestId] = chunksNeeded;\n      for (i = 0, ii = chunks.length; i < ii; i++) {\n        if (!this.stream.hasChunk(chunks[i])) {\n          chunksNeeded[chunks[i]] = true;\n        }\n      }\n      if ((0, _util.isEmptyObj)(chunksNeeded)) {\n        return Promise.resolve();\n      }\n      var capability = (0, _util.createPromiseCapability)();\n      this.promisesByRequest[requestId] = capability;\n      var chunksToRequest = [];\n      for (var chunk in chunksNeeded) {\n        chunk = chunk | 0;\n        if (!(chunk in this.requestsByChunk)) {\n          this.requestsByChunk[chunk] = [];\n          chunksToRequest.push(chunk);\n        }\n        this.requestsByChunk[chunk].push(requestId);\n      }\n      if (!chunksToRequest.length) {\n        return capability.promise;\n      }\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n        var groupedChunk = groupedChunksToRequest[i];\n        var begin = groupedChunk.beginChunk * this.chunkSize;\n        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n        this.sendRequest(begin, end);\n      }\n      return capability.promise;\n    },\n    getStream: function ChunkedStreamManager_getStream() {\n      return this.stream;\n    },\n    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n      end = Math.min(end, this.length);\n      var beginChunk = this.getBeginChunk(begin);\n      var endChunk = this.getEndChunk(end);\n      var chunks = [];\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        chunks.push(chunk);\n      }\n      return this._requestChunks(chunks);\n    },\n    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n      ranges = ranges || [];\n      var chunksToRequest = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var beginChunk = this.getBeginChunk(ranges[i].begin);\n        var endChunk = this.getEndChunk(ranges[i].end);\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (chunksToRequest.indexOf(chunk) < 0) {\n            chunksToRequest.push(chunk);\n          }\n        }\n      }\n      chunksToRequest.sort(function (a, b) {\n        return a - b;\n      });\n      return this._requestChunks(chunksToRequest);\n    },\n    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n      var groupedChunks = [];\n      var beginChunk = -1;\n      var prevChunk = -1;\n      for (var i = 0; i < chunks.length; ++i) {\n        var chunk = chunks[i];\n        if (beginChunk < 0) {\n          beginChunk = chunk;\n        }\n        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: prevChunk + 1\n          });\n          beginChunk = chunk;\n        }\n        if (i + 1 === chunks.length) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: chunk + 1\n          });\n        }\n        prevChunk = chunk;\n      }\n      return groupedChunks;\n    },\n    onProgress: function ChunkedStreamManager_onProgress(args) {\n      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n      this.msgHandler.send('DocProgress', {\n        loaded: bytesLoaded,\n        total: this.length\n      });\n    },\n    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n      var chunk = args.chunk;\n      var isProgressive = args.begin === undefined;\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n      var end = begin + chunk.byteLength;\n      var beginChunk = Math.floor(begin / this.chunkSize);\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n      if (isProgressive) {\n        this.stream.onReceiveProgressiveData(chunk);\n        this.progressiveDataLength = end;\n      } else {\n        this.stream.onReceiveData(begin, chunk);\n      }\n      if (this.stream.allChunksLoaded()) {\n        this._loadedStreamCapability.resolve(this.stream);\n      }\n      var loadedRequests = [];\n      var i, requestId;\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n        var requestIds = this.requestsByChunk[chunk] || [];\n        delete this.requestsByChunk[chunk];\n        for (i = 0; i < requestIds.length; ++i) {\n          requestId = requestIds[i];\n          var chunksNeeded = this.chunksNeededByRequest[requestId];\n          if (chunk in chunksNeeded) {\n            delete chunksNeeded[chunk];\n          }\n          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\n            continue;\n          }\n          loadedRequests.push(requestId);\n        }\n      }\n      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\n        var nextEmptyChunk;\n        if (this.stream.numChunksLoaded === 1) {\n          var lastChunk = this.stream.numChunks - 1;\n          if (!this.stream.hasChunk(lastChunk)) {\n            nextEmptyChunk = lastChunk;\n          }\n        } else {\n          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n        }\n        if (Number.isInteger(nextEmptyChunk)) {\n          this._requestChunks([nextEmptyChunk]);\n        }\n      }\n      for (i = 0; i < loadedRequests.length; ++i) {\n        requestId = loadedRequests[i];\n        var capability = this.promisesByRequest[requestId];\n        delete this.promisesByRequest[requestId];\n        capability.resolve();\n      }\n      this.msgHandler.send('DocProgress', {\n        loaded: this.stream.numChunksLoaded * this.chunkSize,\n        total: this.length\n      });\n    },\n    onError: function ChunkedStreamManager_onError(err) {\n      this._loadedStreamCapability.reject(err);\n    },\n    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n      var chunk = Math.floor(begin / this.chunkSize);\n      return chunk;\n    },\n    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n      return chunk;\n    },\n    abort: function ChunkedStreamManager_abort() {\n      this.aborted = true;\n      if (this.pdfNetworkStream) {\n        this.pdfNetworkStream.cancelAllRequests('abort');\n      }\n      for (var requestId in this.promisesByRequest) {\n        var capability = this.promisesByRequest[requestId];\n        capability.reject(new Error('Request was aborted'));\n      }\n    }\n  };\n  return ChunkedStreamManager;\n}();\nexports.ChunkedStream = ChunkedStream;\nexports.ChunkedStreamManager = ChunkedStreamManager;\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _parser = __w_pdfjs_require__(34);\n\nvar _chunked_stream = __w_pdfjs_require__(72);\n\nvar _crypto = __w_pdfjs_require__(76);\n\nvar _colorspace = __w_pdfjs_require__(27);\n\nvar Catalog = function CatalogClosure() {\n  function Catalog(pdfManager, xref, pageFactory) {\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.catDict = xref.getCatalogObj();\n    if (!(0, _primitives.isDict)(this.catDict)) {\n      throw new _util.FormatError('catalog object is not a dictionary');\n    }\n    this.fontCache = new _primitives.RefSetCache();\n    this.builtInCMapCache = Object.create(null);\n    this.pageKidsCountCache = new _primitives.RefSetCache();\n    this.pageFactory = pageFactory;\n    this.pagePromises = [];\n  }\n  Catalog.prototype = {\n    get metadata() {\n      var streamRef = this.catDict.getRaw('Metadata');\n      if (!(0, _primitives.isRef)(streamRef)) {\n        return (0, _util.shadow)(this, 'metadata', null);\n      }\n      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n      var metadata;\n      if (stream && (0, _primitives.isDict)(stream.dict)) {\n        var type = stream.dict.get('Type');\n        var subtype = stream.dict.get('Subtype');\n        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\n          try {\n            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\n          } catch (e) {\n            if (e instanceof _util.MissingDataException) {\n              throw e;\n            }\n            (0, _util.info)('Skipping invalid metadata.');\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'metadata', metadata);\n    },\n    get toplevelPagesDict() {\n      var pagesObj = this.catDict.get('Pages');\n      if (!(0, _primitives.isDict)(pagesObj)) {\n        throw new _util.FormatError('invalid top-level pages dictionary');\n      }\n      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\n    },\n    get documentOutline() {\n      var obj = null;\n      try {\n        obj = this.readDocumentOutline();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read document outline');\n      }\n      return (0, _util.shadow)(this, 'documentOutline', obj);\n    },\n    readDocumentOutline: function Catalog_readDocumentOutline() {\n      var obj = this.catDict.get('Outlines');\n      if (!(0, _primitives.isDict)(obj)) {\n        return null;\n      }\n      obj = obj.getRaw('First');\n      if (!(0, _primitives.isRef)(obj)) {\n        return null;\n      }\n      var root = { items: [] };\n      var queue = [{\n        obj: obj,\n        parent: root\n      }];\n      var processed = new _primitives.RefSet();\n      processed.put(obj);\n      var xref = this.xref,\n          blackColor = new Uint8Array(3);\n      while (queue.length > 0) {\n        var i = queue.shift();\n        var outlineDict = xref.fetchIfRef(i.obj);\n        if (outlineDict === null) {\n          continue;\n        }\n        if (!outlineDict.has('Title')) {\n          throw new _util.FormatError('Invalid outline item');\n        }\n        var data = {\n          url: null,\n          dest: null\n        };\n        Catalog.parseDestDictionary({\n          destDict: outlineDict,\n          resultObj: data,\n          docBaseUrl: this.pdfManager.docBaseUrl\n        });\n        var title = outlineDict.get('Title');\n        var flags = outlineDict.get('F') || 0;\n        var color = outlineDict.getArray('C'),\n            rgbColor = blackColor;\n        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\n        }\n        var outlineItem = {\n          dest: data.dest,\n          url: data.url,\n          unsafeUrl: data.unsafeUrl,\n          newWindow: data.newWindow,\n          title: (0, _util.stringToPDFString)(title),\n          color: rgbColor,\n          count: outlineDict.get('Count'),\n          bold: !!(flags & 2),\n          italic: !!(flags & 1),\n          items: []\n        };\n        i.parent.items.push(outlineItem);\n        obj = outlineDict.getRaw('First');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: outlineItem\n          });\n          processed.put(obj);\n        }\n        obj = outlineDict.getRaw('Next');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: i.parent\n          });\n          processed.put(obj);\n        }\n      }\n      return root.items.length > 0 ? root.items : null;\n    },\n    get numPages() {\n      var obj = this.toplevelPagesDict.get('Count');\n      if (!Number.isInteger(obj)) {\n        throw new _util.FormatError('page count in top level pages object is not an integer');\n      }\n      return (0, _util.shadow)(this, 'numPages', obj);\n    },\n    get destinations() {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dests = {},\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        obj = nameDictionaryRef;\n        obj.forEach(function catalogForEach(key, value) {\n          if (!value) {\n            return;\n          }\n          dests[key] = fetchDestination(value);\n        });\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          dests[name] = fetchDestination(names[name]);\n        }\n      }\n      return (0, _util.shadow)(this, 'destinations', dests);\n    },\n    getDestination: function Catalog_getDestination(destinationId) {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dest = null,\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        var value = nameDictionaryRef.get(destinationId);\n        if (value) {\n          dest = fetchDestination(value);\n        }\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        dest = fetchDestination(nameTree.get(destinationId));\n      }\n      return dest;\n    },\n    get pageLabels() {\n      var obj = null;\n      try {\n        obj = this.readPageLabels();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read page labels.');\n      }\n      return (0, _util.shadow)(this, 'pageLabels', obj);\n    },\n    readPageLabels: function Catalog_readPageLabels() {\n      var obj = this.catDict.getRaw('PageLabels');\n      if (!obj) {\n        return null;\n      }\n      var pageLabels = new Array(this.numPages);\n      var style = null;\n      var prefix = '';\n      var numberTree = new NumberTree(obj, this.xref);\n      var nums = numberTree.getAll();\n      var currentLabel = '',\n          currentIndex = 1;\n      for (var i = 0, ii = this.numPages; i < ii; i++) {\n        if (i in nums) {\n          var labelDict = nums[i];\n          if (!(0, _primitives.isDict)(labelDict)) {\n            throw new _util.FormatError('The PageLabel is not a dictionary.');\n          }\n          var type = labelDict.get('Type');\n          if (type && !(0, _primitives.isName)(type, 'PageLabel')) {\n            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\n          }\n          var s = labelDict.get('S');\n          if (s && !(0, _primitives.isName)(s)) {\n            throw new _util.FormatError('Invalid style in PageLabel dictionary.');\n          }\n          style = s ? s.name : null;\n          var p = labelDict.get('P');\n          if (p && !(0, _util.isString)(p)) {\n            throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\n          }\n          prefix = p ? (0, _util.stringToPDFString)(p) : '';\n          var st = labelDict.get('St');\n          if (st && !(Number.isInteger(st) && st >= 1)) {\n            throw new _util.FormatError('Invalid start in PageLabel dictionary.');\n          }\n          currentIndex = st || 1;\n        }\n        switch (style) {\n          case 'D':\n            currentLabel = currentIndex;\n            break;\n          case 'R':\n          case 'r':\n            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\n            break;\n          case 'A':\n          case 'a':\n            var LIMIT = 26;\n            var A_UPPER_CASE = 0x41,\n                A_LOWER_CASE = 0x61;\n            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n            var letterIndex = currentIndex - 1;\n            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n            var charBuf = [];\n            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n              charBuf.push(character);\n            }\n            currentLabel = charBuf.join('');\n            break;\n          default:\n            if (style) {\n              throw new _util.FormatError('Invalid style \"' + style + '\" in PageLabel dictionary.');\n            }\n        }\n        pageLabels[i] = prefix + currentLabel;\n        currentLabel = '';\n        currentIndex++;\n      }\n      return pageLabels;\n    },\n    get pageMode() {\n      var obj = this.catDict.get('PageMode');\n      var pageMode = 'UseNone';\n      if ((0, _primitives.isName)(obj)) {\n        switch (obj.name) {\n          case 'UseNone':\n          case 'UseOutlines':\n          case 'UseThumbs':\n          case 'FullScreen':\n          case 'UseOC':\n          case 'UseAttachments':\n            pageMode = obj.name;\n        }\n      }\n      return (0, _util.shadow)(this, 'pageMode', pageMode);\n    },\n    get attachments() {\n      var xref = this.xref;\n      var attachments = null,\n          nameTreeRef;\n      var obj = this.catDict.get('Names');\n      if (obj) {\n        nameTreeRef = obj.getRaw('EmbeddedFiles');\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var fs = new FileSpec(names[name], xref);\n          if (!attachments) {\n            attachments = Object.create(null);\n          }\n          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\n        }\n      }\n      return (0, _util.shadow)(this, 'attachments', attachments);\n    },\n    get javaScript() {\n      var xref = this.xref;\n      var obj = this.catDict.get('Names');\n      var javaScript = [];\n      function appendIfJavaScriptDict(jsDict) {\n        var type = jsDict.get('S');\n        if (!(0, _primitives.isName)(type, 'JavaScript')) {\n          return;\n        }\n        var js = jsDict.get('JS');\n        if ((0, _primitives.isStream)(js)) {\n          js = (0, _util.bytesToString)(js.getBytes());\n        } else if (!(0, _util.isString)(js)) {\n          return;\n        }\n        javaScript.push((0, _util.stringToPDFString)(js));\n      }\n      if (obj && obj.has('JavaScript')) {\n        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var jsDict = names[name];\n          if ((0, _primitives.isDict)(jsDict)) {\n            appendIfJavaScriptDict(jsDict);\n          }\n        }\n      }\n      var openactionDict = this.catDict.get('OpenAction');\n      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\n        var actionType = openactionDict.get('S');\n        if ((0, _primitives.isName)(actionType, 'Named')) {\n          var action = openactionDict.get('N');\n          if ((0, _primitives.isName)(action, 'Print')) {\n            javaScript.push('print({});');\n          }\n        } else {\n          appendIfJavaScriptDict(openactionDict);\n        }\n      }\n      return (0, _util.shadow)(this, 'javaScript', javaScript);\n    },\n    cleanup: function Catalog_cleanup() {\n      var _this = this;\n\n      this.pageKidsCountCache.clear();\n      var promises = [];\n      this.fontCache.forEach(function (promise) {\n        promises.push(promise);\n      });\n      return Promise.all(promises).then(function (translatedFonts) {\n        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n          var font = translatedFonts[i].dict;\n          delete font.translated;\n        }\n        _this.fontCache.clear();\n        _this.builtInCMapCache = Object.create(null);\n      });\n    },\n    getPage: function Catalog_getPage(pageIndex) {\n      var _this2 = this;\n\n      if (!(pageIndex in this.pagePromises)) {\n        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              dict = _ref2[0],\n              ref = _ref2[1];\n\n          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\n        });\n      }\n      return this.pagePromises[pageIndex];\n    },\n    getPageDict: function Catalog_getPageDict(pageIndex) {\n      var capability = (0, _util.createPromiseCapability)();\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\n      var count,\n          currentPageIndex = 0;\n      var xref = this.xref,\n          pageKidsCountCache = this.pageKidsCountCache;\n      function next() {\n        while (nodesToVisit.length) {\n          var currentNode = nodesToVisit.pop();\n          if ((0, _primitives.isRef)(currentNode)) {\n            count = pageKidsCountCache.get(currentNode);\n            if (count > 0 && currentPageIndex + count < pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n            xref.fetchAsync(currentNode).then(function (obj) {\n              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\n                if (pageIndex === currentPageIndex) {\n                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\n                    pageKidsCountCache.put(currentNode, 1);\n                  }\n                  capability.resolve([obj, currentNode]);\n                } else {\n                  currentPageIndex++;\n                  next();\n                }\n                return;\n              }\n              nodesToVisit.push(obj);\n              next();\n            }, capability.reject);\n            return;\n          }\n          if (!(0, _primitives.isDict)(currentNode)) {\n            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\n            return;\n          }\n          count = currentNode.get('Count');\n          var objId = currentNode.objId;\n          if (objId && !pageKidsCountCache.has(objId)) {\n            pageKidsCountCache.put(objId, count);\n          }\n          if (currentPageIndex + count <= pageIndex) {\n            currentPageIndex += count;\n            continue;\n          }\n          var kids = currentNode.get('Kids');\n          if (!Array.isArray(kids)) {\n            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\n            return;\n          }\n          for (var last = kids.length - 1; last >= 0; last--) {\n            nodesToVisit.push(kids[last]);\n          }\n        }\n        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\n      }\n      next();\n      return capability.promise;\n    },\n    getPageIndex: function Catalog_getPageIndex(pageRef) {\n      var xref = this.xref;\n      function pagesBeforeRef(kidRef) {\n        var total = 0;\n        var parentRef;\n        return xref.fetchAsync(kidRef).then(function (node) {\n          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\n            throw new _util.FormatError('The reference does not point to a /Page Dict.');\n          }\n          if (!node) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(node)) {\n            throw new _util.FormatError('node must be a Dict.');\n          }\n          parentRef = node.getRaw('Parent');\n          return node.getAsync('Parent');\n        }).then(function (parent) {\n          if (!parent) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(parent)) {\n            throw new _util.FormatError('parent must be a Dict.');\n          }\n          return parent.getAsync('Kids');\n        }).then(function (kids) {\n          if (!kids) {\n            return null;\n          }\n          var kidPromises = [];\n          var found = false;\n          for (var i = 0; i < kids.length; i++) {\n            var kid = kids[i];\n            if (!(0, _primitives.isRef)(kid)) {\n              throw new _util.FormatError('kid must be a Ref.');\n            }\n            if (kid.num === kidRef.num) {\n              found = true;\n              break;\n            }\n            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n              if (kid.has('Count')) {\n                var count = kid.get('Count');\n                total += count;\n              } else {\n                total++;\n              }\n            }));\n          }\n          if (!found) {\n            throw new _util.FormatError('kid ref not found in parents kids');\n          }\n          return Promise.all(kidPromises).then(function () {\n            return [total, parentRef];\n          });\n        });\n      }\n      var total = 0;\n      function next(ref) {\n        return pagesBeforeRef(ref).then(function (args) {\n          if (!args) {\n            return total;\n          }\n          var count = args[0];\n          var parentRef = args[1];\n          total += count;\n          return next(parentRef);\n        });\n      }\n      return next(pageRef);\n    }\n  };\n  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n    function addDefaultProtocolToUrl(url) {\n      if (url.indexOf('www.') === 0) {\n        return 'http://' + url;\n      }\n      return url;\n    }\n    function tryConvertUrlEncoding(url) {\n      try {\n        return (0, _util.stringToUTF8String)(url);\n      } catch (e) {\n        return url;\n      }\n    }\n    var destDict = params.destDict;\n    if (!(0, _primitives.isDict)(destDict)) {\n      (0, _util.warn)('parseDestDictionary: \"destDict\" must be a dictionary.');\n      return;\n    }\n    var resultObj = params.resultObj;\n    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\n      (0, _util.warn)('parseDestDictionary: \"resultObj\" must be an object.');\n      return;\n    }\n    var docBaseUrl = params.docBaseUrl || null;\n    var action = destDict.get('A'),\n        url,\n        dest;\n    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\n      action = destDict.get('Dest');\n    }\n    if ((0, _primitives.isDict)(action)) {\n      var actionType = action.get('S');\n      if (!(0, _primitives.isName)(actionType)) {\n        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\n        return;\n      }\n      var actionName = actionType.name;\n      switch (actionName) {\n        case 'URI':\n          url = action.get('URI');\n          if ((0, _primitives.isName)(url)) {\n            url = '/' + url.name;\n          } else if ((0, _util.isString)(url)) {\n            url = addDefaultProtocolToUrl(url);\n          }\n          break;\n        case 'GoTo':\n          dest = action.get('D');\n          break;\n        case 'Launch':\n        case 'GoToR':\n          var urlDict = action.get('F');\n          if ((0, _primitives.isDict)(urlDict)) {\n            url = urlDict.get('F') || null;\n          } else if ((0, _util.isString)(urlDict)) {\n            url = urlDict;\n          }\n          var remoteDest = action.get('D');\n          if (remoteDest) {\n            if ((0, _primitives.isName)(remoteDest)) {\n              remoteDest = remoteDest.name;\n            }\n            if ((0, _util.isString)(url)) {\n              var baseUrl = url.split('#')[0];\n              if ((0, _util.isString)(remoteDest)) {\n                url = baseUrl + '#' + remoteDest;\n              } else if (Array.isArray(remoteDest)) {\n                url = baseUrl + '#' + JSON.stringify(remoteDest);\n              }\n            }\n          }\n          var newWindow = action.get('NewWindow');\n          if ((0, _util.isBool)(newWindow)) {\n            resultObj.newWindow = newWindow;\n          }\n          break;\n        case 'Named':\n          var namedAction = action.get('N');\n          if ((0, _primitives.isName)(namedAction)) {\n            resultObj.action = namedAction.name;\n          }\n          break;\n        case 'JavaScript':\n          var jsAction = action.get('JS'),\n              js;\n          if ((0, _primitives.isStream)(jsAction)) {\n            js = (0, _util.bytesToString)(jsAction.getBytes());\n          } else if ((0, _util.isString)(jsAction)) {\n            js = jsAction;\n          }\n          if (js) {\n            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\n            var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\n            if (jsUrl && jsUrl[2]) {\n              url = jsUrl[2];\n              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n                resultObj.newWindow = true;\n              }\n              break;\n            }\n          }\n        default:\n          (0, _util.warn)('parseDestDictionary: Unsupported Action type \"' + actionName + '\".');\n          break;\n      }\n    } else if (destDict.has('Dest')) {\n      dest = destDict.get('Dest');\n    }\n    if ((0, _util.isString)(url)) {\n      url = tryConvertUrlEncoding(url);\n      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\n      if (absoluteUrl) {\n        resultObj.url = absoluteUrl.href;\n      }\n      resultObj.unsafeUrl = url;\n    }\n    if (dest) {\n      if ((0, _primitives.isName)(dest)) {\n        dest = dest.name;\n      }\n      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\n        resultObj.dest = dest;\n      }\n    }\n  };\n  return Catalog;\n}();\nvar XRef = function XRefClosure() {\n  function XRef(stream, pdfManager) {\n    this.stream = stream;\n    this.pdfManager = pdfManager;\n    this.entries = [];\n    this.xrefstms = Object.create(null);\n    this.cache = [];\n    this.stats = {\n      streamTypes: [],\n      fontTypes: []\n    };\n  }\n  XRef.prototype = {\n    setStartXRef: function XRef_setStartXRef(startXRef) {\n      this.startXRefQueue = [startXRef];\n    },\n    parse: function XRef_parse(recoveryMode) {\n      var trailerDict;\n      if (!recoveryMode) {\n        trailerDict = this.readXRef();\n      } else {\n        (0, _util.warn)('Indexing all PDF objects');\n        trailerDict = this.indexObjects();\n      }\n      trailerDict.assignXref(this);\n      this.trailer = trailerDict;\n      var encrypt = trailerDict.get('Encrypt');\n      if ((0, _primitives.isDict)(encrypt)) {\n        var ids = trailerDict.get('ID');\n        var fileId = ids && ids.length ? ids[0] : '';\n        encrypt.suppressEncryption = true;\n        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n      }\n      if (!(this.root = trailerDict.get('Root'))) {\n        throw new _util.FormatError('Invalid root reference');\n      }\n    },\n    processXRefTable: function XRef_processXRefTable(parser) {\n      if (!('tableState' in this)) {\n        this.tableState = {\n          entryNum: 0,\n          streamPos: parser.lexer.stream.pos,\n          parserBuf1: parser.buf1,\n          parserBuf2: parser.buf2\n        };\n      }\n      var obj = this.readXRefTable(parser);\n      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\n      }\n      var dict = parser.getObj();\n      if (!(0, _primitives.isDict)(dict) && dict.dict) {\n        dict = dict.dict;\n      }\n      if (!(0, _primitives.isDict)(dict)) {\n        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\n      }\n      delete this.tableState;\n      return dict;\n    },\n    readXRefTable: function XRef_readXRefTable(parser) {\n      var stream = parser.lexer.stream;\n      var tableState = this.tableState;\n      stream.pos = tableState.streamPos;\n      parser.buf1 = tableState.parserBuf1;\n      parser.buf2 = tableState.parserBuf2;\n      var obj;\n      while (true) {\n        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\n            break;\n          }\n          tableState.firstEntryNum = obj;\n          tableState.entryCount = parser.getObj();\n        }\n        var first = tableState.firstEntryNum;\n        var count = tableState.entryCount;\n        if (!Number.isInteger(first) || !Number.isInteger(count)) {\n          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\n        }\n        for (var i = tableState.entryNum; i < count; i++) {\n          tableState.streamPos = stream.pos;\n          tableState.entryNum = i;\n          tableState.parserBuf1 = parser.buf1;\n          tableState.parserBuf2 = parser.buf2;\n          var entry = {};\n          entry.offset = parser.getObj();\n          entry.gen = parser.getObj();\n          var type = parser.getObj();\n          if ((0, _primitives.isCmd)(type, 'f')) {\n            entry.free = true;\n          } else if ((0, _primitives.isCmd)(type, 'n')) {\n            entry.uncompressed = true;\n          }\n          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\n          }\n          if (i === 0 && entry.free && first === 1) {\n            first = 0;\n          }\n          if (!this.entries[i + first]) {\n            this.entries[i + first] = entry;\n          }\n        }\n        tableState.entryNum = 0;\n        tableState.streamPos = stream.pos;\n        tableState.parserBuf1 = parser.buf1;\n        tableState.parserBuf2 = parser.buf2;\n        delete tableState.firstEntryNum;\n        delete tableState.entryCount;\n      }\n      if (this.entries[0] && !this.entries[0].free) {\n        throw new _util.FormatError('Invalid XRef table: unexpected first object');\n      }\n      return obj;\n    },\n    processXRefStream: function XRef_processXRefStream(stream) {\n      if (!('streamState' in this)) {\n        var streamParameters = stream.dict;\n        var byteWidths = streamParameters.get('W');\n        var range = streamParameters.get('Index');\n        if (!range) {\n          range = [0, streamParameters.get('Size')];\n        }\n        this.streamState = {\n          entryRanges: range,\n          byteWidths: byteWidths,\n          entryNum: 0,\n          streamPos: stream.pos\n        };\n      }\n      this.readXRefStream(stream);\n      delete this.streamState;\n      return stream.dict;\n    },\n    readXRefStream: function XRef_readXRefStream(stream) {\n      var i, j;\n      var streamState = this.streamState;\n      stream.pos = streamState.streamPos;\n      var byteWidths = streamState.byteWidths;\n      var typeFieldWidth = byteWidths[0];\n      var offsetFieldWidth = byteWidths[1];\n      var generationFieldWidth = byteWidths[2];\n      var entryRanges = streamState.entryRanges;\n      while (entryRanges.length > 0) {\n        var first = entryRanges[0];\n        var n = entryRanges[1];\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\n        }\n        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\n        }\n        for (i = streamState.entryNum; i < n; ++i) {\n          streamState.entryNum = i;\n          streamState.streamPos = stream.pos;\n          var type = 0,\n              offset = 0,\n              generation = 0;\n          for (j = 0; j < typeFieldWidth; ++j) {\n            type = type << 8 | stream.getByte();\n          }\n          if (typeFieldWidth === 0) {\n            type = 1;\n          }\n          for (j = 0; j < offsetFieldWidth; ++j) {\n            offset = offset << 8 | stream.getByte();\n          }\n          for (j = 0; j < generationFieldWidth; ++j) {\n            generation = generation << 8 | stream.getByte();\n          }\n          var entry = {};\n          entry.offset = offset;\n          entry.gen = generation;\n          switch (type) {\n            case 0:\n              entry.free = true;\n              break;\n            case 1:\n              entry.uncompressed = true;\n              break;\n            case 2:\n              break;\n            default:\n              throw new _util.FormatError('Invalid XRef entry type: ' + type);\n          }\n          if (!this.entries[first + i]) {\n            this.entries[first + i] = entry;\n          }\n        }\n        streamState.entryNum = 0;\n        streamState.streamPos = stream.pos;\n        entryRanges.splice(0, 2);\n      }\n    },\n    indexObjects: function XRef_indexObjects() {\n      var TAB = 0x9,\n          LF = 0xA,\n          CR = 0xD,\n          SPACE = 0x20;\n      var PERCENT = 0x25,\n          LT = 0x3C;\n      function readToken(data, offset) {\n        var token = '',\n            ch = data[offset];\n        while (ch !== LF && ch !== CR && ch !== LT) {\n          if (++offset >= data.length) {\n            break;\n          }\n          token += String.fromCharCode(ch);\n          ch = data[offset];\n        }\n        return token;\n      }\n      function skipUntil(data, offset, what) {\n        var length = what.length,\n            dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n          var i = 0;\n          while (i < length && data[offset + i] === what[i]) {\n            ++i;\n          }\n          if (i >= length) {\n            break;\n          }\n          offset++;\n          skipped++;\n        }\n        return skipped;\n      }\n      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n      var endobjBytes = new Uint8Array([101, 110, 100, 111, 98, 106]);\n      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n      this.entries.length = 0;\n      var stream = this.stream;\n      stream.pos = 0;\n      var buffer = stream.getBytes();\n      var position = stream.start,\n          length = buffer.length;\n      var trailers = [],\n          xrefStms = [];\n      while (position < length) {\n        var ch = buffer[position];\n        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n          ++position;\n          continue;\n        }\n        if (ch === PERCENT) {\n          do {\n            ++position;\n            if (position >= length) {\n              break;\n            }\n            ch = buffer[position];\n          } while (ch !== LF && ch !== CR);\n          continue;\n        }\n        var token = readToken(buffer, position);\n        var m;\n        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n          position += skipUntil(buffer, position, trailerBytes);\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else if (m = objRegExp.exec(token)) {\n          if (typeof this.entries[m[1]] === 'undefined') {\n            this.entries[m[1]] = {\n              offset: position - stream.start,\n              gen: m[2] | 0,\n              uncompressed: true\n            };\n          }\n          var contentLength = skipUntil(buffer, position, endobjBytes) + 7;\n          var content = buffer.subarray(position, position + contentLength);\n          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n            xrefStms.push(position - stream.start);\n            this.xrefstms[position - stream.start] = 1;\n          }\n          position += contentLength;\n        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else {\n          position += token.length + 1;\n        }\n      }\n      var i, ii;\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n        this.startXRefQueue.push(xrefStms[i]);\n        this.readXRef(true);\n      }\n      var dict;\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\n        stream.pos = trailers[i];\n        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\n        var obj = parser.getObj();\n        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n          continue;\n        }\n        dict = parser.getObj();\n        if (!(0, _primitives.isDict)(dict)) {\n          continue;\n        }\n        if (dict.has('ID')) {\n          return dict;\n        }\n      }\n      if (dict) {\n        return dict;\n      }\n      throw new _util.InvalidPDFException('Invalid PDF structure');\n    },\n    readXRef: function XRef_readXRef(recoveryMode) {\n      var stream = this.stream;\n      var startXRefParsedCache = Object.create(null);\n      try {\n        while (this.startXRefQueue.length) {\n          var startXRef = this.startXRefQueue[0];\n          if (startXRefParsedCache[startXRef]) {\n            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\n            this.startXRefQueue.shift();\n            continue;\n          }\n          startXRefParsedCache[startXRef] = true;\n          stream.pos = startXRef + stream.start;\n          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n          var obj = parser.getObj();\n          var dict;\n          if ((0, _primitives.isCmd)(obj, 'xref')) {\n            dict = this.processXRefTable(parser);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            obj = dict.get('XRefStm');\n            if (Number.isInteger(obj)) {\n              var pos = obj;\n              if (!(pos in this.xrefstms)) {\n                this.xrefstms[pos] = 1;\n                this.startXRefQueue.push(pos);\n              }\n            }\n          } else if (Number.isInteger(obj)) {\n            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\n              throw new _util.FormatError('Invalid XRef stream');\n            }\n            dict = this.processXRefStream(obj);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            if (!dict) {\n              throw new _util.FormatError('Failed to read XRef stream');\n            }\n          } else {\n            throw new _util.FormatError('Invalid XRef stream header');\n          }\n          obj = dict.get('Prev');\n          if (Number.isInteger(obj)) {\n            this.startXRefQueue.push(obj);\n          } else if ((0, _primitives.isRef)(obj)) {\n            this.startXRefQueue.push(obj.num);\n          }\n          this.startXRefQueue.shift();\n        }\n        return this.topDict;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        (0, _util.info)('(while reading XRef): ' + e);\n      }\n      if (recoveryMode) {\n        return;\n      }\n      throw new _util.XRefParseException();\n    },\n    getEntry: function XRef_getEntry(i) {\n      var xrefEntry = this.entries[i];\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n        return xrefEntry;\n      }\n      return null;\n    },\n    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return obj;\n      }\n      return this.fetch(obj, suppressEncryption);\n    },\n    fetch: function XRef_fetch(ref, suppressEncryption) {\n      if (!(0, _primitives.isRef)(ref)) {\n        throw new Error('ref object is not a reference');\n      }\n      var num = ref.num;\n      if (num in this.cache) {\n        var cacheEntry = this.cache[num];\n        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\n          cacheEntry.objId = ref.toString();\n        }\n        return cacheEntry;\n      }\n      var xrefEntry = this.getEntry(num);\n      if (xrefEntry === null) {\n        return this.cache[num] = null;\n      }\n      if (xrefEntry.uncompressed) {\n        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n      } else {\n        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n      }\n      if ((0, _primitives.isDict)(xrefEntry)) {\n        xrefEntry.objId = ref.toString();\n      } else if ((0, _primitives.isStream)(xrefEntry)) {\n        xrefEntry.dict.objId = ref.toString();\n      }\n      return xrefEntry;\n    },\n    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n      var gen = ref.gen;\n      var num = ref.num;\n      if (xrefEntry.gen !== gen) {\n        throw new _util.FormatError('inconsistent generation in XRef');\n      }\n      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n      var obj1 = parser.getObj();\n      var obj2 = parser.getObj();\n      var obj3 = parser.getObj();\n      if (!Number.isInteger(obj1)) {\n        obj1 = parseInt(obj1, 10);\n      }\n      if (!Number.isInteger(obj2)) {\n        obj2 = parseInt(obj2, 10);\n      }\n      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (obj3.cmd !== 'obj') {\n        if (obj3.cmd.indexOf('obj') === 0) {\n          num = parseInt(obj3.cmd.substring(3), 10);\n          if (!Number.isNaN(num)) {\n            return num;\n          }\n        }\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (this.encrypt && !suppressEncryption) {\n        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n      } else {\n        xrefEntry = parser.getObj();\n      }\n      if (!(0, _primitives.isStream)(xrefEntry)) {\n        this.cache[num] = xrefEntry;\n      }\n      return xrefEntry;\n    },\n    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n      var tableOffset = xrefEntry.offset;\n      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\n      if (!(0, _primitives.isStream)(stream)) {\n        throw new _util.FormatError('bad ObjStm stream');\n      }\n      var first = stream.dict.get('First');\n      var n = stream.dict.get('N');\n      if (!Number.isInteger(first) || !Number.isInteger(n)) {\n        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\n      }\n      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\n      parser.allowStreams = true;\n      var i,\n          entries = [],\n          num,\n          nums = [];\n      for (i = 0; i < n; ++i) {\n        num = parser.getObj();\n        if (!Number.isInteger(num)) {\n          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\n        }\n        nums.push(num);\n        var offset = parser.getObj();\n        if (!Number.isInteger(offset)) {\n          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\n        }\n      }\n      for (i = 0; i < n; ++i) {\n        entries.push(parser.getObj());\n        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\n          parser.shift();\n        }\n        num = nums[i];\n        var entry = this.entries[num];\n        if (entry && entry.offset === tableOffset && entry.gen === i) {\n          this.cache[num] = entries[i];\n        }\n      }\n      xrefEntry = entries[xrefEntry.gen];\n      if (xrefEntry === undefined) {\n        throw new _util.FormatError('bad XRef entry for compressed object');\n      }\n      return xrefEntry;\n    },\n    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return Promise.resolve(obj);\n      }\n      return this.fetchAsync(obj, suppressEncryption);\n    },\n    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n      var streamManager = this.stream.manager;\n      var xref = this;\n      return new Promise(function tryFetch(resolve, reject) {\n        try {\n          resolve(xref.fetch(ref, suppressEncryption));\n        } catch (e) {\n          if (e instanceof _util.MissingDataException) {\n            streamManager.requestRange(e.begin, e.end).then(function () {\n              tryFetch(resolve, reject);\n            }, reject);\n            return;\n          }\n          reject(e);\n        }\n      });\n    },\n    getCatalogObj: function XRef_getCatalogObj() {\n      return this.root;\n    }\n  };\n  return XRef;\n}();\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n  function NameOrNumberTree(root, xref) {\n    throw new Error('Cannot initialize NameOrNumberTree.');\n  }\n  NameOrNumberTree.prototype = {\n    getAll: function NameOrNumberTree_getAll() {\n      var dict = Object.create(null);\n      if (!this.root) {\n        return dict;\n      }\n      var xref = this.xref;\n      var processed = new _primitives.RefSet();\n      processed.put(this.root);\n      var queue = [this.root];\n      while (queue.length > 0) {\n        var i, n;\n        var obj = xref.fetchIfRef(queue.shift());\n        if (!(0, _primitives.isDict)(obj)) {\n          continue;\n        }\n        if (obj.has('Kids')) {\n          var kids = obj.get('Kids');\n          for (i = 0, n = kids.length; i < n; i++) {\n            var kid = kids[i];\n            if (processed.has(kid)) {\n              throw new _util.FormatError('Duplicate entry in \"' + this._type + '\" tree.');\n            }\n            queue.push(kid);\n            processed.put(kid);\n          }\n          continue;\n        }\n        var entries = obj.get(this._type);\n        if (Array.isArray(entries)) {\n          for (i = 0, n = entries.length; i < n; i += 2) {\n            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n          }\n        }\n      }\n      return dict;\n    },\n    get: function NameOrNumberTree_get(key) {\n      if (!this.root) {\n        return null;\n      }\n      var xref = this.xref;\n      var kidsOrEntries = xref.fetchIfRef(this.root);\n      var loopCount = 0;\n      var MAX_LEVELS = 10;\n      var l, r, m;\n      while (kidsOrEntries.has('Kids')) {\n        if (++loopCount > MAX_LEVELS) {\n          (0, _util.warn)('Search depth limit reached for \"' + this._type + '\" tree.');\n          return null;\n        }\n        var kids = kidsOrEntries.get('Kids');\n        if (!Array.isArray(kids)) {\n          return null;\n        }\n        l = 0;\n        r = kids.length - 1;\n        while (l <= r) {\n          m = l + r >> 1;\n          var kid = xref.fetchIfRef(kids[m]);\n          var limits = kid.get('Limits');\n          if (key < xref.fetchIfRef(limits[0])) {\n            r = m - 1;\n          } else if (key > xref.fetchIfRef(limits[1])) {\n            l = m + 1;\n          } else {\n            kidsOrEntries = xref.fetchIfRef(kids[m]);\n            break;\n          }\n        }\n        if (l > r) {\n          return null;\n        }\n      }\n      var entries = kidsOrEntries.get(this._type);\n      if (Array.isArray(entries)) {\n        l = 0;\n        r = entries.length - 2;\n        while (l <= r) {\n          m = l + r & ~1;\n          var currentKey = xref.fetchIfRef(entries[m]);\n          if (key < currentKey) {\n            r = m - 2;\n          } else if (key > currentKey) {\n            l = m + 2;\n          } else {\n            return xref.fetchIfRef(entries[m + 1]);\n          }\n        }\n      }\n      return null;\n    }\n  };\n  return NameOrNumberTree;\n}();\nvar NameTree = function NameTreeClosure() {\n  function NameTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Names';\n  }\n  _util.Util.inherit(NameTree, NameOrNumberTree, {});\n  return NameTree;\n}();\nvar NumberTree = function NumberTreeClosure() {\n  function NumberTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Nums';\n  }\n  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\n  return NumberTree;\n}();\nvar FileSpec = function FileSpecClosure() {\n  function FileSpec(root, xref) {\n    if (!root || !(0, _primitives.isDict)(root)) {\n      return;\n    }\n    this.xref = xref;\n    this.root = root;\n    if (root.has('FS')) {\n      this.fs = root.get('FS');\n    }\n    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\n    if (root.has('RF')) {\n      (0, _util.warn)('Related file specifications are not supported');\n    }\n    this.contentAvailable = true;\n    if (!root.has('EF')) {\n      this.contentAvailable = false;\n      (0, _util.warn)('Non-embedded file specifications are not supported');\n    }\n  }\n  function pickPlatformItem(dict) {\n    if (dict.has('UF')) {\n      return dict.get('UF');\n    } else if (dict.has('F')) {\n      return dict.get('F');\n    } else if (dict.has('Unix')) {\n      return dict.get('Unix');\n    } else if (dict.has('Mac')) {\n      return dict.get('Mac');\n    } else if (dict.has('DOS')) {\n      return dict.get('DOS');\n    }\n    return null;\n  }\n  FileSpec.prototype = {\n    get filename() {\n      if (!this._filename && this.root) {\n        var filename = pickPlatformItem(this.root) || 'unnamed';\n        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n      }\n      return this._filename;\n    },\n    get content() {\n      if (!this.contentAvailable) {\n        return null;\n      }\n      if (!this.contentRef && this.root) {\n        this.contentRef = pickPlatformItem(this.root.get('EF'));\n      }\n      var content = null;\n      if (this.contentRef) {\n        var xref = this.xref;\n        var fileObj = xref.fetchIfRef(this.contentRef);\n        if (fileObj && (0, _primitives.isStream)(fileObj)) {\n          content = fileObj.getBytes();\n        } else {\n          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\n        }\n      } else {\n        (0, _util.warn)('Embedded file specification does not have a content');\n      }\n      return content;\n    },\n    get serializable() {\n      return {\n        filename: this.filename,\n        content: this.content\n      };\n    }\n  };\n  return FileSpec;\n}();\nvar ObjectLoader = function () {\n  function mayHaveChildren(value) {\n    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\n  }\n  function addChildren(node, nodesToVisit) {\n    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\n      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\n      var dictKeys = dict.getKeys();\n      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(dictKeys[i]);\n        if (mayHaveChildren(rawValue)) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n    } else if (Array.isArray(node)) {\n      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\n        var value = node[_i];\n        if (mayHaveChildren(value)) {\n          nodesToVisit.push(value);\n        }\n      }\n    }\n  }\n  function ObjectLoader(dict, keys, xref) {\n    this.dict = dict;\n    this.keys = keys;\n    this.xref = xref;\n    this.refSet = null;\n    this.capability = null;\n  }\n  ObjectLoader.prototype = {\n    load: function load() {\n      this.capability = (0, _util.createPromiseCapability)();\n      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n        this.capability.resolve();\n        return this.capability.promise;\n      }\n      var keys = this.keys,\n          dict = this.dict;\n\n      this.refSet = new _primitives.RefSet();\n      var nodesToVisit = [];\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(keys[i]);\n        if (rawValue !== undefined) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n      this._walk(nodesToVisit);\n      return this.capability.promise;\n    },\n    _walk: function _walk(nodesToVisit) {\n      var _this3 = this;\n\n      var nodesToRevisit = [];\n      var pendingRequests = [];\n      while (nodesToVisit.length) {\n        var currentNode = nodesToVisit.pop();\n        if ((0, _primitives.isRef)(currentNode)) {\n          if (this.refSet.has(currentNode)) {\n            continue;\n          }\n          try {\n            this.refSet.put(currentNode);\n            currentNode = this.xref.fetch(currentNode);\n          } catch (ex) {\n            if (!(ex instanceof _util.MissingDataException)) {\n              throw ex;\n            }\n            nodesToRevisit.push(currentNode);\n            pendingRequests.push({\n              begin: ex.begin,\n              end: ex.end\n            });\n          }\n        }\n        if (currentNode && currentNode.getBaseStreams) {\n          var baseStreams = currentNode.getBaseStreams();\n          var foundMissingData = false;\n          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\n            var stream = baseStreams[i];\n            if (stream.getMissingChunks && stream.getMissingChunks().length) {\n              foundMissingData = true;\n              pendingRequests.push({\n                begin: stream.start,\n                end: stream.end\n              });\n            }\n          }\n          if (foundMissingData) {\n            nodesToRevisit.push(currentNode);\n          }\n        }\n        addChildren(currentNode, nodesToVisit);\n      }\n      if (pendingRequests.length) {\n        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\n          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\n            var node = nodesToRevisit[_i2];\n            if ((0, _primitives.isRef)(node)) {\n              _this3.refSet.remove(node);\n            }\n          }\n          _this3._walk(nodesToRevisit);\n        }, this.capability.reject);\n        return;\n      }\n      this.refSet = null;\n      this.capability.resolve();\n    }\n  };\n  return ObjectLoader;\n}();\nexports.Catalog = Catalog;\nexports.ObjectLoader = ObjectLoader;\nexports.XRef = XRef;\nexports.FileSpec = FileSpec;\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxImage = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _arithmetic_decoder = __w_pdfjs_require__(75);\n\nvar JpxError = function JpxErrorClosure() {\n  function JpxError(msg) {\n    this.message = 'JPX error: ' + msg;\n  }\n  JpxError.prototype = new Error();\n  JpxError.prototype.name = 'JpxError';\n  JpxError.constructor = JpxError;\n  return JpxError;\n}();\nvar JpxImage = function JpxImageClosure() {\n  var SubbandsGainLog2 = {\n    'LL': 0,\n    'LH': 1,\n    'HL': 1,\n    'HH': 2\n  };\n  function JpxImage() {\n    this.failOnCorruptedImage = false;\n  }\n  JpxImage.prototype = {\n    parse: function JpxImage_parse(data) {\n      var head = (0, _util.readUint16)(data, 0);\n      if (head === 0xFF4F) {\n        this.parseCodestream(data, 0, data.length);\n        return;\n      }\n      var position = 0,\n          length = data.length;\n      while (position < length) {\n        var headerSize = 8;\n        var lbox = (0, _util.readUint32)(data, position);\n        var tbox = (0, _util.readUint32)(data, position + 4);\n        position += headerSize;\n        if (lbox === 1) {\n          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\n          position += 8;\n          headerSize += 8;\n        }\n        if (lbox === 0) {\n          lbox = length - position + headerSize;\n        }\n        if (lbox < headerSize) {\n          throw new JpxError('Invalid box field size');\n        }\n        var dataLength = lbox - headerSize;\n        var jumpDataLength = true;\n        switch (tbox) {\n          case 0x6A703268:\n            jumpDataLength = false;\n            break;\n          case 0x636F6C72:\n            var method = data[position];\n            if (method === 1) {\n              var colorspace = (0, _util.readUint32)(data, position + 3);\n              switch (colorspace) {\n                case 16:\n                case 17:\n                case 18:\n                  break;\n                default:\n                  (0, _util.warn)('Unknown colorspace ' + colorspace);\n                  break;\n              }\n            } else if (method === 2) {\n              (0, _util.info)('ICC profile not supported');\n            }\n            break;\n          case 0x6A703263:\n            this.parseCodestream(data, position, position + dataLength);\n            break;\n          case 0x6A502020:\n            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\n              (0, _util.warn)('Invalid JP2 signature');\n            }\n            break;\n          case 0x6A501A1A:\n          case 0x66747970:\n          case 0x72726571:\n          case 0x72657320:\n          case 0x69686472:\n            break;\n          default:\n            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\n            break;\n        }\n        if (jumpDataLength) {\n          position += dataLength;\n        }\n      }\n    },\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n      var newByte = stream.getByte();\n      while (newByte >= 0) {\n        var oldByte = newByte;\n        newByte = stream.getByte();\n        var code = oldByte << 8 | newByte;\n        if (code === 0xFF51) {\n          stream.skip(4);\n          var Xsiz = stream.getInt32() >>> 0;\n          var Ysiz = stream.getInt32() >>> 0;\n          var XOsiz = stream.getInt32() >>> 0;\n          var YOsiz = stream.getInt32() >>> 0;\n          stream.skip(16);\n          var Csiz = stream.getUint16();\n          this.width = Xsiz - XOsiz;\n          this.height = Ysiz - YOsiz;\n          this.componentsCount = Csiz;\n          this.bitsPerComponent = 8;\n          return;\n        }\n      }\n      throw new JpxError('No size marker found in JPX stream');\n    },\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n      var context = {};\n      var doNotRecover = false;\n      try {\n        var position = start;\n        while (position + 1 < end) {\n          var code = (0, _util.readUint16)(data, position);\n          position += 2;\n          var length = 0,\n              j,\n              sqcd,\n              spqcds,\n              spqcdSize,\n              scalarExpounded,\n              tile;\n          switch (code) {\n            case 0xFF4F:\n              context.mainHeader = true;\n              break;\n            case 0xFFD9:\n              break;\n            case 0xFF51:\n              length = (0, _util.readUint16)(data, position);\n              var siz = {};\n              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\n              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\n              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\n              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\n              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\n              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\n              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\n              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\n              var componentsCount = (0, _util.readUint16)(data, position + 36);\n              siz.Csiz = componentsCount;\n              var components = [];\n              j = position + 38;\n              for (var i = 0; i < componentsCount; i++) {\n                var component = {\n                  precision: (data[j] & 0x7F) + 1,\n                  isSigned: !!(data[j] & 0x80),\n                  XRsiz: data[j + 1],\n                  YRsiz: data[j + 1]\n                };\n                calculateComponentDimensions(component, siz);\n                components.push(component);\n              }\n              context.SIZ = siz;\n              context.components = components;\n              calculateTileGrids(context, components);\n              context.QCC = [];\n              context.COC = [];\n              break;\n            case 0xFF5C:\n              length = (0, _util.readUint16)(data, position);\n              var qcd = {};\n              j = position + 2;\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcd.noQuantization = spqcdSize === 8;\n              qcd.scalarExpounded = scalarExpounded;\n              qcd.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                var spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcd.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCD = qcd;\n              } else {\n                context.currentTile.QCD = qcd;\n                context.currentTile.QCC = [];\n              }\n              break;\n            case 0xFF5D:\n              length = (0, _util.readUint16)(data, position);\n              var qcc = {};\n              j = position + 2;\n              var cqcc;\n              if (context.SIZ.Csiz < 257) {\n                cqcc = data[j++];\n              } else {\n                cqcc = (0, _util.readUint16)(data, j);\n                j += 2;\n              }\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcc.noQuantization = spqcdSize === 8;\n              qcc.scalarExpounded = scalarExpounded;\n              qcc.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcc.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCC[cqcc] = qcc;\n              } else {\n                context.currentTile.QCC[cqcc] = qcc;\n              }\n              break;\n            case 0xFF52:\n              length = (0, _util.readUint16)(data, position);\n              var cod = {};\n              j = position + 2;\n              var scod = data[j++];\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n              cod.sopMarkerUsed = !!(scod & 2);\n              cod.ephMarkerUsed = !!(scod & 4);\n              cod.progressionOrder = data[j++];\n              cod.layersCount = (0, _util.readUint16)(data, j);\n              j += 2;\n              cod.multipleComponentTransform = data[j++];\n              cod.decompositionLevelsCount = data[j++];\n              cod.xcb = (data[j++] & 0xF) + 2;\n              cod.ycb = (data[j++] & 0xF) + 2;\n              var blockStyle = data[j++];\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n              cod.resetContextProbabilities = !!(blockStyle & 2);\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n              cod.verticalyStripe = !!(blockStyle & 8);\n              cod.predictableTermination = !!(blockStyle & 16);\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n              cod.reversibleTransformation = data[j++];\n              if (cod.entropyCoderWithCustomPrecincts) {\n                var precinctsSizes = [];\n                while (j < length + position) {\n                  var precinctsSize = data[j++];\n                  precinctsSizes.push({\n                    PPx: precinctsSize & 0xF,\n                    PPy: precinctsSize >> 4\n                  });\n                }\n                cod.precinctsSizes = precinctsSizes;\n              }\n              var unsupported = [];\n              if (cod.selectiveArithmeticCodingBypass) {\n                unsupported.push('selectiveArithmeticCodingBypass');\n              }\n              if (cod.resetContextProbabilities) {\n                unsupported.push('resetContextProbabilities');\n              }\n              if (cod.terminationOnEachCodingPass) {\n                unsupported.push('terminationOnEachCodingPass');\n              }\n              if (cod.verticalyStripe) {\n                unsupported.push('verticalyStripe');\n              }\n              if (cod.predictableTermination) {\n                unsupported.push('predictableTermination');\n              }\n              if (unsupported.length > 0) {\n                doNotRecover = true;\n                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n              }\n              if (context.mainHeader) {\n                context.COD = cod;\n              } else {\n                context.currentTile.COD = cod;\n                context.currentTile.COC = [];\n              }\n              break;\n            case 0xFF90:\n              length = (0, _util.readUint16)(data, position);\n              tile = {};\n              tile.index = (0, _util.readUint16)(data, position + 2);\n              tile.length = (0, _util.readUint32)(data, position + 4);\n              tile.dataEnd = tile.length + position - 2;\n              tile.partIndex = data[position + 8];\n              tile.partsCount = data[position + 9];\n              context.mainHeader = false;\n              if (tile.partIndex === 0) {\n                tile.COD = context.COD;\n                tile.COC = context.COC.slice(0);\n                tile.QCD = context.QCD;\n                tile.QCC = context.QCC.slice(0);\n              }\n              context.currentTile = tile;\n              break;\n            case 0xFF93:\n              tile = context.currentTile;\n              if (tile.partIndex === 0) {\n                initializeTile(context, tile.index);\n                buildPackets(context);\n              }\n              length = tile.dataEnd - position;\n              parseTilePackets(context, data, position, length);\n              break;\n            case 0xFF55:\n            case 0xFF57:\n            case 0xFF58:\n            case 0xFF64:\n              length = (0, _util.readUint16)(data, position);\n              break;\n            case 0xFF53:\n              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n            default:\n              throw new Error('Unknown codestream code: ' + code.toString(16));\n          }\n          position += length;\n        }\n      } catch (e) {\n        if (doNotRecover || this.failOnCorruptedImage) {\n          throw new JpxError(e.message);\n        } else {\n          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\n        }\n      }\n      this.tiles = transformComponents(context);\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n      this.componentsCount = context.SIZ.Csiz;\n    }\n  };\n  function calculateComponentDimensions(component, siz) {\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n    component.width = component.x1 - component.x0;\n    component.height = component.y1 - component.y0;\n  }\n  function calculateTileGrids(context, components) {\n    var siz = context.SIZ;\n    var tile,\n        tiles = [];\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n    for (var q = 0; q < numYtiles; q++) {\n      for (var p = 0; p < numXtiles; p++) {\n        tile = {};\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n        tile.width = tile.tx1 - tile.tx0;\n        tile.height = tile.ty1 - tile.ty0;\n        tile.components = [];\n        tiles.push(tile);\n      }\n    }\n    context.tiles = tiles;\n    var componentsCount = siz.Csiz;\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\n      var component = components[i];\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\n        var tileComponent = {};\n        tile = tiles[j];\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n        tile.components[i] = tileComponent;\n      }\n    }\n  }\n  function getBlocksDimensions(context, component, r) {\n    var codOrCoc = component.codingStyleParameters;\n    var result = {};\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n      result.PPx = 15;\n      result.PPy = 15;\n    } else {\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n    }\n    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n    return result;\n  }\n  function buildPrecincts(context, resolution, dimensions) {\n    var precinctWidth = 1 << dimensions.PPx;\n    var precinctHeight = 1 << dimensions.PPy;\n    var isZeroRes = resolution.resLevel === 0;\n    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n    var numprecincts = numprecinctswide * numprecinctshigh;\n    resolution.precinctParameters = {\n      precinctWidth: precinctWidth,\n      precinctHeight: precinctHeight,\n      numprecinctswide: numprecinctswide,\n      numprecinctshigh: numprecinctshigh,\n      numprecincts: numprecincts,\n      precinctWidthInSubband: precinctWidthInSubband,\n      precinctHeightInSubband: precinctHeightInSubband\n    };\n  }\n  function buildCodeblocks(context, subband, dimensions) {\n    var xcb_ = dimensions.xcb_;\n    var ycb_ = dimensions.ycb_;\n    var codeblockWidth = 1 << xcb_;\n    var codeblockHeight = 1 << ycb_;\n    var cbx0 = subband.tbx0 >> xcb_;\n    var cby0 = subband.tby0 >> ycb_;\n    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n    var precinctParameters = subband.resolution.precinctParameters;\n    var codeblocks = [];\n    var precincts = [];\n    var i, j, codeblock, precinctNumber;\n    for (j = cby0; j < cby1; j++) {\n      for (i = cbx0; i < cbx1; i++) {\n        codeblock = {\n          cbx: i,\n          cby: j,\n          tbx0: codeblockWidth * i,\n          tby0: codeblockHeight * j,\n          tbx1: codeblockWidth * (i + 1),\n          tby1: codeblockHeight * (j + 1)\n        };\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n        codeblock.precinctNumber = precinctNumber;\n        codeblock.subbandType = subband.type;\n        codeblock.Lblock = 3;\n        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n          continue;\n        }\n        codeblocks.push(codeblock);\n        var precinct = precincts[precinctNumber];\n        if (precinct !== undefined) {\n          if (i < precinct.cbxMin) {\n            precinct.cbxMin = i;\n          } else if (i > precinct.cbxMax) {\n            precinct.cbxMax = i;\n          }\n          if (j < precinct.cbyMin) {\n            precinct.cbxMin = j;\n          } else if (j > precinct.cbyMax) {\n            precinct.cbyMax = j;\n          }\n        } else {\n          precincts[precinctNumber] = precinct = {\n            cbxMin: i,\n            cbyMin: j,\n            cbxMax: i,\n            cbyMax: j\n          };\n        }\n        codeblock.precinct = precinct;\n      }\n    }\n    subband.codeblockParameters = {\n      codeblockWidth: xcb_,\n      codeblockHeight: ycb_,\n      numcodeblockwide: cbx1 - cbx0 + 1,\n      numcodeblockhigh: cby1 - cby0 + 1\n    };\n    subband.codeblocks = codeblocks;\n    subband.precincts = precincts;\n  }\n  function createPacket(resolution, precinctNumber, layerNumber) {\n    var precinctCodeblocks = [];\n    var subbands = resolution.subbands;\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\n      var subband = subbands[i];\n      var codeblocks = subband.codeblocks;\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n        var codeblock = codeblocks[j];\n        if (codeblock.precinctNumber !== precinctNumber) {\n          continue;\n        }\n        precinctCodeblocks.push(codeblock);\n      }\n    }\n    return {\n      layerNumber: layerNumber,\n      codeblocks: precinctCodeblocks\n    };\n  }\n  function LayerResolutionComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var l = 0,\n        r = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; l < layersCount; l++) {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        r = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionLayerComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var r = 0,\n        l = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; l < layersCount; l++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        l = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionPositionComponentLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var l, r, c, p;\n    var maxDecompositionLevelsCount = 0;\n    for (c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n    }\n    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n      var maxNumPrecincts = 0;\n      for (c = 0; c < componentsCount; ++c) {\n        var resolutions = tile.components[c].resolutions;\n        if (r < resolutions.length) {\n          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n        }\n      }\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n    }\n    l = 0;\n    r = 0;\n    c = 0;\n    p = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            if (p >= numprecincts) {\n              continue;\n            }\n            for (; l < layersCount;) {\n              var packet = createPacket(resolution, p, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          c = 0;\n        }\n        p = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function PositionComponentResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var precinctsIterationSizes = precinctsSizes;\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          c = 0;\n        }\n        px = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ComponentPositionResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; c < componentsCount; ++c) {\n        var component = tile.components[c];\n        var precinctsIterationSizes = precinctsSizes.components[c];\n        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          px = 0;\n        }\n        py = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n    var posX = pxIndex * precinctIterationSizes.minWidth;\n    var posY = pyIndex * precinctIterationSizes.minHeight;\n    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n      return null;\n    }\n    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n    return posX / sizeInImageScale.height + startPrecinctRowIndex;\n  }\n  function getPrecinctSizesInImageScale(tile) {\n    var componentsCount = tile.components.length;\n    var minWidth = Number.MAX_VALUE;\n    var minHeight = Number.MAX_VALUE;\n    var maxNumWide = 0;\n    var maxNumHigh = 0;\n    var sizePerComponent = new Array(componentsCount);\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n      var minWidthCurrentComponent = Number.MAX_VALUE;\n      var minHeightCurrentComponent = Number.MAX_VALUE;\n      var maxNumWideCurrentComponent = 0;\n      var maxNumHighCurrentComponent = 0;\n      var scale = 1;\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\n        var resolution = component.resolutions[r];\n        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n        sizePerResolution[r] = {\n          width: widthCurrentResolution,\n          height: heightCurrentResolution\n        };\n        scale <<= 1;\n      }\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n      sizePerComponent[c] = {\n        resolutions: sizePerResolution,\n        minWidth: minWidthCurrentComponent,\n        minHeight: minHeightCurrentComponent,\n        maxNumWide: maxNumWideCurrentComponent,\n        maxNumHigh: maxNumHighCurrentComponent\n      };\n    }\n    return {\n      components: sizePerComponent,\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxNumWide: maxNumWide,\n      maxNumHigh: maxNumHigh\n    };\n  }\n  function buildPackets(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var componentsCount = siz.Csiz;\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var resolutions = [];\n      var subbands = [];\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\n        var blocksDimensions = getBlocksDimensions(context, component, r);\n        var resolution = {};\n        var scale = 1 << decompositionLevelsCount - r;\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\n        resolution.resLevel = r;\n        buildPrecincts(context, resolution, blocksDimensions);\n        resolutions.push(resolution);\n        var subband;\n        if (r === 0) {\n          subband = {};\n          subband.type = 'LL';\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolution.subbands = [subband];\n        } else {\n          var bscale = 1 << decompositionLevelsCount - r + 1;\n          var resolutionSubbands = [];\n          subband = {};\n          subband.type = 'HL';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'LH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'HH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          resolution.subbands = resolutionSubbands;\n        }\n      }\n      component.resolutions = resolutions;\n      component.subbands = subbands;\n    }\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n    switch (progressionOrder) {\n      case 0:\n        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n        break;\n      case 1:\n        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n        break;\n      case 2:\n        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n        break;\n      case 3:\n        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n        break;\n      case 4:\n        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n        break;\n      default:\n        throw new JpxError('Unsupported progression order ' + progressionOrder);\n    }\n  }\n  function parseTilePackets(context, data, offset, dataLength) {\n    var position = 0;\n    var buffer,\n        bufferSize = 0,\n        skipNextBit = false;\n    function readBits(count) {\n      while (bufferSize < count) {\n        var b = data[offset + position];\n        position++;\n        if (skipNextBit) {\n          buffer = buffer << 7 | b;\n          bufferSize += 7;\n          skipNextBit = false;\n        } else {\n          buffer = buffer << 8 | b;\n          bufferSize += 8;\n        }\n        if (b === 0xFF) {\n          skipNextBit = true;\n        }\n      }\n      bufferSize -= count;\n      return buffer >>> bufferSize & (1 << count) - 1;\n    }\n    function skipMarkerIfEqual(value) {\n      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n        skipBytes(1);\n        return true;\n      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n        skipBytes(2);\n        return true;\n      }\n      return false;\n    }\n    function skipBytes(count) {\n      position += count;\n    }\n    function alignToByte() {\n      bufferSize = 0;\n      if (skipNextBit) {\n        position++;\n        skipNextBit = false;\n      }\n    }\n    function readCodingpasses() {\n      if (readBits(1) === 0) {\n        return 1;\n      }\n      if (readBits(1) === 0) {\n        return 2;\n      }\n      var value = readBits(2);\n      if (value < 3) {\n        return value + 3;\n      }\n      value = readBits(5);\n      if (value < 31) {\n        return value + 6;\n      }\n      value = readBits(7);\n      return value + 37;\n    }\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\n    var packetsIterator = tile.packetsIterator;\n    while (position < dataLength) {\n      alignToByte();\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n        skipBytes(4);\n      }\n      var packet = packetsIterator.nextPacket();\n      if (!readBits(1)) {\n        continue;\n      }\n      var layerNumber = packet.layerNumber;\n      var queue = [],\n          codeblock;\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n        codeblock = packet.codeblocks[i];\n        var precinct = codeblock.precinct;\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\n        var codeblockIncluded = false;\n        var firstTimeInclusion = false;\n        var valueReady;\n        if (codeblock['included'] !== undefined) {\n          codeblockIncluded = !!readBits(1);\n        } else {\n          precinct = codeblock.precinct;\n          var inclusionTree, zeroBitPlanesTree;\n          if (precinct['inclusionTree'] !== undefined) {\n            inclusionTree = precinct.inclusionTree;\n          } else {\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\n            var height = precinct.cbyMax - precinct.cbyMin + 1;\n            inclusionTree = new InclusionTree(width, height, layerNumber);\n            zeroBitPlanesTree = new TagTree(width, height);\n            precinct.inclusionTree = inclusionTree;\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          }\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !inclusionTree.nextLevel();\n                if (valueReady) {\n                  codeblock.included = true;\n                  codeblockIncluded = firstTimeInclusion = true;\n                  break;\n                }\n              } else {\n                inclusionTree.incrementValue(layerNumber);\n                break;\n              }\n            }\n          }\n        }\n        if (!codeblockIncluded) {\n          continue;\n        }\n        if (firstTimeInclusion) {\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !zeroBitPlanesTree.nextLevel();\n              if (valueReady) {\n                break;\n              }\n            } else {\n              zeroBitPlanesTree.incrementValue();\n            }\n          }\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n        }\n        var codingpasses = readCodingpasses();\n        while (readBits(1)) {\n          codeblock.Lblock++;\n        }\n        var codingpassesLog2 = (0, _util.log2)(codingpasses);\n        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n        var codedDataLength = readBits(bits);\n        queue.push({\n          codeblock: codeblock,\n          codingpasses: codingpasses,\n          dataLength: codedDataLength\n        });\n      }\n      alignToByte();\n      if (ephMarkerUsed) {\n        skipMarkerIfEqual(0x92);\n      }\n      while (queue.length > 0) {\n        var packetItem = queue.shift();\n        codeblock = packetItem.codeblock;\n        if (codeblock['data'] === undefined) {\n          codeblock.data = [];\n        }\n        codeblock.data.push({\n          data: data,\n          start: offset + position,\n          end: offset + position + packetItem.dataLength,\n          codingpasses: packetItem.codingpasses\n        });\n        position += packetItem.dataLength;\n      }\n    }\n    return position;\n  }\n  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n    var x0 = subband.tbx0;\n    var y0 = subband.tby0;\n    var width = subband.tbx1 - subband.tbx0;\n    var codeblocks = subband.codeblocks;\n    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n      var codeblock = codeblocks[i];\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n      if (blockWidth === 0 || blockHeight === 0) {\n        continue;\n      }\n      if (codeblock['data'] === undefined) {\n        continue;\n      }\n      var bitModel, currentCodingpassType;\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n      currentCodingpassType = 2;\n      var data = codeblock.data,\n          totalLength = 0,\n          codingpasses = 0;\n      var j, jj, dataItem;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        totalLength += dataItem.end - dataItem.start;\n        codingpasses += dataItem.codingpasses;\n      }\n      var encodedData = new Uint8Array(totalLength);\n      var position = 0;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n        encodedData.set(chunk, position);\n        position += chunk.length;\n      }\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\n      bitModel.setDecoder(decoder);\n      for (j = 0; j < codingpasses; j++) {\n        switch (currentCodingpassType) {\n          case 0:\n            bitModel.runSignificancePropagationPass();\n            break;\n          case 1:\n            bitModel.runMagnitudeRefinementPass();\n            break;\n          case 2:\n            bitModel.runCleanupPass();\n            if (segmentationSymbolUsed) {\n              bitModel.checkSegmentationSymbol();\n            }\n            break;\n        }\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\n      }\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n      var sign = bitModel.coefficentsSign;\n      var magnitude = bitModel.coefficentsMagnitude;\n      var bitsDecoded = bitModel.bitsDecoded;\n      var magnitudeCorrection = reversible ? 0 : 0.5;\n      var k, n, nb;\n      position = 0;\n      var interleave = subband.type !== 'LL';\n      for (j = 0; j < blockHeight; j++) {\n        var row = offset / width | 0;\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n        for (k = 0; k < blockWidth; k++) {\n          n = magnitude[position];\n          if (n !== 0) {\n            n = (n + magnitudeCorrection) * delta;\n            if (sign[position] !== 0) {\n              n = -n;\n            }\n            nb = bitsDecoded[position];\n            var pos = interleave ? levelOffset + (offset << 1) : offset;\n            if (reversible && nb >= mb) {\n              coefficients[pos] = n;\n            } else {\n              coefficients[pos] = n * (1 << mb - nb);\n            }\n          }\n          offset++;\n          position++;\n        }\n        offset += width - blockWidth;\n      }\n    }\n  }\n  function transformTile(context, tile, c) {\n    var component = tile.components[c];\n    var codingStyleParameters = component.codingStyleParameters;\n    var quantizationParameters = component.quantizationParameters;\n    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n    var spqcds = quantizationParameters.SPqcds;\n    var scalarExpounded = quantizationParameters.scalarExpounded;\n    var guardBits = quantizationParameters.guardBits;\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n    var precision = context.components[c].precision;\n    var reversible = codingStyleParameters.reversibleTransformation;\n    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n    var subbandCoefficients = [];\n    var b = 0;\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\n      var resolution = component.resolutions[i];\n      var width = resolution.trx1 - resolution.trx0;\n      var height = resolution.try1 - resolution.try0;\n      var coefficients = new Float32Array(width * height);\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n        var mu, epsilon;\n        if (!scalarExpounded) {\n          mu = spqcds[0].mu;\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n        } else {\n          mu = spqcds[b].mu;\n          epsilon = spqcds[b].epsilon;\n          b++;\n        }\n        var subband = resolution.subbands[j];\n        var gainLog2 = SubbandsGainLog2[subband.type];\n        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n        var mb = guardBits + epsilon - 1;\n        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n      }\n      subbandCoefficients.push({\n        width: width,\n        height: height,\n        items: coefficients\n      });\n    }\n    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n    return {\n      left: component.tcx0,\n      top: component.tcy0,\n      width: result.width,\n      height: result.height,\n      items: result.items\n    };\n  }\n  function transformComponents(context) {\n    var siz = context.SIZ;\n    var components = context.components;\n    var componentsCount = siz.Csiz;\n    var resultImages = [];\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n      var tile = context.tiles[i];\n      var transformedTiles = [];\n      var c;\n      for (c = 0; c < componentsCount; c++) {\n        transformedTiles[c] = transformTile(context, tile, c);\n      }\n      var tile0 = transformedTiles[0];\n      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n      var result = {\n        left: tile0.left,\n        top: tile0.top,\n        width: tile0.width,\n        height: tile0.height,\n        items: out\n      };\n      var shift, offset;\n      var pos = 0,\n          j,\n          jj,\n          y0,\n          y1,\n          y2;\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n        var fourComponents = componentsCount === 4;\n        var y0items = transformedTiles[0].items;\n        var y1items = transformedTiles[1].items;\n        var y2items = transformedTiles[2].items;\n        var y3items = fourComponents ? transformedTiles[3].items : null;\n        shift = components[0].precision - 8;\n        offset = (128 << shift) + 0.5;\n        var component0 = tile.components[0];\n        var alpha01 = componentsCount - 3;\n        jj = y0items.length;\n        if (!component0.codingStyleParameters.reversibleTransformation) {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            out[pos++] = y0 + 1.402 * y2 >> shift;\n            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\n            out[pos++] = y0 + 1.772 * y1 >> shift;\n          }\n        } else {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            var g = y0 - (y2 + y1 >> 2);\n            out[pos++] = g + y2 >> shift;\n            out[pos++] = g >> shift;\n            out[pos++] = g + y1 >> shift;\n          }\n        }\n        if (fourComponents) {\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n            out[pos] = y3items[j] + offset >> shift;\n          }\n        }\n      } else {\n        for (c = 0; c < componentsCount; c++) {\n          var items = transformedTiles[c].items;\n          shift = components[c].precision - 8;\n          offset = (128 << shift) + 0.5;\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n            out[pos] = items[j] + offset >> shift;\n            pos += componentsCount;\n          }\n        }\n      }\n      resultImages.push(result);\n    }\n    return resultImages;\n  }\n  function initializeTile(context, tileIndex) {\n    var siz = context.SIZ;\n    var componentsCount = siz.Csiz;\n    var tile = context.tiles[tileIndex];\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n      component.quantizationParameters = qcdOrQcc;\n      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n      component.codingStyleParameters = codOrCoc;\n    }\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\n  }\n  var TagTree = function TagTreeClosure() {\n    function TagTree(width, height) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var level = {\n          width: width,\n          height: height,\n          items: []\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    TagTree.prototype = {\n      reset: function TagTree_reset(i, j) {\n        var currentLevel = 0,\n            value = 0,\n            level;\n        while (currentLevel < this.levels.length) {\n          level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          if (level.items[index] !== undefined) {\n            value = level.items[index];\n            break;\n          }\n          level.index = index;\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        currentLevel--;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        this.currentLevel = currentLevel;\n        delete this.value;\n      },\n      incrementValue: function TagTree_incrementValue() {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index]++;\n      },\n      nextLevel: function TagTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        currentLevel--;\n        if (currentLevel < 0) {\n          this.value = value;\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return TagTree;\n  }();\n  var InclusionTree = function InclusionTreeClosure() {\n    function InclusionTree(width, height, defaultValue) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var items = new Uint8Array(width * height);\n        for (var j = 0, jj = items.length; j < jj; j++) {\n          items[j] = defaultValue;\n        }\n        var level = {\n          width: width,\n          height: height,\n          items: items\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    InclusionTree.prototype = {\n      reset: function InclusionTree_reset(i, j, stopValue) {\n        var currentLevel = 0;\n        while (currentLevel < this.levels.length) {\n          var level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          level.index = index;\n          var value = level.items[index];\n          if (value === 0xFF) {\n            break;\n          }\n          if (value > stopValue) {\n            this.currentLevel = currentLevel;\n            this.propagateValues();\n            return false;\n          }\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        this.currentLevel = currentLevel - 1;\n        return true;\n      },\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index] = stopValue + 1;\n        this.propagateValues();\n      },\n      propagateValues: function InclusionTree_propagateValues() {\n        var levelIndex = this.currentLevel;\n        var level = this.levels[levelIndex];\n        var currentValue = level.items[level.index];\n        while (--levelIndex >= 0) {\n          level = this.levels[levelIndex];\n          level.items[level.index] = currentValue;\n        }\n      },\n      nextLevel: function InclusionTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        level.items[level.index] = 0xFF;\n        currentLevel--;\n        if (currentLevel < 0) {\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return InclusionTree;\n  }();\n  var BitModel = function BitModelClosure() {\n    var UNIFORM_CONTEXT = 17;\n    var RUNLENGTH_CONTEXT = 18;\n    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\n    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\n    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n      var coefficientCount = width * height;\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n      this.processingFlags = new Uint8Array(coefficientCount);\n      var bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (var i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n      this.reset();\n    }\n    BitModel.prototype = {\n      setDecoder: function BitModel_setDecoder(decoder) {\n        this.decoder = decoder;\n      },\n      reset: function BitModel_reset() {\n        this.contexts = new Int8Array(19);\n        this.contexts[0] = 4 << 1 | 0;\n        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n      },\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n        var neighborsSignificance = this.neighborsSignificance;\n        var width = this.width,\n            height = this.height;\n        var left = column > 0;\n        var right = column + 1 < width;\n        var i;\n        if (row > 0) {\n          i = index - width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (row + 1 < height) {\n          i = index + width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (left) {\n          neighborsSignificance[index - 1] += 0x01;\n        }\n        if (right) {\n          neighborsSignificance[index + 1] += 0x01;\n        }\n        neighborsSignificance[index] |= 0x80;\n      },\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var neighborsSignificance = this.neighborsSignificance;\n        var processingFlags = this.processingFlags;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processedInverseMask = ~1;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        for (var i0 = 0; i0 < height; i0 += 4) {\n          for (var j = 0; j < width; j++) {\n            var index = i0 * width + j;\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\n              var i = i0 + i1;\n              if (i >= height) {\n                break;\n              }\n              processingFlags[index] &= processedInverseMask;\n              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision) {\n                var sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contribution, sign0, sign1, significance1;\n        var contextLabel, decoded;\n        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n          sign1 = coefficentsSign[index + 1];\n          if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign1 - sign0;\n          } else {\n            contribution = 1 - sign1 - sign1;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign0 - sign0;\n        } else {\n          contribution = 0;\n        }\n        var horizontalContribution = 3 * contribution;\n        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n          sign1 = coefficentsSign[index + width];\n          if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\n          } else {\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\n        } else {\n          contribution = horizontalContribution;\n        }\n        if (contribution >= 0) {\n          contextLabel = 9 + contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\n        } else {\n          contextLabel = 9 - contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n        }\n        return decoded;\n      },\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var neighborsSignificance = this.neighborsSignificance;\n        var contexts = this.contexts;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var length = width * height;\n        var width4 = width * 4;\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n          indexNext = Math.min(length, index0 + width4);\n          for (var j = 0; j < width; j++) {\n            for (var index = index0 + j; index < indexNext; index += width) {\n              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = 16;\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                processingFlags[index] ^= firstMagnitudeBitMask;\n                var significance = neighborsSignificance[index] & 127;\n                contextLabel = significance === 0 ? 15 : 14;\n              }\n              var bit = decoder.readBit(contexts, contextLabel);\n              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      runCleanupPass: function BitModel_runCleanupPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var neighborsSignificance = this.neighborsSignificance;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var oneRowDown = width;\n        var twoRowsDown = width * 2;\n        var threeRowsDown = width * 3;\n        var iNext;\n        for (var i0 = 0; i0 < height; i0 = iNext) {\n          iNext = Math.min(i0 + 4, height);\n          var indexBase = i0 * width;\n          var checkAllEmpty = i0 + 3 < height;\n          for (var j = 0; j < width; j++) {\n            var index0 = indexBase + j;\n            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n            var i1 = 0,\n                index = index0;\n            var i = i0,\n                sign;\n            if (allEmpty) {\n              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n              if (!hasSignificantCoefficent) {\n                bitsDecoded[index0]++;\n                bitsDecoded[index0 + oneRowDown]++;\n                bitsDecoded[index0 + twoRowsDown]++;\n                bitsDecoded[index0 + threeRowsDown]++;\n                continue;\n              }\n              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n              if (i1 !== 0) {\n                i = i0 + i1;\n                index += i1 * width;\n              }\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n              index = index0;\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\n                bitsDecoded[index]++;\n              }\n              i1++;\n            }\n            for (i = i0 + i1; i < iNext; i++, index += width) {\n              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision === 1) {\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n            }\n          }\n        }\n      },\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n        var decoder = this.decoder;\n        var contexts = this.contexts;\n        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n        if (symbol !== 0xA) {\n          throw new JpxError('Invalid segmentation symbol');\n        }\n      }\n    };\n    return BitModel;\n  }();\n  var Transform = function TransformClosure() {\n    function Transform() {}\n    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n      var ll = subbands[0];\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\n        ll = this.iterate(ll, subbands[i], u0, v0);\n      }\n      return ll;\n    };\n    Transform.prototype.extend = function extend(buffer, offset, size) {\n      var i1 = offset - 1,\n          j1 = offset + 1;\n      var i2 = offset + size - 2,\n          j2 = offset + size;\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1] = buffer[j1];\n      buffer[j2] = buffer[i2];\n    };\n    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n      var llWidth = ll.width,\n          llHeight = ll.height,\n          llItems = ll.items;\n      var width = hl_lh_hh.width;\n      var height = hl_lh_hh.height;\n      var items = hl_lh_hh.items;\n      var i, j, k, l, u, v;\n      for (k = 0, i = 0; i < llHeight; i++) {\n        l = i * 2 * width;\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\n          items[l] = llItems[k];\n        }\n      }\n      llItems = ll.items = null;\n      var bufferPadding = 4;\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n      if (width === 1) {\n        if ((u0 & 1) !== 0) {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            items[k] *= 0.5;\n          }\n        }\n      } else {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n          this.extend(rowBuffer, bufferPadding, width);\n          this.filter(rowBuffer, bufferPadding, width);\n          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n        }\n      }\n      var numBuffers = 16;\n      var colBuffers = [];\n      for (i = 0; i < numBuffers; i++) {\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n      }\n      var b,\n          currentBuffer = 0;\n      ll = bufferPadding + height;\n      if (height === 1) {\n        if ((v0 & 1) !== 0) {\n          for (u = 0; u < width; u++) {\n            items[u] *= 0.5;\n          }\n        }\n      } else {\n        for (u = 0; u < width; u++) {\n          if (currentBuffer === 0) {\n            numBuffers = Math.min(width - u, numBuffers);\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                colBuffers[b][l] = items[k + b];\n              }\n            }\n            currentBuffer = numBuffers;\n          }\n          currentBuffer--;\n          var buffer = colBuffers[currentBuffer];\n          this.extend(buffer, bufferPadding, height);\n          this.filter(buffer, bufferPadding, height);\n          if (currentBuffer === 0) {\n            k = u - numBuffers + 1;\n            for (l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                items[k + b] = colBuffers[b][l];\n              }\n            }\n          }\n        }\n      }\n      return {\n        width: width,\n        height: height,\n        items: items\n      };\n    };\n    return Transform;\n  }();\n  var IrreversibleTransform = function IrreversibleTransformClosure() {\n    function IrreversibleTransform() {\n      Transform.call(this);\n    }\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n, current, next;\n      var alpha = -1.586134342059924;\n      var beta = -0.052980118572961;\n      var gamma = 0.882911075530934;\n      var delta = 0.443506852043971;\n      var K = 1.230174104914001;\n      var K_ = 1 / K;\n      j = offset - 3;\n      for (n = len + 4; n--; j += 2) {\n        x[j] *= K_;\n      }\n      j = offset - 2;\n      current = delta * x[j - 1];\n      for (n = len + 3; n--; j += 2) {\n        next = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n        if (n--) {\n          j += 2;\n          current = delta * x[j + 1];\n          x[j] = K * x[j] - current - next;\n        } else {\n          break;\n        }\n      }\n      j = offset - 1;\n      current = gamma * x[j - 1];\n      for (n = len + 2; n--; j += 2) {\n        next = gamma * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = gamma * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      j = offset;\n      current = beta * x[j - 1];\n      for (n = len + 1; n--; j += 2) {\n        next = beta * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = beta * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      if (len !== 0) {\n        j = offset + 1;\n        current = alpha * x[j - 1];\n        for (n = len; n--; j += 2) {\n          next = alpha * x[j + 1];\n          x[j] -= current + next;\n          if (n--) {\n            j += 2;\n            current = alpha * x[j + 1];\n            x[j] -= current + next;\n          } else {\n            break;\n          }\n        }\n      }\n    };\n    return IrreversibleTransform;\n  }();\n  var ReversibleTransform = function ReversibleTransformClosure() {\n    function ReversibleTransform() {\n      Transform.call(this);\n    }\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\n    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n;\n      for (j = offset, n = len + 1; n--; j += 2) {\n        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n      }\n      for (j = offset + 1, n = len; n--; j += 2) {\n        x[j] += x[j - 1] + x[j + 1] >> 1;\n      }\n    };\n    return ReversibleTransform;\n  }();\n  return JpxImage;\n}();\nexports.JpxImage = JpxImage;\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n  var QeTable = [{\n    qe: 0x5601,\n    nmps: 1,\n    nlps: 1,\n    switchFlag: 1\n  }, {\n    qe: 0x3401,\n    nmps: 2,\n    nlps: 6,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 3,\n    nlps: 9,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 4,\n    nlps: 12,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 5,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 38,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 7,\n    nlps: 6,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 8,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 9,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 10,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 11,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 12,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 13,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 29,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 15,\n    nlps: 14,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 16,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x5101,\n    nmps: 17,\n    nlps: 15,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 18,\n    nlps: 16,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 19,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x3401,\n    nmps: 20,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 21,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2801,\n    nmps: 22,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 23,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x2201,\n    nmps: 24,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 25,\n    nlps: 22,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 26,\n    nlps: 23,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 27,\n    nlps: 24,\n    switchFlag: 0\n  }, {\n    qe: 0x1401,\n    nmps: 28,\n    nlps: 25,\n    switchFlag: 0\n  }, {\n    qe: 0x1201,\n    nmps: 29,\n    nlps: 26,\n    switchFlag: 0\n  }, {\n    qe: 0x1101,\n    nmps: 30,\n    nlps: 27,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 31,\n    nlps: 28,\n    switchFlag: 0\n  }, {\n    qe: 0x09C1,\n    nmps: 32,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x08A1,\n    nmps: 33,\n    nlps: 30,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 34,\n    nlps: 31,\n    switchFlag: 0\n  }, {\n    qe: 0x0441,\n    nmps: 35,\n    nlps: 32,\n    switchFlag: 0\n  }, {\n    qe: 0x02A1,\n    nmps: 36,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 37,\n    nlps: 34,\n    switchFlag: 0\n  }, {\n    qe: 0x0141,\n    nmps: 38,\n    nlps: 35,\n    switchFlag: 0\n  }, {\n    qe: 0x0111,\n    nmps: 39,\n    nlps: 36,\n    switchFlag: 0\n  }, {\n    qe: 0x0085,\n    nmps: 40,\n    nlps: 37,\n    switchFlag: 0\n  }, {\n    qe: 0x0049,\n    nmps: 41,\n    nlps: 38,\n    switchFlag: 0\n  }, {\n    qe: 0x0025,\n    nmps: 42,\n    nlps: 39,\n    switchFlag: 0\n  }, {\n    qe: 0x0015,\n    nmps: 43,\n    nlps: 40,\n    switchFlag: 0\n  }, {\n    qe: 0x0009,\n    nmps: 44,\n    nlps: 41,\n    switchFlag: 0\n  }, {\n    qe: 0x0005,\n    nmps: 45,\n    nlps: 42,\n    switchFlag: 0\n  }, {\n    qe: 0x0001,\n    nmps: 45,\n    nlps: 43,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 46,\n    nlps: 46,\n    switchFlag: 0\n  }];\n  function ArithmeticDecoder(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n    this.chigh = data[start];\n    this.clow = 0;\n    this.byteIn();\n    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n    this.clow = this.clow << 7 & 0xFFFF;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n  ArithmeticDecoder.prototype = {\n    byteIn: function ArithmeticDecoder_byteIn() {\n      var data = this.data;\n      var bp = this.bp;\n      if (data[bp] === 0xFF) {\n        var b1 = data[bp + 1];\n        if (b1 > 0x8F) {\n          this.clow += 0xFF00;\n          this.ct = 8;\n        } else {\n          bp++;\n          this.clow += data[bp] << 9;\n          this.ct = 7;\n          this.bp = bp;\n        }\n      } else {\n        bp++;\n        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n        this.ct = 8;\n        this.bp = bp;\n      }\n      if (this.clow > 0xFFFF) {\n        this.chigh += this.clow >> 16;\n        this.clow &= 0xFFFF;\n      }\n    },\n    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n      var cx_index = contexts[pos] >> 1,\n          cx_mps = contexts[pos] & 1;\n      var qeTableIcx = QeTable[cx_index];\n      var qeIcx = qeTableIcx.qe;\n      var d;\n      var a = this.a - qeIcx;\n      if (this.chigh < qeIcx) {\n        if (a < qeIcx) {\n          a = qeIcx;\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        } else {\n          a = qeIcx;\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        }\n      } else {\n        this.chigh -= qeIcx;\n        if ((a & 0x8000) !== 0) {\n          this.a = a;\n          return cx_mps;\n        }\n        if (a < qeIcx) {\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        } else {\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        }\n      }\n      do {\n        if (this.ct === 0) {\n          this.byteIn();\n        }\n        a <<= 1;\n        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n        this.clow = this.clow << 1 & 0xFFFF;\n        this.ct--;\n      } while ((a & 0x8000) === 0);\n      this.a = a;\n      contexts[pos] = cx_index << 1 | cx_mps;\n      return d;\n    }\n  };\n  return ArithmeticDecoder;\n}();\nexports.ArithmeticDecoder = ArithmeticDecoder;\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar ARCFourCipher = function ARCFourCipherClosure() {\n  function ARCFourCipher(key) {\n    this.a = 0;\n    this.b = 0;\n    var s = new Uint8Array(256);\n    var i,\n        j = 0,\n        tmp,\n        keyLength = key.length;\n    for (i = 0; i < 256; ++i) {\n      s[i] = i;\n    }\n    for (i = 0; i < 256; ++i) {\n      tmp = s[i];\n      j = j + tmp + key[i % keyLength] & 0xFF;\n      s[i] = s[j];\n      s[j] = tmp;\n    }\n    this.s = s;\n  }\n  ARCFourCipher.prototype = {\n    encryptBlock: function ARCFourCipher_encryptBlock(data) {\n      var i,\n          n = data.length,\n          tmp,\n          tmp2;\n      var a = this.a,\n          b = this.b,\n          s = this.s;\n      var output = new Uint8Array(n);\n      for (i = 0; i < n; ++i) {\n        a = a + 1 & 0xFF;\n        tmp = s[a];\n        b = b + tmp & 0xFF;\n        tmp2 = s[b];\n        s[a] = tmp2;\n        s[b] = tmp;\n        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n      }\n      this.a = a;\n      this.b = b;\n      return output;\n    }\n  };\n  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n  return ARCFourCipher;\n}();\nvar calculateMD5 = function calculateMD5Closure() {\n  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n  function hash(data, offset, length) {\n    var h0 = 1732584193,\n        h1 = -271733879,\n        h2 = -1732584194,\n        h3 = 271733878;\n    var paddedLength = length + 72 & ~63;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = length << 3 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    var w = new Int32Array(16);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j, i += 4) {\n        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          f,\n          g;\n      for (j = 0; j < 64; ++j) {\n        if (j < 16) {\n          f = b & c | ~b & d;\n          g = j;\n        } else if (j < 32) {\n          f = d & b | ~d & c;\n          g = 5 * j + 1 & 15;\n        } else if (j < 48) {\n          f = b ^ c ^ d;\n          g = 3 * j + 5 & 15;\n        } else {\n          f = c ^ (b | ~d);\n          g = 7 * j & 15;\n        }\n        var tmp = d,\n            rotateArg = a + f + k[j] + w[g] | 0,\n            rotate = r[j];\n        d = c;\n        c = b;\n        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n        a = tmp;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n    }\n    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\n  }\n  return hash;\n}();\nvar Word64 = function Word64Closure() {\n  function Word64(highInteger, lowInteger) {\n    this.high = highInteger | 0;\n    this.low = lowInteger | 0;\n  }\n  Word64.prototype = {\n    and: function Word64_and(word) {\n      this.high &= word.high;\n      this.low &= word.low;\n    },\n    xor: function Word64_xor(word) {\n      this.high ^= word.high;\n      this.low ^= word.low;\n    },\n    or: function Word64_or(word) {\n      this.high |= word.high;\n      this.low |= word.low;\n    },\n    shiftRight: function Word64_shiftRight(places) {\n      if (places >= 32) {\n        this.low = this.high >>> places - 32 | 0;\n        this.high = 0;\n      } else {\n        this.low = this.low >>> places | this.high << 32 - places;\n        this.high = this.high >>> places | 0;\n      }\n    },\n    shiftLeft: function Word64_shiftLeft(places) {\n      if (places >= 32) {\n        this.high = this.low << places - 32;\n        this.low = 0;\n      } else {\n        this.high = this.high << places | this.low >>> 32 - places;\n        this.low = this.low << places;\n      }\n    },\n    rotateRight: function Word64_rotateRight(places) {\n      var low, high;\n      if (places & 32) {\n        high = this.low;\n        low = this.high;\n      } else {\n        low = this.low;\n        high = this.high;\n      }\n      places &= 31;\n      this.low = low >>> places | high << 32 - places;\n      this.high = high >>> places | low << 32 - places;\n    },\n    not: function Word64_not() {\n      this.high = ~this.high;\n      this.low = ~this.low;\n    },\n    add: function Word64_add(word) {\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n      if (lowAdd > 0xFFFFFFFF) {\n        highAdd += 1;\n      }\n      this.low = lowAdd | 0;\n      this.high = highAdd | 0;\n    },\n    copyTo: function Word64_copyTo(bytes, offset) {\n      bytes[offset] = this.high >>> 24 & 0xFF;\n      bytes[offset + 1] = this.high >> 16 & 0xFF;\n      bytes[offset + 2] = this.high >> 8 & 0xFF;\n      bytes[offset + 3] = this.high & 0xFF;\n      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n      bytes[offset + 5] = this.low >> 16 & 0xFF;\n      bytes[offset + 6] = this.low >> 8 & 0xFF;\n      bytes[offset + 7] = this.low & 0xFF;\n    },\n    assign: function Word64_assign(word) {\n      this.high = word.high;\n      this.low = word.low;\n    }\n  };\n  return Word64;\n}();\nvar calculateSHA256 = function calculateSHA256Closure() {\n  function rotr(x, n) {\n    return x >>> n | x << 32 - n;\n  }\n  function ch(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n  function maj(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n  function sigma(x) {\n    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n  }\n  function sigmaPrime(x) {\n    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n  }\n  function littleSigma(x) {\n    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n  }\n  function littleSigmaPrime(x) {\n    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n  }\n  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n  function hash(data, offset, length) {\n    var h0 = 0x6a09e667,\n        h1 = 0xbb67ae85,\n        h2 = 0x3c6ef372,\n        h3 = 0xa54ff53a,\n        h4 = 0x510e527f,\n        h5 = 0x9b05688c,\n        h6 = 0x1f83d9ab,\n        h7 = 0x5be0cd19;\n    var paddedLength = Math.ceil((length + 9) / 64) * 64;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Uint32Array(64);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        i += 4;\n      }\n      for (j = 16; j < 64; ++j) {\n        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          e = h4,\n          f = h5,\n          g = h6,\n          h = h7,\n          t1,\n          t2;\n      for (j = 0; j < 64; ++j) {\n        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n        t2 = sigma(a) + maj(a, b, c);\n        h = g;\n        g = f;\n        f = e;\n        e = d + t1 | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = t1 + t2 | 0;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n      h4 = h4 + e | 0;\n      h5 = h5 + f | 0;\n      h6 = h6 + g | 0;\n      h7 = h7 + h | 0;\n    }\n    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\n  }\n  return hash;\n}();\nvar calculateSHA512 = function calculateSHA512Closure() {\n  function ch(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.not();\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function maj(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.and(z);\n    result.xor(tmp);\n    tmp.assign(y);\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function sigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(28);\n    tmp.assign(x);\n    tmp.rotateRight(34);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(39);\n    result.xor(tmp);\n  }\n  function sigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(14);\n    tmp.assign(x);\n    tmp.rotateRight(18);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(41);\n    result.xor(tmp);\n  }\n  function littleSigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(1);\n    tmp.assign(x);\n    tmp.rotateRight(8);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(7);\n    result.xor(tmp);\n  }\n  function littleSigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(19);\n    tmp.assign(x);\n    tmp.rotateRight(61);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(6);\n    result.xor(tmp);\n  }\n  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n  function hash(data, offset, length, mode384) {\n    mode384 = !!mode384;\n    var h0, h1, h2, h3, h4, h5, h6, h7;\n    if (!mode384) {\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n      h4 = new Word64(0x510e527f, 0xade682d1);\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\n    } else {\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n      h1 = new Word64(0x629a292a, 0x367cd507);\n      h2 = new Word64(0x9159015a, 0x3070dd17);\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\n      h4 = new Word64(0x67332667, 0xffc00b31);\n      h5 = new Word64(0x8eb44a87, 0x68581511);\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n    }\n    var paddedLength = Math.ceil((length + 17) / 128) * 128;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 16;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Array(80);\n    for (i = 0; i < 80; i++) {\n      w[i] = new Word64(0, 0);\n    }\n    var a = new Word64(0, 0),\n        b = new Word64(0, 0),\n        c = new Word64(0, 0);\n    var d = new Word64(0, 0),\n        e = new Word64(0, 0),\n        f = new Word64(0, 0);\n    var g = new Word64(0, 0),\n        h = new Word64(0, 0);\n    var t1 = new Word64(0, 0),\n        t2 = new Word64(0, 0);\n    var tmp1 = new Word64(0, 0),\n        tmp2 = new Word64(0, 0),\n        tmp3;\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n        i += 8;\n      }\n      for (j = 16; j < 80; ++j) {\n        tmp3 = w[j];\n        littleSigmaPrime(tmp3, w[j - 2], tmp2);\n        tmp3.add(w[j - 7]);\n        littleSigma(tmp1, w[j - 15], tmp2);\n        tmp3.add(tmp1);\n        tmp3.add(w[j - 16]);\n      }\n      a.assign(h0);\n      b.assign(h1);\n      c.assign(h2);\n      d.assign(h3);\n      e.assign(h4);\n      f.assign(h5);\n      g.assign(h6);\n      h.assign(h7);\n      for (j = 0; j < 80; ++j) {\n        t1.assign(h);\n        sigmaPrime(tmp1, e, tmp2);\n        t1.add(tmp1);\n        ch(tmp1, e, f, g, tmp2);\n        t1.add(tmp1);\n        t1.add(k[j]);\n        t1.add(w[j]);\n        sigma(t2, a, tmp2);\n        maj(tmp1, a, b, c, tmp2);\n        t2.add(tmp1);\n        tmp3 = h;\n        h = g;\n        g = f;\n        f = e;\n        d.add(t1);\n        e = d;\n        d = c;\n        c = b;\n        b = a;\n        tmp3.assign(t1);\n        tmp3.add(t2);\n        a = tmp3;\n      }\n      h0.add(a);\n      h1.add(b);\n      h2.add(c);\n      h3.add(d);\n      h4.add(e);\n      h5.add(f);\n      h6.add(g);\n      h7.add(h);\n    }\n    var result;\n    if (!mode384) {\n      result = new Uint8Array(64);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n      h6.copyTo(result, 48);\n      h7.copyTo(result, 56);\n    } else {\n      result = new Uint8Array(48);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n    }\n    return result;\n  }\n  return hash;\n}();\nvar calculateSHA384 = function calculateSHA384Closure() {\n  function hash(data, offset, length) {\n    return calculateSHA512(data, offset, length, true);\n  }\n  return hash;\n}();\nvar NullCipher = function NullCipherClosure() {\n  function NullCipher() {}\n  NullCipher.prototype = {\n    decryptBlock: function NullCipher_decryptBlock(data) {\n      return data;\n    }\n  };\n  return NullCipher;\n}();\nvar AES128Cipher = function AES128CipherClosure() {\n  var rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n  var mixCol = new Uint8Array(256);\n  for (var i = 0; i < 256; i++) {\n    if (i < 128) {\n      mixCol[i] = i << 1;\n    } else {\n      mixCol[i] = i << 1 ^ 0x1b;\n    }\n  }\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n  function expandKey128(cipherKey) {\n    var b = 176,\n        result = new Uint8Array(b);\n    result.set(cipherKey);\n    for (var j = 16, i = 1; j < b; ++i) {\n      var t1 = result[j - 3],\n          t2 = result[j - 2],\n          t3 = result[j - 1],\n          t4 = result[j - 4];\n      t1 = s[t1];\n      t2 = s[t2];\n      t3 = s[t3];\n      t4 = s[t4];\n      t1 = t1 ^ rcon[i];\n      for (var n = 0; n < 4; ++n) {\n        result[j] = t1 ^= result[j - 16];\n        j++;\n        result[j] = t2 ^= result[j - 16];\n        j++;\n        result[j] = t3 ^= result[j - 16];\n        j++;\n        result[j] = t4 ^= result[j - 16];\n        j++;\n      }\n    }\n    return result;\n  }\n  function decrypt128(input, key) {\n    var state = new Uint8Array(16);\n    state.set(input);\n    var i, j, k;\n    var t, u, v;\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    for (i = 9; i >= 1; --i) {\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (j = 0; j < 16; ++j) {\n        state[j] = inv_s[state[j]];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (j = 0; j < 16; j += 4) {\n        var s0 = mix[state[j]],\n            s1 = mix[state[j + 1]],\n            s2 = mix[state[j + 2]],\n            s3 = mix[state[j + 3]];\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n        state[j] = t >>> 24 & 0xFF;\n        state[j + 1] = t >> 16 & 0xFF;\n        state[j + 2] = t >> 8 & 0xFF;\n        state[j + 3] = t & 0xFF;\n      }\n    }\n    t = state[13];\n    state[13] = state[9];\n    state[9] = state[5];\n    state[5] = state[1];\n    state[1] = t;\n    t = state[14];\n    u = state[10];\n    state[14] = state[6];\n    state[10] = state[2];\n    state[6] = t;\n    state[2] = u;\n    t = state[15];\n    u = state[11];\n    v = state[7];\n    state[15] = state[3];\n    state[11] = t;\n    state[7] = u;\n    state[3] = v;\n    for (j = 0; j < 16; ++j) {\n      state[j] = inv_s[state[j]];\n      state[j] ^= key[j];\n    }\n    return state;\n  }\n  function encrypt128(input, key) {\n    var t, u, v, k;\n    var state = new Uint8Array(16);\n    state.set(input);\n    for (j = 0; j < 16; ++j) {\n      state[j] ^= key[j];\n    }\n    for (i = 1; i < 10; i++) {\n      for (j = 0; j < 16; ++j) {\n        state[j] = s[state[j]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (var j = 0; j < 16; j += 4) {\n        var s0 = state[j + 0],\n            s1 = state[j + 1];\n        var s2 = state[j + 2],\n            s3 = state[j + 3];\n        t = s0 ^ s1 ^ s2 ^ s3;\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n    }\n    for (j = 0; j < 16; ++j) {\n      state[j] = s[state[j]];\n    }\n    v = state[1];\n    state[1] = state[5];\n    state[5] = state[9];\n    state[9] = state[13];\n    state[13] = v;\n    v = state[2];\n    u = state[6];\n    state[2] = state[10];\n    state[6] = state[14];\n    state[10] = v;\n    state[14] = u;\n    v = state[3];\n    u = state[7];\n    t = state[11];\n    state[3] = state[15];\n    state[7] = v;\n    state[11] = u;\n    state[15] = t;\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    return state;\n  }\n  function AES128Cipher(key) {\n    this.key = expandKey128(key);\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n  function decryptBlock2(data, finalize) {\n    var i,\n        j,\n        ii,\n        sourceLength = data.length,\n        buffer = this.buffer,\n        bufferLength = this.bufferPosition,\n        result = [],\n        iv = this.iv;\n    for (i = 0; i < sourceLength; ++i) {\n      buffer[bufferLength] = data[i];\n      ++bufferLength;\n      if (bufferLength < 16) {\n        continue;\n      }\n      var plain = decrypt128(buffer, this.key);\n      for (j = 0; j < 16; ++j) {\n        plain[j] ^= iv[j];\n      }\n      iv = buffer;\n      result.push(plain);\n      buffer = new Uint8Array(16);\n      bufferLength = 0;\n    }\n    this.buffer = buffer;\n    this.bufferLength = bufferLength;\n    this.iv = iv;\n    if (result.length === 0) {\n      return new Uint8Array([]);\n    }\n    var outputLength = 16 * result.length;\n    if (finalize) {\n      var lastBlock = result[result.length - 1];\n      var psLen = lastBlock[15];\n      if (psLen <= 16) {\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n          if (lastBlock[i] !== psLen) {\n            psLen = 0;\n            break;\n          }\n        }\n        outputLength -= psLen;\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n      }\n    }\n    var output = new Uint8Array(outputLength);\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n      output.set(result[i], j);\n    }\n    return output;\n  }\n  AES128Cipher.prototype = {\n    decryptBlock: function AES128Cipher_decryptBlock(data, finalize) {\n      var i,\n          sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n        buffer[bufferLength] = data[i];\n      }\n      if (bufferLength < 16) {\n        this.bufferLength = bufferLength;\n        return new Uint8Array([]);\n      }\n      this.iv = buffer;\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = decryptBlock2;\n      return this.decryptBlock(data.subarray(16), finalize);\n    },\n    encrypt: function AES128Cipher_encrypt(data, iv) {\n      var i,\n          j,\n          ii,\n          sourceLength = data.length,\n          buffer = this.buffer,\n          bufferLength = this.bufferPosition,\n          result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = encrypt128(buffer, this.key);\n        iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array([]);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n        output.set(result[i], j);\n      }\n      return output;\n    }\n  };\n  return AES128Cipher;\n}();\nvar AES256Cipher = function AES256CipherClosure() {\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n  var mixCol = new Uint8Array(256);\n  for (var i = 0; i < 256; i++) {\n    if (i < 128) {\n      mixCol[i] = i << 1;\n    } else {\n      mixCol[i] = i << 1 ^ 0x1b;\n    }\n  }\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n  function expandKey256(cipherKey) {\n    var b = 240,\n        result = new Uint8Array(b);\n    var r = 1;\n    result.set(cipherKey);\n    for (var j = 32, i = 1; j < b; ++i) {\n      if (j % 32 === 16) {\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n      } else if (j % 32 === 0) {\n        var t1 = result[j - 3],\n            t2 = result[j - 2],\n            t3 = result[j - 1],\n            t4 = result[j - 4];\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n        t1 = t1 ^ r;\n        if ((r <<= 1) >= 256) {\n          r = (r ^ 0x1b) & 0xFF;\n        }\n      }\n      for (var n = 0; n < 4; ++n) {\n        result[j] = t1 ^= result[j - 32];\n        j++;\n        result[j] = t2 ^= result[j - 32];\n        j++;\n        result[j] = t3 ^= result[j - 32];\n        j++;\n        result[j] = t4 ^= result[j - 32];\n        j++;\n      }\n    }\n    return result;\n  }\n  function decrypt256(input, key) {\n    var state = new Uint8Array(16);\n    state.set(input);\n    var i, j, k;\n    var t, u, v;\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    for (i = 13; i >= 1; --i) {\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (j = 0; j < 16; ++j) {\n        state[j] = inv_s[state[j]];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (j = 0; j < 16; j += 4) {\n        var s0 = mix[state[j]],\n            s1 = mix[state[j + 1]],\n            s2 = mix[state[j + 2]],\n            s3 = mix[state[j + 3]];\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n        state[j] = t >>> 24 & 0xFF;\n        state[j + 1] = t >> 16 & 0xFF;\n        state[j + 2] = t >> 8 & 0xFF;\n        state[j + 3] = t & 0xFF;\n      }\n    }\n    t = state[13];\n    state[13] = state[9];\n    state[9] = state[5];\n    state[5] = state[1];\n    state[1] = t;\n    t = state[14];\n    u = state[10];\n    state[14] = state[6];\n    state[10] = state[2];\n    state[6] = t;\n    state[2] = u;\n    t = state[15];\n    u = state[11];\n    v = state[7];\n    state[15] = state[3];\n    state[11] = t;\n    state[7] = u;\n    state[3] = v;\n    for (j = 0; j < 16; ++j) {\n      state[j] = inv_s[state[j]];\n      state[j] ^= key[j];\n    }\n    return state;\n  }\n  function encrypt256(input, key) {\n    var t, u, v, k;\n    var state = new Uint8Array(16);\n    state.set(input);\n    for (j = 0; j < 16; ++j) {\n      state[j] ^= key[j];\n    }\n    for (i = 1; i < 14; i++) {\n      for (j = 0; j < 16; ++j) {\n        state[j] = s[state[j]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (var j = 0; j < 16; j += 4) {\n        var s0 = state[j + 0],\n            s1 = state[j + 1];\n        var s2 = state[j + 2],\n            s3 = state[j + 3];\n        t = s0 ^ s1 ^ s2 ^ s3;\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n    }\n    for (j = 0; j < 16; ++j) {\n      state[j] = s[state[j]];\n    }\n    v = state[1];\n    state[1] = state[5];\n    state[5] = state[9];\n    state[9] = state[13];\n    state[13] = v;\n    v = state[2];\n    u = state[6];\n    state[2] = state[10];\n    state[6] = state[14];\n    state[10] = v;\n    state[14] = u;\n    v = state[3];\n    u = state[7];\n    t = state[11];\n    state[3] = state[15];\n    state[7] = v;\n    state[11] = u;\n    state[15] = t;\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    return state;\n  }\n  function AES256Cipher(key) {\n    this.key = expandKey256(key);\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n  function decryptBlock2(data, finalize) {\n    var i,\n        j,\n        ii,\n        sourceLength = data.length,\n        buffer = this.buffer,\n        bufferLength = this.bufferPosition,\n        result = [],\n        iv = this.iv;\n    for (i = 0; i < sourceLength; ++i) {\n      buffer[bufferLength] = data[i];\n      ++bufferLength;\n      if (bufferLength < 16) {\n        continue;\n      }\n      var plain = decrypt256(buffer, this.key);\n      for (j = 0; j < 16; ++j) {\n        plain[j] ^= iv[j];\n      }\n      iv = buffer;\n      result.push(plain);\n      buffer = new Uint8Array(16);\n      bufferLength = 0;\n    }\n    this.buffer = buffer;\n    this.bufferLength = bufferLength;\n    this.iv = iv;\n    if (result.length === 0) {\n      return new Uint8Array([]);\n    }\n    var outputLength = 16 * result.length;\n    if (finalize) {\n      var lastBlock = result[result.length - 1];\n      var psLen = lastBlock[15];\n      if (psLen <= 16) {\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n          if (lastBlock[i] !== psLen) {\n            psLen = 0;\n            break;\n          }\n        }\n        outputLength -= psLen;\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n      }\n    }\n    var output = new Uint8Array(outputLength);\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n      output.set(result[i], j);\n    }\n    return output;\n  }\n  AES256Cipher.prototype = {\n    decryptBlock: function AES256Cipher_decryptBlock(data, finalize, iv) {\n      var i,\n          sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      if (iv) {\n        this.iv = iv;\n      } else {\n        for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n          buffer[bufferLength] = data[i];\n        }\n        if (bufferLength < 16) {\n          this.bufferLength = bufferLength;\n          return new Uint8Array([]);\n        }\n        this.iv = buffer;\n        data = data.subarray(16);\n      }\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = decryptBlock2;\n      return this.decryptBlock(data, finalize);\n    },\n    encrypt: function AES256Cipher_encrypt(data, iv) {\n      var i,\n          j,\n          ii,\n          sourceLength = data.length,\n          buffer = this.buffer,\n          bufferLength = this.bufferPosition,\n          result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = encrypt256(buffer, this.key);\n        this.iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array([]);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n        output.set(result[i], j);\n      }\n      return output;\n    }\n  };\n  return AES256Cipher;\n}();\nvar PDF17 = function PDF17Closure() {\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function PDF17() {}\n  PDF17.prototype = {\n    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF17;\n}();\nvar PDF20 = function PDF20Closure() {\n  function concatArrays(array1, array2) {\n    var t = new Uint8Array(array1.length + array2.length);\n    t.set(array1, 0);\n    t.set(array2, array1.length);\n    return t;\n  }\n  function calculatePDF20Hash(password, input, userBytes) {\n    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n    var e = [0];\n    var i = 0;\n    while (i < 64 || e[e.length - 1] > i - 32) {\n      var arrayLength = password.length + k.length + userBytes.length;\n      var k1 = new Uint8Array(arrayLength * 64);\n      var array = concatArrays(password, k);\n      array = concatArrays(array, userBytes);\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n        k1.set(array, pos);\n      }\n      var cipher = new AES128Cipher(k.subarray(0, 16));\n      e = cipher.encrypt(k1, k.subarray(16, 32));\n      var remainder = 0;\n      for (var z = 0; z < 16; z++) {\n        remainder *= 256 % 3;\n        remainder %= 3;\n        remainder += (e[z] >>> 0) % 3;\n        remainder %= 3;\n      }\n      if (remainder === 0) {\n        k = calculateSHA256(e, 0, e.length);\n      } else if (remainder === 1) {\n        k = calculateSHA384(e, 0, e.length);\n      } else if (remainder === 2) {\n        k = calculateSHA512(e, 0, e.length);\n      }\n      i++;\n    }\n    return k.subarray(0, 32);\n  }\n  function PDF20() {}\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  PDF20.prototype = {\n    hash: function PDF20_hash(password, concatBytes, userBytes) {\n      return calculatePDF20Hash(password, concatBytes, userBytes);\n    },\n    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculatePDF20Hash(password, hashData, userBytes);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculatePDF20Hash(password, hashData, []);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculatePDF20Hash(password, hashData, userBytes);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculatePDF20Hash(password, hashData, []);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF20;\n}();\nvar CipherTransform = function CipherTransformClosure() {\n  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n    this.StringCipherConstructor = stringCipherConstructor;\n    this.StreamCipherConstructor = streamCipherConstructor;\n  }\n  CipherTransform.prototype = {\n    createStream: function CipherTransform_createStream(stream, length) {\n      var cipher = new this.StreamCipherConstructor();\n      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n        return cipher.decryptBlock(data, finalize);\n      });\n    },\n    decryptString: function CipherTransform_decryptString(s) {\n      var cipher = new this.StringCipherConstructor();\n      var data = (0, _util.stringToBytes)(s);\n      data = cipher.decryptBlock(data, true);\n      return (0, _util.bytesToString)(data);\n    }\n  };\n  return CipherTransform;\n}();\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n    if (password) {\n      var passwordLength = Math.min(127, password.length);\n      password = password.subarray(0, passwordLength);\n    } else {\n      password = [];\n    }\n    var pdfAlgorithm;\n    if (revision === 6) {\n      pdfAlgorithm = new PDF20();\n    } else {\n      pdfAlgorithm = new PDF17();\n    }\n    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n    }\n    return null;\n  }\n  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n    var hashDataSize = 40 + ownerPassword.length + fileId.length;\n    var hashData = new Uint8Array(hashDataSize),\n        i = 0,\n        j,\n        n;\n    if (password) {\n      n = Math.min(32, password.length);\n      for (; i < n; ++i) {\n        hashData[i] = password[i];\n      }\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    for (j = 0, n = ownerPassword.length; j < n; ++j) {\n      hashData[i++] = ownerPassword[j];\n    }\n    hashData[i++] = flags & 0xFF;\n    hashData[i++] = flags >> 8 & 0xFF;\n    hashData[i++] = flags >> 16 & 0xFF;\n    hashData[i++] = flags >>> 24 & 0xFF;\n    for (j = 0, n = fileId.length; j < n; ++j) {\n      hashData[i++] = fileId[j];\n    }\n    if (revision >= 4 && !encryptMetadata) {\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, keyLengthInBytes);\n      }\n    }\n    var encryptionKey = hash.subarray(0, keyLengthInBytes);\n    var cipher, checkData;\n    if (revision >= 3) {\n      for (i = 0; i < 32; ++i) {\n        hashData[i] = defaultPasswordBytes[i];\n      }\n      for (j = 0, n = fileId.length; j < n; ++j) {\n        hashData[i++] = fileId[j];\n      }\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n      n = encryptionKey.length;\n      var derivedKey = new Uint8Array(n),\n          k;\n      for (j = 1; j <= 19; ++j) {\n        for (k = 0; k < n; ++k) {\n          derivedKey[k] = encryptionKey[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        checkData = cipher.encryptBlock(checkData);\n      }\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    } else {\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    }\n    return encryptionKey;\n  }\n  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n    var hashData = new Uint8Array(32),\n        i = 0,\n        j,\n        n;\n    n = Math.min(32, password.length);\n    for (; i < n; ++i) {\n      hashData[i] = password[i];\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, hash.length);\n      }\n    }\n    var cipher, userPassword;\n    if (revision >= 3) {\n      userPassword = ownerPassword;\n      var derivedKey = new Uint8Array(keyLengthInBytes),\n          k;\n      for (j = 19; j >= 0; j--) {\n        for (k = 0; k < keyLengthInBytes; ++k) {\n          derivedKey[k] = hash[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        userPassword = cipher.encryptBlock(userPassword);\n      }\n    } else {\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n      userPassword = cipher.encryptBlock(ownerPassword);\n    }\n    return userPassword;\n  }\n  var identityName = _primitives.Name.get('Identity');\n  function CipherTransformFactory(dict, fileId, password) {\n    var filter = dict.get('Filter');\n    if (!(0, _primitives.isName)(filter, 'Standard')) {\n      throw new _util.FormatError('unknown encryption method');\n    }\n    this.dict = dict;\n    var algorithm = dict.get('V');\n    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n      throw new _util.FormatError('unsupported encryption algorithm');\n    }\n    this.algorithm = algorithm;\n    var keyLength = dict.get('Length');\n    if (!keyLength) {\n      if (algorithm <= 3) {\n        keyLength = 40;\n      } else {\n        var cfDict = dict.get('CF');\n        var streamCryptoName = dict.get('StmF');\n        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\n          cfDict.suppressEncryption = true;\n          var handlerDict = cfDict.get(streamCryptoName.name);\n          keyLength = handlerDict && handlerDict.get('Length') || 128;\n          if (keyLength < 40) {\n            keyLength <<= 3;\n          }\n        }\n      }\n    }\n    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n      throw new _util.FormatError('invalid key length');\n    }\n    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\n    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\n    var flags = dict.get('P');\n    var revision = dict.get('R');\n    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n    this.encryptMetadata = encryptMetadata;\n    var fileIdBytes = (0, _util.stringToBytes)(fileId);\n    var passwordBytes;\n    if (password) {\n      if (revision === 6) {\n        try {\n          password = (0, _util.utf8StringToString)(password);\n        } catch (ex) {\n          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n        }\n      }\n      passwordBytes = (0, _util.stringToBytes)(password);\n    }\n    var encryptionKey;\n    if (algorithm !== 5) {\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    } else {\n      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\n      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\n      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\n      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\n      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\n      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\n      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\n      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\n      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n    }\n    if (!encryptionKey && !password) {\n      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\n    } else if (!encryptionKey && password) {\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    }\n    if (!encryptionKey) {\n      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\n    }\n    this.encryptionKey = encryptionKey;\n    if (algorithm >= 4) {\n      var cf = dict.get('CF');\n      if ((0, _primitives.isDict)(cf)) {\n        cf.suppressEncryption = true;\n      }\n      this.cf = cf;\n      this.stmf = dict.get('StmF') || identityName;\n      this.strf = dict.get('StrF') || identityName;\n      this.eff = dict.get('EFF') || this.stmf;\n    }\n  }\n  function buildObjectKey(num, gen, encryptionKey, isAes) {\n    var key = new Uint8Array(encryptionKey.length + 9),\n        i,\n        n;\n    for (i = 0, n = encryptionKey.length; i < n; ++i) {\n      key[i] = encryptionKey[i];\n    }\n    key[i++] = num & 0xFF;\n    key[i++] = num >> 8 & 0xFF;\n    key[i++] = num >> 16 & 0xFF;\n    key[i++] = gen & 0xFF;\n    key[i++] = gen >> 8 & 0xFF;\n    if (isAes) {\n      key[i++] = 0x73;\n      key[i++] = 0x41;\n      key[i++] = 0x6C;\n      key[i++] = 0x54;\n    }\n    var hash = calculateMD5(key, 0, i);\n    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n  }\n  function buildCipherConstructor(cf, name, num, gen, key) {\n    if (!(0, _primitives.isName)(name)) {\n      throw new _util.FormatError('Invalid crypt filter name.');\n    }\n    var cryptFilter = cf.get(name.name);\n    var cfm;\n    if (cryptFilter !== null && cryptFilter !== undefined) {\n      cfm = cryptFilter.get('CFM');\n    }\n    if (!cfm || cfm.name === 'None') {\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\n        return new NullCipher();\n      };\n    }\n    if (cfm.name === 'V2') {\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\n        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n      };\n    }\n    if (cfm.name === 'AESV2') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n        return new AES128Cipher(buildObjectKey(num, gen, key, true));\n      };\n    }\n    if (cfm.name === 'AESV3') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n        return new AES256Cipher(key);\n      };\n    }\n    throw new _util.FormatError('Unknown crypto method');\n  }\n  CipherTransformFactory.prototype = {\n    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n      if (this.algorithm === 4 || this.algorithm === 5) {\n        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n      }\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n      var cipherConstructor = function buildCipherCipherConstructor() {\n        return new ARCFourCipher(key);\n      };\n      return new CipherTransform(cipherConstructor, cipherConstructor);\n    }\n  };\n  return CipherTransformFactory;\n}();\nexports.AES128Cipher = AES128Cipher;\nexports.AES256Cipher = AES256Cipher;\nexports.ARCFourCipher = ARCFourCipher;\nexports.CipherTransformFactory = CipherTransformFactory;\nexports.PDF17 = PDF17;\nexports.PDF20 = PDF20;\nexports.calculateMD5 = calculateMD5;\nexports.calculateSHA256 = calculateSHA256;\nexports.calculateSHA384 = calculateSHA384;\nexports.calculateSHA512 = calculateSHA512;\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PartialEvaluator = exports.OperatorList = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cmap = __w_pdfjs_require__(134);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _fonts = __w_pdfjs_require__(135);\n\nvar _encodings = __w_pdfjs_require__(28);\n\nvar _unicode = __w_pdfjs_require__(80);\n\nvar _standard_fonts = __w_pdfjs_require__(79);\n\nvar _pattern = __w_pdfjs_require__(139);\n\nvar _parser = __w_pdfjs_require__(34);\n\nvar _bidi = __w_pdfjs_require__(140);\n\nvar _colorspace = __w_pdfjs_require__(27);\n\nvar _glyphlist = __w_pdfjs_require__(47);\n\nvar _metrics = __w_pdfjs_require__(141);\n\nvar _function = __w_pdfjs_require__(81);\n\nvar _murmurhash = __w_pdfjs_require__(143);\n\nvar _image = __w_pdfjs_require__(144);\n\nvar PartialEvaluator = function PartialEvaluatorClosure() {\n  var DefaultPartialEvaluatorOptions = {\n    forceDataSchema: false,\n    maxImageSize: -1,\n    disableFontFace: false,\n    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\n    ignoreErrors: false,\n    isEvalSupported: true\n  };\n  function NativeImageDecoder(_ref) {\n    var xref = _ref.xref,\n        resources = _ref.resources,\n        handler = _ref.handler,\n        _ref$forceDataSchema = _ref.forceDataSchema,\n        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.xref = xref;\n    this.resources = resources;\n    this.handler = handler;\n    this.forceDataSchema = forceDataSchema;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n  }\n  NativeImageDecoder.prototype = {\n    canDecode: function canDecode(image) {\n      return image instanceof _stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\n    },\n    decode: function decode(image) {\n      var dict = image.dict;\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\n      var numComps = colorSpace.numComps;\n      var decodePromise = this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), numComps]);\n      return decodePromise.then(function (message) {\n        var data = message.data;\n        return new _stream.Stream(data, 0, data.length, image.dict);\n      });\n    }\n  };\n  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  function PartialEvaluator(_ref2) {\n    var _this = this;\n\n    var pdfManager = _ref2.pdfManager,\n        xref = _ref2.xref,\n        handler = _ref2.handler,\n        pageIndex = _ref2.pageIndex,\n        idFactory = _ref2.idFactory,\n        fontCache = _ref2.fontCache,\n        builtInCMapCache = _ref2.builtInCMapCache,\n        _ref2$options = _ref2.options,\n        options = _ref2$options === undefined ? null : _ref2$options,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.handler = handler;\n    this.pageIndex = pageIndex;\n    this.idFactory = idFactory;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.options = options || DefaultPartialEvaluatorOptions;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.fetchBuiltInCMap = function (name) {\n      var cachedCMap = _this.builtInCMapCache[name];\n      if (cachedCMap) {\n        return Promise.resolve(cachedCMap);\n      }\n      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n        if (data.compressionType !== _util.CMapCompressionType.NONE) {\n          _this.builtInCMapCache[name] = data;\n        }\n        return data;\n      });\n    };\n  }\n  var TIME_SLOT_DURATION_MS = 20;\n  var CHECK_TIME_EVERY = 100;\n  function TimeSlotManager() {\n    this.reset();\n  }\n  TimeSlotManager.prototype = {\n    check: function TimeSlotManager_check() {\n      if (++this.checked < CHECK_TIME_EVERY) {\n        return false;\n      }\n      this.checked = 0;\n      return this.endTime <= Date.now();\n    },\n    reset: function TimeSlotManager_reset() {\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n      this.checked = 0;\n    }\n  };\n  function normalizeBlendMode(value) {\n    if (!(0, _primitives.isName)(value)) {\n      return 'source-over';\n    }\n    switch (value.name) {\n      case 'Normal':\n      case 'Compatible':\n        return 'source-over';\n      case 'Multiply':\n        return 'multiply';\n      case 'Screen':\n        return 'screen';\n      case 'Overlay':\n        return 'overlay';\n      case 'Darken':\n        return 'darken';\n      case 'Lighten':\n        return 'lighten';\n      case 'ColorDodge':\n        return 'color-dodge';\n      case 'ColorBurn':\n        return 'color-burn';\n      case 'HardLight':\n        return 'hard-light';\n      case 'SoftLight':\n        return 'soft-light';\n      case 'Difference':\n        return 'difference';\n      case 'Exclusion':\n        return 'exclusion';\n      case 'Hue':\n        return 'hue';\n      case 'Saturation':\n        return 'saturation';\n      case 'Color':\n        return 'color';\n      case 'Luminosity':\n        return 'luminosity';\n    }\n    (0, _util.warn)('Unsupported blend mode: ' + value.name);\n    return 'source-over';\n  }\n  var deferred = Promise.resolve();\n  var TILING_PATTERN = 1,\n      SHADING_PATTERN = 2;\n  PartialEvaluator.prototype = {\n    clone: function clone() {\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\n\n      var newEvaluator = Object.create(this);\n      newEvaluator.options = newOptions;\n      return newEvaluator;\n    },\n\n    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n      if (!(0, _primitives.isDict)(resources)) {\n        return false;\n      }\n      var processed = Object.create(null);\n      if (resources.objId) {\n        processed[resources.objId] = true;\n      }\n      var nodes = [resources],\n          xref = this.xref;\n      while (nodes.length) {\n        var key, i, ii;\n        var node = nodes.shift();\n        var graphicStates = node.get('ExtGState');\n        if ((0, _primitives.isDict)(graphicStates)) {\n          var graphicStatesKeys = graphicStates.getKeys();\n          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n            key = graphicStatesKeys[i];\n            var graphicState = graphicStates.get(key);\n            var bm = graphicState.get('BM');\n            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\n              return true;\n            }\n          }\n        }\n        var xObjects = node.get('XObject');\n        if (!(0, _primitives.isDict)(xObjects)) {\n          continue;\n        }\n        var xObjectsKeys = xObjects.getKeys();\n        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n          key = xObjectsKeys[i];\n          var xObject = xObjects.getRaw(key);\n          if ((0, _primitives.isRef)(xObject)) {\n            if (processed[xObject.toString()]) {\n              continue;\n            }\n            xObject = xref.fetch(xObject);\n          }\n          if (!(0, _primitives.isStream)(xObject)) {\n            continue;\n          }\n          if (xObject.dict.objId) {\n            if (processed[xObject.dict.objId]) {\n              continue;\n            }\n            processed[xObject.dict.objId] = true;\n          }\n          var xResources = xObject.dict.get('Resources');\n          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n            nodes.push(xResources);\n            if (xResources.objId) {\n              processed[xResources.objId] = true;\n            }\n          }\n        }\n      }\n      return false;\n    },\n    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n      var dict = xobj.dict;\n      var matrix = dict.getArray('Matrix');\n      var bbox = dict.getArray('BBox');\n      var group = dict.get('Group');\n      if (group) {\n        var groupOptions = {\n          matrix: matrix,\n          bbox: bbox,\n          smask: smask,\n          isolated: false,\n          knockout: false\n        };\n        var groupSubtype = group.get('S');\n        var colorSpace = null;\n        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\n          groupOptions.isolated = group.get('I') || false;\n          groupOptions.knockout = group.get('K') || false;\n          if (group.has('CS')) {\n            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\n          }\n        }\n        if (smask && smask.backdrop) {\n          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\n          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n        }\n        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\n      }\n      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\n      return this.getOperatorList({\n        stream: xobj,\n        task: task,\n        resources: dict.get('Resources') || resources,\n        operatorList: operatorList,\n        initialState: initialState\n      }).then(function () {\n        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\n        if (group) {\n          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\n        }\n      });\n    },\n    buildPaintImageXObject: function PartialEvaluator_buildPaintImageXObject(resources, image, inline, operatorList, cacheKey, imageCache) {\n      var _this2 = this;\n\n      var dict = image.dict;\n      var w = dict.get('Width', 'W');\n      var h = dict.get('Height', 'H');\n      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\n        (0, _util.warn)('Image dimensions are missing, or not numbers.');\n        return;\n      }\n      var maxImageSize = this.options.maxImageSize;\n      if (maxImageSize !== -1 && w * h > maxImageSize) {\n        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\n        return;\n      }\n      var imageMask = dict.get('ImageMask', 'IM') || false;\n      var imgData, args;\n      if (imageMask) {\n        var width = dict.get('Width', 'W');\n        var height = dict.get('Height', 'H');\n        var bitStrideLength = width + 7 >> 3;\n        var imgArray = image.getBytes(bitStrideLength * height);\n        var decode = dict.getArray('Decode', 'D');\n        imgData = _image.PDFImage.createMask({\n          imgArray: imgArray,\n          width: width,\n          height: height,\n          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\n          inverseDecode: !!decode && decode[0] > 0\n        });\n        imgData.cached = true;\n        args = [imgData];\n        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintImageMaskXObject,\n            args: args\n          };\n        }\n        return;\n      }\n      var softMask = dict.get('SMask', 'SM') || false;\n      var mask = dict.get('Mask') || false;\n      var SMALL_IMAGE_DIMENSIONS = 200;\n      if (inline && !softMask && !mask && !(image instanceof _stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n        var imageObj = new _image.PDFImage({\n          xref: this.xref,\n          res: resources,\n          image: image,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n        imgData = imageObj.createImageData(true);\n        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\n        return;\n      }\n      var nativeImageDecoderSupport = this.options.nativeImageDecoderSupport;\n      var objId = 'img_' + this.idFactory.createObjId();\n      operatorList.addDependency(objId);\n      args = [objId, w, h];\n      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\n        operatorList.addOp(_util.OPS.paintJpegXObject, args);\n        this.handler.send('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintJpegXObject,\n            args: args\n          };\n        }\n        return;\n      }\n      var nativeImageDecoder = null;\n      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _stream.JpegStream || mask instanceof _stream.JpegStream || softMask instanceof _stream.JpegStream)) {\n        nativeImageDecoder = new NativeImageDecoder({\n          xref: this.xref,\n          resources: resources,\n          handler: this.handler,\n          forceDataSchema: this.options.forceDataSchema,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n      }\n      _image.PDFImage.buildImage({\n        handler: this.handler,\n        xref: this.xref,\n        res: resources,\n        image: image,\n        nativeDecoder: nativeImageDecoder,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      }).then(function (imageObj) {\n        var imgData = imageObj.createImageData(false);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\n      }).catch(function (reason) {\n        (0, _util.warn)('Unable to decode image: ' + reason);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\n      });\n      operatorList.addOp(_util.OPS.paintImageXObject, args);\n      if (cacheKey) {\n        imageCache[cacheKey] = {\n          fn: _util.OPS.paintImageXObject,\n          args: args\n        };\n      }\n    },\n    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n      var smaskContent = smask.get('G');\n      var smaskOptions = {\n        subtype: smask.get('S').name,\n        backdrop: smask.get('BC')\n      };\n      var transferObj = smask.get('TR');\n      if ((0, _function.isPDFFunction)(transferObj)) {\n        var transferFn = this.pdfFunctionFactory.create(transferObj);\n        var transferMap = new Uint8Array(256);\n        var tmp = new Float32Array(1);\n        for (var i = 0; i < 256; i++) {\n          tmp[0] = i / 255;\n          transferFn(tmp, 0, tmp, 0);\n          transferMap[i] = tmp[0] * 255 | 0;\n        }\n        smaskOptions.transferMap = transferMap;\n      }\n      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n    },\n    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n      var _this3 = this;\n\n      var tilingOpList = new OperatorList();\n      var resourcesArray = [patternDict.get('Resources'), resources];\n      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\n      return this.getOperatorList({\n        stream: pattern,\n        task: task,\n        resources: patternResources,\n        operatorList: tilingOpList\n      }).then(function () {\n        return (0, _pattern.getTilingPatternIR)({\n          fnArray: tilingOpList.fnArray,\n          argsArray: tilingOpList.argsArray\n        }, patternDict, args);\n      }).then(function (tilingPatternIR) {\n        operatorList.addDependencies(tilingOpList.dependencies);\n        operatorList.addOp(fn, tilingPatternIR);\n      }, function (reason) {\n        if (_this3.options.ignoreErrors) {\n          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('handleTilingType - ignoring pattern: \"' + reason + '\".');\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n      var _this4 = this;\n\n      var fontName;\n      if (fontArgs) {\n        fontArgs = fontArgs.slice();\n        fontName = fontArgs[0].name;\n      }\n      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\n        if (!translated.font.isType3Font) {\n          return translated;\n        }\n        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\n          return translated;\n        }).catch(function (reason) {\n          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\n        });\n      }).then(function (translated) {\n        state.font = translated.font;\n        translated.send(_this4.handler);\n        return translated.loadedName;\n      });\n    },\n    handleText: function PartialEvaluator_handleText(chars, state) {\n      var _this5 = this;\n\n      var font = state.font;\n      var glyphs = font.charsToGlyphs(chars);\n      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n      if (font.data && (isAddToPathSet || this.options.disableFontFace)) {\n        var buildPath = function buildPath(fontChar) {\n          if (!font.renderer.hasBuiltPath(fontChar)) {\n            var path = font.renderer.getPathJs(fontChar);\n            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\n          }\n        };\n        for (var i = 0, ii = glyphs.length; i < ii; i++) {\n          var glyph = glyphs[i];\n          buildPath(glyph.fontChar);\n          var accent = glyph.accent;\n          if (accent && accent.fontChar) {\n            buildPath(accent.fontChar);\n          }\n        }\n      }\n      return glyphs;\n    },\n    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\n      var _this6 = this;\n\n      var gStateObj = [];\n      var gStateKeys = gState.getKeys();\n      var promise = Promise.resolve();\n\n      var _loop = function _loop() {\n        var key = gStateKeys[i];\n        var value = gState.get(key);\n        switch (key) {\n          case 'Type':\n            break;\n          case 'LW':\n          case 'LC':\n          case 'LJ':\n          case 'ML':\n          case 'D':\n          case 'RI':\n          case 'FL':\n          case 'CA':\n          case 'ca':\n            gStateObj.push([key, value]);\n            break;\n          case 'Font':\n            promise = promise.then(function () {\n              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                gStateObj.push([key, [loadedName, value[1]]]);\n              });\n            });\n            break;\n          case 'BM':\n            gStateObj.push([key, normalizeBlendMode(value)]);\n            break;\n          case 'SMask':\n            if ((0, _primitives.isName)(value, 'None')) {\n              gStateObj.push([key, false]);\n              break;\n            }\n            if ((0, _primitives.isDict)(value)) {\n              promise = promise.then(function () {\n                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\n              });\n              gStateObj.push([key, true]);\n            } else {\n              (0, _util.warn)('Unsupported SMask type');\n            }\n            break;\n          case 'OP':\n          case 'op':\n          case 'OPM':\n          case 'BG':\n          case 'BG2':\n          case 'UCR':\n          case 'UCR2':\n          case 'TR':\n          case 'TR2':\n          case 'HT':\n          case 'SM':\n          case 'SA':\n          case 'AIS':\n          case 'TK':\n            (0, _util.info)('graphic state operator ' + key);\n            break;\n          default:\n            (0, _util.info)('Unknown graphic state operator ' + key);\n            break;\n        }\n      };\n\n      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n        _loop();\n      }\n      return promise.then(function () {\n        if (gStateObj.length > 0) {\n          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\n        }\n      });\n    },\n    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\n      var _this7 = this;\n\n      function errorFont() {\n        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\n      }\n      var fontRef,\n          xref = this.xref;\n      if (font) {\n        if (!(0, _primitives.isRef)(font)) {\n          throw new Error('The \"font\" object should be a reference.');\n        }\n        fontRef = font;\n      } else {\n        var fontRes = resources.get('Font');\n        if (fontRes) {\n          fontRef = fontRes.getRaw(fontName);\n        } else {\n          (0, _util.warn)('fontRes not available');\n          return errorFont();\n        }\n      }\n      if (!fontRef) {\n        (0, _util.warn)('fontRef not available');\n        return errorFont();\n      }\n      if (this.fontCache.has(fontRef)) {\n        return this.fontCache.get(fontRef);\n      }\n      font = xref.fetchIfRef(fontRef);\n      if (!(0, _primitives.isDict)(font)) {\n        return errorFont();\n      }\n      if (font.translated) {\n        return font.translated;\n      }\n      var fontCapability = (0, _util.createPromiseCapability)();\n      var preEvaluatedFont = this.preEvaluateFont(font);\n      var descriptor = preEvaluatedFont.descriptor;\n      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\n          fontID;\n      if (fontRefIsRef) {\n        fontID = fontRef.toString();\n      }\n      if ((0, _primitives.isDict)(descriptor)) {\n        if (!descriptor.fontAliases) {\n          descriptor.fontAliases = Object.create(null);\n        }\n        var fontAliases = descriptor.fontAliases;\n        var hash = preEvaluatedFont.hash;\n        if (fontAliases[hash]) {\n          var aliasFontRef = fontAliases[hash].aliasRef;\n          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n            this.fontCache.putAlias(fontRef, aliasFontRef);\n            return this.fontCache.get(fontRef);\n          }\n        } else {\n          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\n        }\n        if (fontRefIsRef) {\n          fontAliases[hash].aliasRef = fontRef;\n        }\n        fontID = fontAliases[hash].fontID;\n      }\n      if (fontRefIsRef) {\n        this.fontCache.put(fontRef, fontCapability.promise);\n      } else {\n        if (!fontID) {\n          fontID = this.idFactory.createObjId();\n        }\n        this.fontCache.put('id_' + fontID, fontCapability.promise);\n      }\n      (0, _util.assert)(fontID, 'The \"fontID\" must be defined.');\n      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n      font.translated = fontCapability.promise;\n      var translatedPromise;\n      try {\n        translatedPromise = this.translateFont(preEvaluatedFont);\n      } catch (e) {\n        translatedPromise = Promise.reject(e);\n      }\n      translatedPromise.then(function (translatedFont) {\n        if (translatedFont.fontType !== undefined) {\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[translatedFont.fontType] = true;\n        }\n        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n      }).catch(function (reason) {\n        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n        try {\n          var descriptor = preEvaluatedFont.descriptor;\n          var fontFile3 = descriptor && descriptor.get('FontFile3');\n          var subtype = fontFile3 && fontFile3.get('Subtype');\n          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[fontType] = true;\n        } catch (ex) {}\n        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\n      });\n      return fontCapability.promise;\n    },\n    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n      var lastIndex = operatorList.length - 1;\n      if (!args) {\n        args = [];\n      }\n      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\n        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\n      } else {\n        var opArgs = operatorList.argsArray[lastIndex];\n        opArgs[0].push(fn);\n        Array.prototype.push.apply(opArgs[1], args);\n      }\n    },\n    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\n      var patternName = args[args.length - 1];\n      var pattern;\n      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\n        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\n        var typeNum = dict.get('PatternType');\n        if (typeNum === TILING_PATTERN) {\n          var color = cs.base ? cs.base.getRgb(args, 0) : null;\n          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n        } else if (typeNum === SHADING_PATTERN) {\n          var shading = dict.get('Shading');\n          var matrix = dict.getArray('Matrix');\n          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\n          operatorList.addOp(fn, pattern.getIR());\n          return Promise.resolve();\n        }\n        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\n      }\n      operatorList.addOp(fn, args);\n      return Promise.resolve();\n    },\n    getOperatorList: function getOperatorList(_ref3) {\n      var _this8 = this;\n\n      var stream = _ref3.stream,\n          task = _ref3.task,\n          resources = _ref3.resources,\n          operatorList = _ref3.operatorList,\n          _ref3$initialState = _ref3.initialState,\n          initialState = _ref3$initialState === undefined ? null : _ref3$initialState;\n\n      resources = resources || _primitives.Dict.empty;\n      initialState = initialState || new EvalState();\n      if (!operatorList) {\n        throw new Error('getOperatorList: missing \"operatorList\" parameter');\n      }\n      var self = this;\n      var xref = this.xref;\n      var imageCache = Object.create(null);\n      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\n      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\n      var stateManager = new StateManager(initialState);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var timeSlotManager = new TimeSlotManager();\n      function closePendingRestoreOPS(argument) {\n        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n          operatorList.addOp(_util.OPS.restore, []);\n        }\n      }\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          promise.then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            i,\n            ii,\n            cs;\n        while (!(stop = timeSlotManager.check())) {\n          operation.args = null;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          var args = operation.args;\n          var fn = operation.fn;\n          switch (fn | 0) {\n            case _util.OPS.paintXObject:\n              var name = args[0].name;\n              if (name && imageCache[name] !== undefined) {\n                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n                args = null;\n                continue;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  operatorList.addOp(fn, args);\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name === 'Form') {\n                  stateManager.save();\n                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n                    stateManager.restore();\n                    resolveXObject();\n                  }, rejectXObject);\n                  return;\n                } else if (type.name === 'Image') {\n                  self.buildPaintImageXObject(resources, xobj, false, operatorList, name, imageCache);\n                } else if (type.name === 'PS') {\n                  (0, _util.info)('Ignored XObject subtype PS');\n                } else {\n                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\n                }\n                resolveXObject();\n              }).catch(function (reason) {\n                if (self.options.ignoreErrors) {\n                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n                  (0, _util.warn)('getOperatorList - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setFont:\n              var fontSize = args[1];\n              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\n              }));\n              return;\n            case _util.OPS.endInlineImage:\n              var cacheKey = args[0].cacheKey;\n              if (cacheKey) {\n                var cacheEntry = imageCache[cacheKey];\n                if (cacheEntry !== undefined) {\n                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n                  args = null;\n                  continue;\n                }\n              }\n              self.buildPaintImageXObject(resources, args[0], true, operatorList, cacheKey, imageCache);\n              args = null;\n              continue;\n            case _util.OPS.showText:\n              args[0] = self.handleText(args[0], stateManager.state);\n              break;\n            case _util.OPS.showSpacedText:\n              var arr = args[0];\n              var combinedGlyphs = [];\n              var arrLength = arr.length;\n              var state = stateManager.state;\n              for (i = 0; i < arrLength; ++i) {\n                var arrItem = arr[i];\n                if ((0, _util.isString)(arrItem)) {\n                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n                } else if ((0, _util.isNum)(arrItem)) {\n                  combinedGlyphs.push(arrItem);\n                }\n              }\n              args[0] = combinedGlyphs;\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\n              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.setTextRenderingMode:\n              stateManager.state.textRenderingMode = args[0];\n              break;\n            case _util.OPS.setFillColorSpace:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setStrokeColorSpace:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setFillColor:\n              cs = stateManager.state.fillColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColor:\n              cs = stateManager.state.strokeColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillGray:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeGray:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillCMYKColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeCMYKColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillRGBColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setStrokeRGBColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setFillColorN:\n              cs = stateManager.state.fillColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColorN:\n              cs = stateManager.state.strokeColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.shadingFill:\n              var shadingRes = resources.get('Shading');\n              if (!shadingRes) {\n                throw new _util.FormatError('No shading resource found');\n              }\n              var shading = shadingRes.get(args[0].name);\n              if (!shading) {\n                throw new _util.FormatError('No shading object found');\n              }\n              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\n              var patternIR = shadingFill.getIR();\n              args = [patternIR];\n              fn = _util.OPS.shadingFill;\n              break;\n            case _util.OPS.setGState:\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              next(self.setGState(resources, gState, operatorList, task, stateManager));\n              return;\n            case _util.OPS.moveTo:\n            case _util.OPS.lineTo:\n            case _util.OPS.curveTo:\n            case _util.OPS.curveTo2:\n            case _util.OPS.curveTo3:\n            case _util.OPS.closePath:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.rectangle:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.markPoint:\n            case _util.OPS.markPointProps:\n            case _util.OPS.beginMarkedContent:\n            case _util.OPS.beginMarkedContentProps:\n            case _util.OPS.endMarkedContent:\n            case _util.OPS.beginCompat:\n            case _util.OPS.endCompat:\n              continue;\n            default:\n              if (args !== null) {\n                for (i = 0, ii = args.length; i < ii; i++) {\n                  if (args[i] instanceof _primitives.Dict) {\n                    break;\n                  }\n                }\n                if (i < ii) {\n                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\n                  continue;\n                }\n              }\n          }\n          operatorList.addOp(fn, args);\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        closePendingRestoreOPS();\n        resolve();\n      }).catch(function (reason) {\n        if (_this8.options.ignoreErrors) {\n          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\n          closePendingRestoreOPS();\n          return;\n        }\n        throw reason;\n      });\n    },\n    getTextContent: function getTextContent(_ref4) {\n      var _this9 = this;\n\n      var stream = _ref4.stream,\n          task = _ref4.task,\n          resources = _ref4.resources,\n          _ref4$stateManager = _ref4.stateManager,\n          stateManager = _ref4$stateManager === undefined ? null : _ref4$stateManager,\n          _ref4$normalizeWhites = _ref4.normalizeWhitespace,\n          normalizeWhitespace = _ref4$normalizeWhites === undefined ? false : _ref4$normalizeWhites,\n          _ref4$combineTextItem = _ref4.combineTextItems,\n          combineTextItems = _ref4$combineTextItem === undefined ? false : _ref4$combineTextItem,\n          sink = _ref4.sink,\n          _ref4$seenStyles = _ref4.seenStyles,\n          seenStyles = _ref4$seenStyles === undefined ? Object.create(null) : _ref4$seenStyles;\n\n      resources = resources || _primitives.Dict.empty;\n      stateManager = stateManager || new StateManager(new TextState());\n      var WhitespaceRegexp = /\\s/g;\n      var textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      var textContentItem = {\n        initialized: false,\n        str: [],\n        width: 0,\n        height: 0,\n        vertical: false,\n        lastAdvanceWidth: 0,\n        lastAdvanceHeight: 0,\n        textAdvanceScale: 0,\n        spaceWidth: 0,\n        fakeSpaceMin: Infinity,\n        fakeMultiSpaceMin: Infinity,\n        fakeMultiSpaceMax: -0,\n        textRunBreakAllowed: false,\n        transform: null,\n        fontName: null\n      };\n      var SPACE_FACTOR = 0.3;\n      var MULTI_SPACE_FACTOR = 1.5;\n      var MULTI_SPACE_FACTOR_MAX = 4;\n      var self = this;\n      var xref = this.xref;\n      var xobjs = null;\n      var skipEmptyXObjs = Object.create(null);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var textState;\n      function ensureTextContentItem() {\n        if (textContentItem.initialized) {\n          return textContentItem;\n        }\n        var font = textState.font;\n        if (!(font.loadedName in seenStyles)) {\n          seenStyles[font.loadedName] = true;\n          textContent.styles[font.loadedName] = {\n            fontFamily: font.fallbackName,\n            ascent: font.ascent,\n            descent: font.descent,\n            vertical: font.vertical\n          };\n        }\n        textContentItem.fontName = font.loadedName;\n        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\n        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n          var glyphHeight = font.bbox[3] - font.bbox[1];\n          if (glyphHeight > 0) {\n            glyphHeight = glyphHeight * textState.fontMatrix[3];\n            tsm[3] *= glyphHeight;\n          }\n        }\n        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\n        textContentItem.transform = trm;\n        if (!font.vertical) {\n          textContentItem.width = 0;\n          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n          textContentItem.vertical = false;\n        } else {\n          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n          textContentItem.height = 0;\n          textContentItem.vertical = true;\n        }\n        var a = textState.textLineMatrix[0];\n        var b = textState.textLineMatrix[1];\n        var scaleLineX = Math.sqrt(a * a + b * b);\n        a = textState.ctm[0];\n        b = textState.ctm[1];\n        var scaleCtmX = Math.sqrt(a * a + b * b);\n        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n        textContentItem.lastAdvanceWidth = 0;\n        textContentItem.lastAdvanceHeight = 0;\n        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n        if (spaceWidth) {\n          textContentItem.spaceWidth = spaceWidth;\n          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n          textContentItem.textRunBreakAllowed = !font.isMonospace;\n        } else {\n          textContentItem.spaceWidth = 0;\n          textContentItem.fakeSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMax = 0;\n          textContentItem.textRunBreakAllowed = false;\n        }\n        textContentItem.initialized = true;\n        return textContentItem;\n      }\n      function replaceWhitespace(str) {\n        var i = 0,\n            ii = str.length,\n            code;\n        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n          i++;\n        }\n        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n      }\n      function runBidiTransform(textChunk) {\n        var str = textChunk.str.join('');\n        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\n        return {\n          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n          dir: bidiResult.dir,\n          width: textChunk.width,\n          height: textChunk.height,\n          transform: textChunk.transform,\n          fontName: textChunk.fontName\n        };\n      }\n      function handleSetFont(fontName, fontRef) {\n        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\n          textState.font = translated.font;\n          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        });\n      }\n      function buildTextContentItem(chars) {\n        var font = textState.font;\n        var textChunk = ensureTextContentItem();\n        var width = 0;\n        var height = 0;\n        var glyphs = font.charsToGlyphs(chars);\n        for (var i = 0; i < glyphs.length; i++) {\n          var glyph = glyphs[i];\n          var glyphWidth = null;\n          if (font.vertical && glyph.vmetric) {\n            glyphWidth = glyph.vmetric[0];\n          } else {\n            glyphWidth = glyph.width;\n          }\n          var glyphUnicode = glyph.unicode;\n          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\n          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n            glyphUnicode = NormalizedUnicodes[glyphUnicode];\n          }\n          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\n          var charSpacing = textState.charSpacing;\n          if (glyph.isSpace) {\n            var wordSpacing = textState.wordSpacing;\n            charSpacing += wordSpacing;\n            if (wordSpacing > 0) {\n              addFakeSpaces(wordSpacing, textChunk.str);\n            }\n          }\n          var tx = 0;\n          var ty = 0;\n          if (!font.vertical) {\n            var w0 = glyphWidth * textState.fontMatrix[0];\n            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n            width += tx;\n          } else {\n            var w1 = glyphWidth * textState.fontMatrix[0];\n            ty = w1 * textState.fontSize + charSpacing;\n            height += ty;\n          }\n          textState.translateTextMatrix(tx, ty);\n          textChunk.str.push(glyphUnicode);\n        }\n        if (!font.vertical) {\n          textChunk.lastAdvanceWidth = width;\n          textChunk.width += width;\n        } else {\n          textChunk.lastAdvanceHeight = height;\n          textChunk.height += Math.abs(height);\n        }\n        return textChunk;\n      }\n      function addFakeSpaces(width, strBuf) {\n        if (width < textContentItem.fakeSpaceMin) {\n          return;\n        }\n        if (width < textContentItem.fakeMultiSpaceMin) {\n          strBuf.push(' ');\n          return;\n        }\n        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n        while (fakeSpaces-- > 0) {\n          strBuf.push(' ');\n        }\n      }\n      function flushTextContentItem() {\n        if (!textContentItem.initialized) {\n          return;\n        }\n        textContentItem.width *= textContentItem.textAdvanceScale;\n        textContentItem.height *= textContentItem.textAdvanceScale;\n        textContent.items.push(runBidiTransform(textContentItem));\n        textContentItem.initialized = false;\n        textContentItem.str.length = 0;\n      }\n      function enqueueChunk() {\n        var length = textContent.items.length;\n        if (length > 0) {\n          sink.enqueue(textContent, length);\n          textContent.items = [];\n          textContent.styles = Object.create(null);\n        }\n      }\n      var timeSlotManager = new TimeSlotManager();\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          enqueueChunk();\n          Promise.all([promise, sink.ready]).then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            args = [];\n        while (!(stop = timeSlotManager.check())) {\n          args.length = 0;\n          operation.args = args;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          textState = stateManager.state;\n          var fn = operation.fn;\n          args = operation.args;\n          var advance, diff;\n          switch (fn | 0) {\n            case _util.OPS.setFont:\n              var fontNameArg = args[0].name,\n                  fontSizeArg = args[1];\n              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n                break;\n              }\n              flushTextContentItem();\n              textState.fontName = fontNameArg;\n              textState.fontSize = fontSizeArg;\n              next(handleSetFont(fontNameArg, null));\n              return;\n            case _util.OPS.setTextRise:\n              flushTextContentItem();\n              textState.textRise = args[0];\n              break;\n            case _util.OPS.setHScale:\n              flushTextContentItem();\n              textState.textHScale = args[0] / 100;\n              break;\n            case _util.OPS.setLeading:\n              flushTextContentItem();\n              textState.leading = args[0];\n              break;\n            case _util.OPS.moveText:\n              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n              advance = args[0] - args[1];\n              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(args[0], args[1]);\n                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.setLeadingMoveText:\n              flushTextContentItem();\n              textState.leading = -args[1];\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.nextLine:\n              flushTextContentItem();\n              textState.carriageReturn();\n              break;\n            case _util.OPS.setTextMatrix:\n              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(advance.width, advance.height);\n                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n            case _util.OPS.setCharSpacing:\n              textState.charSpacing = args[0];\n              break;\n            case _util.OPS.setWordSpacing:\n              textState.wordSpacing = args[0];\n              break;\n            case _util.OPS.beginText:\n              flushTextContentItem();\n              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\n              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n              break;\n            case _util.OPS.showSpacedText:\n              var items = args[0];\n              var offset;\n              for (var j = 0, jj = items.length; j < jj; j++) {\n                if (typeof items[j] === 'string') {\n                  buildTextContentItem(items[j]);\n                } else if ((0, _util.isNum)(items[j])) {\n                  ensureTextContentItem();\n                  advance = items[j] * textState.fontSize / 1000;\n                  var breakTextRun = false;\n                  if (textState.font.vertical) {\n                    offset = advance;\n                    textState.translateTextMatrix(0, offset);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.height += offset;\n                    }\n                  } else {\n                    advance = -advance;\n                    offset = advance * textState.textHScale;\n                    textState.translateTextMatrix(offset, 0);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.width += offset;\n                    }\n                  }\n                  if (breakTextRun) {\n                    flushTextContentItem();\n                  } else if (advance > 0) {\n                    addFakeSpaces(advance, textContentItem.str);\n                  }\n                }\n              }\n              break;\n            case _util.OPS.showText:\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineShowText:\n              flushTextContentItem();\n              textState.carriageReturn();\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              flushTextContentItem();\n              textState.wordSpacing = args[0];\n              textState.charSpacing = args[1];\n              textState.carriageReturn();\n              buildTextContentItem(args[2]);\n              break;\n            case _util.OPS.paintXObject:\n              flushTextContentItem();\n              if (!xobjs) {\n                xobjs = resources.get('XObject') || _primitives.Dict.empty;\n              }\n              var name = args[0].name;\n              if (name && skipEmptyXObjs[name] !== undefined) {\n                break;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name !== 'Form') {\n                  skipEmptyXObjs[name] = true;\n                  resolveXObject();\n                  return;\n                }\n                var currentState = stateManager.state.clone();\n                var xObjStateManager = new StateManager(currentState);\n                var matrix = xobj.dict.getArray('Matrix');\n                if (Array.isArray(matrix) && matrix.length === 6) {\n                  xObjStateManager.transform(matrix);\n                }\n                enqueueChunk();\n                var sinkWrapper = {\n                  enqueueInvoked: false,\n                  enqueue: function enqueue(chunk, size) {\n                    this.enqueueInvoked = true;\n                    sink.enqueue(chunk, size);\n                  },\n\n                  get desiredSize() {\n                    return sink.desiredSize;\n                  },\n                  get ready() {\n                    return sink.ready;\n                  }\n                };\n                self.getTextContent({\n                  stream: xobj,\n                  task: task,\n                  resources: xobj.dict.get('Resources') || resources,\n                  stateManager: xObjStateManager,\n                  normalizeWhitespace: normalizeWhitespace,\n                  combineTextItems: combineTextItems,\n                  sink: sinkWrapper,\n                  seenStyles: seenStyles\n                }).then(function () {\n                  if (!sinkWrapper.enqueueInvoked) {\n                    skipEmptyXObjs[name] = true;\n                  }\n                  resolveXObject();\n                }, rejectXObject);\n              }).catch(function (reason) {\n                if (reason instanceof _util.AbortException) {\n                  return;\n                }\n                if (self.options.ignoreErrors) {\n                  (0, _util.warn)('getTextContent - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setGState:\n              flushTextContentItem();\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              if (!(0, _primitives.isDict)(gState)) {\n                break;\n              }\n              var gStateFont = gState.get('Font');\n              if (gStateFont) {\n                textState.fontName = null;\n                textState.fontSize = gStateFont[1];\n                next(handleSetFont(null, gStateFont[0]));\n                return;\n              }\n              break;\n          }\n          if (textContent.items.length >= sink.desiredSize) {\n            stop = true;\n            break;\n          }\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        flushTextContentItem();\n        enqueueChunk();\n        resolve();\n      }).catch(function (reason) {\n        if (reason instanceof _util.AbortException) {\n          return;\n        }\n        if (_this9.options.ignoreErrors) {\n          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\n          flushTextContentItem();\n          enqueueChunk();\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\n      var _this10 = this;\n\n      var xref = this.xref;\n      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n      if (properties.composite) {\n        var cidSystemInfo = dict.get('CIDSystemInfo');\n        if ((0, _primitives.isDict)(cidSystemInfo)) {\n          properties.cidSystemInfo = {\n            registry: cidSystemInfo.get('Registry'),\n            ordering: cidSystemInfo.get('Ordering'),\n            supplement: cidSystemInfo.get('Supplement')\n          };\n        }\n        var cidToGidMap = dict.get('CIDToGIDMap');\n        if ((0, _primitives.isStream)(cidToGidMap)) {\n          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n        }\n      }\n      var differences = [];\n      var baseEncodingName = null;\n      var encoding;\n      if (dict.has('Encoding')) {\n        encoding = dict.get('Encoding');\n        if ((0, _primitives.isDict)(encoding)) {\n          baseEncodingName = encoding.get('BaseEncoding');\n          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\n          if (encoding.has('Differences')) {\n            var diffEncoding = encoding.get('Differences');\n            var index = 0;\n            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n              var data = xref.fetchIfRef(diffEncoding[j]);\n              if ((0, _util.isNum)(data)) {\n                index = data;\n              } else if ((0, _primitives.isName)(data)) {\n                differences[index++] = data.name;\n              } else {\n                throw new _util.FormatError('Invalid entry in \\'Differences\\' array: ' + data);\n              }\n            }\n          }\n        } else if ((0, _primitives.isName)(encoding)) {\n          baseEncodingName = encoding.name;\n        } else {\n          throw new _util.FormatError('Encoding is not a Name nor a Dict');\n        }\n        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n          baseEncodingName = null;\n        }\n      }\n      if (baseEncodingName) {\n        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\n      } else {\n        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\n        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\n        encoding = _encodings.StandardEncoding;\n        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n          encoding = _encodings.WinAnsiEncoding;\n        }\n        if (isSymbolicFont) {\n          encoding = _encodings.MacRomanEncoding;\n          if (!properties.file) {\n            if (/Symbol/i.test(properties.name)) {\n              encoding = _encodings.SymbolSetEncoding;\n            } else if (/Dingbats/i.test(properties.name)) {\n              encoding = _encodings.ZapfDingbatsEncoding;\n            }\n          }\n        }\n        properties.defaultEncoding = encoding;\n      }\n      properties.differences = differences;\n      properties.baseEncodingName = baseEncodingName;\n      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n      properties.dict = dict;\n      return toUnicodePromise.then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return _this10.buildToUnicode(properties);\n      }).then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return properties;\n      });\n    },\n    buildToUnicode: function PartialEvaluator_buildToUnicode(properties) {\n      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n      if (properties.hasIncludedToUnicodeMap) {\n        return Promise.resolve(properties.toUnicode);\n      }\n      var toUnicode, charcode, glyphName;\n      if (!properties.composite) {\n        toUnicode = [];\n        var encoding = properties.defaultEncoding.slice();\n        var baseEncodingName = properties.baseEncodingName;\n        var differences = properties.differences;\n        for (charcode in differences) {\n          glyphName = differences[charcode];\n          if (glyphName === '.notdef') {\n            continue;\n          }\n          encoding[charcode] = glyphName;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        for (charcode in encoding) {\n          glyphName = encoding[charcode];\n          if (glyphName === '') {\n            continue;\n          } else if (glyphsUnicodeMap[glyphName] === undefined) {\n            var code = 0;\n            switch (glyphName[0]) {\n              case 'G':\n                if (glyphName.length === 3) {\n                  code = parseInt(glyphName.substr(1), 16);\n                }\n                break;\n              case 'g':\n                if (glyphName.length === 5) {\n                  code = parseInt(glyphName.substr(1), 16);\n                }\n                break;\n              case 'C':\n              case 'c':\n                if (glyphName.length >= 3) {\n                  code = +glyphName.substr(1);\n                }\n                break;\n              default:\n                var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n                if (unicode !== -1) {\n                  code = unicode;\n                }\n            }\n            if (code) {\n              if (baseEncodingName && code === +charcode) {\n                var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\n                if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n                  toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n                  continue;\n                }\n              }\n              toUnicode[charcode] = String.fromCharCode(code);\n            }\n            continue;\n          }\n          toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n        }\n        return Promise.resolve(new _fonts.ToUnicodeMap(toUnicode));\n      }\n      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n        var registry = properties.cidSystemInfo.registry;\n        var ordering = properties.cidSystemInfo.ordering;\n        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\n        return _cmap.CMapFactory.create({\n          encoding: ucs2CMapName,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (ucs2CMap) {\n          var cMap = properties.cMap;\n          toUnicode = [];\n          cMap.forEach(function (charcode, cid) {\n            if (cid > 0xffff) {\n              throw new _util.FormatError('Max size of CID is 65,535');\n            }\n            var ucs2 = ucs2CMap.lookup(cid);\n            if (ucs2) {\n              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n            }\n          });\n          return new _fonts.ToUnicodeMap(toUnicode);\n        });\n      }\n      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n    },\n    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n      var cmapObj = toUnicode;\n      if ((0, _primitives.isName)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          return new _fonts.ToUnicodeMap(cmap.getMap());\n        });\n      } else if ((0, _primitives.isStream)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          var map = new Array(cmap.length);\n          cmap.forEach(function (charCode, token) {\n            var str = [];\n            for (var k = 0; k < token.length; k += 2) {\n              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              if ((w1 & 0xF800) !== 0xD800) {\n                str.push(w1);\n                continue;\n              }\n              k += 2;\n              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n            }\n            map[charCode] = String.fromCharCode.apply(String, str);\n          });\n          return new _fonts.ToUnicodeMap(map);\n        });\n      }\n      return Promise.resolve(null);\n    },\n    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n      var glyphsData = cidToGidStream.getBytes();\n      var result = [];\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n        if (glyphID === 0) {\n          continue;\n        }\n        var code = j >> 1;\n        result[code] = glyphID;\n      }\n      return result;\n    },\n    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\n      var xref = this.xref;\n      var glyphsWidths = [];\n      var defaultWidth = 0;\n      var glyphsVMetrics = [];\n      var defaultVMetrics;\n      var i, ii, j, jj, start, code, widths;\n      if (properties.composite) {\n        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\n        widths = dict.get('W');\n        if (widths) {\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            start = xref.fetchIfRef(widths[i++]);\n            code = xref.fetchIfRef(widths[i]);\n            if (Array.isArray(code)) {\n              for (j = 0, jj = code.length; j < jj; j++) {\n                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n              }\n            } else {\n              var width = xref.fetchIfRef(widths[++i]);\n              for (j = start; j <= code; j++) {\n                glyphsWidths[j] = width;\n              }\n            }\n          }\n        }\n        if (properties.vertical) {\n          var vmetrics = dict.getArray('DW2') || [880, -1000];\n          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n          vmetrics = dict.get('W2');\n          if (vmetrics) {\n            for (i = 0, ii = vmetrics.length; i < ii; i++) {\n              start = xref.fetchIfRef(vmetrics[i++]);\n              code = xref.fetchIfRef(vmetrics[i]);\n              if (Array.isArray(code)) {\n                for (j = 0, jj = code.length; j < jj; j++) {\n                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\n                }\n              } else {\n                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\n                for (j = start; j <= code; j++) {\n                  glyphsVMetrics[j] = vmetric;\n                }\n              }\n            }\n          }\n        }\n      } else {\n        var firstChar = properties.firstChar;\n        widths = dict.get('Widths');\n        if (widths) {\n          j = firstChar;\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n          }\n          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if ((0, _primitives.isName)(baseFontName)) {\n            var metrics = this.getBaseFontMetrics(baseFontName.name);\n            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n            defaultWidth = metrics.defaultWidth;\n          }\n        }\n      }\n      var isMonospace = true;\n      var firstWidth = defaultWidth;\n      for (var glyph in glyphsWidths) {\n        var glyphWidth = glyphsWidths[glyph];\n        if (!glyphWidth) {\n          continue;\n        }\n        if (!firstWidth) {\n          firstWidth = glyphWidth;\n          continue;\n        }\n        if (firstWidth !== glyphWidth) {\n          isMonospace = false;\n          break;\n        }\n      }\n      if (isMonospace) {\n        properties.flags |= _fonts.FontFlags.FixedPitch;\n      }\n      properties.defaultWidth = defaultWidth;\n      properties.widths = glyphsWidths;\n      properties.defaultVMetrics = defaultVMetrics;\n      properties.vmetrics = glyphsVMetrics;\n    },\n    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n      var fontNameWoStyle = baseFontName.split('-')[0];\n      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\n    },\n    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n      var defaultWidth = 0;\n      var widths = [];\n      var monospace = false;\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\n      var lookupName = stdFontMap[name] || name;\n      var Metrics = (0, _metrics.getMetrics)();\n      if (!(lookupName in Metrics)) {\n        if (this.isSerifFont(name)) {\n          lookupName = 'Times-Roman';\n        } else {\n          lookupName = 'Helvetica';\n        }\n      }\n      var glyphWidths = Metrics[lookupName];\n      if ((0, _util.isNum)(glyphWidths)) {\n        defaultWidth = glyphWidths;\n        monospace = true;\n      } else {\n        widths = glyphWidths();\n      }\n      return {\n        defaultWidth: defaultWidth,\n        monospace: monospace,\n        widths: widths\n      };\n    },\n    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n      var widths = Object.create(null);\n      var differences = properties.differences;\n      var encoding = properties.defaultEncoding;\n      for (var charCode = 0; charCode < 256; charCode++) {\n        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n          widths[charCode] = widthsByGlyphName[differences[charCode]];\n          continue;\n        }\n        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n          widths[charCode] = widthsByGlyphName[encoding[charCode]];\n          continue;\n        }\n      }\n      return widths;\n    },\n    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\n      var baseDict = dict;\n      var type = dict.get('Subtype');\n      if (!(0, _primitives.isName)(type)) {\n        throw new _util.FormatError('invalid font Subtype');\n      }\n      var composite = false;\n      var uint8array;\n      if (type.name === 'Type0') {\n        var df = dict.get('DescendantFonts');\n        if (!df) {\n          throw new _util.FormatError('Descendant fonts are not specified');\n        }\n        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\n        type = dict.get('Subtype');\n        if (!(0, _primitives.isName)(type)) {\n          throw new _util.FormatError('invalid font Subtype');\n        }\n        composite = true;\n      }\n      var descriptor = dict.get('FontDescriptor');\n      if (descriptor) {\n        var hash = new _murmurhash.MurmurHash3_64();\n        var encoding = baseDict.getRaw('Encoding');\n        if ((0, _primitives.isName)(encoding)) {\n          hash.update(encoding.name);\n        } else if ((0, _primitives.isRef)(encoding)) {\n          hash.update(encoding.toString());\n        } else if ((0, _primitives.isDict)(encoding)) {\n          var keys = encoding.getKeys();\n          for (var i = 0, ii = keys.length; i < ii; i++) {\n            var entry = encoding.getRaw(keys[i]);\n            if ((0, _primitives.isName)(entry)) {\n              hash.update(entry.name);\n            } else if ((0, _primitives.isRef)(entry)) {\n              hash.update(entry.toString());\n            } else if (Array.isArray(entry)) {\n              var diffLength = entry.length,\n                  diffBuf = new Array(diffLength);\n              for (var j = 0; j < diffLength; j++) {\n                var diffEntry = entry[j];\n                if ((0, _primitives.isName)(diffEntry)) {\n                  diffBuf[j] = diffEntry.name;\n                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\n                  diffBuf[j] = diffEntry.toString();\n                }\n              }\n              hash.update(diffBuf.join());\n            }\n          }\n        }\n        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n        if ((0, _primitives.isStream)(toUnicode)) {\n          var stream = toUnicode.str || toUnicode;\n          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n          hash.update(uint8array);\n        } else if ((0, _primitives.isName)(toUnicode)) {\n          hash.update(toUnicode.name);\n        }\n        var widths = dict.get('Widths') || baseDict.get('Widths');\n        if (widths) {\n          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n          hash.update(uint8array);\n        }\n      }\n      return {\n        descriptor: descriptor,\n        dict: dict,\n        baseDict: baseDict,\n        composite: composite,\n        type: type.name,\n        hash: hash ? hash.hexdigest() : ''\n      };\n    },\n    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\n      var _this11 = this;\n\n      var baseDict = preEvaluatedFont.baseDict;\n      var dict = preEvaluatedFont.dict;\n      var composite = preEvaluatedFont.composite;\n      var descriptor = preEvaluatedFont.descriptor;\n      var type = preEvaluatedFont.type;\n      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n      var properties;\n      if (!descriptor) {\n        if (type === 'Type3') {\n          descriptor = new _primitives.Dict(null);\n          descriptor.set('FontName', _primitives.Name.get(type));\n          descriptor.set('FontBBox', dict.getArray('FontBBox'));\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if (!(0, _primitives.isName)(baseFontName)) {\n            throw new _util.FormatError('Base font is not specified');\n          }\n          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n          var metrics = this.getBaseFontMetrics(baseFontName);\n          var fontNameWoStyle = baseFontName.split('-')[0];\n          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\n          properties = {\n            type: type,\n            name: baseFontName,\n            widths: metrics.widths,\n            defaultWidth: metrics.defaultWidth,\n            flags: flags,\n            firstChar: 0,\n            lastChar: maxCharIndex\n          };\n          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\n            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\n            return new _fonts.Font(baseFontName, null, properties);\n          });\n        }\n      }\n      var firstChar = dict.get('FirstChar') || 0;\n      var lastChar = dict.get('LastChar') || maxCharIndex;\n      var fontName = descriptor.get('FontName');\n      var baseFont = dict.get('BaseFont');\n      if ((0, _util.isString)(fontName)) {\n        fontName = _primitives.Name.get(fontName);\n      }\n      if ((0, _util.isString)(baseFont)) {\n        baseFont = _primitives.Name.get(baseFont);\n      }\n      if (type !== 'Type3') {\n        var fontNameStr = fontName && fontName.name;\n        var baseFontStr = baseFont && baseFont.name;\n        if (fontNameStr !== baseFontStr) {\n          (0, _util.info)('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n            fontName = baseFont;\n          }\n        }\n      }\n      fontName = fontName || baseFont;\n      if (!(0, _primitives.isName)(fontName)) {\n        throw new _util.FormatError('invalid font name');\n      }\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n      if (fontFile) {\n        if (fontFile.dict) {\n          var subtype = fontFile.dict.get('Subtype');\n          if (subtype) {\n            subtype = subtype.name;\n          }\n          var length1 = fontFile.dict.get('Length1');\n          var length2 = fontFile.dict.get('Length2');\n          var length3 = fontFile.dict.get('Length3');\n        }\n      }\n      properties = {\n        type: type,\n        name: fontName.name,\n        subtype: subtype,\n        file: fontFile,\n        length1: length1,\n        length2: length2,\n        length3: length3,\n        loadedName: baseDict.loadedName,\n        composite: composite,\n        wideChars: composite,\n        fixedPitch: false,\n        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\n        firstChar: firstChar || 0,\n        lastChar: lastChar || maxCharIndex,\n        bbox: descriptor.getArray('FontBBox'),\n        ascent: descriptor.get('Ascent'),\n        descent: descriptor.get('Descent'),\n        xHeight: descriptor.get('XHeight'),\n        capHeight: descriptor.get('CapHeight'),\n        flags: descriptor.get('Flags'),\n        italicAngle: descriptor.get('ItalicAngle'),\n        isType3Font: false\n      };\n      var cMapPromise;\n      if (composite) {\n        var cidEncoding = baseDict.get('Encoding');\n        if ((0, _primitives.isName)(cidEncoding)) {\n          properties.cidEncoding = cidEncoding.name;\n        }\n        cMapPromise = _cmap.CMapFactory.create({\n          encoding: cidEncoding,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cMap) {\n          properties.cMap = cMap;\n          properties.vertical = properties.cMap.vertical;\n        });\n      } else {\n        cMapPromise = Promise.resolve(undefined);\n      }\n      return cMapPromise.then(function () {\n        return _this11.extractDataStructures(dict, baseDict, properties);\n      }).then(function (properties) {\n        _this11.extractWidths(dict, descriptor, properties);\n        if (type === 'Type3') {\n          properties.isType3Font = true;\n        }\n        return new _fonts.Font(fontName.name, fontFile, properties);\n      });\n    }\n  };\n  return PartialEvaluator;\n}();\nvar TranslatedFont = function TranslatedFontClosure() {\n  function TranslatedFont(loadedName, font, dict) {\n    this.loadedName = loadedName;\n    this.font = font;\n    this.dict = dict;\n    this.type3Loaded = null;\n    this.sent = false;\n  }\n  TranslatedFont.prototype = {\n    send: function send(handler) {\n      if (this.sent) {\n        return;\n      }\n      var fontData = this.font.exportData();\n      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\n      this.sent = true;\n    },\n    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\n      if (!this.font.isType3Font) {\n        throw new Error('Must be a Type3 font.');\n      }\n      if (this.type3Loaded) {\n        return this.type3Loaded;\n      }\n      var type3Options = Object.create(evaluator.options);\n      type3Options.ignoreErrors = false;\n      var type3Evaluator = evaluator.clone(type3Options);\n      var translatedFont = this.font;\n      var loadCharProcsPromise = Promise.resolve();\n      var charProcs = this.dict.get('CharProcs');\n      var fontResources = this.dict.get('Resources') || resources;\n      var charProcKeys = charProcs.getKeys();\n      var charProcOperatorList = Object.create(null);\n\n      var _loop2 = function _loop2() {\n        var key = charProcKeys[i];\n        loadCharProcsPromise = loadCharProcsPromise.then(function () {\n          var glyphStream = charProcs.get(key);\n          var operatorList = new OperatorList();\n          return type3Evaluator.getOperatorList({\n            stream: glyphStream,\n            task: task,\n            resources: fontResources,\n            operatorList: operatorList\n          }).then(function () {\n            charProcOperatorList[key] = operatorList.getIR();\n            parentOperatorList.addDependencies(operatorList.dependencies);\n          }).catch(function (reason) {\n            (0, _util.warn)('Type3 font resource \"' + key + '\" is not available.');\n            var operatorList = new OperatorList();\n            charProcOperatorList[key] = operatorList.getIR();\n          });\n        });\n      };\n\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n        _loop2();\n      }\n      this.type3Loaded = loadCharProcsPromise.then(function () {\n        translatedFont.charProcOperatorList = charProcOperatorList;\n      });\n      return this.type3Loaded;\n    }\n  };\n  return TranslatedFont;\n}();\nvar OperatorList = function OperatorListClosure() {\n  var CHUNK_SIZE = 1000;\n  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n  function getTransfers(queue) {\n    var transfers = [];\n    var fnArray = queue.fnArray,\n        argsArray = queue.argsArray;\n    for (var i = 0, ii = queue.length; i < ii; i++) {\n      switch (fnArray[i]) {\n        case _util.OPS.paintInlineImageXObject:\n        case _util.OPS.paintInlineImageXObjectGroup:\n        case _util.OPS.paintImageMaskXObject:\n          var arg = argsArray[i][0];\n          if (!arg.cached) {\n            transfers.push(arg.data.buffer);\n          }\n          break;\n      }\n    }\n    return transfers;\n  }\n  function OperatorList(intent, messageHandler, pageIndex) {\n    this.messageHandler = messageHandler;\n    this.fnArray = [];\n    this.argsArray = [];\n    this.dependencies = Object.create(null);\n    this._totalLength = 0;\n    this.pageIndex = pageIndex;\n    this.intent = intent;\n  }\n  OperatorList.prototype = {\n    get length() {\n      return this.argsArray.length;\n    },\n    get totalLength() {\n      return this._totalLength + this.length;\n    },\n    addOp: function addOp(fn, args) {\n      this.fnArray.push(fn);\n      this.argsArray.push(args);\n      if (this.messageHandler) {\n        if (this.fnArray.length >= CHUNK_SIZE) {\n          this.flush();\n        } else if (this.fnArray.length >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\n          this.flush();\n        }\n      }\n    },\n    addDependency: function addDependency(dependency) {\n      if (dependency in this.dependencies) {\n        return;\n      }\n      this.dependencies[dependency] = true;\n      this.addOp(_util.OPS.dependency, [dependency]);\n    },\n    addDependencies: function addDependencies(dependencies) {\n      for (var key in dependencies) {\n        this.addDependency(key);\n      }\n    },\n    addOpList: function addOpList(opList) {\n      _util.Util.extendObj(this.dependencies, opList.dependencies);\n      for (var i = 0, ii = opList.length; i < ii; i++) {\n        this.addOp(opList.fnArray[i], opList.argsArray[i]);\n      }\n    },\n    getIR: function getIR() {\n      return {\n        fnArray: this.fnArray,\n        argsArray: this.argsArray,\n        length: this.length\n      };\n    },\n    flush: function flush(lastChunk) {\n      if (this.intent !== 'oplist') {\n        new QueueOptimizer().optimize(this);\n      }\n      var transfers = getTransfers(this);\n      var length = this.length;\n      this._totalLength += length;\n      this.messageHandler.send('RenderPageChunk', {\n        operatorList: {\n          fnArray: this.fnArray,\n          argsArray: this.argsArray,\n          lastChunk: lastChunk,\n          length: length\n        },\n        pageIndex: this.pageIndex,\n        intent: this.intent\n      }, transfers);\n      this.dependencies = Object.create(null);\n      this.fnArray.length = 0;\n      this.argsArray.length = 0;\n    }\n  };\n  return OperatorList;\n}();\nvar StateManager = function StateManagerClosure() {\n  function StateManager(initialState) {\n    this.state = initialState;\n    this.stateStack = [];\n  }\n  StateManager.prototype = {\n    save: function save() {\n      var old = this.state;\n      this.stateStack.push(this.state);\n      this.state = old.clone();\n    },\n    restore: function restore() {\n      var prev = this.stateStack.pop();\n      if (prev) {\n        this.state = prev;\n      }\n    },\n    transform: function transform(args) {\n      this.state.ctm = _util.Util.transform(this.state.ctm, args);\n    }\n  };\n  return StateManager;\n}();\nvar TextState = function TextStateClosure() {\n  function TextState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.fontName = null;\n    this.fontSize = 0;\n    this.font = null;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.textMatrix = _util.IDENTITY_MATRIX.slice();\n    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.leading = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n  }\n  TextState.prototype = {\n    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textLineMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textLineMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n      var font = this.font;\n      if (!font) {\n        return null;\n      }\n      var m = this.textLineMatrix;\n      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n        return null;\n      }\n      var txDiff = e - m[4],\n          tyDiff = f - m[5];\n      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n        return null;\n      }\n      var tx,\n          ty,\n          denominator = a * d - b * c;\n      if (font.vertical) {\n        tx = -tyDiff * c / denominator;\n        ty = tyDiff * a / denominator;\n      } else {\n        tx = txDiff * d / denominator;\n        ty = -txDiff * b / denominator;\n      }\n      return {\n        width: tx,\n        height: ty,\n        value: font.vertical ? ty : tx\n      };\n    },\n    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\n      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\n    },\n    carriageReturn: function TextState_carriageReturn() {\n      this.translateTextLineMatrix(0, -this.leading);\n      this.textMatrix = this.textLineMatrix.slice();\n    },\n    clone: function TextState_clone() {\n      var clone = Object.create(this);\n      clone.textMatrix = this.textMatrix.slice();\n      clone.textLineMatrix = this.textLineMatrix.slice();\n      clone.fontMatrix = this.fontMatrix.slice();\n      return clone;\n    }\n  };\n  return TextState;\n}();\nvar EvalState = function EvalStateClosure() {\n  function EvalState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.font = null;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n  }\n  EvalState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    }\n  };\n  return EvalState;\n}();\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\n    t['w'] = {\n      id: _util.OPS.setLineWidth,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['J'] = {\n      id: _util.OPS.setLineCap,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['j'] = {\n      id: _util.OPS.setLineJoin,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['M'] = {\n      id: _util.OPS.setMiterLimit,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['d'] = {\n      id: _util.OPS.setDash,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['ri'] = {\n      id: _util.OPS.setRenderingIntent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['i'] = {\n      id: _util.OPS.setFlatness,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['gs'] = {\n      id: _util.OPS.setGState,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['q'] = {\n      id: _util.OPS.save,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Q'] = {\n      id: _util.OPS.restore,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['cm'] = {\n      id: _util.OPS.transform,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['m'] = {\n      id: _util.OPS.moveTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['l'] = {\n      id: _util.OPS.lineTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['c'] = {\n      id: _util.OPS.curveTo,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['v'] = {\n      id: _util.OPS.curveTo2,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['y'] = {\n      id: _util.OPS.curveTo3,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['h'] = {\n      id: _util.OPS.closePath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['re'] = {\n      id: _util.OPS.rectangle,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['S'] = {\n      id: _util.OPS.stroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['s'] = {\n      id: _util.OPS.closeStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['F'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f*'] = {\n      id: _util.OPS.eoFill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B'] = {\n      id: _util.OPS.fillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B*'] = {\n      id: _util.OPS.eoFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b'] = {\n      id: _util.OPS.closeFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b*'] = {\n      id: _util.OPS.closeEOFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['n'] = {\n      id: _util.OPS.endPath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W'] = {\n      id: _util.OPS.clip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W*'] = {\n      id: _util.OPS.eoClip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BT'] = {\n      id: _util.OPS.beginText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ET'] = {\n      id: _util.OPS.endText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tc'] = {\n      id: _util.OPS.setCharSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tw'] = {\n      id: _util.OPS.setWordSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tz'] = {\n      id: _util.OPS.setHScale,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TL'] = {\n      id: _util.OPS.setLeading,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tf'] = {\n      id: _util.OPS.setFont,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tr'] = {\n      id: _util.OPS.setTextRenderingMode,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Ts'] = {\n      id: _util.OPS.setTextRise,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Td'] = {\n      id: _util.OPS.moveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['TD'] = {\n      id: _util.OPS.setLeadingMoveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tm'] = {\n      id: _util.OPS.setTextMatrix,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['T*'] = {\n      id: _util.OPS.nextLine,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tj'] = {\n      id: _util.OPS.showText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TJ'] = {\n      id: _util.OPS.showSpacedText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\\''] = {\n      id: _util.OPS.nextLineShowText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\"'] = {\n      id: _util.OPS.nextLineSetSpacingShowText,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['d0'] = {\n      id: _util.OPS.setCharWidth,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['d1'] = {\n      id: _util.OPS.setCharWidthAndBounds,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['CS'] = {\n      id: _util.OPS.setStrokeColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['cs'] = {\n      id: _util.OPS.setFillColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['SC'] = {\n      id: _util.OPS.setStrokeColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['SCN'] = {\n      id: _util.OPS.setStrokeColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['sc'] = {\n      id: _util.OPS.setFillColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['scn'] = {\n      id: _util.OPS.setFillColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['G'] = {\n      id: _util.OPS.setStrokeGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['g'] = {\n      id: _util.OPS.setFillGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['RG'] = {\n      id: _util.OPS.setStrokeRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['rg'] = {\n      id: _util.OPS.setFillRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['K'] = {\n      id: _util.OPS.setStrokeCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['k'] = {\n      id: _util.OPS.setFillCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['sh'] = {\n      id: _util.OPS.shadingFill,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BI'] = {\n      id: _util.OPS.beginInlineImage,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ID'] = {\n      id: _util.OPS.beginImageData,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EI'] = {\n      id: _util.OPS.endInlineImage,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Do'] = {\n      id: _util.OPS.paintXObject,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['MP'] = {\n      id: _util.OPS.markPoint,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['DP'] = {\n      id: _util.OPS.markPointProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['BMC'] = {\n      id: _util.OPS.beginMarkedContent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BDC'] = {\n      id: _util.OPS.beginMarkedContentProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['EMC'] = {\n      id: _util.OPS.endMarkedContent,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BX'] = {\n      id: _util.OPS.beginCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EX'] = {\n      id: _util.OPS.endCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BM'] = null;\n    t['BD'] = null;\n    t['true'] = null;\n    t['fa'] = null;\n    t['fal'] = null;\n    t['fals'] = null;\n    t['false'] = null;\n    t['nu'] = null;\n    t['nul'] = null;\n    t['null'] = null;\n  });\n  function EvaluatorPreprocessor(stream, xref, stateManager) {\n    this.opMap = getOPMap();\n    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\n    this.stateManager = stateManager;\n    this.nonProcessedArgs = [];\n  }\n  EvaluatorPreprocessor.prototype = {\n    get savedStatesDepth() {\n      return this.stateManager.stateStack.length;\n    },\n    read: function EvaluatorPreprocessor_read(operation) {\n      var args = operation.args;\n      while (true) {\n        var obj = this.parser.getObj();\n        if ((0, _primitives.isCmd)(obj)) {\n          var cmd = obj.cmd;\n          var opSpec = this.opMap[cmd];\n          if (!opSpec) {\n            (0, _util.warn)('Unknown command \"' + cmd + '\"');\n            continue;\n          }\n          var fn = opSpec.id;\n          var numArgs = opSpec.numArgs;\n          var argsLength = args !== null ? args.length : 0;\n          if (!opSpec.variableArgs) {\n            if (argsLength !== numArgs) {\n              var nonProcessedArgs = this.nonProcessedArgs;\n              while (argsLength > numArgs) {\n                nonProcessedArgs.push(args.shift());\n                argsLength--;\n              }\n              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n                if (args === null) {\n                  args = [];\n                }\n                args.unshift(nonProcessedArgs.pop());\n                argsLength++;\n              }\n            }\n            if (argsLength < numArgs) {\n              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n              if (args !== null) {\n                args.length = 0;\n              }\n              continue;\n            }\n          } else if (argsLength > numArgs) {\n            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n          }\n          this.preprocessCommand(fn, args);\n          operation.fn = fn;\n          operation.args = args;\n          return true;\n        }\n        if ((0, _primitives.isEOF)(obj)) {\n          return false;\n        }\n        if (obj !== null) {\n          if (args === null) {\n            args = [];\n          }\n          args.push(obj);\n          if (args.length > 33) {\n            throw new _util.FormatError('Too many arguments');\n          }\n        }\n      }\n    },\n    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n      switch (fn | 0) {\n        case _util.OPS.save:\n          this.stateManager.save();\n          break;\n        case _util.OPS.restore:\n          this.stateManager.restore();\n          break;\n        case _util.OPS.transform:\n          this.stateManager.transform(args);\n          break;\n      }\n    }\n  };\n  return EvaluatorPreprocessor;\n}();\nvar QueueOptimizer = function QueueOptimizerClosure() {\n  function addState(parentState, pattern, fn) {\n    var state = parentState;\n    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n      var item = pattern[i];\n      state = state[item] || (state[item] = []);\n    }\n    state[pattern[pattern.length - 1]] = fn;\n  }\n  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n    var iFirstPIMXO = iFirstSave + 2;\n    for (var i = 0; i < count; i++) {\n      var arg = argsArray[iFirstPIMXO + 4 * i];\n      var imageMask = arg.length === 1 && arg[0];\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\n        continue;\n      }\n      break;\n    }\n    return count - i;\n  }\n  var InitialState = [];\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], function foundInlineImageGroup(context) {\n    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n    var MAX_WIDTH = 1000;\n    var IMAGE_PADDING = 1;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIIXO = curr - 1;\n    var i = iFirstSave + 4;\n    var ii = fnArray.length;\n    while (i + 3 < ii) {\n      if (fnArray[i] !== _util.OPS.save || fnArray[i + 1] !== _util.OPS.transform || fnArray[i + 2] !== _util.OPS.paintInlineImageXObject || fnArray[i + 3] !== _util.OPS.restore) {\n        break;\n      }\n      i += 4;\n    }\n    var count = Math.min((i - iFirstSave) / 4, MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n      return i;\n    }\n    var maxX = 0;\n    var map = [],\n        maxLineHeight = 0;\n    var currentX = IMAGE_PADDING,\n        currentY = IMAGE_PADDING;\n    var q;\n    for (q = 0; q < count; q++) {\n      var transform = argsArray[iFirstTransform + (q << 2)];\n      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n      if (currentX + img.width > MAX_WIDTH) {\n        maxX = Math.max(maxX, currentX);\n        currentY += maxLineHeight + 2 * IMAGE_PADDING;\n        currentX = 0;\n        maxLineHeight = 0;\n      }\n      map.push({\n        transform: transform,\n        x: currentX,\n        y: currentY,\n        w: img.width,\n        h: img.height\n      });\n      currentX += img.width + 2 * IMAGE_PADDING;\n      maxLineHeight = Math.max(maxLineHeight, img.height);\n    }\n    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n    var imgRowSize = imgWidth << 2;\n    for (q = 0; q < count; q++) {\n      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n      var rowSize = map[q].w << 2;\n      var dataOffset = 0;\n      var offset = map[q].x + map[q].y * imgWidth << 2;\n      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n      for (var k = 0, kk = map[q].h; k < kk; k++) {\n        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n        dataOffset += rowSize;\n        offset += imgRowSize;\n      }\n      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n      while (offset >= 0) {\n        data[offset - 4] = data[offset];\n        data[offset - 3] = data[offset + 1];\n        data[offset - 2] = data[offset + 2];\n        data[offset - 1] = data[offset + 3];\n        data[offset + rowSize] = data[offset + rowSize - 4];\n        data[offset + rowSize + 1] = data[offset + rowSize - 3];\n        data[offset + rowSize + 2] = data[offset + rowSize - 2];\n        data[offset + rowSize + 3] = data[offset + rowSize - 1];\n        offset -= imgRowSize;\n      }\n    }\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\n    argsArray.splice(iFirstSave, count * 4, [{\n      width: imgWidth,\n      height: imgHeight,\n      kind: _util.ImageKind.RGBA_32BPP,\n      data: imgData\n    }, map]);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], function foundImageMaskGroup(context) {\n    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIMXO = curr - 1;\n    var i = iFirstSave + 4;\n    var ii = fnArray.length;\n    while (i + 3 < ii) {\n      if (fnArray[i] !== _util.OPS.save || fnArray[i + 1] !== _util.OPS.transform || fnArray[i + 2] !== _util.OPS.paintImageMaskXObject || fnArray[i + 3] !== _util.OPS.restore) {\n        break;\n      }\n      i += 4;\n    }\n    var count = (i - iFirstSave) / 4;\n    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n      return i;\n    }\n    var q;\n    var isSameImage = false;\n    var iTransform, transformArgs;\n    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n      isSameImage = true;\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\n      iTransform = iFirstTransform + 4;\n      var iPIMXO = iFirstPIMXO + 4;\n      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n        transformArgs = argsArray[iTransform];\n        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n            isSameImage = false;\n          } else {\n            count = q;\n          }\n          break;\n        }\n      }\n    }\n    if (isSameImage) {\n      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n      var positions = new Float32Array(count * 2);\n      iTransform = iFirstTransform;\n      for (q = 0; q < count; q++, iTransform += 4) {\n        transformArgs = argsArray[iTransform];\n        positions[q << 1] = transformArgs[4];\n        positions[(q << 1) + 1] = transformArgs[5];\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\n      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\n    } else {\n      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n      var images = [];\n      for (q = 0; q < count; q++) {\n        transformArgs = argsArray[iFirstTransform + (q << 2)];\n        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n        images.push({\n          data: maskParams.data,\n          width: maskParams.width,\n          height: maskParams.height,\n          transform: transformArgs\n        });\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\n      argsArray.splice(iFirstSave, count * 4, [images]);\n    }\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\n    var MIN_IMAGES_IN_BLOCK = 3;\n    var MAX_IMAGES_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIXO = curr - 1;\n    var iFirstRestore = curr;\n    if (argsArray[iFirstTransform][1] !== 0 || argsArray[iFirstTransform][2] !== 0) {\n      return iFirstRestore + 1;\n    }\n    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n    var firstTransformArg0 = argsArray[iFirstTransform][0];\n    var firstTransformArg3 = argsArray[iFirstTransform][3];\n    var i = iFirstSave + 4;\n    var ii = fnArray.length;\n    while (i + 3 < ii) {\n      if (fnArray[i] !== _util.OPS.save || fnArray[i + 1] !== _util.OPS.transform || fnArray[i + 2] !== _util.OPS.paintImageXObject || fnArray[i + 3] !== _util.OPS.restore) {\n        break;\n      }\n      if (argsArray[i + 1][0] !== firstTransformArg0 || argsArray[i + 1][1] !== 0 || argsArray[i + 1][2] !== 0 || argsArray[i + 1][3] !== firstTransformArg3) {\n        break;\n      }\n      if (argsArray[i + 2][0] !== firstPIXOArg0) {\n        break;\n      }\n      i += 4;\n    }\n    var count = Math.min((i - iFirstSave) / 4, MAX_IMAGES_IN_BLOCK);\n    if (count < MIN_IMAGES_IN_BLOCK) {\n      return i;\n    }\n    var positions = new Float32Array(count * 2);\n    var iTransform = iFirstTransform;\n    for (var q = 0; q < count; q++, iTransform += 4) {\n      var transformArgs = argsArray[iTransform];\n      positions[q << 1] = transformArgs[4];\n      positions[(q << 1) + 1] = transformArgs[5];\n    }\n    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\n    argsArray.splice(iFirstSave, count * 4, args);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], function (context) {\n    var MIN_CHARS_IN_BLOCK = 3;\n    var MAX_CHARS_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstBeginText = curr - 4;\n    var iFirstSetFont = curr - 3;\n    var iFirstSetTextMatrix = curr - 2;\n    var iFirstShowText = curr - 1;\n    var iFirstEndText = curr;\n    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n    var i = iFirstBeginText + 5;\n    var ii = fnArray.length;\n    while (i + 4 < ii) {\n      if (fnArray[i] !== _util.OPS.beginText || fnArray[i + 1] !== _util.OPS.setFont || fnArray[i + 2] !== _util.OPS.setTextMatrix || fnArray[i + 3] !== _util.OPS.showText || fnArray[i + 4] !== _util.OPS.endText) {\n        break;\n      }\n      if (argsArray[i + 1][0] !== firstSetFontArg0 || argsArray[i + 1][1] !== firstSetFontArg1) {\n        break;\n      }\n      i += 5;\n    }\n    var count = Math.min((i - iFirstBeginText) / 5, MAX_CHARS_IN_BLOCK);\n    if (count < MIN_CHARS_IN_BLOCK) {\n      return i;\n    }\n    var iFirst = iFirstBeginText;\n    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n      count++;\n      iFirst -= 5;\n    }\n    var iEndText = iFirst + 4;\n    for (var q = 1; q < count; q++) {\n      fnArray.splice(iEndText, 3);\n      argsArray.splice(iEndText, 3);\n      iEndText += 2;\n    }\n    return iEndText + 1;\n  });\n  function QueueOptimizer() {}\n  QueueOptimizer.prototype = {\n    optimize: function QueueOptimizer_optimize(queue) {\n      var fnArray = queue.fnArray,\n          argsArray = queue.argsArray;\n      var context = {\n        iCurr: 0,\n        fnArray: fnArray,\n        argsArray: argsArray\n      };\n      var state;\n      var i = 0,\n          ii = fnArray.length;\n      while (i < ii) {\n        state = (state || InitialState)[fnArray[i]];\n        if (typeof state === 'function') {\n          context.iCurr = i;\n          i = state(context);\n          state = undefined;\n          ii = context.fnArray.length;\n        } else {\n          i++;\n        }\n      }\n    }\n  };\n  return QueueOptimizer;\n}();\nexports.OperatorList = OperatorList;\nexports.PartialEvaluator = PartialEvaluator;\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _charsets = __w_pdfjs_require__(136);\n\nvar _encodings = __w_pdfjs_require__(28);\n\nvar MAX_SUBR_NESTING = 10;\nvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\nvar CFFParser = function CFFParserClosure() {\n  var CharstringValidationData = [null, {\n    id: 'hstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, null, {\n    id: 'vstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'vmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'rlineto',\n    min: 2,\n    resetStack: true\n  }, {\n    id: 'hlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'vlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'rrcurveto',\n    min: 6,\n    resetStack: true\n  }, null, {\n    id: 'callsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'return',\n    min: 0,\n    undefStack: true\n  }, null, null, {\n    id: 'endchar',\n    min: 0,\n    stackClearing: true\n  }, null, null, null, {\n    id: 'hstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'hintmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'cntrmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'rmoveto',\n    min: 2,\n    stackClearing: true\n  }, {\n    id: 'hmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'vstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'rcurveline',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'rlinecurve',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'vvcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hhcurveto',\n    min: 4,\n    resetStack: true\n  }, null, {\n    id: 'callgsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'vhcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hvcurveto',\n    min: 4,\n    resetStack: true\n  }];\n  var CharstringValidationData12 = [null, null, null, {\n    id: 'and',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'or',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'not',\n    min: 1,\n    stackDelta: 0\n  }, null, null, null, {\n    id: 'abs',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'add',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] + stack[index - 1];\n    }\n  }, {\n    id: 'sub',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] - stack[index - 1];\n    }\n  }, {\n    id: 'div',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] / stack[index - 1];\n    }\n  }, null, {\n    id: 'neg',\n    min: 1,\n    stackDelta: 0,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 1] = -stack[index - 1];\n    }\n  }, {\n    id: 'eq',\n    min: 2,\n    stackDelta: -1\n  }, null, null, {\n    id: 'drop',\n    min: 1,\n    stackDelta: -1\n  }, null, {\n    id: 'put',\n    min: 2,\n    stackDelta: -2\n  }, {\n    id: 'get',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'ifelse',\n    min: 4,\n    stackDelta: -3\n  }, {\n    id: 'random',\n    min: 0,\n    stackDelta: 1\n  }, {\n    id: 'mul',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] * stack[index - 1];\n    }\n  }, null, {\n    id: 'sqrt',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'dup',\n    min: 1,\n    stackDelta: 1\n  }, {\n    id: 'exch',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'index',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'roll',\n    min: 3,\n    stackDelta: -2\n  }, null, null, null, {\n    id: 'hflex',\n    min: 7,\n    resetStack: true\n  }, {\n    id: 'flex',\n    min: 13,\n    resetStack: true\n  }, {\n    id: 'hflex1',\n    min: 9,\n    resetStack: true\n  }, {\n    id: 'flex1',\n    min: 11,\n    resetStack: true\n  }];\n  function CFFParser(file, properties, seacAnalysisEnabled) {\n    this.bytes = file.getBytes();\n    this.properties = properties;\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n  }\n  CFFParser.prototype = {\n    parse: function CFFParser_parse() {\n      var properties = this.properties;\n      var cff = new CFF();\n      this.cff = cff;\n      var header = this.parseHeader();\n      var nameIndex = this.parseIndex(header.endPos);\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n      cff.header = header.obj;\n      cff.names = this.parseNameIndex(nameIndex.obj);\n      cff.strings = this.parseStringIndex(stringIndex.obj);\n      cff.topDict = topDict;\n      cff.globalSubrIndex = globalSubrIndex.obj;\n      this.parsePrivateDict(cff.topDict);\n      cff.isCIDFont = topDict.hasName('ROS');\n      var charStringOffset = topDict.getByName('CharStrings');\n      var charStringIndex = this.parseIndex(charStringOffset).obj;\n      var fontMatrix = topDict.getByName('FontMatrix');\n      if (fontMatrix) {\n        properties.fontMatrix = fontMatrix;\n      }\n      var fontBBox = topDict.getByName('FontBBox');\n      if (fontBBox) {\n        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n        properties.ascentScaled = true;\n      }\n      var charset, encoding;\n      if (cff.isCIDFont) {\n        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n          var dictRaw = fdArrayIndex.get(i);\n          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n          this.parsePrivateDict(fontDict);\n          cff.fdArray.push(fontDict);\n        }\n        encoding = null;\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n      } else {\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n      }\n      cff.charset = charset;\n      cff.encoding = encoding;\n      var charStringsAndSeacs = this.parseCharStrings({\n        charStrings: charStringIndex,\n        localSubrIndex: topDict.privateDict.subrsIndex,\n        globalSubrIndex: globalSubrIndex.obj,\n        fdSelect: cff.fdSelect,\n        fdArray: cff.fdArray,\n        privateDict: topDict.privateDict\n      });\n      cff.charStrings = charStringsAndSeacs.charStrings;\n      cff.seacs = charStringsAndSeacs.seacs;\n      cff.widths = charStringsAndSeacs.widths;\n      return cff;\n    },\n    parseHeader: function CFFParser_parseHeader() {\n      var bytes = this.bytes;\n      var bytesLength = bytes.length;\n      var offset = 0;\n      while (offset < bytesLength && bytes[offset] !== 1) {\n        ++offset;\n      }\n      if (offset >= bytesLength) {\n        throw new _util.FormatError('Invalid CFF header');\n      }\n      if (offset !== 0) {\n        (0, _util.info)('cff data is shifted');\n        bytes = bytes.subarray(offset);\n        this.bytes = bytes;\n      }\n      var major = bytes[0];\n      var minor = bytes[1];\n      var hdrSize = bytes[2];\n      var offSize = bytes[3];\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\n      return {\n        obj: header,\n        endPos: hdrSize\n      };\n    },\n    parseDict: function CFFParser_parseDict(dict) {\n      var pos = 0;\n      function parseOperand() {\n        var value = dict[pos++];\n        if (value === 30) {\n          return parseFloatOperand();\n        } else if (value === 28) {\n          value = dict[pos++];\n          value = (value << 24 | dict[pos++] << 16) >> 16;\n          return value;\n        } else if (value === 29) {\n          value = dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          return value;\n        } else if (value >= 32 && value <= 246) {\n          return value - 139;\n        } else if (value >= 247 && value <= 250) {\n          return (value - 247) * 256 + dict[pos++] + 108;\n        } else if (value >= 251 && value <= 254) {\n          return -((value - 251) * 256) - dict[pos++] - 108;\n        }\n        (0, _util.warn)('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n        return NaN;\n      }\n      function parseFloatOperand() {\n        var str = '';\n        var eof = 15;\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n        var length = dict.length;\n        while (pos < length) {\n          var b = dict[pos++];\n          var b1 = b >> 4;\n          var b2 = b & 15;\n          if (b1 === eof) {\n            break;\n          }\n          str += lookup[b1];\n          if (b2 === eof) {\n            break;\n          }\n          str += lookup[b2];\n        }\n        return parseFloat(str);\n      }\n      var operands = [];\n      var entries = [];\n      pos = 0;\n      var end = dict.length;\n      while (pos < end) {\n        var b = dict[pos];\n        if (b <= 21) {\n          if (b === 12) {\n            b = b << 8 | dict[++pos];\n          }\n          entries.push([b, operands]);\n          operands = [];\n          ++pos;\n        } else {\n          operands.push(parseOperand());\n        }\n      }\n      return entries;\n    },\n    parseIndex: function CFFParser_parseIndex(pos) {\n      var cffIndex = new CFFIndex();\n      var bytes = this.bytes;\n      var count = bytes[pos++] << 8 | bytes[pos++];\n      var offsets = [];\n      var end = pos;\n      var i, ii;\n      if (count !== 0) {\n        var offsetSize = bytes[pos++];\n        var startPos = pos + (count + 1) * offsetSize - 1;\n        for (i = 0, ii = count + 1; i < ii; ++i) {\n          var offset = 0;\n          for (var j = 0; j < offsetSize; ++j) {\n            offset <<= 8;\n            offset += bytes[pos++];\n          }\n          offsets.push(startPos + offset);\n        }\n        end = offsets[count];\n      }\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n        var offsetStart = offsets[i];\n        var offsetEnd = offsets[i + 1];\n        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n      }\n      return {\n        obj: cffIndex,\n        endPos: end\n      };\n    },\n    parseNameIndex: function CFFParser_parseNameIndex(index) {\n      var names = [];\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var name = index.get(i);\n        names.push((0, _util.bytesToString)(name));\n      }\n      return names;\n    },\n    parseStringIndex: function CFFParser_parseStringIndex(index) {\n      var strings = new CFFStrings();\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var data = index.get(i);\n        strings.add((0, _util.bytesToString)(data));\n      }\n      return strings;\n    },\n    createDict: function CFFParser_createDict(Type, dict, strings) {\n      var cffDict = new Type(strings);\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\n        var pair = dict[i];\n        var key = pair[0];\n        var value = pair[1];\n        cffDict.setByKey(key, value);\n      }\n      return cffDict;\n    },\n    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n      if (!data || state.callDepth > MAX_SUBR_NESTING) {\n        return false;\n      }\n      var stackSize = state.stackSize;\n      var stack = state.stack;\n      var length = data.length;\n      for (var j = 0; j < length;) {\n        var value = data[j++];\n        var validationCommand = null;\n        if (value === 12) {\n          var q = data[j++];\n          if (q === 0) {\n            data[j - 2] = 139;\n            data[j - 1] = 22;\n            stackSize = 0;\n          } else {\n            validationCommand = CharstringValidationData12[q];\n          }\n        } else if (value === 28) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n          j += 2;\n          stackSize++;\n        } else if (value === 14) {\n          if (stackSize >= 4) {\n            stackSize -= 4;\n            if (this.seacAnalysisEnabled) {\n              state.seac = stack.slice(stackSize, stackSize + 4);\n              return false;\n            }\n          }\n          validationCommand = CharstringValidationData[value];\n        } else if (value >= 32 && value <= 246) {\n          stack[stackSize] = value - 139;\n          stackSize++;\n        } else if (value >= 247 && value <= 254) {\n          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n          j++;\n          stackSize++;\n        } else if (value === 255) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n          j += 4;\n          stackSize++;\n        } else if (value === 19 || value === 20) {\n          state.hints += stackSize >> 1;\n          j += state.hints + 7 >> 3;\n          stackSize %= 2;\n          validationCommand = CharstringValidationData[value];\n        } else if (value === 10 || value === 29) {\n          var subrsIndex;\n          if (value === 10) {\n            subrsIndex = localSubrIndex;\n          } else {\n            subrsIndex = globalSubrIndex;\n          }\n          if (!subrsIndex) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\n            return false;\n          }\n          var bias = 32768;\n          if (subrsIndex.count < 1240) {\n            bias = 107;\n          } else if (subrsIndex.count < 33900) {\n            bias = 1131;\n          }\n          var subrNumber = stack[--stackSize] + bias;\n          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\n            return false;\n          }\n          state.stackSize = stackSize;\n          state.callDepth++;\n          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n          if (!valid) {\n            return false;\n          }\n          state.callDepth--;\n          stackSize = state.stackSize;\n          continue;\n        } else if (value === 11) {\n          state.stackSize = stackSize;\n          return true;\n        } else {\n          validationCommand = CharstringValidationData[value];\n        }\n        if (validationCommand) {\n          if (validationCommand.stem) {\n            state.hints += stackSize >> 1;\n          }\n          if ('min' in validationCommand) {\n            if (!state.undefStack && stackSize < validationCommand.min) {\n              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n              return false;\n            }\n          }\n          if (state.firstStackClearing && validationCommand.stackClearing) {\n            state.firstStackClearing = false;\n            stackSize -= validationCommand.min;\n            if (stackSize >= 2 && validationCommand.stem) {\n              stackSize %= 2;\n            } else if (stackSize > 1) {\n              (0, _util.warn)('Found too many parameters for stack-clearing command');\n            }\n            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n              state.width = stack[stackSize - 1];\n            }\n          }\n          if ('stackDelta' in validationCommand) {\n            if ('stackFn' in validationCommand) {\n              validationCommand.stackFn(stack, stackSize);\n            }\n            stackSize += validationCommand.stackDelta;\n          } else if (validationCommand.stackClearing) {\n            stackSize = 0;\n          } else if (validationCommand.resetStack) {\n            stackSize = 0;\n            state.undefStack = false;\n          } else if (validationCommand.undefStack) {\n            stackSize = 0;\n            state.undefStack = true;\n            state.firstStackClearing = false;\n          }\n        }\n      }\n      state.stackSize = stackSize;\n      return true;\n    },\n    parseCharStrings: function parseCharStrings(_ref) {\n      var charStrings = _ref.charStrings,\n          localSubrIndex = _ref.localSubrIndex,\n          globalSubrIndex = _ref.globalSubrIndex,\n          fdSelect = _ref.fdSelect,\n          fdArray = _ref.fdArray,\n          privateDict = _ref.privateDict;\n\n      var seacs = [];\n      var widths = [];\n      var count = charStrings.count;\n      for (var i = 0; i < count; i++) {\n        var charstring = charStrings.get(i);\n        var state = {\n          callDepth: 0,\n          stackSize: 0,\n          stack: [],\n          undefStack: true,\n          hints: 0,\n          firstStackClearing: true,\n          seac: null,\n          width: null\n        };\n        var valid = true;\n        var localSubrToUse = null;\n        var privateDictToUse = privateDict;\n        if (fdSelect && fdArray.length) {\n          var fdIndex = fdSelect.getFDIndex(i);\n          if (fdIndex === -1) {\n            (0, _util.warn)('Glyph index is not in fd select.');\n            valid = false;\n          }\n          if (fdIndex >= fdArray.length) {\n            (0, _util.warn)('Invalid fd index for glyph index.');\n            valid = false;\n          }\n          if (valid) {\n            privateDictToUse = fdArray[fdIndex].privateDict;\n            localSubrToUse = privateDictToUse.subrsIndex;\n          }\n        } else if (localSubrIndex) {\n          localSubrToUse = localSubrIndex;\n        }\n        if (valid) {\n          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n        }\n        if (state.width !== null) {\n          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\n          widths[i] = nominalWidth + state.width;\n        } else {\n          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\n          widths[i] = defaultWidth;\n        }\n        if (state.seac !== null) {\n          seacs[i] = state.seac;\n        }\n        if (!valid) {\n          charStrings.set(i, new Uint8Array([14]));\n        }\n      }\n      return {\n        charStrings: charStrings,\n        seacs: seacs,\n        widths: widths\n      };\n    },\n\n    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n      parentDict.setByKey(18, [0, 0]);\n      parentDict.privateDict = privateDict;\n    },\n    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n      if (!parentDict.hasName('Private')) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateOffset = parentDict.getByName('Private');\n      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\n        parentDict.removeByName('Private');\n        return;\n      }\n      var size = privateOffset[0];\n      var offset = privateOffset[1];\n      if (size === 0 || offset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateDictEnd = offset + size;\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\n      var dict = this.parseDict(dictData);\n      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n      parentDict.privateDict = privateDict;\n      if (!privateDict.getByName('Subrs')) {\n        return;\n      }\n      var subrsOffset = privateDict.getByName('Subrs');\n      var relativeOffset = offset + subrsOffset;\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var subrsIndex = this.parseIndex(relativeOffset);\n      privateDict.subrsIndex = subrsIndex.obj;\n    },\n    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n      if (pos === 0) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\n      } else if (pos === 1) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\n      } else if (pos === 2) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\n      }\n      var bytes = this.bytes;\n      var start = pos;\n      var format = bytes[pos++];\n      var charset = ['.notdef'];\n      var id, count, i;\n      length -= 1;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; i++) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            charset.push(cid ? id : strings.get(id));\n          }\n          break;\n        case 1:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        case 2:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++] << 8 | bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        default:\n          throw new _util.FormatError('Unknown charset format');\n      }\n      var end = pos;\n      var raw = bytes.subarray(start, end);\n      return new CFFCharset(false, format, charset, raw);\n    },\n    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n      var encoding = Object.create(null);\n      var bytes = this.bytes;\n      var predefined = false;\n      var format, i, ii;\n      var raw = null;\n      function readSupplement() {\n        var supplementsCount = bytes[pos++];\n        for (i = 0; i < supplementsCount; i++) {\n          var code = bytes[pos++];\n          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n          encoding[code] = charset.indexOf(strings.get(sid));\n        }\n      }\n      if (pos === 0 || pos === 1) {\n        predefined = true;\n        format = pos;\n        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\n        for (i = 0, ii = charset.length; i < ii; i++) {\n          var index = baseEncoding.indexOf(charset[i]);\n          if (index !== -1) {\n            encoding[index] = i;\n          }\n        }\n      } else {\n        var dataStart = pos;\n        format = bytes[pos++];\n        switch (format & 0x7f) {\n          case 0:\n            var glyphsCount = bytes[pos++];\n            for (i = 1; i <= glyphsCount; i++) {\n              encoding[bytes[pos++]] = i;\n            }\n            break;\n          case 1:\n            var rangesCount = bytes[pos++];\n            var gid = 1;\n            for (i = 0; i < rangesCount; i++) {\n              var start = bytes[pos++];\n              var left = bytes[pos++];\n              for (var j = start; j <= start + left; j++) {\n                encoding[j] = gid++;\n              }\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\n        }\n        var dataEnd = pos;\n        if (format & 0x80) {\n          bytes[dataStart] &= 0x7f;\n          readSupplement();\n        }\n        raw = bytes.subarray(dataStart, dataEnd);\n      }\n      format = format & 0x7f;\n      return new CFFEncoding(predefined, format, encoding, raw);\n    },\n    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n      var start = pos;\n      var bytes = this.bytes;\n      var format = bytes[pos++];\n      var fdSelect = [],\n          rawBytes;\n      var i,\n          invalidFirstGID = false;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; ++i) {\n            var id = bytes[pos++];\n            fdSelect.push(id);\n          }\n          rawBytes = bytes.subarray(start, pos);\n          break;\n        case 3:\n          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n          for (i = 0; i < rangesCount; ++i) {\n            var first = bytes[pos++] << 8 | bytes[pos++];\n            if (i === 0 && first !== 0) {\n              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n              invalidFirstGID = true;\n              first = 0;\n            }\n            var fdIndex = bytes[pos++];\n            var next = bytes[pos] << 8 | bytes[pos + 1];\n            for (var j = first; j < next; ++j) {\n              fdSelect.push(fdIndex);\n            }\n          }\n          pos += 2;\n          rawBytes = bytes.subarray(start, pos);\n          if (invalidFirstGID) {\n            rawBytes[3] = rawBytes[4] = 0;\n          }\n          break;\n        default:\n          throw new _util.FormatError('parseFDSelect: Unknown format \"' + format + '\".');\n      }\n      if (fdSelect.length !== length) {\n        throw new _util.FormatError('parseFDSelect: Invalid font data.');\n      }\n      return new CFFFDSelect(fdSelect, rawBytes);\n    }\n  };\n  return CFFParser;\n}();\nvar CFF = function CFFClosure() {\n  function CFF() {\n    this.header = null;\n    this.names = [];\n    this.topDict = null;\n    this.strings = new CFFStrings();\n    this.globalSubrIndex = null;\n    this.encoding = null;\n    this.charset = null;\n    this.charStrings = null;\n    this.fdArray = [];\n    this.fdSelect = null;\n    this.isCIDFont = false;\n  }\n  return CFF;\n}();\nvar CFFHeader = function CFFHeaderClosure() {\n  function CFFHeader(major, minor, hdrSize, offSize) {\n    this.major = major;\n    this.minor = minor;\n    this.hdrSize = hdrSize;\n    this.offSize = offSize;\n  }\n  return CFFHeader;\n}();\nvar CFFStrings = function CFFStringsClosure() {\n  function CFFStrings() {\n    this.strings = [];\n  }\n  CFFStrings.prototype = {\n    get: function CFFStrings_get(index) {\n      if (index >= 0 && index <= 390) {\n        return CFFStandardStrings[index];\n      }\n      if (index - 391 <= this.strings.length) {\n        return this.strings[index - 391];\n      }\n      return CFFStandardStrings[0];\n    },\n    add: function CFFStrings_add(value) {\n      this.strings.push(value);\n    },\n    get count() {\n      return this.strings.length;\n    }\n  };\n  return CFFStrings;\n}();\nvar CFFIndex = function CFFIndexClosure() {\n  function CFFIndex() {\n    this.objects = [];\n    this.length = 0;\n  }\n  CFFIndex.prototype = {\n    add: function CFFIndex_add(data) {\n      this.length += data.length;\n      this.objects.push(data);\n    },\n    set: function CFFIndex_set(index, data) {\n      this.length += data.length - this.objects[index].length;\n      this.objects[index] = data;\n    },\n    get: function CFFIndex_get(index) {\n      return this.objects[index];\n    },\n    get count() {\n      return this.objects.length;\n    }\n  };\n  return CFFIndex;\n}();\nvar CFFDict = function CFFDictClosure() {\n  function CFFDict(tables, strings) {\n    this.keyToNameMap = tables.keyToNameMap;\n    this.nameToKeyMap = tables.nameToKeyMap;\n    this.defaults = tables.defaults;\n    this.types = tables.types;\n    this.opcodes = tables.opcodes;\n    this.order = tables.order;\n    this.strings = strings;\n    this.values = Object.create(null);\n  }\n  CFFDict.prototype = {\n    setByKey: function CFFDict_setByKey(key, value) {\n      if (!(key in this.keyToNameMap)) {\n        return false;\n      }\n      var valueLength = value.length;\n      if (valueLength === 0) {\n        return true;\n      }\n      for (var i = 0; i < valueLength; i++) {\n        if (isNaN(value[i])) {\n          (0, _util.warn)('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n          return true;\n        }\n      }\n      var type = this.types[key];\n      if (type === 'num' || type === 'sid' || type === 'offset') {\n        value = value[0];\n      }\n      this.values[key] = value;\n      return true;\n    },\n    setByName: function CFFDict_setByName(name, value) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name \"' + name + '\"');\n      }\n      this.values[this.nameToKeyMap[name]] = value;\n    },\n    hasName: function CFFDict_hasName(name) {\n      return this.nameToKeyMap[name] in this.values;\n    },\n    getByName: function CFFDict_getByName(name) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name ' + name + '\"');\n      }\n      var key = this.nameToKeyMap[name];\n      if (!(key in this.values)) {\n        return this.defaults[key];\n      }\n      return this.values[key];\n    },\n    removeByName: function CFFDict_removeByName(name) {\n      delete this.values[this.nameToKeyMap[name]];\n    }\n  };\n  CFFDict.createTables = function CFFDict_createTables(layout) {\n    var tables = {\n      keyToNameMap: {},\n      nameToKeyMap: {},\n      defaults: {},\n      types: {},\n      opcodes: {},\n      order: []\n    };\n    for (var i = 0, ii = layout.length; i < ii; ++i) {\n      var entry = layout[i];\n      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n      tables.keyToNameMap[key] = entry[1];\n      tables.nameToKeyMap[entry[1]] = key;\n      tables.types[key] = entry[2];\n      tables.defaults[key] = entry[3];\n      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\n      tables.order.push(key);\n    }\n    return tables;\n  };\n  return CFFDict;\n}();\nvar CFFTopDict = function CFFTopDictClosure() {\n  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\n  var tables = null;\n  function CFFTopDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.privateDict = null;\n  }\n  CFFTopDict.prototype = Object.create(CFFDict.prototype);\n  return CFFTopDict;\n}();\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\n  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\n  var tables = null;\n  function CFFPrivateDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.subrsIndex = null;\n  }\n  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n  return CFFPrivateDict;\n}();\nvar CFFCharsetPredefinedTypes = {\n  ISO_ADOBE: 0,\n  EXPERT: 1,\n  EXPERT_SUBSET: 2\n};\nvar CFFCharset = function CFFCharsetClosure() {\n  function CFFCharset(predefined, format, charset, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.charset = charset;\n    this.raw = raw;\n  }\n  return CFFCharset;\n}();\nvar CFFEncoding = function CFFEncodingClosure() {\n  function CFFEncoding(predefined, format, encoding, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.encoding = encoding;\n    this.raw = raw;\n  }\n  return CFFEncoding;\n}();\nvar CFFFDSelect = function CFFFDSelectClosure() {\n  function CFFFDSelect(fdSelect, raw) {\n    this.fdSelect = fdSelect;\n    this.raw = raw;\n  }\n  CFFFDSelect.prototype = {\n    getFDIndex: function CFFFDSelect_get(glyphIndex) {\n      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n        return -1;\n      }\n      return this.fdSelect[glyphIndex];\n    }\n  };\n  return CFFFDSelect;\n}();\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n  function CFFOffsetTracker() {\n    this.offsets = Object.create(null);\n  }\n  CFFOffsetTracker.prototype = {\n    isTracking: function CFFOffsetTracker_isTracking(key) {\n      return key in this.offsets;\n    },\n    track: function CFFOffsetTracker_track(key, location) {\n      if (key in this.offsets) {\n        throw new _util.FormatError('Already tracking location of ' + key);\n      }\n      this.offsets[key] = location;\n    },\n    offset: function CFFOffsetTracker_offset(value) {\n      for (var key in this.offsets) {\n        this.offsets[key] += value;\n      }\n    },\n    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n      if (!(key in this.offsets)) {\n        throw new _util.FormatError('Not tracking location of ' + key);\n      }\n      var data = output.data;\n      var dataOffset = this.offsets[key];\n      var size = 5;\n      for (var i = 0, ii = values.length; i < ii; ++i) {\n        var offset0 = i * size + dataOffset;\n        var offset1 = offset0 + 1;\n        var offset2 = offset0 + 2;\n        var offset3 = offset0 + 3;\n        var offset4 = offset0 + 4;\n        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n          throw new _util.FormatError('writing to an offset that is not empty');\n        }\n        var value = values[i];\n        data[offset0] = 0x1d;\n        data[offset1] = value >> 24 & 0xFF;\n        data[offset2] = value >> 16 & 0xFF;\n        data[offset3] = value >> 8 & 0xFF;\n        data[offset4] = value & 0xFF;\n      }\n    }\n  };\n  return CFFOffsetTracker;\n}();\nvar CFFCompiler = function CFFCompilerClosure() {\n  function CFFCompiler(cff) {\n    this.cff = cff;\n  }\n  CFFCompiler.prototype = {\n    compile: function CFFCompiler_compile() {\n      var cff = this.cff;\n      var output = {\n        data: [],\n        length: 0,\n        add: function CFFCompiler_add(data) {\n          this.data = this.data.concat(data);\n          this.length = this.data.length;\n        }\n      };\n      var header = this.compileHeader(cff.header);\n      output.add(header);\n      var nameIndex = this.compileNameIndex(cff.names);\n      output.add(nameIndex);\n      if (cff.isCIDFont) {\n        if (cff.topDict.hasName('FontMatrix')) {\n          var base = cff.topDict.getByName('FontMatrix');\n          cff.topDict.removeByName('FontMatrix');\n          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n            var subDict = cff.fdArray[i];\n            var matrix = base.slice(0);\n            if (subDict.hasName('FontMatrix')) {\n              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\n            }\n            subDict.setByName('FontMatrix', matrix);\n          }\n        }\n      }\n      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n      output.add(compiled.output);\n      var topDictTracker = compiled.trackers[0];\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\n      output.add(stringIndex);\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n      output.add(globalSubrIndex);\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n        if (cff.encoding.predefined) {\n          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n        } else {\n          var encoding = this.compileEncoding(cff.encoding);\n          topDictTracker.setEntryLocation('Encoding', [output.length], output);\n          output.add(encoding);\n        }\n      }\n      if (cff.charset && cff.topDict.hasName('charset')) {\n        if (cff.charset.predefined) {\n          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n        } else {\n          var charset = this.compileCharset(cff.charset);\n          topDictTracker.setEntryLocation('charset', [output.length], output);\n          output.add(charset);\n        }\n      }\n      var charStrings = this.compileCharStrings(cff.charStrings);\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n      output.add(charStrings);\n      if (cff.isCIDFont) {\n        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n        output.add(fdSelect);\n        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n        topDictTracker.setEntryLocation('FDArray', [output.length], output);\n        output.add(compiled.output);\n        var fontDictTrackers = compiled.trackers;\n        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n      }\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n      output.add([0]);\n      return output.data;\n    },\n    encodeNumber: function CFFCompiler_encodeNumber(value) {\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n        return this.encodeInteger(value);\n      }\n      return this.encodeFloat(value);\n    },\n    encodeFloat: function CFFCompiler_encodeFloat(num) {\n      var value = num.toString();\n      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n      if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(num * epsilon) / epsilon).toString();\n      }\n      var nibbles = '';\n      var i, ii;\n      for (i = 0, ii = value.length; i < ii; ++i) {\n        var a = value[i];\n        if (a === 'e') {\n          nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (a === '.') {\n          nibbles += 'a';\n        } else if (a === '-') {\n          nibbles += 'e';\n        } else {\n          nibbles += a;\n        }\n      }\n      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n      var out = [30];\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n      }\n      return out;\n    },\n    encodeInteger: function CFFCompiler_encodeInteger(value) {\n      var code;\n      if (value >= -107 && value <= 107) {\n        code = [value + 139];\n      } else if (value >= 108 && value <= 1131) {\n        value = value - 108;\n        code = [(value >> 8) + 247, value & 0xFF];\n      } else if (value >= -1131 && value <= -108) {\n        value = -value - 108;\n        code = [(value >> 8) + 251, value & 0xFF];\n      } else if (value >= -32768 && value <= 32767) {\n        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\n      } else {\n        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\n      }\n      return code;\n    },\n    compileHeader: function CFFCompiler_compileHeader(header) {\n      return [header.major, header.minor, header.hdrSize, header.offSize];\n    },\n    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n      var nameIndex = new CFFIndex();\n      for (var i = 0, ii = names.length; i < ii; ++i) {\n        var name = names[i];\n        var length = Math.min(name.length, 127);\n        var sanitizedName = new Array(length);\n        for (var j = 0; j < length; j++) {\n          var char = name[j];\n          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\n            char = '_';\n          }\n          sanitizedName[j] = char;\n        }\n        sanitizedName = sanitizedName.join('');\n        if (sanitizedName === '') {\n          sanitizedName = 'Bad_Font_Name';\n        }\n        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\n      }\n      return this.compileIndex(nameIndex);\n    },\n    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n      var fontDictTrackers = [];\n      var fdArrayIndex = new CFFIndex();\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        if (removeCidKeys) {\n          fontDict.removeByName('CIDFontVersion');\n          fontDict.removeByName('CIDFontRevision');\n          fontDict.removeByName('CIDFontType');\n          fontDict.removeByName('CIDCount');\n          fontDict.removeByName('UIDBase');\n        }\n        var fontDictTracker = new CFFOffsetTracker();\n        var fontDictData = this.compileDict(fontDict, fontDictTracker);\n        fontDictTrackers.push(fontDictTracker);\n        fdArrayIndex.add(fontDictData);\n        fontDictTracker.offset(length);\n      }\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n      return {\n        trackers: fontDictTrackers,\n        output: fdArrayIndex\n      };\n    },\n    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        var privateDict = fontDict.privateDict;\n        if (!privateDict || !fontDict.hasName('Private')) {\n          throw new _util.FormatError('There must be a private dictionary.');\n        }\n        var privateDictTracker = new CFFOffsetTracker();\n        var privateDictData = this.compileDict(privateDict, privateDictTracker);\n        var outputLength = output.length;\n        privateDictTracker.offset(outputLength);\n        if (!privateDictData.length) {\n          outputLength = 0;\n        }\n        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\n        output.add(privateDictData);\n        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n          var subrs = this.compileIndex(privateDict.subrsIndex);\n          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n          output.add(subrs);\n        }\n      }\n    },\n    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n      var out = [];\n      var order = dict.order;\n      for (var i = 0; i < order.length; ++i) {\n        var key = order[i];\n        if (!(key in dict.values)) {\n          continue;\n        }\n        var values = dict.values[key];\n        var types = dict.types[key];\n        if (!Array.isArray(types)) {\n          types = [types];\n        }\n        if (!Array.isArray(values)) {\n          values = [values];\n        }\n        if (values.length === 0) {\n          continue;\n        }\n        for (var j = 0, jj = types.length; j < jj; ++j) {\n          var type = types[j];\n          var value = values[j];\n          switch (type) {\n            case 'num':\n            case 'sid':\n              out = out.concat(this.encodeNumber(value));\n              break;\n            case 'offset':\n              var name = dict.keyToNameMap[key];\n              if (!offsetTracker.isTracking(name)) {\n                offsetTracker.track(name, out.length);\n              }\n              out = out.concat([0x1d, 0, 0, 0, 0]);\n              break;\n            case 'array':\n            case 'delta':\n              out = out.concat(this.encodeNumber(value));\n              for (var k = 1, kk = values.length; k < kk; ++k) {\n                out = out.concat(this.encodeNumber(values[k]));\n              }\n              break;\n            default:\n              throw new _util.FormatError('Unknown data type of ' + type);\n          }\n        }\n        out = out.concat(dict.opcodes[key]);\n      }\n      return out;\n    },\n    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n      var stringIndex = new CFFIndex();\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\n        stringIndex.add((0, _util.stringToBytes)(strings[i]));\n      }\n      return this.compileIndex(stringIndex);\n    },\n    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n      var globalSubrIndex = this.cff.globalSubrIndex;\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n    },\n    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n      return this.compileIndex(charStrings);\n    },\n    compileCharset: function CFFCompiler_compileCharset(charset) {\n      return this.compileTypedArray(charset.raw);\n    },\n    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n      return this.compileTypedArray(encoding.raw);\n    },\n    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n      return this.compileTypedArray(fdSelect);\n    },\n    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n      var out = [];\n      for (var i = 0, ii = data.length; i < ii; ++i) {\n        out[i] = data[i];\n      }\n      return out;\n    },\n    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n      trackers = trackers || [];\n      var objects = index.objects;\n      var count = objects.length;\n      if (count === 0) {\n        return [0, 0, 0];\n      }\n      var data = [count >> 8 & 0xFF, count & 0xff];\n      var lastOffset = 1,\n          i;\n      for (i = 0; i < count; ++i) {\n        lastOffset += objects[i].length;\n      }\n      var offsetSize;\n      if (lastOffset < 0x100) {\n        offsetSize = 1;\n      } else if (lastOffset < 0x10000) {\n        offsetSize = 2;\n      } else if (lastOffset < 0x1000000) {\n        offsetSize = 3;\n      } else {\n        offsetSize = 4;\n      }\n      data.push(offsetSize);\n      var relativeOffset = 1;\n      for (i = 0; i < count + 1; i++) {\n        if (offsetSize === 1) {\n          data.push(relativeOffset & 0xFF);\n        } else if (offsetSize === 2) {\n          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else if (offsetSize === 3) {\n          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else {\n          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        }\n        if (objects[i]) {\n          relativeOffset += objects[i].length;\n        }\n      }\n      for (i = 0; i < count; i++) {\n        if (trackers[i]) {\n          trackers[i].offset(data.length);\n        }\n        for (var j = 0, jj = objects[i].length; j < jj; j++) {\n          data.push(objects[i][j]);\n        }\n      }\n      return data;\n    }\n  };\n  return CFFCompiler;\n}();\nexports.CFFStandardStrings = CFFStandardStrings;\nexports.CFFParser = CFFParser;\nexports.CFF = CFF;\nexports.CFFHeader = CFFHeader;\nexports.CFFStrings = CFFStrings;\nexports.CFFIndex = CFFIndex;\nexports.CFFCharset = CFFCharset;\nexports.CFFTopDict = CFFTopDict;\nexports.CFFPrivateDict = CFFPrivateDict;\nexports.CFFCompiler = CFFCompiler;\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['ArialNarrow'] = 'Helvetica';\n  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n  t['ArialBlack'] = 'Helvetica';\n  t['ArialBlack-Bold'] = 'Helvetica-Bold';\n  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n  t['Arial-Black'] = 'Helvetica';\n  t['Arial-Black-Bold'] = 'Helvetica-Bold';\n  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n  t['Arial'] = 'Helvetica';\n  t['Arial-Bold'] = 'Helvetica-Bold';\n  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Italic'] = 'Helvetica-Oblique';\n  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n  t['Arial-BoldMT'] = 'Helvetica-Bold';\n  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n  t['ArialMT'] = 'Helvetica';\n  t['Courier-Bold'] = 'Courier-Bold';\n  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n  t['Courier-Italic'] = 'Courier-Oblique';\n  t['CourierNew'] = 'Courier';\n  t['CourierNew-Bold'] = 'Courier-Bold';\n  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n  t['CourierNew-Italic'] = 'Courier-Oblique';\n  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n  t['CourierNewPSMT'] = 'Courier';\n  t['Helvetica'] = 'Helvetica';\n  t['Helvetica-Bold'] = 'Helvetica-Bold';\n  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n  t['Helvetica-Italic'] = 'Helvetica-Oblique';\n  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n  t['SegoeUISymbol'] = 'Helvetica';\n  t['Symbol-Bold'] = 'Symbol';\n  t['Symbol-BoldItalic'] = 'Symbol';\n  t['Symbol-Italic'] = 'Symbol';\n  t['TimesNewRoman'] = 'Times-Roman';\n  t['TimesNewRoman-Bold'] = 'Times-Bold';\n  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRoman-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS'] = 'Times-Roman';\n  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n  t['TimesNewRomanPSMT'] = 'Times-Roman';\n  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n});\nvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['CenturyGothic'] = 'Helvetica';\n  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n  t['ComicSansMS'] = 'Comic Sans MS';\n  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n  t['LucidaConsole'] = 'Courier';\n  t['LucidaConsole-Bold'] = 'Courier-Bold';\n  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n  t['LucidaConsole-Italic'] = 'Courier-Oblique';\n  t['MS-Gothic'] = 'MS Gothic';\n  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n  t['MS-Mincho'] = 'MS Mincho';\n  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n  t['MS-PGothic'] = 'MS PGothic';\n  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n  t['MS-PMincho'] = 'MS PMincho';\n  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n  t['NuptialScript'] = 'Times-Italic';\n  t['Wingdings'] = 'ZapfDingbats';\n});\nvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Adobe Jenson'] = true;\n  t['Adobe Text'] = true;\n  t['Albertus'] = true;\n  t['Aldus'] = true;\n  t['Alexandria'] = true;\n  t['Algerian'] = true;\n  t['American Typewriter'] = true;\n  t['Antiqua'] = true;\n  t['Apex'] = true;\n  t['Arno'] = true;\n  t['Aster'] = true;\n  t['Aurora'] = true;\n  t['Baskerville'] = true;\n  t['Bell'] = true;\n  t['Bembo'] = true;\n  t['Bembo Schoolbook'] = true;\n  t['Benguiat'] = true;\n  t['Berkeley Old Style'] = true;\n  t['Bernhard Modern'] = true;\n  t['Berthold City'] = true;\n  t['Bodoni'] = true;\n  t['Bauer Bodoni'] = true;\n  t['Book Antiqua'] = true;\n  t['Bookman'] = true;\n  t['Bordeaux Roman'] = true;\n  t['Californian FB'] = true;\n  t['Calisto'] = true;\n  t['Calvert'] = true;\n  t['Capitals'] = true;\n  t['Cambria'] = true;\n  t['Cartier'] = true;\n  t['Caslon'] = true;\n  t['Catull'] = true;\n  t['Centaur'] = true;\n  t['Century Old Style'] = true;\n  t['Century Schoolbook'] = true;\n  t['Chaparral'] = true;\n  t['Charis SIL'] = true;\n  t['Cheltenham'] = true;\n  t['Cholla Slab'] = true;\n  t['Clarendon'] = true;\n  t['Clearface'] = true;\n  t['Cochin'] = true;\n  t['Colonna'] = true;\n  t['Computer Modern'] = true;\n  t['Concrete Roman'] = true;\n  t['Constantia'] = true;\n  t['Cooper Black'] = true;\n  t['Corona'] = true;\n  t['Ecotype'] = true;\n  t['Egyptienne'] = true;\n  t['Elephant'] = true;\n  t['Excelsior'] = true;\n  t['Fairfield'] = true;\n  t['FF Scala'] = true;\n  t['Folkard'] = true;\n  t['Footlight'] = true;\n  t['FreeSerif'] = true;\n  t['Friz Quadrata'] = true;\n  t['Garamond'] = true;\n  t['Gentium'] = true;\n  t['Georgia'] = true;\n  t['Gloucester'] = true;\n  t['Goudy Old Style'] = true;\n  t['Goudy Schoolbook'] = true;\n  t['Goudy Pro Font'] = true;\n  t['Granjon'] = true;\n  t['Guardian Egyptian'] = true;\n  t['Heather'] = true;\n  t['Hercules'] = true;\n  t['High Tower Text'] = true;\n  t['Hiroshige'] = true;\n  t['Hoefler Text'] = true;\n  t['Humana Serif'] = true;\n  t['Imprint'] = true;\n  t['Ionic No. 5'] = true;\n  t['Janson'] = true;\n  t['Joanna'] = true;\n  t['Korinna'] = true;\n  t['Lexicon'] = true;\n  t['Liberation Serif'] = true;\n  t['Linux Libertine'] = true;\n  t['Literaturnaya'] = true;\n  t['Lucida'] = true;\n  t['Lucida Bright'] = true;\n  t['Melior'] = true;\n  t['Memphis'] = true;\n  t['Miller'] = true;\n  t['Minion'] = true;\n  t['Modern'] = true;\n  t['Mona Lisa'] = true;\n  t['Mrs Eaves'] = true;\n  t['MS Serif'] = true;\n  t['Museo Slab'] = true;\n  t['New York'] = true;\n  t['Nimbus Roman'] = true;\n  t['NPS Rawlinson Roadway'] = true;\n  t['NuptialScript'] = true;\n  t['Palatino'] = true;\n  t['Perpetua'] = true;\n  t['Plantin'] = true;\n  t['Plantin Schoolbook'] = true;\n  t['Playbill'] = true;\n  t['Poor Richard'] = true;\n  t['Rawlinson Roadway'] = true;\n  t['Renault'] = true;\n  t['Requiem'] = true;\n  t['Rockwell'] = true;\n  t['Roman'] = true;\n  t['Rotis Serif'] = true;\n  t['Sabon'] = true;\n  t['Scala'] = true;\n  t['Seagull'] = true;\n  t['Sistina'] = true;\n  t['Souvenir'] = true;\n  t['STIX'] = true;\n  t['Stone Informal'] = true;\n  t['Stone Serif'] = true;\n  t['Sylfaen'] = true;\n  t['Times'] = true;\n  t['Trajan'] = true;\n  t['Trinité'] = true;\n  t['Trump Mediaeval'] = true;\n  t['Utopia'] = true;\n  t['Vale Type'] = true;\n  t['Bitstream Vera'] = true;\n  t['Vera Serif'] = true;\n  t['Versailles'] = true;\n  t['Wanted'] = true;\n  t['Weiss'] = true;\n  t['Wide Latin'] = true;\n  t['Windsor'] = true;\n  t['XITS'] = true;\n});\nvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Dingbats'] = true;\n  t['Symbol'] = true;\n  t['ZapfDingbats'] = true;\n});\nvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t[2] = 10;\n  t[3] = 32;\n  t[4] = 33;\n  t[5] = 34;\n  t[6] = 35;\n  t[7] = 36;\n  t[8] = 37;\n  t[9] = 38;\n  t[10] = 39;\n  t[11] = 40;\n  t[12] = 41;\n  t[13] = 42;\n  t[14] = 43;\n  t[15] = 44;\n  t[16] = 45;\n  t[17] = 46;\n  t[18] = 47;\n  t[19] = 48;\n  t[20] = 49;\n  t[21] = 50;\n  t[22] = 51;\n  t[23] = 52;\n  t[24] = 53;\n  t[25] = 54;\n  t[26] = 55;\n  t[27] = 56;\n  t[28] = 57;\n  t[29] = 58;\n  t[30] = 894;\n  t[31] = 60;\n  t[32] = 61;\n  t[33] = 62;\n  t[34] = 63;\n  t[35] = 64;\n  t[36] = 65;\n  t[37] = 66;\n  t[38] = 67;\n  t[39] = 68;\n  t[40] = 69;\n  t[41] = 70;\n  t[42] = 71;\n  t[43] = 72;\n  t[44] = 73;\n  t[45] = 74;\n  t[46] = 75;\n  t[47] = 76;\n  t[48] = 77;\n  t[49] = 78;\n  t[50] = 79;\n  t[51] = 80;\n  t[52] = 81;\n  t[53] = 82;\n  t[54] = 83;\n  t[55] = 84;\n  t[56] = 85;\n  t[57] = 86;\n  t[58] = 87;\n  t[59] = 88;\n  t[60] = 89;\n  t[61] = 90;\n  t[62] = 91;\n  t[63] = 92;\n  t[64] = 93;\n  t[65] = 94;\n  t[66] = 95;\n  t[67] = 96;\n  t[68] = 97;\n  t[69] = 98;\n  t[70] = 99;\n  t[71] = 100;\n  t[72] = 101;\n  t[73] = 102;\n  t[74] = 103;\n  t[75] = 104;\n  t[76] = 105;\n  t[77] = 106;\n  t[78] = 107;\n  t[79] = 108;\n  t[80] = 109;\n  t[81] = 110;\n  t[82] = 111;\n  t[83] = 112;\n  t[84] = 113;\n  t[85] = 114;\n  t[86] = 115;\n  t[87] = 116;\n  t[88] = 117;\n  t[89] = 118;\n  t[90] = 119;\n  t[91] = 120;\n  t[92] = 121;\n  t[93] = 122;\n  t[94] = 123;\n  t[95] = 124;\n  t[96] = 125;\n  t[97] = 126;\n  t[98] = 196;\n  t[99] = 197;\n  t[100] = 199;\n  t[101] = 201;\n  t[102] = 209;\n  t[103] = 214;\n  t[104] = 220;\n  t[105] = 225;\n  t[106] = 224;\n  t[107] = 226;\n  t[108] = 228;\n  t[109] = 227;\n  t[110] = 229;\n  t[111] = 231;\n  t[112] = 233;\n  t[113] = 232;\n  t[114] = 234;\n  t[115] = 235;\n  t[116] = 237;\n  t[117] = 236;\n  t[118] = 238;\n  t[119] = 239;\n  t[120] = 241;\n  t[121] = 243;\n  t[122] = 242;\n  t[123] = 244;\n  t[124] = 246;\n  t[125] = 245;\n  t[126] = 250;\n  t[127] = 249;\n  t[128] = 251;\n  t[129] = 252;\n  t[130] = 8224;\n  t[131] = 176;\n  t[132] = 162;\n  t[133] = 163;\n  t[134] = 167;\n  t[135] = 8226;\n  t[136] = 182;\n  t[137] = 223;\n  t[138] = 174;\n  t[139] = 169;\n  t[140] = 8482;\n  t[141] = 180;\n  t[142] = 168;\n  t[143] = 8800;\n  t[144] = 198;\n  t[145] = 216;\n  t[146] = 8734;\n  t[147] = 177;\n  t[148] = 8804;\n  t[149] = 8805;\n  t[150] = 165;\n  t[151] = 181;\n  t[152] = 8706;\n  t[153] = 8721;\n  t[154] = 8719;\n  t[156] = 8747;\n  t[157] = 170;\n  t[158] = 186;\n  t[159] = 8486;\n  t[160] = 230;\n  t[161] = 248;\n  t[162] = 191;\n  t[163] = 161;\n  t[164] = 172;\n  t[165] = 8730;\n  t[166] = 402;\n  t[167] = 8776;\n  t[168] = 8710;\n  t[169] = 171;\n  t[170] = 187;\n  t[171] = 8230;\n  t[210] = 218;\n  t[223] = 711;\n  t[224] = 321;\n  t[225] = 322;\n  t[227] = 353;\n  t[229] = 382;\n  t[234] = 253;\n  t[252] = 263;\n  t[253] = 268;\n  t[254] = 269;\n  t[258] = 258;\n  t[260] = 260;\n  t[261] = 261;\n  t[265] = 280;\n  t[266] = 281;\n  t[268] = 283;\n  t[269] = 313;\n  t[275] = 323;\n  t[276] = 324;\n  t[278] = 328;\n  t[284] = 345;\n  t[285] = 346;\n  t[286] = 347;\n  t[292] = 367;\n  t[295] = 377;\n  t[296] = 378;\n  t[298] = 380;\n  t[305] = 963;\n  t[306] = 964;\n  t[307] = 966;\n  t[308] = 8215;\n  t[309] = 8252;\n  t[310] = 8319;\n  t[311] = 8359;\n  t[312] = 8592;\n  t[313] = 8593;\n  t[337] = 9552;\n  t[493] = 1039;\n  t[494] = 1040;\n  t[705] = 1524;\n  t[706] = 8362;\n  t[710] = 64288;\n  t[711] = 64298;\n  t[759] = 1617;\n  t[761] = 1776;\n  t[763] = 1778;\n  t[775] = 1652;\n  t[777] = 1764;\n  t[778] = 1780;\n  t[779] = 1781;\n  t[780] = 1782;\n  t[782] = 771;\n  t[783] = 64726;\n  t[786] = 8363;\n  t[788] = 8532;\n  t[790] = 768;\n  t[791] = 769;\n  t[792] = 768;\n  t[795] = 803;\n  t[797] = 64336;\n  t[798] = 64337;\n  t[799] = 64342;\n  t[800] = 64343;\n  t[801] = 64344;\n  t[802] = 64345;\n  t[803] = 64362;\n  t[804] = 64363;\n  t[805] = 64364;\n  t[2424] = 7821;\n  t[2425] = 7822;\n  t[2426] = 7823;\n  t[2427] = 7824;\n  t[2428] = 7825;\n  t[2429] = 7826;\n  t[2430] = 7827;\n  t[2433] = 7682;\n  t[2678] = 8045;\n  t[2679] = 8046;\n  t[2830] = 1552;\n  t[2838] = 686;\n  t[2840] = 751;\n  t[2842] = 753;\n  t[2843] = 754;\n  t[2844] = 755;\n  t[2846] = 757;\n  t[2856] = 767;\n  t[2857] = 848;\n  t[2858] = 849;\n  t[2862] = 853;\n  t[2863] = 854;\n  t[2864] = 855;\n  t[2865] = 861;\n  t[2866] = 862;\n  t[2906] = 7460;\n  t[2908] = 7462;\n  t[2909] = 7463;\n  t[2910] = 7464;\n  t[2912] = 7466;\n  t[2913] = 7467;\n  t[2914] = 7468;\n  t[2916] = 7470;\n  t[2917] = 7471;\n  t[2918] = 7472;\n  t[2920] = 7474;\n  t[2921] = 7475;\n  t[2922] = 7476;\n  t[2924] = 7478;\n  t[2925] = 7479;\n  t[2926] = 7480;\n  t[2928] = 7482;\n  t[2929] = 7483;\n  t[2930] = 7484;\n  t[2932] = 7486;\n  t[2933] = 7487;\n  t[2934] = 7488;\n  t[2936] = 7490;\n  t[2937] = 7491;\n  t[2938] = 7492;\n  t[2940] = 7494;\n  t[2941] = 7495;\n  t[2942] = 7496;\n  t[2944] = 7498;\n  t[2946] = 7500;\n  t[2948] = 7502;\n  t[2950] = 7504;\n  t[2951] = 7505;\n  t[2952] = 7506;\n  t[2954] = 7508;\n  t[2955] = 7509;\n  t[2956] = 7510;\n  t[2958] = 7512;\n  t[2959] = 7513;\n  t[2960] = 7514;\n  t[2962] = 7516;\n  t[2963] = 7517;\n  t[2964] = 7518;\n  t[2966] = 7520;\n  t[2967] = 7521;\n  t[2968] = 7522;\n  t[2970] = 7524;\n  t[2971] = 7525;\n  t[2972] = 7526;\n  t[2974] = 7528;\n  t[2975] = 7529;\n  t[2976] = 7530;\n  t[2978] = 1537;\n  t[2979] = 1538;\n  t[2980] = 1539;\n  t[2982] = 1549;\n  t[2983] = 1551;\n  t[2984] = 1552;\n  t[2986] = 1554;\n  t[2987] = 1555;\n  t[2988] = 1556;\n  t[2990] = 1623;\n  t[2991] = 1624;\n  t[2995] = 1775;\n  t[2999] = 1791;\n  t[3002] = 64290;\n  t[3003] = 64291;\n  t[3004] = 64292;\n  t[3006] = 64294;\n  t[3007] = 64295;\n  t[3008] = 64296;\n  t[3011] = 1900;\n  t[3014] = 8223;\n  t[3015] = 8244;\n  t[3017] = 7532;\n  t[3018] = 7533;\n  t[3019] = 7534;\n  t[3075] = 7590;\n  t[3076] = 7591;\n  t[3079] = 7594;\n  t[3080] = 7595;\n  t[3083] = 7598;\n  t[3084] = 7599;\n  t[3087] = 7602;\n  t[3088] = 7603;\n  t[3091] = 7606;\n  t[3092] = 7607;\n  t[3095] = 7610;\n  t[3096] = 7611;\n  t[3099] = 7614;\n  t[3100] = 7615;\n  t[3103] = 7618;\n  t[3104] = 7619;\n  t[3107] = 8337;\n  t[3108] = 8338;\n  t[3116] = 1884;\n  t[3119] = 1885;\n  t[3120] = 1885;\n  t[3123] = 1886;\n  t[3124] = 1886;\n  t[3127] = 1887;\n  t[3128] = 1887;\n  t[3131] = 1888;\n  t[3132] = 1888;\n  t[3135] = 1889;\n  t[3136] = 1889;\n  t[3139] = 1890;\n  t[3140] = 1890;\n  t[3143] = 1891;\n  t[3144] = 1891;\n  t[3147] = 1892;\n  t[3148] = 1892;\n  t[3153] = 580;\n  t[3154] = 581;\n  t[3157] = 584;\n  t[3158] = 585;\n  t[3161] = 588;\n  t[3162] = 589;\n  t[3165] = 891;\n  t[3166] = 892;\n  t[3169] = 1274;\n  t[3170] = 1275;\n  t[3173] = 1278;\n  t[3174] = 1279;\n  t[3181] = 7622;\n  t[3182] = 7623;\n  t[3282] = 11799;\n  t[3316] = 578;\n  t[3379] = 42785;\n  t[3393] = 1159;\n  t[3416] = 8377;\n});\nvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\n  t[227] = 322;\n  t[264] = 261;\n  t[291] = 346;\n});\nexports.getStdFontMap = getStdFontMap;\nexports.getNonStdFontMap = getNonStdFontMap;\nexports.getSerifFonts = getSerifFonts;\nexports.getSymbolsFonts = getSymbolsFonts;\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\nvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n t[63721] = 0x00A9;\n t[63193] = 0x00A9;\n t[63720] = 0x00AE;\n t[63194] = 0x00AE;\n t[63722] = 0x2122;\n t[63195] = 0x2122;\n t[63729] = 0x23A7;\n t[63730] = 0x23A8;\n t[63731] = 0x23A9;\n t[63740] = 0x23AB;\n t[63741] = 0x23AC;\n t[63742] = 0x23AD;\n t[63726] = 0x23A1;\n t[63727] = 0x23A2;\n t[63728] = 0x23A3;\n t[63737] = 0x23A4;\n t[63738] = 0x23A5;\n t[63739] = 0x23A6;\n t[63723] = 0x239B;\n t[63724] = 0x239C;\n t[63725] = 0x239D;\n t[63734] = 0x239E;\n t[63735] = 0x239F;\n t[63736] = 0x23A0;\n});\nfunction mapSpecialUnicodeValues(code) {\n if (code >= 0xFFF0 && code <= 0xFFFF) {\n  return 0;\n } else if (code >= 0xF600 && code <= 0xF8FF) {\n  return getSpecialPUASymbols()[code] || code;\n } else if (code === 0x00AD) {\n  return 0x002D;\n }\n return code;\n}\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n var unicode = glyphsUnicodeMap[name];\n if (unicode !== undefined) {\n  return unicode;\n }\n if (!name) {\n  return -1;\n }\n if (name[0] === 'u') {\n  var nameLen = name.length, hexStr;\n  if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n   hexStr = name.substr(3);\n  } else if (nameLen >= 5 && nameLen <= 7) {\n   hexStr = name.substr(1);\n  } else {\n   return -1;\n  }\n  if (hexStr === hexStr.toUpperCase()) {\n   unicode = parseInt(hexStr, 16);\n   if (unicode >= 0) {\n    return unicode;\n   }\n  }\n }\n return -1;\n}\nvar UnicodeRanges = [\n {\n  'begin': 0x0000,\n  'end': 0x007F\n },\n {\n  'begin': 0x0080,\n  'end': 0x00FF\n },\n {\n  'begin': 0x0100,\n  'end': 0x017F\n },\n {\n  'begin': 0x0180,\n  'end': 0x024F\n },\n {\n  'begin': 0x0250,\n  'end': 0x02AF\n },\n {\n  'begin': 0x02B0,\n  'end': 0x02FF\n },\n {\n  'begin': 0x0300,\n  'end': 0x036F\n },\n {\n  'begin': 0x0370,\n  'end': 0x03FF\n },\n {\n  'begin': 0x2C80,\n  'end': 0x2CFF\n },\n {\n  'begin': 0x0400,\n  'end': 0x04FF\n },\n {\n  'begin': 0x0530,\n  'end': 0x058F\n },\n {\n  'begin': 0x0590,\n  'end': 0x05FF\n },\n {\n  'begin': 0xA500,\n  'end': 0xA63F\n },\n {\n  'begin': 0x0600,\n  'end': 0x06FF\n },\n {\n  'begin': 0x07C0,\n  'end': 0x07FF\n },\n {\n  'begin': 0x0900,\n  'end': 0x097F\n },\n {\n  'begin': 0x0980,\n  'end': 0x09FF\n },\n {\n  'begin': 0x0A00,\n  'end': 0x0A7F\n },\n {\n  'begin': 0x0A80,\n  'end': 0x0AFF\n },\n {\n  'begin': 0x0B00,\n  'end': 0x0B7F\n },\n {\n  'begin': 0x0B80,\n  'end': 0x0BFF\n },\n {\n  'begin': 0x0C00,\n  'end': 0x0C7F\n },\n {\n  'begin': 0x0C80,\n  'end': 0x0CFF\n },\n {\n  'begin': 0x0D00,\n  'end': 0x0D7F\n },\n {\n  'begin': 0x0E00,\n  'end': 0x0E7F\n },\n {\n  'begin': 0x0E80,\n  'end': 0x0EFF\n },\n {\n  'begin': 0x10A0,\n  'end': 0x10FF\n },\n {\n  'begin': 0x1B00,\n  'end': 0x1B7F\n },\n {\n  'begin': 0x1100,\n  'end': 0x11FF\n },\n {\n  'begin': 0x1E00,\n  'end': 0x1EFF\n },\n {\n  'begin': 0x1F00,\n  'end': 0x1FFF\n },\n {\n  'begin': 0x2000,\n  'end': 0x206F\n },\n {\n  'begin': 0x2070,\n  'end': 0x209F\n },\n {\n  'begin': 0x20A0,\n  'end': 0x20CF\n },\n {\n  'begin': 0x20D0,\n  'end': 0x20FF\n },\n {\n  'begin': 0x2100,\n  'end': 0x214F\n },\n {\n  'begin': 0x2150,\n  'end': 0x218F\n },\n {\n  'begin': 0x2190,\n  'end': 0x21FF\n },\n {\n  'begin': 0x2200,\n  'end': 0x22FF\n },\n {\n  'begin': 0x2300,\n  'end': 0x23FF\n },\n {\n  'begin': 0x2400,\n  'end': 0x243F\n },\n {\n  'begin': 0x2440,\n  'end': 0x245F\n },\n {\n  'begin': 0x2460,\n  'end': 0x24FF\n },\n {\n  'begin': 0x2500,\n  'end': 0x257F\n },\n {\n  'begin': 0x2580,\n  'end': 0x259F\n },\n {\n  'begin': 0x25A0,\n  'end': 0x25FF\n },\n {\n  'begin': 0x2600,\n  'end': 0x26FF\n },\n {\n  'begin': 0x2700,\n  'end': 0x27BF\n },\n {\n  'begin': 0x3000,\n  'end': 0x303F\n },\n {\n  'begin': 0x3040,\n  'end': 0x309F\n },\n {\n  'begin': 0x30A0,\n  'end': 0x30FF\n },\n {\n  'begin': 0x3100,\n  'end': 0x312F\n },\n {\n  'begin': 0x3130,\n  'end': 0x318F\n },\n {\n  'begin': 0xA840,\n  'end': 0xA87F\n },\n {\n  'begin': 0x3200,\n  'end': 0x32FF\n },\n {\n  'begin': 0x3300,\n  'end': 0x33FF\n },\n {\n  'begin': 0xAC00,\n  'end': 0xD7AF\n },\n {\n  'begin': 0xD800,\n  'end': 0xDFFF\n },\n {\n  'begin': 0x10900,\n  'end': 0x1091F\n },\n {\n  'begin': 0x4E00,\n  'end': 0x9FFF\n },\n {\n  'begin': 0xE000,\n  'end': 0xF8FF\n },\n {\n  'begin': 0x31C0,\n  'end': 0x31EF\n },\n {\n  'begin': 0xFB00,\n  'end': 0xFB4F\n },\n {\n  'begin': 0xFB50,\n  'end': 0xFDFF\n },\n {\n  'begin': 0xFE20,\n  'end': 0xFE2F\n },\n {\n  'begin': 0xFE10,\n  'end': 0xFE1F\n },\n {\n  'begin': 0xFE50,\n  'end': 0xFE6F\n },\n {\n  'begin': 0xFE70,\n  'end': 0xFEFF\n },\n {\n  'begin': 0xFF00,\n  'end': 0xFFEF\n },\n {\n  'begin': 0xFFF0,\n  'end': 0xFFFF\n },\n {\n  'begin': 0x0F00,\n  'end': 0x0FFF\n },\n {\n  'begin': 0x0700,\n  'end': 0x074F\n },\n {\n  'begin': 0x0780,\n  'end': 0x07BF\n },\n {\n  'begin': 0x0D80,\n  'end': 0x0DFF\n },\n {\n  'begin': 0x1000,\n  'end': 0x109F\n },\n {\n  'begin': 0x1200,\n  'end': 0x137F\n },\n {\n  'begin': 0x13A0,\n  'end': 0x13FF\n },\n {\n  'begin': 0x1400,\n  'end': 0x167F\n },\n {\n  'begin': 0x1680,\n  'end': 0x169F\n },\n {\n  'begin': 0x16A0,\n  'end': 0x16FF\n },\n {\n  'begin': 0x1780,\n  'end': 0x17FF\n },\n {\n  'begin': 0x1800,\n  'end': 0x18AF\n },\n {\n  'begin': 0x2800,\n  'end': 0x28FF\n },\n {\n  'begin': 0xA000,\n  'end': 0xA48F\n },\n {\n  'begin': 0x1700,\n  'end': 0x171F\n },\n {\n  'begin': 0x10300,\n  'end': 0x1032F\n },\n {\n  'begin': 0x10330,\n  'end': 0x1034F\n },\n {\n  'begin': 0x10400,\n  'end': 0x1044F\n },\n {\n  'begin': 0x1D000,\n  'end': 0x1D0FF\n },\n {\n  'begin': 0x1D400,\n  'end': 0x1D7FF\n },\n {\n  'begin': 0xFF000,\n  'end': 0xFFFFD\n },\n {\n  'begin': 0xFE00,\n  'end': 0xFE0F\n },\n {\n  'begin': 0xE0000,\n  'end': 0xE007F\n },\n {\n  'begin': 0x1900,\n  'end': 0x194F\n },\n {\n  'begin': 0x1950,\n  'end': 0x197F\n },\n {\n  'begin': 0x1980,\n  'end': 0x19DF\n },\n {\n  'begin': 0x1A00,\n  'end': 0x1A1F\n },\n {\n  'begin': 0x2C00,\n  'end': 0x2C5F\n },\n {\n  'begin': 0x2D30,\n  'end': 0x2D7F\n },\n {\n  'begin': 0x4DC0,\n  'end': 0x4DFF\n },\n {\n  'begin': 0xA800,\n  'end': 0xA82F\n },\n {\n  'begin': 0x10000,\n  'end': 0x1007F\n },\n {\n  'begin': 0x10140,\n  'end': 0x1018F\n },\n {\n  'begin': 0x10380,\n  'end': 0x1039F\n },\n {\n  'begin': 0x103A0,\n  'end': 0x103DF\n },\n {\n  'begin': 0x10450,\n  'end': 0x1047F\n },\n {\n  'begin': 0x10480,\n  'end': 0x104AF\n },\n {\n  'begin': 0x10800,\n  'end': 0x1083F\n },\n {\n  'begin': 0x10A00,\n  'end': 0x10A5F\n },\n {\n  'begin': 0x1D300,\n  'end': 0x1D35F\n },\n {\n  'begin': 0x12000,\n  'end': 0x123FF\n },\n {\n  'begin': 0x1D360,\n  'end': 0x1D37F\n },\n {\n  'begin': 0x1B80,\n  'end': 0x1BBF\n },\n {\n  'begin': 0x1C00,\n  'end': 0x1C4F\n },\n {\n  'begin': 0x1C50,\n  'end': 0x1C7F\n },\n {\n  'begin': 0xA880,\n  'end': 0xA8DF\n },\n {\n  'begin': 0xA900,\n  'end': 0xA92F\n },\n {\n  'begin': 0xA930,\n  'end': 0xA95F\n },\n {\n  'begin': 0xAA00,\n  'end': 0xAA5F\n },\n {\n  'begin': 0x10190,\n  'end': 0x101CF\n },\n {\n  'begin': 0x101D0,\n  'end': 0x101FF\n },\n {\n  'begin': 0x102A0,\n  'end': 0x102DF\n },\n {\n  'begin': 0x1F030,\n  'end': 0x1F09F\n }\n];\nfunction getUnicodeRangeFor(value) {\n for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n  var range = UnicodeRanges[i];\n  if (value >= range.begin && value < range.end) {\n   return i;\n  }\n }\n return -1;\n}\nfunction isRTLRangeFor(value) {\n var range = UnicodeRanges[13];\n if (value >= range.begin && value < range.end) {\n  return true;\n }\n range = UnicodeRanges[11];\n if (value >= range.begin && value < range.end) {\n  return true;\n }\n return false;\n}\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n t['\\u00A8'] = '\\u0020\\u0308';\n t['\\u00AF'] = '\\u0020\\u0304';\n t['\\u00B4'] = '\\u0020\\u0301';\n t['\\u00B5'] = '\\u03BC';\n t['\\u00B8'] = '\\u0020\\u0327';\n t['\\u0132'] = '\\u0049\\u004A';\n t['\\u0133'] = '\\u0069\\u006A';\n t['\\u013F'] = '\\u004C\\u00B7';\n t['\\u0140'] = '\\u006C\\u00B7';\n t['\\u0149'] = '\\u02BC\\u006E';\n t['\\u017F'] = '\\u0073';\n t['\\u01C4'] = '\\u0044\\u017D';\n t['\\u01C5'] = '\\u0044\\u017E';\n t['\\u01C6'] = '\\u0064\\u017E';\n t['\\u01C7'] = '\\u004C\\u004A';\n t['\\u01C8'] = '\\u004C\\u006A';\n t['\\u01C9'] = '\\u006C\\u006A';\n t['\\u01CA'] = '\\u004E\\u004A';\n t['\\u01CB'] = '\\u004E\\u006A';\n t['\\u01CC'] = '\\u006E\\u006A';\n t['\\u01F1'] = '\\u0044\\u005A';\n t['\\u01F2'] = '\\u0044\\u007A';\n t['\\u01F3'] = '\\u0064\\u007A';\n t['\\u02D8'] = '\\u0020\\u0306';\n t['\\u02D9'] = '\\u0020\\u0307';\n t['\\u02DA'] = '\\u0020\\u030A';\n t['\\u02DB'] = '\\u0020\\u0328';\n t['\\u02DC'] = '\\u0020\\u0303';\n t['\\u02DD'] = '\\u0020\\u030B';\n t['\\u037A'] = '\\u0020\\u0345';\n t['\\u0384'] = '\\u0020\\u0301';\n t['\\u03D0'] = '\\u03B2';\n t['\\u03D1'] = '\\u03B8';\n t['\\u03D2'] = '\\u03A5';\n t['\\u03D5'] = '\\u03C6';\n t['\\u03D6'] = '\\u03C0';\n t['\\u03F0'] = '\\u03BA';\n t['\\u03F1'] = '\\u03C1';\n t['\\u03F2'] = '\\u03C2';\n t['\\u03F4'] = '\\u0398';\n t['\\u03F5'] = '\\u03B5';\n t['\\u03F9'] = '\\u03A3';\n t['\\u0587'] = '\\u0565\\u0582';\n t['\\u0675'] = '\\u0627\\u0674';\n t['\\u0676'] = '\\u0648\\u0674';\n t['\\u0677'] = '\\u06C7\\u0674';\n t['\\u0678'] = '\\u064A\\u0674';\n t['\\u0E33'] = '\\u0E4D\\u0E32';\n t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n t['\\u0EDC'] = '\\u0EAB\\u0E99';\n t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n t['\\u0F77'] = '\\u0FB2\\u0F81';\n t['\\u0F79'] = '\\u0FB3\\u0F81';\n t['\\u1E9A'] = '\\u0061\\u02BE';\n t['\\u1FBD'] = '\\u0020\\u0313';\n t['\\u1FBF'] = '\\u0020\\u0313';\n t['\\u1FC0'] = '\\u0020\\u0342';\n t['\\u1FFE'] = '\\u0020\\u0314';\n t['\\u2002'] = '\\u0020';\n t['\\u2003'] = '\\u0020';\n t['\\u2004'] = '\\u0020';\n t['\\u2005'] = '\\u0020';\n t['\\u2006'] = '\\u0020';\n t['\\u2008'] = '\\u0020';\n t['\\u2009'] = '\\u0020';\n t['\\u200A'] = '\\u0020';\n t['\\u2017'] = '\\u0020\\u0333';\n t['\\u2024'] = '\\u002E';\n t['\\u2025'] = '\\u002E\\u002E';\n t['\\u2026'] = '\\u002E\\u002E\\u002E';\n t['\\u2033'] = '\\u2032\\u2032';\n t['\\u2034'] = '\\u2032\\u2032\\u2032';\n t['\\u2036'] = '\\u2035\\u2035';\n t['\\u2037'] = '\\u2035\\u2035\\u2035';\n t['\\u203C'] = '\\u0021\\u0021';\n t['\\u203E'] = '\\u0020\\u0305';\n t['\\u2047'] = '\\u003F\\u003F';\n t['\\u2048'] = '\\u003F\\u0021';\n t['\\u2049'] = '\\u0021\\u003F';\n t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n t['\\u205F'] = '\\u0020';\n t['\\u20A8'] = '\\u0052\\u0073';\n t['\\u2100'] = '\\u0061\\u002F\\u0063';\n t['\\u2101'] = '\\u0061\\u002F\\u0073';\n t['\\u2103'] = '\\u00B0\\u0043';\n t['\\u2105'] = '\\u0063\\u002F\\u006F';\n t['\\u2106'] = '\\u0063\\u002F\\u0075';\n t['\\u2107'] = '\\u0190';\n t['\\u2109'] = '\\u00B0\\u0046';\n t['\\u2116'] = '\\u004E\\u006F';\n t['\\u2121'] = '\\u0054\\u0045\\u004C';\n t['\\u2135'] = '\\u05D0';\n t['\\u2136'] = '\\u05D1';\n t['\\u2137'] = '\\u05D2';\n t['\\u2138'] = '\\u05D3';\n t['\\u213B'] = '\\u0046\\u0041\\u0058';\n t['\\u2160'] = '\\u0049';\n t['\\u2161'] = '\\u0049\\u0049';\n t['\\u2162'] = '\\u0049\\u0049\\u0049';\n t['\\u2163'] = '\\u0049\\u0056';\n t['\\u2164'] = '\\u0056';\n t['\\u2165'] = '\\u0056\\u0049';\n t['\\u2166'] = '\\u0056\\u0049\\u0049';\n t['\\u2167'] = '\\u0056\\u0049\\u0049\\u0049';\n t['\\u2168'] = '\\u0049\\u0058';\n t['\\u2169'] = '\\u0058';\n t['\\u216A'] = '\\u0058\\u0049';\n t['\\u216B'] = '\\u0058\\u0049\\u0049';\n t['\\u216C'] = '\\u004C';\n t['\\u216D'] = '\\u0043';\n t['\\u216E'] = '\\u0044';\n t['\\u216F'] = '\\u004D';\n t['\\u2170'] = '\\u0069';\n t['\\u2171'] = '\\u0069\\u0069';\n t['\\u2172'] = '\\u0069\\u0069\\u0069';\n t['\\u2173'] = '\\u0069\\u0076';\n t['\\u2174'] = '\\u0076';\n t['\\u2175'] = '\\u0076\\u0069';\n t['\\u2176'] = '\\u0076\\u0069\\u0069';\n t['\\u2177'] = '\\u0076\\u0069\\u0069\\u0069';\n t['\\u2178'] = '\\u0069\\u0078';\n t['\\u2179'] = '\\u0078';\n t['\\u217A'] = '\\u0078\\u0069';\n t['\\u217B'] = '\\u0078\\u0069\\u0069';\n t['\\u217C'] = '\\u006C';\n t['\\u217D'] = '\\u0063';\n t['\\u217E'] = '\\u0064';\n t['\\u217F'] = '\\u006D';\n t['\\u222C'] = '\\u222B\\u222B';\n t['\\u222D'] = '\\u222B\\u222B\\u222B';\n t['\\u222F'] = '\\u222E\\u222E';\n t['\\u2230'] = '\\u222E\\u222E\\u222E';\n t['\\u2474'] = '\\u0028\\u0031\\u0029';\n t['\\u2475'] = '\\u0028\\u0032\\u0029';\n t['\\u2476'] = '\\u0028\\u0033\\u0029';\n t['\\u2477'] = '\\u0028\\u0034\\u0029';\n t['\\u2478'] = '\\u0028\\u0035\\u0029';\n t['\\u2479'] = '\\u0028\\u0036\\u0029';\n t['\\u247A'] = '\\u0028\\u0037\\u0029';\n t['\\u247B'] = '\\u0028\\u0038\\u0029';\n t['\\u247C'] = '\\u0028\\u0039\\u0029';\n t['\\u247D'] = '\\u0028\\u0031\\u0030\\u0029';\n t['\\u247E'] = '\\u0028\\u0031\\u0031\\u0029';\n t['\\u247F'] = '\\u0028\\u0031\\u0032\\u0029';\n t['\\u2480'] = '\\u0028\\u0031\\u0033\\u0029';\n t['\\u2481'] = '\\u0028\\u0031\\u0034\\u0029';\n t['\\u2482'] = '\\u0028\\u0031\\u0035\\u0029';\n t['\\u2483'] = '\\u0028\\u0031\\u0036\\u0029';\n t['\\u2484'] = '\\u0028\\u0031\\u0037\\u0029';\n t['\\u2485'] = '\\u0028\\u0031\\u0038\\u0029';\n t['\\u2486'] = '\\u0028\\u0031\\u0039\\u0029';\n t['\\u2487'] = '\\u0028\\u0032\\u0030\\u0029';\n t['\\u2488'] = '\\u0031\\u002E';\n t['\\u2489'] = '\\u0032\\u002E';\n t['\\u248A'] = '\\u0033\\u002E';\n t['\\u248B'] = '\\u0034\\u002E';\n t['\\u248C'] = '\\u0035\\u002E';\n t['\\u248D'] = '\\u0036\\u002E';\n t['\\u248E'] = '\\u0037\\u002E';\n t['\\u248F'] = '\\u0038\\u002E';\n t['\\u2490'] = '\\u0039\\u002E';\n t['\\u2491'] = '\\u0031\\u0030\\u002E';\n t['\\u2492'] = '\\u0031\\u0031\\u002E';\n t['\\u2493'] = '\\u0031\\u0032\\u002E';\n t['\\u2494'] = '\\u0031\\u0033\\u002E';\n t['\\u2495'] = '\\u0031\\u0034\\u002E';\n t['\\u2496'] = '\\u0031\\u0035\\u002E';\n t['\\u2497'] = '\\u0031\\u0036\\u002E';\n t['\\u2498'] = '\\u0031\\u0037\\u002E';\n t['\\u2499'] = '\\u0031\\u0038\\u002E';\n t['\\u249A'] = '\\u0031\\u0039\\u002E';\n t['\\u249B'] = '\\u0032\\u0030\\u002E';\n t['\\u249C'] = '\\u0028\\u0061\\u0029';\n t['\\u249D'] = '\\u0028\\u0062\\u0029';\n t['\\u249E'] = '\\u0028\\u0063\\u0029';\n t['\\u249F'] = '\\u0028\\u0064\\u0029';\n t['\\u24A0'] = '\\u0028\\u0065\\u0029';\n t['\\u24A1'] = '\\u0028\\u0066\\u0029';\n t['\\u24A2'] = '\\u0028\\u0067\\u0029';\n t['\\u24A3'] = '\\u0028\\u0068\\u0029';\n t['\\u24A4'] = '\\u0028\\u0069\\u0029';\n t['\\u24A5'] = '\\u0028\\u006A\\u0029';\n t['\\u24A6'] = '\\u0028\\u006B\\u0029';\n t['\\u24A7'] = '\\u0028\\u006C\\u0029';\n t['\\u24A8'] = '\\u0028\\u006D\\u0029';\n t['\\u24A9'] = '\\u0028\\u006E\\u0029';\n t['\\u24AA'] = '\\u0028\\u006F\\u0029';\n t['\\u24AB'] = '\\u0028\\u0070\\u0029';\n t['\\u24AC'] = '\\u0028\\u0071\\u0029';\n t['\\u24AD'] = '\\u0028\\u0072\\u0029';\n t['\\u24AE'] = '\\u0028\\u0073\\u0029';\n t['\\u24AF'] = '\\u0028\\u0074\\u0029';\n t['\\u24B0'] = '\\u0028\\u0075\\u0029';\n t['\\u24B1'] = '\\u0028\\u0076\\u0029';\n t['\\u24B2'] = '\\u0028\\u0077\\u0029';\n t['\\u24B3'] = '\\u0028\\u0078\\u0029';\n t['\\u24B4'] = '\\u0028\\u0079\\u0029';\n t['\\u24B5'] = '\\u0028\\u007A\\u0029';\n t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n t['\\u2A74'] = '\\u003A\\u003A\\u003D';\n t['\\u2A75'] = '\\u003D\\u003D';\n t['\\u2A76'] = '\\u003D\\u003D\\u003D';\n t['\\u2E9F'] = '\\u6BCD';\n t['\\u2EF3'] = '\\u9F9F';\n t['\\u2F00'] = '\\u4E00';\n t['\\u2F01'] = '\\u4E28';\n t['\\u2F02'] = '\\u4E36';\n t['\\u2F03'] = '\\u4E3F';\n t['\\u2F04'] = '\\u4E59';\n t['\\u2F05'] = '\\u4E85';\n t['\\u2F06'] = '\\u4E8C';\n t['\\u2F07'] = '\\u4EA0';\n t['\\u2F08'] = '\\u4EBA';\n t['\\u2F09'] = '\\u513F';\n t['\\u2F0A'] = '\\u5165';\n t['\\u2F0B'] = '\\u516B';\n t['\\u2F0C'] = '\\u5182';\n t['\\u2F0D'] = '\\u5196';\n t['\\u2F0E'] = '\\u51AB';\n t['\\u2F0F'] = '\\u51E0';\n t['\\u2F10'] = '\\u51F5';\n t['\\u2F11'] = '\\u5200';\n t['\\u2F12'] = '\\u529B';\n t['\\u2F13'] = '\\u52F9';\n t['\\u2F14'] = '\\u5315';\n t['\\u2F15'] = '\\u531A';\n t['\\u2F16'] = '\\u5338';\n t['\\u2F17'] = '\\u5341';\n t['\\u2F18'] = '\\u535C';\n t['\\u2F19'] = '\\u5369';\n t['\\u2F1A'] = '\\u5382';\n t['\\u2F1B'] = '\\u53B6';\n t['\\u2F1C'] = '\\u53C8';\n t['\\u2F1D'] = '\\u53E3';\n t['\\u2F1E'] = '\\u56D7';\n t['\\u2F1F'] = '\\u571F';\n t['\\u2F20'] = '\\u58EB';\n t['\\u2F21'] = '\\u5902';\n t['\\u2F22'] = '\\u590A';\n t['\\u2F23'] = '\\u5915';\n t['\\u2F24'] = '\\u5927';\n t['\\u2F25'] = '\\u5973';\n t['\\u2F26'] = '\\u5B50';\n t['\\u2F27'] = '\\u5B80';\n t['\\u2F28'] = '\\u5BF8';\n t['\\u2F29'] = '\\u5C0F';\n t['\\u2F2A'] = '\\u5C22';\n t['\\u2F2B'] = '\\u5C38';\n t['\\u2F2C'] = '\\u5C6E';\n t['\\u2F2D'] = '\\u5C71';\n t['\\u2F2E'] = '\\u5DDB';\n t['\\u2F2F'] = '\\u5DE5';\n t['\\u2F30'] = '\\u5DF1';\n t['\\u2F31'] = '\\u5DFE';\n t['\\u2F32'] = '\\u5E72';\n t['\\u2F33'] = '\\u5E7A';\n t['\\u2F34'] = '\\u5E7F';\n t['\\u2F35'] = '\\u5EF4';\n t['\\u2F36'] = '\\u5EFE';\n t['\\u2F37'] = '\\u5F0B';\n t['\\u2F38'] = '\\u5F13';\n t['\\u2F39'] = '\\u5F50';\n t['\\u2F3A'] = '\\u5F61';\n t['\\u2F3B'] = '\\u5F73';\n t['\\u2F3C'] = '\\u5FC3';\n t['\\u2F3D'] = '\\u6208';\n t['\\u2F3E'] = '\\u6236';\n t['\\u2F3F'] = '\\u624B';\n t['\\u2F40'] = '\\u652F';\n t['\\u2F41'] = '\\u6534';\n t['\\u2F42'] = '\\u6587';\n t['\\u2F43'] = '\\u6597';\n t['\\u2F44'] = '\\u65A4';\n t['\\u2F45'] = '\\u65B9';\n t['\\u2F46'] = '\\u65E0';\n t['\\u2F47'] = '\\u65E5';\n t['\\u2F48'] = '\\u66F0';\n t['\\u2F49'] = '\\u6708';\n t['\\u2F4A'] = '\\u6728';\n t['\\u2F4B'] = '\\u6B20';\n t['\\u2F4C'] = '\\u6B62';\n t['\\u2F4D'] = '\\u6B79';\n t['\\u2F4E'] = '\\u6BB3';\n t['\\u2F4F'] = '\\u6BCB';\n t['\\u2F50'] = '\\u6BD4';\n t['\\u2F51'] = '\\u6BDB';\n t['\\u2F52'] = '\\u6C0F';\n t['\\u2F53'] = '\\u6C14';\n t['\\u2F54'] = '\\u6C34';\n t['\\u2F55'] = '\\u706B';\n t['\\u2F56'] = '\\u722A';\n t['\\u2F57'] = '\\u7236';\n t['\\u2F58'] = '\\u723B';\n t['\\u2F59'] = '\\u723F';\n t['\\u2F5A'] = '\\u7247';\n t['\\u2F5B'] = '\\u7259';\n t['\\u2F5C'] = '\\u725B';\n t['\\u2F5D'] = '\\u72AC';\n t['\\u2F5E'] = '\\u7384';\n t['\\u2F5F'] = '\\u7389';\n t['\\u2F60'] = '\\u74DC';\n t['\\u2F61'] = '\\u74E6';\n t['\\u2F62'] = '\\u7518';\n t['\\u2F63'] = '\\u751F';\n t['\\u2F64'] = '\\u7528';\n t['\\u2F65'] = '\\u7530';\n t['\\u2F66'] = '\\u758B';\n t['\\u2F67'] = '\\u7592';\n t['\\u2F68'] = '\\u7676';\n t['\\u2F69'] = '\\u767D';\n t['\\u2F6A'] = '\\u76AE';\n t['\\u2F6B'] = '\\u76BF';\n t['\\u2F6C'] = '\\u76EE';\n t['\\u2F6D'] = '\\u77DB';\n t['\\u2F6E'] = '\\u77E2';\n t['\\u2F6F'] = '\\u77F3';\n t['\\u2F70'] = '\\u793A';\n t['\\u2F71'] = '\\u79B8';\n t['\\u2F72'] = '\\u79BE';\n t['\\u2F73'] = '\\u7A74';\n t['\\u2F74'] = '\\u7ACB';\n t['\\u2F75'] = '\\u7AF9';\n t['\\u2F76'] = '\\u7C73';\n t['\\u2F77'] = '\\u7CF8';\n t['\\u2F78'] = '\\u7F36';\n t['\\u2F79'] = '\\u7F51';\n t['\\u2F7A'] = '\\u7F8A';\n t['\\u2F7B'] = '\\u7FBD';\n t['\\u2F7C'] = '\\u8001';\n t['\\u2F7D'] = '\\u800C';\n t['\\u2F7E'] = '\\u8012';\n t['\\u2F7F'] = '\\u8033';\n t['\\u2F80'] = '\\u807F';\n t['\\u2F81'] = '\\u8089';\n t['\\u2F82'] = '\\u81E3';\n t['\\u2F83'] = '\\u81EA';\n t['\\u2F84'] = '\\u81F3';\n t['\\u2F85'] = '\\u81FC';\n t['\\u2F86'] = '\\u820C';\n t['\\u2F87'] = '\\u821B';\n t['\\u2F88'] = '\\u821F';\n t['\\u2F89'] = '\\u826E';\n t['\\u2F8A'] = '\\u8272';\n t['\\u2F8B'] = '\\u8278';\n t['\\u2F8C'] = '\\u864D';\n t['\\u2F8D'] = '\\u866B';\n t['\\u2F8E'] = '\\u8840';\n t['\\u2F8F'] = '\\u884C';\n t['\\u2F90'] = '\\u8863';\n t['\\u2F91'] = '\\u897E';\n t['\\u2F92'] = '\\u898B';\n t['\\u2F93'] = '\\u89D2';\n t['\\u2F94'] = '\\u8A00';\n t['\\u2F95'] = '\\u8C37';\n t['\\u2F96'] = '\\u8C46';\n t['\\u2F97'] = '\\u8C55';\n t['\\u2F98'] = '\\u8C78';\n t['\\u2F99'] = '\\u8C9D';\n t['\\u2F9A'] = '\\u8D64';\n t['\\u2F9B'] = '\\u8D70';\n t['\\u2F9C'] = '\\u8DB3';\n t['\\u2F9D'] = '\\u8EAB';\n t['\\u2F9E'] = '\\u8ECA';\n t['\\u2F9F'] = '\\u8F9B';\n t['\\u2FA0'] = '\\u8FB0';\n t['\\u2FA1'] = '\\u8FB5';\n t['\\u2FA2'] = '\\u9091';\n t['\\u2FA3'] = '\\u9149';\n t['\\u2FA4'] = '\\u91C6';\n t['\\u2FA5'] = '\\u91CC';\n t['\\u2FA6'] = '\\u91D1';\n t['\\u2FA7'] = '\\u9577';\n t['\\u2FA8'] = '\\u9580';\n t['\\u2FA9'] = '\\u961C';\n t['\\u2FAA'] = '\\u96B6';\n t['\\u2FAB'] = '\\u96B9';\n t['\\u2FAC'] = '\\u96E8';\n t['\\u2FAD'] = '\\u9751';\n t['\\u2FAE'] = '\\u975E';\n t['\\u2FAF'] = '\\u9762';\n t['\\u2FB0'] = '\\u9769';\n t['\\u2FB1'] = '\\u97CB';\n t['\\u2FB2'] = '\\u97ED';\n t['\\u2FB3'] = '\\u97F3';\n t['\\u2FB4'] = '\\u9801';\n t['\\u2FB5'] = '\\u98A8';\n t['\\u2FB6'] = '\\u98DB';\n t['\\u2FB7'] = '\\u98DF';\n t['\\u2FB8'] = '\\u9996';\n t['\\u2FB9'] = '\\u9999';\n t['\\u2FBA'] = '\\u99AC';\n t['\\u2FBB'] = '\\u9AA8';\n t['\\u2FBC'] = '\\u9AD8';\n t['\\u2FBD'] = '\\u9ADF';\n t['\\u2FBE'] = '\\u9B25';\n t['\\u2FBF'] = '\\u9B2F';\n t['\\u2FC0'] = '\\u9B32';\n t['\\u2FC1'] = '\\u9B3C';\n t['\\u2FC2'] = '\\u9B5A';\n t['\\u2FC3'] = '\\u9CE5';\n t['\\u2FC4'] = '\\u9E75';\n t['\\u2FC5'] = '\\u9E7F';\n t['\\u2FC6'] = '\\u9EA5';\n t['\\u2FC7'] = '\\u9EBB';\n t['\\u2FC8'] = '\\u9EC3';\n t['\\u2FC9'] = '\\u9ECD';\n t['\\u2FCA'] = '\\u9ED1';\n t['\\u2FCB'] = '\\u9EF9';\n t['\\u2FCC'] = '\\u9EFD';\n t['\\u2FCD'] = '\\u9F0E';\n t['\\u2FCE'] = '\\u9F13';\n t['\\u2FCF'] = '\\u9F20';\n t['\\u2FD0'] = '\\u9F3B';\n t['\\u2FD1'] = '\\u9F4A';\n t['\\u2FD2'] = '\\u9F52';\n t['\\u2FD3'] = '\\u9F8D';\n t['\\u2FD4'] = '\\u9F9C';\n t['\\u2FD5'] = '\\u9FA0';\n t['\\u3036'] = '\\u3012';\n t['\\u3038'] = '\\u5341';\n t['\\u3039'] = '\\u5344';\n t['\\u303A'] = '\\u5345';\n t['\\u309B'] = '\\u0020\\u3099';\n t['\\u309C'] = '\\u0020\\u309A';\n t['\\u3131'] = '\\u1100';\n t['\\u3132'] = '\\u1101';\n t['\\u3133'] = '\\u11AA';\n t['\\u3134'] = '\\u1102';\n t['\\u3135'] = '\\u11AC';\n t['\\u3136'] = '\\u11AD';\n t['\\u3137'] = '\\u1103';\n t['\\u3138'] = '\\u1104';\n t['\\u3139'] = '\\u1105';\n t['\\u313A'] = '\\u11B0';\n t['\\u313B'] = '\\u11B1';\n t['\\u313C'] = '\\u11B2';\n t['\\u313D'] = '\\u11B3';\n t['\\u313E'] = '\\u11B4';\n t['\\u313F'] = '\\u11B5';\n t['\\u3140'] = '\\u111A';\n t['\\u3141'] = '\\u1106';\n t['\\u3142'] = '\\u1107';\n t['\\u3143'] = '\\u1108';\n t['\\u3144'] = '\\u1121';\n t['\\u3145'] = '\\u1109';\n t['\\u3146'] = '\\u110A';\n t['\\u3147'] = '\\u110B';\n t['\\u3148'] = '\\u110C';\n t['\\u3149'] = '\\u110D';\n t['\\u314A'] = '\\u110E';\n t['\\u314B'] = '\\u110F';\n t['\\u314C'] = '\\u1110';\n t['\\u314D'] = '\\u1111';\n t['\\u314E'] = '\\u1112';\n t['\\u314F'] = '\\u1161';\n t['\\u3150'] = '\\u1162';\n t['\\u3151'] = '\\u1163';\n t['\\u3152'] = '\\u1164';\n t['\\u3153'] = '\\u1165';\n t['\\u3154'] = '\\u1166';\n t['\\u3155'] = '\\u1167';\n t['\\u3156'] = '\\u1168';\n t['\\u3157'] = '\\u1169';\n t['\\u3158'] = '\\u116A';\n t['\\u3159'] = '\\u116B';\n t['\\u315A'] = '\\u116C';\n t['\\u315B'] = '\\u116D';\n t['\\u315C'] = '\\u116E';\n t['\\u315D'] = '\\u116F';\n t['\\u315E'] = '\\u1170';\n t['\\u315F'] = '\\u1171';\n t['\\u3160'] = '\\u1172';\n t['\\u3161'] = '\\u1173';\n t['\\u3162'] = '\\u1174';\n t['\\u3163'] = '\\u1175';\n t['\\u3164'] = '\\u1160';\n t['\\u3165'] = '\\u1114';\n t['\\u3166'] = '\\u1115';\n t['\\u3167'] = '\\u11C7';\n t['\\u3168'] = '\\u11C8';\n t['\\u3169'] = '\\u11CC';\n t['\\u316A'] = '\\u11CE';\n t['\\u316B'] = '\\u11D3';\n t['\\u316C'] = '\\u11D7';\n t['\\u316D'] = '\\u11D9';\n t['\\u316E'] = '\\u111C';\n t['\\u316F'] = '\\u11DD';\n t['\\u3170'] = '\\u11DF';\n t['\\u3171'] = '\\u111D';\n t['\\u3172'] = '\\u111E';\n t['\\u3173'] = '\\u1120';\n t['\\u3174'] = '\\u1122';\n t['\\u3175'] = '\\u1123';\n t['\\u3176'] = '\\u1127';\n t['\\u3177'] = '\\u1129';\n t['\\u3178'] = '\\u112B';\n t['\\u3179'] = '\\u112C';\n t['\\u317A'] = '\\u112D';\n t['\\u317B'] = '\\u112E';\n t['\\u317C'] = '\\u112F';\n t['\\u317D'] = '\\u1132';\n t['\\u317E'] = '\\u1136';\n t['\\u317F'] = '\\u1140';\n t['\\u3180'] = '\\u1147';\n t['\\u3181'] = '\\u114C';\n t['\\u3182'] = '\\u11F1';\n t['\\u3183'] = '\\u11F2';\n t['\\u3184'] = '\\u1157';\n t['\\u3185'] = '\\u1158';\n t['\\u3186'] = '\\u1159';\n t['\\u3187'] = '\\u1184';\n t['\\u3188'] = '\\u1185';\n t['\\u3189'] = '\\u1188';\n t['\\u318A'] = '\\u1191';\n t['\\u318B'] = '\\u1192';\n t['\\u318C'] = '\\u1194';\n t['\\u318D'] = '\\u119E';\n t['\\u318E'] = '\\u11A1';\n t['\\u3200'] = '\\u0028\\u1100\\u0029';\n t['\\u3201'] = '\\u0028\\u1102\\u0029';\n t['\\u3202'] = '\\u0028\\u1103\\u0029';\n t['\\u3203'] = '\\u0028\\u1105\\u0029';\n t['\\u3204'] = '\\u0028\\u1106\\u0029';\n t['\\u3205'] = '\\u0028\\u1107\\u0029';\n t['\\u3206'] = '\\u0028\\u1109\\u0029';\n t['\\u3207'] = '\\u0028\\u110B\\u0029';\n t['\\u3208'] = '\\u0028\\u110C\\u0029';\n t['\\u3209'] = '\\u0028\\u110E\\u0029';\n t['\\u320A'] = '\\u0028\\u110F\\u0029';\n t['\\u320B'] = '\\u0028\\u1110\\u0029';\n t['\\u320C'] = '\\u0028\\u1111\\u0029';\n t['\\u320D'] = '\\u0028\\u1112\\u0029';\n t['\\u320E'] = '\\u0028\\u1100\\u1161\\u0029';\n t['\\u320F'] = '\\u0028\\u1102\\u1161\\u0029';\n t['\\u3210'] = '\\u0028\\u1103\\u1161\\u0029';\n t['\\u3211'] = '\\u0028\\u1105\\u1161\\u0029';\n t['\\u3212'] = '\\u0028\\u1106\\u1161\\u0029';\n t['\\u3213'] = '\\u0028\\u1107\\u1161\\u0029';\n t['\\u3214'] = '\\u0028\\u1109\\u1161\\u0029';\n t['\\u3215'] = '\\u0028\\u110B\\u1161\\u0029';\n t['\\u3216'] = '\\u0028\\u110C\\u1161\\u0029';\n t['\\u3217'] = '\\u0028\\u110E\\u1161\\u0029';\n t['\\u3218'] = '\\u0028\\u110F\\u1161\\u0029';\n t['\\u3219'] = '\\u0028\\u1110\\u1161\\u0029';\n t['\\u321A'] = '\\u0028\\u1111\\u1161\\u0029';\n t['\\u321B'] = '\\u0028\\u1112\\u1161\\u0029';\n t['\\u321C'] = '\\u0028\\u110C\\u116E\\u0029';\n t['\\u321D'] = '\\u0028\\u110B\\u1169\\u110C\\u1165\\u11AB\\u0029';\n t['\\u321E'] = '\\u0028\\u110B\\u1169\\u1112\\u116E\\u0029';\n t['\\u3220'] = '\\u0028\\u4E00\\u0029';\n t['\\u3221'] = '\\u0028\\u4E8C\\u0029';\n t['\\u3222'] = '\\u0028\\u4E09\\u0029';\n t['\\u3223'] = '\\u0028\\u56DB\\u0029';\n t['\\u3224'] = '\\u0028\\u4E94\\u0029';\n t['\\u3225'] = '\\u0028\\u516D\\u0029';\n t['\\u3226'] = '\\u0028\\u4E03\\u0029';\n t['\\u3227'] = '\\u0028\\u516B\\u0029';\n t['\\u3228'] = '\\u0028\\u4E5D\\u0029';\n t['\\u3229'] = '\\u0028\\u5341\\u0029';\n t['\\u322A'] = '\\u0028\\u6708\\u0029';\n t['\\u322B'] = '\\u0028\\u706B\\u0029';\n t['\\u322C'] = '\\u0028\\u6C34\\u0029';\n t['\\u322D'] = '\\u0028\\u6728\\u0029';\n t['\\u322E'] = '\\u0028\\u91D1\\u0029';\n t['\\u322F'] = '\\u0028\\u571F\\u0029';\n t['\\u3230'] = '\\u0028\\u65E5\\u0029';\n t['\\u3231'] = '\\u0028\\u682A\\u0029';\n t['\\u3232'] = '\\u0028\\u6709\\u0029';\n t['\\u3233'] = '\\u0028\\u793E\\u0029';\n t['\\u3234'] = '\\u0028\\u540D\\u0029';\n t['\\u3235'] = '\\u0028\\u7279\\u0029';\n t['\\u3236'] = '\\u0028\\u8CA1\\u0029';\n t['\\u3237'] = '\\u0028\\u795D\\u0029';\n t['\\u3238'] = '\\u0028\\u52B4\\u0029';\n t['\\u3239'] = '\\u0028\\u4EE3\\u0029';\n t['\\u323A'] = '\\u0028\\u547C\\u0029';\n t['\\u323B'] = '\\u0028\\u5B66\\u0029';\n t['\\u323C'] = '\\u0028\\u76E3\\u0029';\n t['\\u323D'] = '\\u0028\\u4F01\\u0029';\n t['\\u323E'] = '\\u0028\\u8CC7\\u0029';\n t['\\u323F'] = '\\u0028\\u5354\\u0029';\n t['\\u3240'] = '\\u0028\\u796D\\u0029';\n t['\\u3241'] = '\\u0028\\u4F11\\u0029';\n t['\\u3242'] = '\\u0028\\u81EA\\u0029';\n t['\\u3243'] = '\\u0028\\u81F3\\u0029';\n t['\\u32C0'] = '\\u0031\\u6708';\n t['\\u32C1'] = '\\u0032\\u6708';\n t['\\u32C2'] = '\\u0033\\u6708';\n t['\\u32C3'] = '\\u0034\\u6708';\n t['\\u32C4'] = '\\u0035\\u6708';\n t['\\u32C5'] = '\\u0036\\u6708';\n t['\\u32C6'] = '\\u0037\\u6708';\n t['\\u32C7'] = '\\u0038\\u6708';\n t['\\u32C8'] = '\\u0039\\u6708';\n t['\\u32C9'] = '\\u0031\\u0030\\u6708';\n t['\\u32CA'] = '\\u0031\\u0031\\u6708';\n t['\\u32CB'] = '\\u0031\\u0032\\u6708';\n t['\\u3358'] = '\\u0030\\u70B9';\n t['\\u3359'] = '\\u0031\\u70B9';\n t['\\u335A'] = '\\u0032\\u70B9';\n t['\\u335B'] = '\\u0033\\u70B9';\n t['\\u335C'] = '\\u0034\\u70B9';\n t['\\u335D'] = '\\u0035\\u70B9';\n t['\\u335E'] = '\\u0036\\u70B9';\n t['\\u335F'] = '\\u0037\\u70B9';\n t['\\u3360'] = '\\u0038\\u70B9';\n t['\\u3361'] = '\\u0039\\u70B9';\n t['\\u3362'] = '\\u0031\\u0030\\u70B9';\n t['\\u3363'] = '\\u0031\\u0031\\u70B9';\n t['\\u3364'] = '\\u0031\\u0032\\u70B9';\n t['\\u3365'] = '\\u0031\\u0033\\u70B9';\n t['\\u3366'] = '\\u0031\\u0034\\u70B9';\n t['\\u3367'] = '\\u0031\\u0035\\u70B9';\n t['\\u3368'] = '\\u0031\\u0036\\u70B9';\n t['\\u3369'] = '\\u0031\\u0037\\u70B9';\n t['\\u336A'] = '\\u0031\\u0038\\u70B9';\n t['\\u336B'] = '\\u0031\\u0039\\u70B9';\n t['\\u336C'] = '\\u0032\\u0030\\u70B9';\n t['\\u336D'] = '\\u0032\\u0031\\u70B9';\n t['\\u336E'] = '\\u0032\\u0032\\u70B9';\n t['\\u336F'] = '\\u0032\\u0033\\u70B9';\n t['\\u3370'] = '\\u0032\\u0034\\u70B9';\n t['\\u33E0'] = '\\u0031\\u65E5';\n t['\\u33E1'] = '\\u0032\\u65E5';\n t['\\u33E2'] = '\\u0033\\u65E5';\n t['\\u33E3'] = '\\u0034\\u65E5';\n t['\\u33E4'] = '\\u0035\\u65E5';\n t['\\u33E5'] = '\\u0036\\u65E5';\n t['\\u33E6'] = '\\u0037\\u65E5';\n t['\\u33E7'] = '\\u0038\\u65E5';\n t['\\u33E8'] = '\\u0039\\u65E5';\n t['\\u33E9'] = '\\u0031\\u0030\\u65E5';\n t['\\u33EA'] = '\\u0031\\u0031\\u65E5';\n t['\\u33EB'] = '\\u0031\\u0032\\u65E5';\n t['\\u33EC'] = '\\u0031\\u0033\\u65E5';\n t['\\u33ED'] = '\\u0031\\u0034\\u65E5';\n t['\\u33EE'] = '\\u0031\\u0035\\u65E5';\n t['\\u33EF'] = '\\u0031\\u0036\\u65E5';\n t['\\u33F0'] = '\\u0031\\u0037\\u65E5';\n t['\\u33F1'] = '\\u0031\\u0038\\u65E5';\n t['\\u33F2'] = '\\u0031\\u0039\\u65E5';\n t['\\u33F3'] = '\\u0032\\u0030\\u65E5';\n t['\\u33F4'] = '\\u0032\\u0031\\u65E5';\n t['\\u33F5'] = '\\u0032\\u0032\\u65E5';\n t['\\u33F6'] = '\\u0032\\u0033\\u65E5';\n t['\\u33F7'] = '\\u0032\\u0034\\u65E5';\n t['\\u33F8'] = '\\u0032\\u0035\\u65E5';\n t['\\u33F9'] = '\\u0032\\u0036\\u65E5';\n t['\\u33FA'] = '\\u0032\\u0037\\u65E5';\n t['\\u33FB'] = '\\u0032\\u0038\\u65E5';\n t['\\u33FC'] = '\\u0032\\u0039\\u65E5';\n t['\\u33FD'] = '\\u0033\\u0030\\u65E5';\n t['\\u33FE'] = '\\u0033\\u0031\\u65E5';\n t['\\uFB00'] = '\\u0066\\u0066';\n t['\\uFB01'] = '\\u0066\\u0069';\n t['\\uFB02'] = '\\u0066\\u006C';\n t['\\uFB03'] = '\\u0066\\u0066\\u0069';\n t['\\uFB04'] = '\\u0066\\u0066\\u006C';\n t['\\uFB05'] = '\\u017F\\u0074';\n t['\\uFB06'] = '\\u0073\\u0074';\n t['\\uFB13'] = '\\u0574\\u0576';\n t['\\uFB14'] = '\\u0574\\u0565';\n t['\\uFB15'] = '\\u0574\\u056B';\n t['\\uFB16'] = '\\u057E\\u0576';\n t['\\uFB17'] = '\\u0574\\u056D';\n t['\\uFB4F'] = '\\u05D0\\u05DC';\n t['\\uFB50'] = '\\u0671';\n t['\\uFB51'] = '\\u0671';\n t['\\uFB52'] = '\\u067B';\n t['\\uFB53'] = '\\u067B';\n t['\\uFB54'] = '\\u067B';\n t['\\uFB55'] = '\\u067B';\n t['\\uFB56'] = '\\u067E';\n t['\\uFB57'] = '\\u067E';\n t['\\uFB58'] = '\\u067E';\n t['\\uFB59'] = '\\u067E';\n t['\\uFB5A'] = '\\u0680';\n t['\\uFB5B'] = '\\u0680';\n t['\\uFB5C'] = '\\u0680';\n t['\\uFB5D'] = '\\u0680';\n t['\\uFB5E'] = '\\u067A';\n t['\\uFB5F'] = '\\u067A';\n t['\\uFB60'] = '\\u067A';\n t['\\uFB61'] = '\\u067A';\n t['\\uFB62'] = '\\u067F';\n t['\\uFB63'] = '\\u067F';\n t['\\uFB64'] = '\\u067F';\n t['\\uFB65'] = '\\u067F';\n t['\\uFB66'] = '\\u0679';\n t['\\uFB67'] = '\\u0679';\n t['\\uFB68'] = '\\u0679';\n t['\\uFB69'] = '\\u0679';\n t['\\uFB6A'] = '\\u06A4';\n t['\\uFB6B'] = '\\u06A4';\n t['\\uFB6C'] = '\\u06A4';\n t['\\uFB6D'] = '\\u06A4';\n t['\\uFB6E'] = '\\u06A6';\n t['\\uFB6F'] = '\\u06A6';\n t['\\uFB70'] = '\\u06A6';\n t['\\uFB71'] = '\\u06A6';\n t['\\uFB72'] = '\\u0684';\n t['\\uFB73'] = '\\u0684';\n t['\\uFB74'] = '\\u0684';\n t['\\uFB75'] = '\\u0684';\n t['\\uFB76'] = '\\u0683';\n t['\\uFB77'] = '\\u0683';\n t['\\uFB78'] = '\\u0683';\n t['\\uFB79'] = '\\u0683';\n t['\\uFB7A'] = '\\u0686';\n t['\\uFB7B'] = '\\u0686';\n t['\\uFB7C'] = '\\u0686';\n t['\\uFB7D'] = '\\u0686';\n t['\\uFB7E'] = '\\u0687';\n t['\\uFB7F'] = '\\u0687';\n t['\\uFB80'] = '\\u0687';\n t['\\uFB81'] = '\\u0687';\n t['\\uFB82'] = '\\u068D';\n t['\\uFB83'] = '\\u068D';\n t['\\uFB84'] = '\\u068C';\n t['\\uFB85'] = '\\u068C';\n t['\\uFB86'] = '\\u068E';\n t['\\uFB87'] = '\\u068E';\n t['\\uFB88'] = '\\u0688';\n t['\\uFB89'] = '\\u0688';\n t['\\uFB8A'] = '\\u0698';\n t['\\uFB8B'] = '\\u0698';\n t['\\uFB8C'] = '\\u0691';\n t['\\uFB8D'] = '\\u0691';\n t['\\uFB8E'] = '\\u06A9';\n t['\\uFB8F'] = '\\u06A9';\n t['\\uFB90'] = '\\u06A9';\n t['\\uFB91'] = '\\u06A9';\n t['\\uFB92'] = '\\u06AF';\n t['\\uFB93'] = '\\u06AF';\n t['\\uFB94'] = '\\u06AF';\n t['\\uFB95'] = '\\u06AF';\n t['\\uFB96'] = '\\u06B3';\n t['\\uFB97'] = '\\u06B3';\n t['\\uFB98'] = '\\u06B3';\n t['\\uFB99'] = '\\u06B3';\n t['\\uFB9A'] = '\\u06B1';\n t['\\uFB9B'] = '\\u06B1';\n t['\\uFB9C'] = '\\u06B1';\n t['\\uFB9D'] = '\\u06B1';\n t['\\uFB9E'] = '\\u06BA';\n t['\\uFB9F'] = '\\u06BA';\n t['\\uFBA0'] = '\\u06BB';\n t['\\uFBA1'] = '\\u06BB';\n t['\\uFBA2'] = '\\u06BB';\n t['\\uFBA3'] = '\\u06BB';\n t['\\uFBA4'] = '\\u06C0';\n t['\\uFBA5'] = '\\u06C0';\n t['\\uFBA6'] = '\\u06C1';\n t['\\uFBA7'] = '\\u06C1';\n t['\\uFBA8'] = '\\u06C1';\n t['\\uFBA9'] = '\\u06C1';\n t['\\uFBAA'] = '\\u06BE';\n t['\\uFBAB'] = '\\u06BE';\n t['\\uFBAC'] = '\\u06BE';\n t['\\uFBAD'] = '\\u06BE';\n t['\\uFBAE'] = '\\u06D2';\n t['\\uFBAF'] = '\\u06D2';\n t['\\uFBB0'] = '\\u06D3';\n t['\\uFBB1'] = '\\u06D3';\n t['\\uFBD3'] = '\\u06AD';\n t['\\uFBD4'] = '\\u06AD';\n t['\\uFBD5'] = '\\u06AD';\n t['\\uFBD6'] = '\\u06AD';\n t['\\uFBD7'] = '\\u06C7';\n t['\\uFBD8'] = '\\u06C7';\n t['\\uFBD9'] = '\\u06C6';\n t['\\uFBDA'] = '\\u06C6';\n t['\\uFBDB'] = '\\u06C8';\n t['\\uFBDC'] = '\\u06C8';\n t['\\uFBDD'] = '\\u0677';\n t['\\uFBDE'] = '\\u06CB';\n t['\\uFBDF'] = '\\u06CB';\n t['\\uFBE0'] = '\\u06C5';\n t['\\uFBE1'] = '\\u06C5';\n t['\\uFBE2'] = '\\u06C9';\n t['\\uFBE3'] = '\\u06C9';\n t['\\uFBE4'] = '\\u06D0';\n t['\\uFBE5'] = '\\u06D0';\n t['\\uFBE6'] = '\\u06D0';\n t['\\uFBE7'] = '\\u06D0';\n t['\\uFBE8'] = '\\u0649';\n t['\\uFBE9'] = '\\u0649';\n t['\\uFBEA'] = '\\u0626\\u0627';\n t['\\uFBEB'] = '\\u0626\\u0627';\n t['\\uFBEC'] = '\\u0626\\u06D5';\n t['\\uFBED'] = '\\u0626\\u06D5';\n t['\\uFBEE'] = '\\u0626\\u0648';\n t['\\uFBEF'] = '\\u0626\\u0648';\n t['\\uFBF0'] = '\\u0626\\u06C7';\n t['\\uFBF1'] = '\\u0626\\u06C7';\n t['\\uFBF2'] = '\\u0626\\u06C6';\n t['\\uFBF3'] = '\\u0626\\u06C6';\n t['\\uFBF4'] = '\\u0626\\u06C8';\n t['\\uFBF5'] = '\\u0626\\u06C8';\n t['\\uFBF6'] = '\\u0626\\u06D0';\n t['\\uFBF7'] = '\\u0626\\u06D0';\n t['\\uFBF8'] = '\\u0626\\u06D0';\n t['\\uFBF9'] = '\\u0626\\u0649';\n t['\\uFBFA'] = '\\u0626\\u0649';\n t['\\uFBFB'] = '\\u0626\\u0649';\n t['\\uFBFC'] = '\\u06CC';\n t['\\uFBFD'] = '\\u06CC';\n t['\\uFBFE'] = '\\u06CC';\n t['\\uFBFF'] = '\\u06CC';\n t['\\uFC00'] = '\\u0626\\u062C';\n t['\\uFC01'] = '\\u0626\\u062D';\n t['\\uFC02'] = '\\u0626\\u0645';\n t['\\uFC03'] = '\\u0626\\u0649';\n t['\\uFC04'] = '\\u0626\\u064A';\n t['\\uFC05'] = '\\u0628\\u062C';\n t['\\uFC06'] = '\\u0628\\u062D';\n t['\\uFC07'] = '\\u0628\\u062E';\n t['\\uFC08'] = '\\u0628\\u0645';\n t['\\uFC09'] = '\\u0628\\u0649';\n t['\\uFC0A'] = '\\u0628\\u064A';\n t['\\uFC0B'] = '\\u062A\\u062C';\n t['\\uFC0C'] = '\\u062A\\u062D';\n t['\\uFC0D'] = '\\u062A\\u062E';\n t['\\uFC0E'] = '\\u062A\\u0645';\n t['\\uFC0F'] = '\\u062A\\u0649';\n t['\\uFC10'] = '\\u062A\\u064A';\n t['\\uFC11'] = '\\u062B\\u062C';\n t['\\uFC12'] = '\\u062B\\u0645';\n t['\\uFC13'] = '\\u062B\\u0649';\n t['\\uFC14'] = '\\u062B\\u064A';\n t['\\uFC15'] = '\\u062C\\u062D';\n t['\\uFC16'] = '\\u062C\\u0645';\n t['\\uFC17'] = '\\u062D\\u062C';\n t['\\uFC18'] = '\\u062D\\u0645';\n t['\\uFC19'] = '\\u062E\\u062C';\n t['\\uFC1A'] = '\\u062E\\u062D';\n t['\\uFC1B'] = '\\u062E\\u0645';\n t['\\uFC1C'] = '\\u0633\\u062C';\n t['\\uFC1D'] = '\\u0633\\u062D';\n t['\\uFC1E'] = '\\u0633\\u062E';\n t['\\uFC1F'] = '\\u0633\\u0645';\n t['\\uFC20'] = '\\u0635\\u062D';\n t['\\uFC21'] = '\\u0635\\u0645';\n t['\\uFC22'] = '\\u0636\\u062C';\n t['\\uFC23'] = '\\u0636\\u062D';\n t['\\uFC24'] = '\\u0636\\u062E';\n t['\\uFC25'] = '\\u0636\\u0645';\n t['\\uFC26'] = '\\u0637\\u062D';\n t['\\uFC27'] = '\\u0637\\u0645';\n t['\\uFC28'] = '\\u0638\\u0645';\n t['\\uFC29'] = '\\u0639\\u062C';\n t['\\uFC2A'] = '\\u0639\\u0645';\n t['\\uFC2B'] = '\\u063A\\u062C';\n t['\\uFC2C'] = '\\u063A\\u0645';\n t['\\uFC2D'] = '\\u0641\\u062C';\n t['\\uFC2E'] = '\\u0641\\u062D';\n t['\\uFC2F'] = '\\u0641\\u062E';\n t['\\uFC30'] = '\\u0641\\u0645';\n t['\\uFC31'] = '\\u0641\\u0649';\n t['\\uFC32'] = '\\u0641\\u064A';\n t['\\uFC33'] = '\\u0642\\u062D';\n t['\\uFC34'] = '\\u0642\\u0645';\n t['\\uFC35'] = '\\u0642\\u0649';\n t['\\uFC36'] = '\\u0642\\u064A';\n t['\\uFC37'] = '\\u0643\\u0627';\n t['\\uFC38'] = '\\u0643\\u062C';\n t['\\uFC39'] = '\\u0643\\u062D';\n t['\\uFC3A'] = '\\u0643\\u062E';\n t['\\uFC3B'] = '\\u0643\\u0644';\n t['\\uFC3C'] = '\\u0643\\u0645';\n t['\\uFC3D'] = '\\u0643\\u0649';\n t['\\uFC3E'] = '\\u0643\\u064A';\n t['\\uFC3F'] = '\\u0644\\u062C';\n t['\\uFC40'] = '\\u0644\\u062D';\n t['\\uFC41'] = '\\u0644\\u062E';\n t['\\uFC42'] = '\\u0644\\u0645';\n t['\\uFC43'] = '\\u0644\\u0649';\n t['\\uFC44'] = '\\u0644\\u064A';\n t['\\uFC45'] = '\\u0645\\u062C';\n t['\\uFC46'] = '\\u0645\\u062D';\n t['\\uFC47'] = '\\u0645\\u062E';\n t['\\uFC48'] = '\\u0645\\u0645';\n t['\\uFC49'] = '\\u0645\\u0649';\n t['\\uFC4A'] = '\\u0645\\u064A';\n t['\\uFC4B'] = '\\u0646\\u062C';\n t['\\uFC4C'] = '\\u0646\\u062D';\n t['\\uFC4D'] = '\\u0646\\u062E';\n t['\\uFC4E'] = '\\u0646\\u0645';\n t['\\uFC4F'] = '\\u0646\\u0649';\n t['\\uFC50'] = '\\u0646\\u064A';\n t['\\uFC51'] = '\\u0647\\u062C';\n t['\\uFC52'] = '\\u0647\\u0645';\n t['\\uFC53'] = '\\u0647\\u0649';\n t['\\uFC54'] = '\\u0647\\u064A';\n t['\\uFC55'] = '\\u064A\\u062C';\n t['\\uFC56'] = '\\u064A\\u062D';\n t['\\uFC57'] = '\\u064A\\u062E';\n t['\\uFC58'] = '\\u064A\\u0645';\n t['\\uFC59'] = '\\u064A\\u0649';\n t['\\uFC5A'] = '\\u064A\\u064A';\n t['\\uFC5B'] = '\\u0630\\u0670';\n t['\\uFC5C'] = '\\u0631\\u0670';\n t['\\uFC5D'] = '\\u0649\\u0670';\n t['\\uFC5E'] = '\\u0020\\u064C\\u0651';\n t['\\uFC5F'] = '\\u0020\\u064D\\u0651';\n t['\\uFC60'] = '\\u0020\\u064E\\u0651';\n t['\\uFC61'] = '\\u0020\\u064F\\u0651';\n t['\\uFC62'] = '\\u0020\\u0650\\u0651';\n t['\\uFC63'] = '\\u0020\\u0651\\u0670';\n t['\\uFC64'] = '\\u0626\\u0631';\n t['\\uFC65'] = '\\u0626\\u0632';\n t['\\uFC66'] = '\\u0626\\u0645';\n t['\\uFC67'] = '\\u0626\\u0646';\n t['\\uFC68'] = '\\u0626\\u0649';\n t['\\uFC69'] = '\\u0626\\u064A';\n t['\\uFC6A'] = '\\u0628\\u0631';\n t['\\uFC6B'] = '\\u0628\\u0632';\n t['\\uFC6C'] = '\\u0628\\u0645';\n t['\\uFC6D'] = '\\u0628\\u0646';\n t['\\uFC6E'] = '\\u0628\\u0649';\n t['\\uFC6F'] = '\\u0628\\u064A';\n t['\\uFC70'] = '\\u062A\\u0631';\n t['\\uFC71'] = '\\u062A\\u0632';\n t['\\uFC72'] = '\\u062A\\u0645';\n t['\\uFC73'] = '\\u062A\\u0646';\n t['\\uFC74'] = '\\u062A\\u0649';\n t['\\uFC75'] = '\\u062A\\u064A';\n t['\\uFC76'] = '\\u062B\\u0631';\n t['\\uFC77'] = '\\u062B\\u0632';\n t['\\uFC78'] = '\\u062B\\u0645';\n t['\\uFC79'] = '\\u062B\\u0646';\n t['\\uFC7A'] = '\\u062B\\u0649';\n t['\\uFC7B'] = '\\u062B\\u064A';\n t['\\uFC7C'] = '\\u0641\\u0649';\n t['\\uFC7D'] = '\\u0641\\u064A';\n t['\\uFC7E'] = '\\u0642\\u0649';\n t['\\uFC7F'] = '\\u0642\\u064A';\n t['\\uFC80'] = '\\u0643\\u0627';\n t['\\uFC81'] = '\\u0643\\u0644';\n t['\\uFC82'] = '\\u0643\\u0645';\n t['\\uFC83'] = '\\u0643\\u0649';\n t['\\uFC84'] = '\\u0643\\u064A';\n t['\\uFC85'] = '\\u0644\\u0645';\n t['\\uFC86'] = '\\u0644\\u0649';\n t['\\uFC87'] = '\\u0644\\u064A';\n t['\\uFC88'] = '\\u0645\\u0627';\n t['\\uFC89'] = '\\u0645\\u0645';\n t['\\uFC8A'] = '\\u0646\\u0631';\n t['\\uFC8B'] = '\\u0646\\u0632';\n t['\\uFC8C'] = '\\u0646\\u0645';\n t['\\uFC8D'] = '\\u0646\\u0646';\n t['\\uFC8E'] = '\\u0646\\u0649';\n t['\\uFC8F'] = '\\u0646\\u064A';\n t['\\uFC90'] = '\\u0649\\u0670';\n t['\\uFC91'] = '\\u064A\\u0631';\n t['\\uFC92'] = '\\u064A\\u0632';\n t['\\uFC93'] = '\\u064A\\u0645';\n t['\\uFC94'] = '\\u064A\\u0646';\n t['\\uFC95'] = '\\u064A\\u0649';\n t['\\uFC96'] = '\\u064A\\u064A';\n t['\\uFC97'] = '\\u0626\\u062C';\n t['\\uFC98'] = '\\u0626\\u062D';\n t['\\uFC99'] = '\\u0626\\u062E';\n t['\\uFC9A'] = '\\u0626\\u0645';\n t['\\uFC9B'] = '\\u0626\\u0647';\n t['\\uFC9C'] = '\\u0628\\u062C';\n t['\\uFC9D'] = '\\u0628\\u062D';\n t['\\uFC9E'] = '\\u0628\\u062E';\n t['\\uFC9F'] = '\\u0628\\u0645';\n t['\\uFCA0'] = '\\u0628\\u0647';\n t['\\uFCA1'] = '\\u062A\\u062C';\n t['\\uFCA2'] = '\\u062A\\u062D';\n t['\\uFCA3'] = '\\u062A\\u062E';\n t['\\uFCA4'] = '\\u062A\\u0645';\n t['\\uFCA5'] = '\\u062A\\u0647';\n t['\\uFCA6'] = '\\u062B\\u0645';\n t['\\uFCA7'] = '\\u062C\\u062D';\n t['\\uFCA8'] = '\\u062C\\u0645';\n t['\\uFCA9'] = '\\u062D\\u062C';\n t['\\uFCAA'] = '\\u062D\\u0645';\n t['\\uFCAB'] = '\\u062E\\u062C';\n t['\\uFCAC'] = '\\u062E\\u0645';\n t['\\uFCAD'] = '\\u0633\\u062C';\n t['\\uFCAE'] = '\\u0633\\u062D';\n t['\\uFCAF'] = '\\u0633\\u062E';\n t['\\uFCB0'] = '\\u0633\\u0645';\n t['\\uFCB1'] = '\\u0635\\u062D';\n t['\\uFCB2'] = '\\u0635\\u062E';\n t['\\uFCB3'] = '\\u0635\\u0645';\n t['\\uFCB4'] = '\\u0636\\u062C';\n t['\\uFCB5'] = '\\u0636\\u062D';\n t['\\uFCB6'] = '\\u0636\\u062E';\n t['\\uFCB7'] = '\\u0636\\u0645';\n t['\\uFCB8'] = '\\u0637\\u062D';\n t['\\uFCB9'] = '\\u0638\\u0645';\n t['\\uFCBA'] = '\\u0639\\u062C';\n t['\\uFCBB'] = '\\u0639\\u0645';\n t['\\uFCBC'] = '\\u063A\\u062C';\n t['\\uFCBD'] = '\\u063A\\u0645';\n t['\\uFCBE'] = '\\u0641\\u062C';\n t['\\uFCBF'] = '\\u0641\\u062D';\n t['\\uFCC0'] = '\\u0641\\u062E';\n t['\\uFCC1'] = '\\u0641\\u0645';\n t['\\uFCC2'] = '\\u0642\\u062D';\n t['\\uFCC3'] = '\\u0642\\u0645';\n t['\\uFCC4'] = '\\u0643\\u062C';\n t['\\uFCC5'] = '\\u0643\\u062D';\n t['\\uFCC6'] = '\\u0643\\u062E';\n t['\\uFCC7'] = '\\u0643\\u0644';\n t['\\uFCC8'] = '\\u0643\\u0645';\n t['\\uFCC9'] = '\\u0644\\u062C';\n t['\\uFCCA'] = '\\u0644\\u062D';\n t['\\uFCCB'] = '\\u0644\\u062E';\n t['\\uFCCC'] = '\\u0644\\u0645';\n t['\\uFCCD'] = '\\u0644\\u0647';\n t['\\uFCCE'] = '\\u0645\\u062C';\n t['\\uFCCF'] = '\\u0645\\u062D';\n t['\\uFCD0'] = '\\u0645\\u062E';\n t['\\uFCD1'] = '\\u0645\\u0645';\n t['\\uFCD2'] = '\\u0646\\u062C';\n t['\\uFCD3'] = '\\u0646\\u062D';\n t['\\uFCD4'] = '\\u0646\\u062E';\n t['\\uFCD5'] = '\\u0646\\u0645';\n t['\\uFCD6'] = '\\u0646\\u0647';\n t['\\uFCD7'] = '\\u0647\\u062C';\n t['\\uFCD8'] = '\\u0647\\u0645';\n t['\\uFCD9'] = '\\u0647\\u0670';\n t['\\uFCDA'] = '\\u064A\\u062C';\n t['\\uFCDB'] = '\\u064A\\u062D';\n t['\\uFCDC'] = '\\u064A\\u062E';\n t['\\uFCDD'] = '\\u064A\\u0645';\n t['\\uFCDE'] = '\\u064A\\u0647';\n t['\\uFCDF'] = '\\u0626\\u0645';\n t['\\uFCE0'] = '\\u0626\\u0647';\n t['\\uFCE1'] = '\\u0628\\u0645';\n t['\\uFCE2'] = '\\u0628\\u0647';\n t['\\uFCE3'] = '\\u062A\\u0645';\n t['\\uFCE4'] = '\\u062A\\u0647';\n t['\\uFCE5'] = '\\u062B\\u0645';\n t['\\uFCE6'] = '\\u062B\\u0647';\n t['\\uFCE7'] = '\\u0633\\u0645';\n t['\\uFCE8'] = '\\u0633\\u0647';\n t['\\uFCE9'] = '\\u0634\\u0645';\n t['\\uFCEA'] = '\\u0634\\u0647';\n t['\\uFCEB'] = '\\u0643\\u0644';\n t['\\uFCEC'] = '\\u0643\\u0645';\n t['\\uFCED'] = '\\u0644\\u0645';\n t['\\uFCEE'] = '\\u0646\\u0645';\n t['\\uFCEF'] = '\\u0646\\u0647';\n t['\\uFCF0'] = '\\u064A\\u0645';\n t['\\uFCF1'] = '\\u064A\\u0647';\n t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n t['\\uFCF5'] = '\\u0637\\u0649';\n t['\\uFCF6'] = '\\u0637\\u064A';\n t['\\uFCF7'] = '\\u0639\\u0649';\n t['\\uFCF8'] = '\\u0639\\u064A';\n t['\\uFCF9'] = '\\u063A\\u0649';\n t['\\uFCFA'] = '\\u063A\\u064A';\n t['\\uFCFB'] = '\\u0633\\u0649';\n t['\\uFCFC'] = '\\u0633\\u064A';\n t['\\uFCFD'] = '\\u0634\\u0649';\n t['\\uFCFE'] = '\\u0634\\u064A';\n t['\\uFCFF'] = '\\u062D\\u0649';\n t['\\uFD00'] = '\\u062D\\u064A';\n t['\\uFD01'] = '\\u062C\\u0649';\n t['\\uFD02'] = '\\u062C\\u064A';\n t['\\uFD03'] = '\\u062E\\u0649';\n t['\\uFD04'] = '\\u062E\\u064A';\n t['\\uFD05'] = '\\u0635\\u0649';\n t['\\uFD06'] = '\\u0635\\u064A';\n t['\\uFD07'] = '\\u0636\\u0649';\n t['\\uFD08'] = '\\u0636\\u064A';\n t['\\uFD09'] = '\\u0634\\u062C';\n t['\\uFD0A'] = '\\u0634\\u062D';\n t['\\uFD0B'] = '\\u0634\\u062E';\n t['\\uFD0C'] = '\\u0634\\u0645';\n t['\\uFD0D'] = '\\u0634\\u0631';\n t['\\uFD0E'] = '\\u0633\\u0631';\n t['\\uFD0F'] = '\\u0635\\u0631';\n t['\\uFD10'] = '\\u0636\\u0631';\n t['\\uFD11'] = '\\u0637\\u0649';\n t['\\uFD12'] = '\\u0637\\u064A';\n t['\\uFD13'] = '\\u0639\\u0649';\n t['\\uFD14'] = '\\u0639\\u064A';\n t['\\uFD15'] = '\\u063A\\u0649';\n t['\\uFD16'] = '\\u063A\\u064A';\n t['\\uFD17'] = '\\u0633\\u0649';\n t['\\uFD18'] = '\\u0633\\u064A';\n t['\\uFD19'] = '\\u0634\\u0649';\n t['\\uFD1A'] = '\\u0634\\u064A';\n t['\\uFD1B'] = '\\u062D\\u0649';\n t['\\uFD1C'] = '\\u062D\\u064A';\n t['\\uFD1D'] = '\\u062C\\u0649';\n t['\\uFD1E'] = '\\u062C\\u064A';\n t['\\uFD1F'] = '\\u062E\\u0649';\n t['\\uFD20'] = '\\u062E\\u064A';\n t['\\uFD21'] = '\\u0635\\u0649';\n t['\\uFD22'] = '\\u0635\\u064A';\n t['\\uFD23'] = '\\u0636\\u0649';\n t['\\uFD24'] = '\\u0636\\u064A';\n t['\\uFD25'] = '\\u0634\\u062C';\n t['\\uFD26'] = '\\u0634\\u062D';\n t['\\uFD27'] = '\\u0634\\u062E';\n t['\\uFD28'] = '\\u0634\\u0645';\n t['\\uFD29'] = '\\u0634\\u0631';\n t['\\uFD2A'] = '\\u0633\\u0631';\n t['\\uFD2B'] = '\\u0635\\u0631';\n t['\\uFD2C'] = '\\u0636\\u0631';\n t['\\uFD2D'] = '\\u0634\\u062C';\n t['\\uFD2E'] = '\\u0634\\u062D';\n t['\\uFD2F'] = '\\u0634\\u062E';\n t['\\uFD30'] = '\\u0634\\u0645';\n t['\\uFD31'] = '\\u0633\\u0647';\n t['\\uFD32'] = '\\u0634\\u0647';\n t['\\uFD33'] = '\\u0637\\u0645';\n t['\\uFD34'] = '\\u0633\\u062C';\n t['\\uFD35'] = '\\u0633\\u062D';\n t['\\uFD36'] = '\\u0633\\u062E';\n t['\\uFD37'] = '\\u0634\\u062C';\n t['\\uFD38'] = '\\u0634\\u062D';\n t['\\uFD39'] = '\\u0634\\u062E';\n t['\\uFD3A'] = '\\u0637\\u0645';\n t['\\uFD3B'] = '\\u0638\\u0645';\n t['\\uFD3C'] = '\\u0627\\u064B';\n t['\\uFD3D'] = '\\u0627\\u064B';\n t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n t['\\uFE49'] = '\\u203E';\n t['\\uFE4A'] = '\\u203E';\n t['\\uFE4B'] = '\\u203E';\n t['\\uFE4C'] = '\\u203E';\n t['\\uFE4D'] = '\\u005F';\n t['\\uFE4E'] = '\\u005F';\n t['\\uFE4F'] = '\\u005F';\n t['\\uFE80'] = '\\u0621';\n t['\\uFE81'] = '\\u0622';\n t['\\uFE82'] = '\\u0622';\n t['\\uFE83'] = '\\u0623';\n t['\\uFE84'] = '\\u0623';\n t['\\uFE85'] = '\\u0624';\n t['\\uFE86'] = '\\u0624';\n t['\\uFE87'] = '\\u0625';\n t['\\uFE88'] = '\\u0625';\n t['\\uFE89'] = '\\u0626';\n t['\\uFE8A'] = '\\u0626';\n t['\\uFE8B'] = '\\u0626';\n t['\\uFE8C'] = '\\u0626';\n t['\\uFE8D'] = '\\u0627';\n t['\\uFE8E'] = '\\u0627';\n t['\\uFE8F'] = '\\u0628';\n t['\\uFE90'] = '\\u0628';\n t['\\uFE91'] = '\\u0628';\n t['\\uFE92'] = '\\u0628';\n t['\\uFE93'] = '\\u0629';\n t['\\uFE94'] = '\\u0629';\n t['\\uFE95'] = '\\u062A';\n t['\\uFE96'] = '\\u062A';\n t['\\uFE97'] = '\\u062A';\n t['\\uFE98'] = '\\u062A';\n t['\\uFE99'] = '\\u062B';\n t['\\uFE9A'] = '\\u062B';\n t['\\uFE9B'] = '\\u062B';\n t['\\uFE9C'] = '\\u062B';\n t['\\uFE9D'] = '\\u062C';\n t['\\uFE9E'] = '\\u062C';\n t['\\uFE9F'] = '\\u062C';\n t['\\uFEA0'] = '\\u062C';\n t['\\uFEA1'] = '\\u062D';\n t['\\uFEA2'] = '\\u062D';\n t['\\uFEA3'] = '\\u062D';\n t['\\uFEA4'] = '\\u062D';\n t['\\uFEA5'] = '\\u062E';\n t['\\uFEA6'] = '\\u062E';\n t['\\uFEA7'] = '\\u062E';\n t['\\uFEA8'] = '\\u062E';\n t['\\uFEA9'] = '\\u062F';\n t['\\uFEAA'] = '\\u062F';\n t['\\uFEAB'] = '\\u0630';\n t['\\uFEAC'] = '\\u0630';\n t['\\uFEAD'] = '\\u0631';\n t['\\uFEAE'] = '\\u0631';\n t['\\uFEAF'] = '\\u0632';\n t['\\uFEB0'] = '\\u0632';\n t['\\uFEB1'] = '\\u0633';\n t['\\uFEB2'] = '\\u0633';\n t['\\uFEB3'] = '\\u0633';\n t['\\uFEB4'] = '\\u0633';\n t['\\uFEB5'] = '\\u0634';\n t['\\uFEB6'] = '\\u0634';\n t['\\uFEB7'] = '\\u0634';\n t['\\uFEB8'] = '\\u0634';\n t['\\uFEB9'] = '\\u0635';\n t['\\uFEBA'] = '\\u0635';\n t['\\uFEBB'] = '\\u0635';\n t['\\uFEBC'] = '\\u0635';\n t['\\uFEBD'] = '\\u0636';\n t['\\uFEBE'] = '\\u0636';\n t['\\uFEBF'] = '\\u0636';\n t['\\uFEC0'] = '\\u0636';\n t['\\uFEC1'] = '\\u0637';\n t['\\uFEC2'] = '\\u0637';\n t['\\uFEC3'] = '\\u0637';\n t['\\uFEC4'] = '\\u0637';\n t['\\uFEC5'] = '\\u0638';\n t['\\uFEC6'] = '\\u0638';\n t['\\uFEC7'] = '\\u0638';\n t['\\uFEC8'] = '\\u0638';\n t['\\uFEC9'] = '\\u0639';\n t['\\uFECA'] = '\\u0639';\n t['\\uFECB'] = '\\u0639';\n t['\\uFECC'] = '\\u0639';\n t['\\uFECD'] = '\\u063A';\n t['\\uFECE'] = '\\u063A';\n t['\\uFECF'] = '\\u063A';\n t['\\uFED0'] = '\\u063A';\n t['\\uFED1'] = '\\u0641';\n t['\\uFED2'] = '\\u0641';\n t['\\uFED3'] = '\\u0641';\n t['\\uFED4'] = '\\u0641';\n t['\\uFED5'] = '\\u0642';\n t['\\uFED6'] = '\\u0642';\n t['\\uFED7'] = '\\u0642';\n t['\\uFED8'] = '\\u0642';\n t['\\uFED9'] = '\\u0643';\n t['\\uFEDA'] = '\\u0643';\n t['\\uFEDB'] = '\\u0643';\n t['\\uFEDC'] = '\\u0643';\n t['\\uFEDD'] = '\\u0644';\n t['\\uFEDE'] = '\\u0644';\n t['\\uFEDF'] = '\\u0644';\n t['\\uFEE0'] = '\\u0644';\n t['\\uFEE1'] = '\\u0645';\n t['\\uFEE2'] = '\\u0645';\n t['\\uFEE3'] = '\\u0645';\n t['\\uFEE4'] = '\\u0645';\n t['\\uFEE5'] = '\\u0646';\n t['\\uFEE6'] = '\\u0646';\n t['\\uFEE7'] = '\\u0646';\n t['\\uFEE8'] = '\\u0646';\n t['\\uFEE9'] = '\\u0647';\n t['\\uFEEA'] = '\\u0647';\n t['\\uFEEB'] = '\\u0647';\n t['\\uFEEC'] = '\\u0647';\n t['\\uFEED'] = '\\u0648';\n t['\\uFEEE'] = '\\u0648';\n t['\\uFEEF'] = '\\u0649';\n t['\\uFEF0'] = '\\u0649';\n t['\\uFEF1'] = '\\u064A';\n t['\\uFEF2'] = '\\u064A';\n t['\\uFEF3'] = '\\u064A';\n t['\\uFEF4'] = '\\u064A';\n t['\\uFEF5'] = '\\u0644\\u0622';\n t['\\uFEF6'] = '\\u0644\\u0622';\n t['\\uFEF7'] = '\\u0644\\u0623';\n t['\\uFEF8'] = '\\u0644\\u0623';\n t['\\uFEF9'] = '\\u0644\\u0625';\n t['\\uFEFA'] = '\\u0644\\u0625';\n t['\\uFEFB'] = '\\u0644\\u0627';\n t['\\uFEFC'] = '\\u0644\\u0627';\n});\nfunction reverseIfRtl(chars) {\n var charsLength = chars.length;\n if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n  return chars;\n }\n var s = '';\n for (var ii = charsLength - 1; ii >= 0; ii--) {\n  s += chars[ii];\n }\n return s;\n}\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\nexports.reverseIfRtl = reverseIfRtl;\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\nexports.getUnicodeForGlyph = getUnicodeForGlyph;\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _ps_parser = __w_pdfjs_require__(142);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IsEvalSupportedCached = {\n  get value() {\n    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\n  }\n};\n\nvar PDFFunctionFactory = function () {\n  function PDFFunctionFactory(_ref) {\n    var xref = _ref.xref,\n        _ref$isEvalSupported = _ref.isEvalSupported,\n        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\n\n    _classCallCheck(this, PDFFunctionFactory);\n\n    this.xref = xref;\n    this.isEvalSupported = isEvalSupported !== false;\n  }\n\n  _createClass(PDFFunctionFactory, [{\n    key: 'create',\n    value: function create(fn) {\n      return PDFFunction.parse({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }, {\n    key: 'createFromArray',\n    value: function createFromArray(fnObj) {\n      return PDFFunction.parseArray({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fnObj: fnObj\n      });\n    }\n  }]);\n\n  return PDFFunctionFactory;\n}();\n\nfunction toNumberArray(arr) {\n  if (!Array.isArray(arr)) {\n    return null;\n  }\n  var length = arr.length;\n  for (var i = 0; i < length; i++) {\n    if (typeof arr[i] !== 'number') {\n      var result = new Array(length);\n      for (var _i = 0; _i < length; _i++) {\n        result[_i] = +arr[_i];\n      }\n      return result;\n    }\n  }\n  return arr;\n}\nvar PDFFunction = function PDFFunctionClosure() {\n  var CONSTRUCT_SAMPLED = 0;\n  var CONSTRUCT_INTERPOLATED = 2;\n  var CONSTRUCT_STICHED = 3;\n  var CONSTRUCT_POSTSCRIPT = 4;\n  return {\n    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\n      var i, ii;\n      var length = 1;\n      for (i = 0, ii = size.length; i < ii; i++) {\n        length *= size[i];\n      }\n      length *= outputSize;\n      var array = new Array(length);\n      var codeSize = 0;\n      var codeBuf = 0;\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n      var strBytes = stream.getBytes((length * bps + 7) / 8);\n      var strIdx = 0;\n      for (i = 0; i < length; i++) {\n        while (codeSize < bps) {\n          codeBuf <<= 8;\n          codeBuf |= strBytes[strIdx++];\n          codeSize += 8;\n        }\n        codeSize -= bps;\n        array[i] = (codeBuf >> codeSize) * sampleMul;\n        codeBuf &= (1 << codeSize) - 1;\n      }\n      return array;\n    },\n    getIR: function getIR(_ref2) {\n      var xref = _ref2.xref,\n          isEvalSupported = _ref2.isEvalSupported,\n          fn = _ref2.fn;\n\n      var dict = fn.dict;\n      if (!dict) {\n        dict = fn;\n      }\n      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\n      var typeNum = dict.get('FunctionType');\n      var typeFn = types[typeNum];\n      if (!typeFn) {\n        throw new _util.FormatError('Unknown type of function');\n      }\n      return typeFn.call(this, {\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn,\n        dict: dict\n      });\n    },\n    fromIR: function fromIR(_ref3) {\n      var xref = _ref3.xref,\n          isEvalSupported = _ref3.isEvalSupported,\n          IR = _ref3.IR;\n\n      var type = IR[0];\n      switch (type) {\n        case CONSTRUCT_SAMPLED:\n          return this.constructSampledFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_INTERPOLATED:\n          return this.constructInterpolatedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_STICHED:\n          return this.constructStichedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        default:\n          return this.constructPostScriptFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n      }\n    },\n    parse: function parse(_ref4) {\n      var xref = _ref4.xref,\n          isEvalSupported = _ref4.isEvalSupported,\n          fn = _ref4.fn;\n\n      var IR = this.getIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn\n      });\n      return this.fromIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        IR: IR\n      });\n    },\n    parseArray: function parseArray(_ref5) {\n      var xref = _ref5.xref,\n          isEvalSupported = _ref5.isEvalSupported,\n          fnObj = _ref5.fnObj;\n\n      if (!Array.isArray(fnObj)) {\n        return this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: fnObj\n        });\n      }\n      var fnArray = [];\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n        fnArray.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnObj[j])\n        }));\n      }\n      return function (src, srcOffset, dest, destOffset) {\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n          fnArray[i](src, srcOffset, dest, destOffset + i);\n        }\n      };\n    },\n    constructSampled: function constructSampled(_ref6) {\n      var xref = _ref6.xref,\n          isEvalSupported = _ref6.isEvalSupported,\n          fn = _ref6.fn,\n          dict = _ref6.dict;\n\n      function toMultiArray(arr) {\n        var inputLength = arr.length;\n        var out = [];\n        var index = 0;\n        for (var i = 0; i < inputLength; i += 2) {\n          out[index] = [arr[i], arr[i + 1]];\n          ++index;\n        }\n        return out;\n      }\n      var domain = toNumberArray(dict.getArray('Domain'));\n      var range = toNumberArray(dict.getArray('Range'));\n      if (!domain || !range) {\n        throw new _util.FormatError('No domain or range');\n      }\n      var inputSize = domain.length / 2;\n      var outputSize = range.length / 2;\n      domain = toMultiArray(domain);\n      range = toMultiArray(range);\n      var size = toNumberArray(dict.get('Size'));\n      var bps = dict.get('BitsPerSample');\n      var order = dict.get('Order') || 1;\n      if (order !== 1) {\n        (0, _util.info)('No support for cubic spline interpolation: ' + order);\n      }\n      var encode = toNumberArray(dict.getArray('Encode'));\n      if (!encode) {\n        encode = [];\n        for (var i = 0; i < inputSize; ++i) {\n          encode.push([0, size[i] - 1]);\n        }\n      } else {\n        encode = toMultiArray(encode);\n      }\n      var decode = toNumberArray(dict.getArray('Decode'));\n      if (!decode) {\n        decode = range;\n      } else {\n        decode = toMultiArray(decode);\n      }\n      var samples = this.getSampleArray(size, outputSize, bps, fn);\n      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\n    },\n    constructSampledFromIR: function constructSampledFromIR(_ref7) {\n      var xref = _ref7.xref,\n          isEvalSupported = _ref7.isEvalSupported,\n          IR = _ref7.IR;\n\n      function interpolate(x, xmin, xmax, ymin, ymax) {\n        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n      }\n      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n        var m = IR[1];\n        var domain = IR[2];\n        var encode = IR[3];\n        var decode = IR[4];\n        var samples = IR[5];\n        var size = IR[6];\n        var n = IR[7];\n        var range = IR[9];\n        var cubeVertices = 1 << m;\n        var cubeN = new Float64Array(cubeVertices);\n        var cubeVertex = new Uint32Array(cubeVertices);\n        var i, j;\n        for (j = 0; j < cubeVertices; j++) {\n          cubeN[j] = 1;\n        }\n        var k = n,\n            pos = 1;\n        for (i = 0; i < m; ++i) {\n          var domain_2i = domain[i][0];\n          var domain_2i_1 = domain[i][1];\n          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n          var size_i = size[i];\n          e = Math.min(Math.max(e, 0), size_i - 1);\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n          var n0 = e0 + 1 - e;\n          var n1 = e - e0;\n          var offset0 = e0 * k;\n          var offset1 = offset0 + k;\n          for (j = 0; j < cubeVertices; j++) {\n            if (j & pos) {\n              cubeN[j] *= n1;\n              cubeVertex[j] += offset1;\n            } else {\n              cubeN[j] *= n0;\n              cubeVertex[j] += offset0;\n            }\n          }\n          k *= size_i;\n          pos <<= 1;\n        }\n        for (j = 0; j < n; ++j) {\n          var rj = 0;\n          for (i = 0; i < cubeVertices; i++) {\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\n          }\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n        }\n      };\n    },\n    constructInterpolated: function constructInterpolated(_ref8) {\n      var xref = _ref8.xref,\n          isEvalSupported = _ref8.isEvalSupported,\n          fn = _ref8.fn,\n          dict = _ref8.dict;\n\n      var c0 = toNumberArray(dict.getArray('C0')) || [0];\n      var c1 = toNumberArray(dict.getArray('C1')) || [1];\n      var n = dict.get('N');\n      var length = c0.length;\n      var diff = [];\n      for (var i = 0; i < length; ++i) {\n        diff.push(c1[i] - c0[i]);\n      }\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n    },\n    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\n      var xref = _ref9.xref,\n          isEvalSupported = _ref9.isEvalSupported,\n          IR = _ref9.IR;\n\n      var c0 = IR[1];\n      var diff = IR[2];\n      var n = IR[3];\n      var length = diff.length;\n      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n        for (var j = 0; j < length; ++j) {\n          dest[destOffset + j] = c0[j] + x * diff[j];\n        }\n      };\n    },\n    constructStiched: function constructStiched(_ref10) {\n      var xref = _ref10.xref,\n          isEvalSupported = _ref10.isEvalSupported,\n          fn = _ref10.fn,\n          dict = _ref10.dict;\n\n      var domain = toNumberArray(dict.getArray('Domain'));\n      if (!domain) {\n        throw new _util.FormatError('No domain');\n      }\n      var inputSize = domain.length / 2;\n      if (inputSize !== 1) {\n        throw new _util.FormatError('Bad domain for stiched function');\n      }\n      var fnRefs = dict.get('Functions');\n      var fns = [];\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n        fns.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnRefs[i])\n        }));\n      }\n      var bounds = toNumberArray(dict.getArray('Bounds'));\n      var encode = toNumberArray(dict.getArray('Encode'));\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n    },\n    constructStichedFromIR: function constructStichedFromIR(_ref11) {\n      var xref = _ref11.xref,\n          isEvalSupported = _ref11.isEvalSupported,\n          IR = _ref11.IR;\n\n      var domain = IR[1];\n      var bounds = IR[2];\n      var encode = IR[3];\n      var fns = IR[4];\n      var tmpBuf = new Float32Array(1);\n      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n        var clip = function constructStichedFromIRClip(v, min, max) {\n          if (v > max) {\n            v = max;\n          } else if (v < min) {\n            v = min;\n          }\n          return v;\n        };\n        var v = clip(src[srcOffset], domain[0], domain[1]);\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n          if (v < bounds[i]) {\n            break;\n          }\n        }\n        var dmin = domain[0];\n        if (i > 0) {\n          dmin = bounds[i - 1];\n        }\n        var dmax = domain[1];\n        if (i < bounds.length) {\n          dmax = bounds[i];\n        }\n        var rmin = encode[2 * i];\n        var rmax = encode[2 * i + 1];\n        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n        fns[i](tmpBuf, 0, dest, destOffset);\n      };\n    },\n    constructPostScript: function constructPostScript(_ref12) {\n      var xref = _ref12.xref,\n          isEvalSupported = _ref12.isEvalSupported,\n          fn = _ref12.fn,\n          dict = _ref12.dict;\n\n      var domain = toNumberArray(dict.getArray('Domain'));\n      var range = toNumberArray(dict.getArray('Range'));\n      if (!domain) {\n        throw new _util.FormatError('No domain.');\n      }\n      if (!range) {\n        throw new _util.FormatError('No range.');\n      }\n      var lexer = new _ps_parser.PostScriptLexer(fn);\n      var parser = new _ps_parser.PostScriptParser(lexer);\n      var code = parser.parse();\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n    },\n    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\n      var xref = _ref13.xref,\n          isEvalSupported = _ref13.isEvalSupported,\n          IR = _ref13.IR;\n\n      var domain = IR[1];\n      var range = IR[2];\n      var code = IR[3];\n      if (isEvalSupported && IsEvalSupportedCached.value) {\n        var compiled = new PostScriptCompiler().compile(code, domain, range);\n        if (compiled) {\n          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n        }\n      }\n      (0, _util.info)('Unable to compile PS function');\n      var numOutputs = range.length >> 1;\n      var numInputs = domain.length >> 1;\n      var evaluator = new PostScriptEvaluator(code);\n      var cache = Object.create(null);\n      var MAX_CACHE_SIZE = 2048 * 4;\n      var cache_available = MAX_CACHE_SIZE;\n      var tmpBuf = new Float32Array(numInputs);\n      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n        var i, value;\n        var key = '';\n        var input = tmpBuf;\n        for (i = 0; i < numInputs; i++) {\n          value = src[srcOffset + i];\n          input[i] = value;\n          key += value + '_';\n        }\n        var cachedValue = cache[key];\n        if (cachedValue !== undefined) {\n          dest.set(cachedValue, destOffset);\n          return;\n        }\n        var output = new Float32Array(numOutputs);\n        var stack = evaluator.execute(input);\n        var stackIndex = stack.length - numOutputs;\n        for (i = 0; i < numOutputs; i++) {\n          value = stack[stackIndex + i];\n          var bound = range[i * 2];\n          if (value < bound) {\n            value = bound;\n          } else {\n            bound = range[i * 2 + 1];\n            if (value > bound) {\n              value = bound;\n            }\n          }\n          output[i] = value;\n        }\n        if (cache_available > 0) {\n          cache_available--;\n          cache[key] = output;\n        }\n        dest.set(output, destOffset);\n      };\n    }\n  };\n}();\nfunction isPDFFunction(v) {\n  var fnDict;\n  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\n    return false;\n  } else if ((0, _primitives.isDict)(v)) {\n    fnDict = v;\n  } else if ((0, _primitives.isStream)(v)) {\n    fnDict = v.dict;\n  } else {\n    return false;\n  }\n  return fnDict.has('FunctionType');\n}\nvar PostScriptStack = function PostScriptStackClosure() {\n  var MAX_STACK_SIZE = 100;\n  function PostScriptStack(initialStack) {\n    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n  }\n  PostScriptStack.prototype = {\n    push: function PostScriptStack_push(value) {\n      if (this.stack.length >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      this.stack.push(value);\n    },\n    pop: function PostScriptStack_pop() {\n      if (this.stack.length <= 0) {\n        throw new Error('PostScript function stack underflow.');\n      }\n      return this.stack.pop();\n    },\n    copy: function PostScriptStack_copy(n) {\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      var stack = this.stack;\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n        stack.push(stack[i]);\n      }\n    },\n    index: function PostScriptStack_index(n) {\n      this.push(this.stack[this.stack.length - n - 1]);\n    },\n    roll: function PostScriptStack_roll(n, p) {\n      var stack = this.stack;\n      var l = stack.length - n;\n      var r = stack.length - 1,\n          c = l + (p - Math.floor(p / n) * n),\n          i,\n          j,\n          t;\n      for (i = l, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = l, j = c - 1; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = c, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n    }\n  };\n  return PostScriptStack;\n}();\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n  function PostScriptEvaluator(operators) {\n    this.operators = operators;\n  }\n  PostScriptEvaluator.prototype = {\n    execute: function PostScriptEvaluator_execute(initialStack) {\n      var stack = new PostScriptStack(initialStack);\n      var counter = 0;\n      var operators = this.operators;\n      var length = operators.length;\n      var operator, a, b;\n      while (counter < length) {\n        operator = operators[counter++];\n        if (typeof operator === 'number') {\n          stack.push(operator);\n          continue;\n        }\n        switch (operator) {\n          case 'jz':\n            b = stack.pop();\n            a = stack.pop();\n            if (!a) {\n              counter = b;\n            }\n            break;\n          case 'j':\n            a = stack.pop();\n            counter = a;\n            break;\n          case 'abs':\n            a = stack.pop();\n            stack.push(Math.abs(a));\n            break;\n          case 'add':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a + b);\n            break;\n          case 'and':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a && b);\n            } else {\n              stack.push(a & b);\n            }\n            break;\n          case 'atan':\n            a = stack.pop();\n            stack.push(Math.atan(a));\n            break;\n          case 'bitshift':\n            b = stack.pop();\n            a = stack.pop();\n            if (a > 0) {\n              stack.push(a << b);\n            } else {\n              stack.push(a >> b);\n            }\n            break;\n          case 'ceiling':\n            a = stack.pop();\n            stack.push(Math.ceil(a));\n            break;\n          case 'copy':\n            a = stack.pop();\n            stack.copy(a);\n            break;\n          case 'cos':\n            a = stack.pop();\n            stack.push(Math.cos(a));\n            break;\n          case 'cvi':\n            a = stack.pop() | 0;\n            stack.push(a);\n            break;\n          case 'cvr':\n            break;\n          case 'div':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b);\n            break;\n          case 'dup':\n            stack.copy(1);\n            break;\n          case 'eq':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a === b);\n            break;\n          case 'exch':\n            stack.roll(2, 1);\n            break;\n          case 'exp':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(Math.pow(a, b));\n            break;\n          case 'false':\n            stack.push(false);\n            break;\n          case 'floor':\n            a = stack.pop();\n            stack.push(Math.floor(a));\n            break;\n          case 'ge':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a >= b);\n            break;\n          case 'gt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a > b);\n            break;\n          case 'idiv':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b | 0);\n            break;\n          case 'index':\n            a = stack.pop();\n            stack.index(a);\n            break;\n          case 'le':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a <= b);\n            break;\n          case 'ln':\n            a = stack.pop();\n            stack.push(Math.log(a));\n            break;\n          case 'log':\n            a = stack.pop();\n            stack.push(Math.log(a) / Math.LN10);\n            break;\n          case 'lt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a < b);\n            break;\n          case 'mod':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a % b);\n            break;\n          case 'mul':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a * b);\n            break;\n          case 'ne':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a !== b);\n            break;\n          case 'neg':\n            a = stack.pop();\n            stack.push(-a);\n            break;\n          case 'not':\n            a = stack.pop();\n            if ((0, _util.isBool)(a)) {\n              stack.push(!a);\n            } else {\n              stack.push(~a);\n            }\n            break;\n          case 'or':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a || b);\n            } else {\n              stack.push(a | b);\n            }\n            break;\n          case 'pop':\n            stack.pop();\n            break;\n          case 'roll':\n            b = stack.pop();\n            a = stack.pop();\n            stack.roll(a, b);\n            break;\n          case 'round':\n            a = stack.pop();\n            stack.push(Math.round(a));\n            break;\n          case 'sin':\n            a = stack.pop();\n            stack.push(Math.sin(a));\n            break;\n          case 'sqrt':\n            a = stack.pop();\n            stack.push(Math.sqrt(a));\n            break;\n          case 'sub':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a - b);\n            break;\n          case 'true':\n            stack.push(true);\n            break;\n          case 'truncate':\n            a = stack.pop();\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n            stack.push(a);\n            break;\n          case 'xor':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a !== b);\n            } else {\n              stack.push(a ^ b);\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown operator ' + operator);\n        }\n      }\n      return stack.stack;\n    }\n  };\n  return PostScriptEvaluator;\n}();\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\n  function AstNode(type) {\n    this.type = type;\n  }\n  AstNode.prototype.visit = function (visitor) {\n    throw new Error('abstract method');\n  };\n  function AstArgument(index, min, max) {\n    AstNode.call(this, 'args');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstArgument.prototype = Object.create(AstNode.prototype);\n  AstArgument.prototype.visit = function (visitor) {\n    visitor.visitArgument(this);\n  };\n  function AstLiteral(number) {\n    AstNode.call(this, 'literal');\n    this.number = number;\n    this.min = number;\n    this.max = number;\n  }\n  AstLiteral.prototype = Object.create(AstNode.prototype);\n  AstLiteral.prototype.visit = function (visitor) {\n    visitor.visitLiteral(this);\n  };\n  function AstBinaryOperation(op, arg1, arg2, min, max) {\n    AstNode.call(this, 'binary');\n    this.op = op;\n    this.arg1 = arg1;\n    this.arg2 = arg2;\n    this.min = min;\n    this.max = max;\n  }\n  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n  AstBinaryOperation.prototype.visit = function (visitor) {\n    visitor.visitBinaryOperation(this);\n  };\n  function AstMin(arg, max) {\n    AstNode.call(this, 'max');\n    this.arg = arg;\n    this.min = arg.min;\n    this.max = max;\n  }\n  AstMin.prototype = Object.create(AstNode.prototype);\n  AstMin.prototype.visit = function (visitor) {\n    visitor.visitMin(this);\n  };\n  function AstVariable(index, min, max) {\n    AstNode.call(this, 'var');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstVariable.prototype = Object.create(AstNode.prototype);\n  AstVariable.prototype.visit = function (visitor) {\n    visitor.visitVariable(this);\n  };\n  function AstVariableDefinition(variable, arg) {\n    AstNode.call(this, 'definition');\n    this.variable = variable;\n    this.arg = arg;\n  }\n  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n  AstVariableDefinition.prototype.visit = function (visitor) {\n    visitor.visitVariableDefinition(this);\n  };\n  function ExpressionBuilderVisitor() {\n    this.parts = [];\n  }\n  ExpressionBuilderVisitor.prototype = {\n    visitArgument: function visitArgument(arg) {\n      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n    },\n    visitVariable: function visitVariable(variable) {\n      this.parts.push('v', variable.index);\n    },\n    visitLiteral: function visitLiteral(literal) {\n      this.parts.push(literal.number);\n    },\n    visitBinaryOperation: function visitBinaryOperation(operation) {\n      this.parts.push('(');\n      operation.arg1.visit(this);\n      this.parts.push(' ', operation.op, ' ');\n      operation.arg2.visit(this);\n      this.parts.push(')');\n    },\n    visitVariableDefinition: function visitVariableDefinition(definition) {\n      this.parts.push('var ');\n      definition.variable.visit(this);\n      this.parts.push(' = ');\n      definition.arg.visit(this);\n      this.parts.push(';');\n    },\n    visitMin: function visitMin(max) {\n      this.parts.push('Math.min(');\n      max.arg.visit(this);\n      this.parts.push(', ', max.max, ')');\n    },\n    toString: function toString() {\n      return this.parts.join('');\n    }\n  };\n  function buildAddOperation(num1, num2) {\n    if (num2.type === 'literal' && num2.number === 0) {\n      return num1;\n    }\n    if (num1.type === 'literal' && num1.number === 0) {\n      return num2;\n    }\n    if (num2.type === 'literal' && num1.type === 'literal') {\n      return new AstLiteral(num1.number + num2.number);\n    }\n    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n  }\n  function buildMulOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return new AstLiteral(0);\n      } else if (num2.number === 1) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number * num2.number);\n      }\n    }\n    if (num1.type === 'literal') {\n      if (num1.number === 0) {\n        return new AstLiteral(0);\n      } else if (num1.number === 1) {\n        return num2;\n      }\n    }\n    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    return new AstBinaryOperation('*', num1, num2, min, max);\n  }\n  function buildSubOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number - num2.number);\n      }\n    }\n    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n      return num2.arg2;\n    }\n    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n  }\n  function buildMinOperation(num1, max) {\n    if (num1.min >= max) {\n      return new AstLiteral(max);\n    } else if (num1.max <= max) {\n      return num1;\n    }\n    return new AstMin(num1, max);\n  }\n  function PostScriptCompiler() {}\n  PostScriptCompiler.prototype = {\n    compile: function PostScriptCompiler_compile(code, domain, range) {\n      var stack = [];\n      var i, ii;\n      var instructions = [];\n      var inputSize = domain.length >> 1,\n          outputSize = range.length >> 1;\n      var lastRegister = 0;\n      var n, j;\n      var num1, num2, ast1, ast2, tmpVar, item;\n      for (i = 0; i < inputSize; i++) {\n        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n      }\n      for (i = 0, ii = code.length; i < ii; i++) {\n        item = code[i];\n        if (typeof item === 'number') {\n          stack.push(new AstLiteral(item));\n          continue;\n        }\n        switch (item) {\n          case 'add':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildAddOperation(num1, num2));\n            break;\n          case 'cvr':\n            if (stack.length < 1) {\n              return null;\n            }\n            break;\n          case 'mul':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildMulOperation(num1, num2));\n            break;\n          case 'sub':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildSubOperation(num1, num2));\n            break;\n          case 'exch':\n            if (stack.length < 2) {\n              return null;\n            }\n            ast1 = stack.pop();\n            ast2 = stack.pop();\n            stack.push(ast1, ast2);\n            break;\n          case 'pop':\n            if (stack.length < 1) {\n              return null;\n            }\n            stack.pop();\n            break;\n          case 'index':\n            if (stack.length < 1) {\n              return null;\n            }\n            num1 = stack.pop();\n            if (num1.type !== 'literal') {\n              return null;\n            }\n            n = num1.number;\n            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\n              return null;\n            }\n            ast1 = stack[stack.length - n - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - n - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'dup':\n            if (stack.length < 1) {\n              return null;\n            }\n            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n              num1 = stack.pop();\n              stack.push(buildMinOperation(num1, code[i + 1]));\n              i += 6;\n              break;\n            }\n            ast1 = stack[stack.length - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'roll':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            if (num2.type !== 'literal' || num1.type !== 'literal') {\n              return null;\n            }\n            j = num2.number;\n            n = num1.number;\n            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\n              return null;\n            }\n            j = (j % n + n) % n;\n            if (j === 0) {\n              break;\n            }\n            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n            break;\n          default:\n            return null;\n        }\n      }\n      if (stack.length !== outputSize) {\n        return null;\n      }\n      var result = [];\n      instructions.forEach(function (instruction) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        instruction.visit(statementBuilder);\n        result.push(statementBuilder.toString());\n      });\n      stack.forEach(function (expr, i) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        expr.visit(statementBuilder);\n        var min = range[i * 2],\n            max = range[i * 2 + 1];\n        var out = [statementBuilder.toString()];\n        if (min > expr.min) {\n          out.unshift('Math.max(', min, ', ');\n          out.push(')');\n        }\n        if (max < expr.max) {\n          out.unshift('Math.min(', max, ', ');\n          out.push(')');\n        }\n        out.unshift('dest[destOffset + ', i, '] = ');\n        out.push(';');\n        result.push(out.join(''));\n      });\n      return result.join('\\n');\n    }\n  };\n  return PostScriptCompiler;\n}();\nexports.isPDFFunction = isPDFFunction;\nexports.PDFFunctionFactory = PDFFunctionFactory;\nexports.PostScriptEvaluator = PostScriptEvaluator;\nexports.PostScriptCompiler = PostScriptCompiler;\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pdfjsVersion = '1.10.100';\nvar pdfjsBuild = 'ea29ec83';\nvar pdfjsCoreWorker = __w_pdfjs_require__(83);\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkerMessageHandler = exports.WorkerTask = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _pdf_manager = __w_pdfjs_require__(127);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar WorkerTask = function WorkerTaskClosure() {\n  function WorkerTask(name) {\n    this.name = name;\n    this.terminated = false;\n    this._capability = (0, _util.createPromiseCapability)();\n  }\n  WorkerTask.prototype = {\n    get finished() {\n      return this._capability.promise;\n    },\n    finish: function finish() {\n      this._capability.resolve();\n    },\n    terminate: function terminate() {\n      this.terminated = true;\n    },\n    ensureNotTerminated: function ensureNotTerminated() {\n      if (this.terminated) {\n        throw new Error('Worker task was terminated');\n      }\n    }\n  };\n  return WorkerTask;\n}();\n;\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n  function PDFWorkerStream(msgHandler) {\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  PDFWorkerStream.prototype = {\n    getFullReader: function getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader);\n      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\n      return this._fullRequestReader;\n    },\n    getRangeReader: function getRangeReader(begin, end) {\n      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\n      this._rangeRequestReaders.push(reader);\n      return reader;\n    },\n    cancelAllRequests: function cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n      var readers = this._rangeRequestReaders.slice(0);\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n  };\n  function PDFWorkerStreamReader(msgHandler) {\n    var _this = this;\n\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._isRangeSupported = false;\n    this._isStreamingSupported = false;\n    var readableStream = this._msgHandler.sendWithStream('GetReader');\n    this._reader = readableStream.getReader();\n    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\n      _this._isStreamingSupported = data.isStreamingSupported;\n      _this._isRangeSupported = data.isRangeSupported;\n      _this._contentLength = data.contentLength;\n    });\n  }\n  PDFWorkerStreamReader.prototype = {\n    get headersReady() {\n      return this._headersReady;\n    },\n    get contentLength() {\n      return this._contentLength;\n    },\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    },\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref) {\n        var value = _ref.value,\n            done = _ref.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\n    this._msgHandler = msgHandler;\n    this.onProgress = null;\n    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\n      begin: begin,\n      end: end\n    });\n    this._reader = readableStream.getReader();\n  }\n  PDFWorkerStreamRangeReader.prototype = {\n    get isStreamingSupported() {\n      return false;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref2) {\n        var value = _ref2.value,\n            done = _ref2.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  return PDFWorkerStream;\n}();\nvar WorkerMessageHandler = {\n  setup: function setup(handler, port) {\n    var testMessageProcessed = false;\n    handler.on('test', function wphSetupTest(data) {\n      if (testMessageProcessed) {\n        return;\n      }\n      testMessageProcessed = true;\n      if (!(data instanceof Uint8Array)) {\n        handler.send('test', 'main', false);\n        return;\n      }\n      var supportTransfers = data[0] === 255;\n      handler.postMessageTransfers = supportTransfers;\n      var xhr = new XMLHttpRequest();\n      var responseExists = 'response' in xhr;\n      try {\n        xhr.responseType;\n      } catch (e) {\n        responseExists = false;\n      }\n      if (!responseExists) {\n        handler.send('test', false);\n        return;\n      }\n      handler.send('test', {\n        supportTypedArray: true,\n        supportTransfers: supportTransfers\n      });\n    });\n    handler.on('configure', function wphConfigure(data) {\n      (0, _util.setVerbosityLevel)(data.verbosity);\n    });\n    handler.on('GetDocRequest', function wphSetupDoc(data) {\n      return WorkerMessageHandler.createDocumentHandler(data, port);\n    });\n  },\n  createDocumentHandler: function createDocumentHandler(docParams, port) {\n    var pdfManager;\n    var terminated = false;\n    var cancelXHRs = null;\n    var WorkerTasks = [];\n    var apiVersion = docParams.apiVersion;\n    var workerVersion = '1.10.100';\n    if (apiVersion !== null && apiVersion !== workerVersion) {\n      throw new Error('The API version \"' + apiVersion + '\" does not match ' + ('the Worker version \"' + workerVersion + '\".'));\n    }\n    var docId = docParams.docId;\n    var docBaseUrl = docParams.docBaseUrl;\n    var workerHandlerName = docParams.docId + '_worker';\n    var handler = new _util.MessageHandler(workerHandlerName, docId, port);\n    handler.postMessageTransfers = docParams.postMessageTransfers;\n    function ensureNotTerminated() {\n      if (terminated) {\n        throw new Error('Worker was terminated');\n      }\n    }\n    function startWorkerTask(task) {\n      WorkerTasks.push(task);\n    }\n    function finishWorkerTask(task) {\n      task.finish();\n      var i = WorkerTasks.indexOf(task);\n      WorkerTasks.splice(i, 1);\n    }\n    function loadDocument(recoveryMode) {\n      var loadDocumentCapability = (0, _util.createPromiseCapability)();\n      var parseSuccess = function parseSuccess() {\n        var numPagesPromise = pdfManager.ensureDoc('numPages');\n        var fingerprintPromise = pdfManager.ensureDoc('fingerprint');\n        var encryptedPromise = pdfManager.ensureXRef('encrypt');\n        Promise.all([numPagesPromise, fingerprintPromise, encryptedPromise]).then(function onDocReady(results) {\n          var doc = {\n            numPages: results[0],\n            fingerprint: results[1],\n            encrypted: !!results[2]\n          };\n          loadDocumentCapability.resolve(doc);\n        }, parseFailure);\n      };\n      var parseFailure = function parseFailure(e) {\n        loadDocumentCapability.reject(e);\n      };\n      pdfManager.ensureDoc('checkHeader', []).then(function () {\n        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n        }, parseFailure);\n      }, parseFailure);\n      return loadDocumentCapability.promise;\n    }\n    function getPdfManager(data, evaluatorOptions) {\n      var pdfManagerCapability = (0, _util.createPromiseCapability)();\n      var pdfManager;\n      var source = data.source;\n      if (source.data) {\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        return pdfManagerCapability.promise;\n      }\n      var pdfStream,\n          cachedChunks = [];\n      try {\n        pdfStream = new PDFWorkerStream(handler);\n      } catch (ex) {\n        pdfManagerCapability.reject(ex);\n        return pdfManagerCapability.promise;\n      }\n      var fullRequest = pdfStream.getFullReader();\n      fullRequest.headersReady.then(function () {\n        if (!fullRequest.isRangeSupported) {\n          return;\n        }\n        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\n          msgHandler: handler,\n          url: source.url,\n          password: source.password,\n          length: fullRequest.contentLength,\n          disableAutoFetch: disableAutoFetch,\n          rangeChunkSize: source.rangeChunkSize\n        }, evaluatorOptions, docBaseUrl);\n        for (var i = 0; i < cachedChunks.length; i++) {\n          pdfManager.sendProgressiveData(cachedChunks[i]);\n        }\n        cachedChunks = [];\n        pdfManagerCapability.resolve(pdfManager);\n        cancelXHRs = null;\n      }).catch(function (reason) {\n        pdfManagerCapability.reject(reason);\n        cancelXHRs = null;\n      });\n      var loaded = 0;\n      var flushChunks = function flushChunks() {\n        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\n        if (source.length && pdfFile.length !== source.length) {\n          (0, _util.warn)('reported HTTP length is different from actual');\n        }\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        cachedChunks = [];\n      };\n      var readPromise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            ensureNotTerminated();\n            if (chunk.done) {\n              if (!pdfManager) {\n                flushChunks();\n              }\n              cancelXHRs = null;\n              return;\n            }\n            var data = chunk.value;\n            loaded += (0, _util.arrayByteLength)(data);\n            if (!fullRequest.isStreamingSupported) {\n              handler.send('DocProgress', {\n                loaded: loaded,\n                total: Math.max(loaded, fullRequest.contentLength || 0)\n              });\n            }\n            if (pdfManager) {\n              pdfManager.sendProgressiveData(data);\n            } else {\n              cachedChunks.push(data);\n            }\n            fullRequest.read().then(readChunk, reject);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        fullRequest.read().then(readChunk, reject);\n      });\n      readPromise.catch(function (e) {\n        pdfManagerCapability.reject(e);\n        cancelXHRs = null;\n      });\n      cancelXHRs = function cancelXHRs() {\n        pdfStream.cancelAllRequests('abort');\n      };\n      return pdfManagerCapability.promise;\n    }\n    function setupDoc(data) {\n      function onSuccess(doc) {\n        ensureNotTerminated();\n        handler.send('GetDoc', { pdfInfo: doc });\n      }\n      function onFailure(e) {\n        ensureNotTerminated();\n        if (e instanceof _util.PasswordException) {\n          var task = new WorkerTask('PasswordException: response ' + e.code);\n          startWorkerTask(task);\n          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n            finishWorkerTask(task);\n            pdfManager.updatePassword(data.password);\n            pdfManagerReady();\n          }).catch(function (ex) {\n            finishWorkerTask(task);\n            handler.send('PasswordException', ex);\n          }.bind(null, e));\n        } else if (e instanceof _util.InvalidPDFException) {\n          handler.send('InvalidPDF', e);\n        } else if (e instanceof _util.MissingPDFException) {\n          handler.send('MissingPDF', e);\n        } else if (e instanceof _util.UnexpectedResponseException) {\n          handler.send('UnexpectedResponse', e);\n        } else {\n          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\n        }\n      }\n      function pdfManagerReady() {\n        ensureNotTerminated();\n        loadDocument(false).then(onSuccess, function loadFailure(ex) {\n          ensureNotTerminated();\n          if (!(ex instanceof _util.XRefParseException)) {\n            onFailure(ex);\n            return;\n          }\n          pdfManager.requestLoadedStream();\n          pdfManager.onLoadedStream().then(function () {\n            ensureNotTerminated();\n            loadDocument(true).then(onSuccess, onFailure);\n          });\n        }, onFailure);\n      }\n      ensureNotTerminated();\n      var evaluatorOptions = {\n        forceDataSchema: data.disableCreateObjectURL,\n        maxImageSize: data.maxImageSize === undefined ? -1 : data.maxImageSize,\n        disableFontFace: data.disableFontFace,\n        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\n        ignoreErrors: data.ignoreErrors,\n        isEvalSupported: data.isEvalSupported\n      };\n      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n        if (terminated) {\n          newPdfManager.terminate();\n          throw new Error('Worker was terminated');\n        }\n        pdfManager = newPdfManager;\n        handler.send('PDFManagerReady', null);\n        pdfManager.onLoadedStream().then(function (stream) {\n          handler.send('DataLoaded', { length: stream.bytes.byteLength });\n        });\n      }).then(pdfManagerReady, onFailure);\n    }\n    handler.on('GetPage', function wphSetupGetPage(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        var rotatePromise = pdfManager.ensure(page, 'rotate');\n        var refPromise = pdfManager.ensure(page, 'ref');\n        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n        var viewPromise = pdfManager.ensure(page, 'view');\n        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\n          return {\n            rotate: results[0],\n            ref: results[1],\n            userUnit: results[2],\n            view: results[3]\n          };\n        });\n      });\n    });\n    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\n      var catalog = pdfManager.pdfDocument.catalog;\n      return catalog.getPageIndex(ref);\n    });\n    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n      return pdfManager.ensureCatalog('destinations');\n    });\n    handler.on('GetDestination', function wphSetupGetDestination(data) {\n      return pdfManager.ensureCatalog('getDestination', [data.id]);\n    });\n    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n      return pdfManager.ensureCatalog('pageLabels');\n    });\n    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\n      return pdfManager.ensureCatalog('pageMode');\n    });\n    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n      return pdfManager.ensureCatalog('attachments');\n    });\n    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n      return pdfManager.ensureCatalog('javaScript');\n    });\n    handler.on('GetOutline', function wphSetupGetOutline(data) {\n      return pdfManager.ensureCatalog('documentOutline');\n    });\n    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\n    });\n    handler.on('GetData', function wphSetupGetData(data) {\n      pdfManager.requestLoadedStream();\n      return pdfManager.onLoadedStream().then(function (stream) {\n        return stream.bytes;\n      });\n    });\n    handler.on('GetStats', function wphSetupGetStats(data) {\n      return pdfManager.pdfDocument.xref.stats;\n    });\n    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n      });\n    });\n    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n      var pageIndex = data.pageIndex;\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.getOperatorList({\n          handler: handler,\n          task: task,\n          intent: data.intent,\n          renderInteractiveForms: data.renderInteractiveForms\n        }).then(function (operatorList) {\n          finishWorkerTask(task);\n          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n        }, function (e) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n          var wrappedException;\n          if (typeof e === 'string') {\n            wrappedException = {\n              message: e,\n              stack: minimumStackMessage\n            };\n          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\n            wrappedException = {\n              message: e.message || e.toString(),\n              stack: e.stack || minimumStackMessage\n            };\n          } else {\n            wrappedException = {\n              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\n              stack: minimumStackMessage\n            };\n          }\n          handler.send('PageError', {\n            pageNum: pageNum,\n            error: wrappedException,\n            intent: data.intent\n          });\n        });\n      });\n    }, this);\n    handler.on('GetTextContent', function wphExtractText(data, sink) {\n      var pageIndex = data.pageIndex;\n      sink.onPull = function (desiredSize) {};\n      sink.onCancel = function (reason) {};\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.extractTextContent({\n          handler: handler,\n          task: task,\n          sink: sink,\n          normalizeWhitespace: data.normalizeWhitespace,\n          combineTextItems: data.combineTextItems\n        }).then(function () {\n          finishWorkerTask(task);\n          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n          sink.close();\n        }, function (reason) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          sink.error(reason);\n          throw reason;\n        });\n      });\n    });\n    handler.on('Cleanup', function wphCleanup(data) {\n      return pdfManager.cleanup();\n    });\n    handler.on('Terminate', function wphTerminate(data) {\n      terminated = true;\n      if (pdfManager) {\n        pdfManager.terminate();\n        pdfManager = null;\n      }\n      if (cancelXHRs) {\n        cancelXHRs();\n      }\n      var waitOn = [];\n      WorkerTasks.forEach(function (task) {\n        waitOn.push(task.finished);\n        task.terminate();\n      });\n      return Promise.all(waitOn).then(function () {\n        handler.destroy();\n        handler = null;\n      });\n    });\n    handler.on('Ready', function wphReady(data) {\n      setupDoc(docParams);\n      docParams = null;\n    });\n    return workerHandlerName;\n  },\n  initializeFromPort: function initializeFromPort(port) {\n    var handler = new _util.MessageHandler('worker', 'main', port);\n    WorkerMessageHandler.setup(handler, port);\n    handler.send('ready', null);\n  }\n};\nfunction isMessagePort(maybePort) {\n  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\n}\nif (typeof window === 'undefined' && !(0, _util.isNodeJS)() && typeof self !== 'undefined' && isMessagePort(self)) {\n  WorkerMessageHandler.initializeFromPort(self);\n}\nexports.WorkerTask = WorkerTask;\nexports.WorkerMessageHandler = WorkerMessageHandler;\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nif (typeof PDFJS === 'undefined' || !PDFJS.compatibilityChecked) {\n  var globalScope = __w_pdfjs_require__(85);\n  var userAgent = typeof navigator !== 'undefined' && navigator.userAgent || '';\n  var isAndroid = /Android/.test(userAgent);\n  var isAndroidPre3 = /Android\\s[0-2][^\\d]/.test(userAgent);\n  var isAndroidPre5 = /Android\\s[0-4][^\\d]/.test(userAgent);\n  var isChrome = userAgent.indexOf('Chrom') >= 0;\n  var isChromeWithRangeBug = /Chrome\\/(39|40)\\./.test(userAgent);\n  var isIOSChrome = userAgent.indexOf('CriOS') >= 0;\n  var isIE = userAgent.indexOf('Trident') >= 0;\n  var isIOS = /\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent);\n  var isOpera = userAgent.indexOf('Opera') >= 0;\n  var isSafari = /Safari\\//.test(userAgent) && !/(Chrome\\/|Android\\s)/.test(userAgent);\n  var hasDOM = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && (typeof document === 'undefined' ? 'undefined' : _typeof(document)) === 'object';\n  if (typeof PDFJS === 'undefined') {\n    globalScope.PDFJS = {};\n  }\n  PDFJS.compatibilityChecked = true;\n  (function checkTypedArrayCompatibility() {\n    if (typeof Uint8ClampedArray === 'undefined') {\n      globalScope.Uint8ClampedArray = __w_pdfjs_require__(86);\n    }\n    if (typeof Uint8Array !== 'undefined') {\n      if (typeof Uint8Array.prototype.subarray === 'undefined') {\n        Uint8Array.prototype.subarray = function subarray(start, end) {\n          return new Uint8Array(this.slice(start, end));\n        };\n        Float32Array.prototype.subarray = function subarray(start, end) {\n          return new Float32Array(this.slice(start, end));\n        };\n      }\n      if (typeof Float64Array === 'undefined') {\n        globalScope.Float64Array = Float32Array;\n      }\n      return;\n    }\n    function subarray(start, end) {\n      return new TypedArray(this.slice(start, end));\n    }\n    function setArrayOffset(array, offset) {\n      if (arguments.length < 2) {\n        offset = 0;\n      }\n      for (var i = 0, n = array.length; i < n; ++i, ++offset) {\n        this[offset] = array[i] & 0xFF;\n      }\n    }\n    function Uint32ArrayView(buffer, length) {\n      this.buffer = buffer;\n      this.byteLength = buffer.length;\n      this.length = length;\n      ensureUint32ArrayViewProps(this.length);\n    }\n    Uint32ArrayView.prototype = Object.create(null);\n    var uint32ArrayViewSetters = 0;\n    function createUint32ArrayProp(index) {\n      return {\n        get: function get() {\n          var buffer = this.buffer,\n              offset = index << 2;\n          return (buffer[offset] | buffer[offset + 1] << 8 | buffer[offset + 2] << 16 | buffer[offset + 3] << 24) >>> 0;\n        },\n        set: function set(value) {\n          var buffer = this.buffer,\n              offset = index << 2;\n          buffer[offset] = value & 255;\n          buffer[offset + 1] = value >> 8 & 255;\n          buffer[offset + 2] = value >> 16 & 255;\n          buffer[offset + 3] = value >>> 24 & 255;\n        }\n      };\n    }\n    function ensureUint32ArrayViewProps(length) {\n      while (uint32ArrayViewSetters < length) {\n        Object.defineProperty(Uint32ArrayView.prototype, uint32ArrayViewSetters, createUint32ArrayProp(uint32ArrayViewSetters));\n        uint32ArrayViewSetters++;\n      }\n    }\n    function TypedArray(arg1) {\n      var result, i, n;\n      if (typeof arg1 === 'number') {\n        result = [];\n        for (i = 0; i < arg1; ++i) {\n          result[i] = 0;\n        }\n      } else if ('slice' in arg1) {\n        result = arg1.slice(0);\n      } else {\n        result = [];\n        for (i = 0, n = arg1.length; i < n; ++i) {\n          result[i] = arg1[i];\n        }\n      }\n      result.subarray = subarray;\n      result.buffer = result;\n      result.byteLength = result.length;\n      result.set = setArrayOffset;\n      if ((typeof arg1 === 'undefined' ? 'undefined' : _typeof(arg1)) === 'object' && arg1.buffer) {\n        result.buffer = arg1.buffer;\n      }\n      return result;\n    }\n    globalScope.Uint8Array = TypedArray;\n    globalScope.Int8Array = TypedArray;\n    globalScope.Int32Array = TypedArray;\n    globalScope.Uint16Array = TypedArray;\n    globalScope.Float32Array = TypedArray;\n    globalScope.Float64Array = TypedArray;\n    globalScope.Uint32Array = function () {\n      if (arguments.length === 3) {\n        if (arguments[1] !== 0) {\n          throw new Error('offset !== 0 is not supported');\n        }\n        return new Uint32ArrayView(arguments[0], arguments[2]);\n      }\n      return TypedArray.apply(this, arguments);\n    };\n  })();\n  (function canvasPixelArrayBuffer() {\n    if (!hasDOM || !window.CanvasPixelArray) {\n      return;\n    }\n    var cpaProto = window.CanvasPixelArray.prototype;\n    if ('buffer' in cpaProto) {\n      return;\n    }\n    Object.defineProperty(cpaProto, 'buffer', {\n      get: function get() {\n        return this;\n      },\n\n      enumerable: false,\n      configurable: true\n    });\n    Object.defineProperty(cpaProto, 'byteLength', {\n      get: function get() {\n        return this.length;\n      },\n\n      enumerable: false,\n      configurable: true\n    });\n  })();\n  (function normalizeURLObject() {\n    if (!globalScope.URL) {\n      globalScope.URL = globalScope.webkitURL;\n    }\n  })();\n  (function checkObjectDefinePropertyCompatibility() {\n    if (typeof Object.defineProperty !== 'undefined') {\n      var definePropertyPossible = true;\n      try {\n        if (hasDOM) {\n          Object.defineProperty(new Image(), 'id', { value: 'test' });\n        }\n        var Test = function Test() {};\n        Test.prototype = {\n          get id() {}\n        };\n        Object.defineProperty(new Test(), 'id', {\n          value: '',\n          configurable: true,\n          enumerable: true,\n          writable: false\n        });\n      } catch (e) {\n        definePropertyPossible = false;\n      }\n      if (definePropertyPossible) {\n        return;\n      }\n    }\n    Object.defineProperty = function objectDefineProperty(obj, name, def) {\n      delete obj[name];\n      if ('get' in def) {\n        obj.__defineGetter__(name, def['get']);\n      }\n      if ('set' in def) {\n        obj.__defineSetter__(name, def['set']);\n      }\n      if ('value' in def) {\n        obj.__defineSetter__(name, function objectDefinePropertySetter(value) {\n          this.__defineGetter__(name, function objectDefinePropertyGetter() {\n            return value;\n          });\n          return value;\n        });\n        obj[name] = def.value;\n      }\n    };\n  })();\n  (function checkXMLHttpRequestResponseCompatibility() {\n    if (typeof XMLHttpRequest === 'undefined') {\n      return;\n    }\n    var xhrPrototype = XMLHttpRequest.prototype;\n    var xhr = new XMLHttpRequest();\n    if (!('overrideMimeType' in xhr)) {\n      Object.defineProperty(xhrPrototype, 'overrideMimeType', {\n        value: function xmlHttpRequestOverrideMimeType(mimeType) {}\n      });\n    }\n    if ('responseType' in xhr) {\n      return;\n    }\n    Object.defineProperty(xhrPrototype, 'responseType', {\n      get: function xmlHttpRequestGetResponseType() {\n        return this._responseType || 'text';\n      },\n      set: function xmlHttpRequestSetResponseType(value) {\n        if (value === 'text' || value === 'arraybuffer') {\n          this._responseType = value;\n          if (value === 'arraybuffer' && typeof this.overrideMimeType === 'function') {\n            this.overrideMimeType('text/plain; charset=x-user-defined');\n          }\n        }\n      }\n    });\n    if (typeof VBArray !== 'undefined') {\n      Object.defineProperty(xhrPrototype, 'response', {\n        get: function xmlHttpRequestResponseGet() {\n          if (this.responseType === 'arraybuffer') {\n            return new Uint8Array(new VBArray(this.responseBody).toArray());\n          }\n          return this.responseText;\n        }\n      });\n      return;\n    }\n    Object.defineProperty(xhrPrototype, 'response', {\n      get: function xmlHttpRequestResponseGet() {\n        if (this.responseType !== 'arraybuffer') {\n          return this.responseText;\n        }\n        var text = this.responseText;\n        var i,\n            n = text.length;\n        var result = new Uint8Array(n);\n        for (i = 0; i < n; ++i) {\n          result[i] = text.charCodeAt(i) & 0xFF;\n        }\n        return result.buffer;\n      }\n    });\n  })();\n  (function checkWindowBtoaCompatibility() {\n    if ('btoa' in globalScope) {\n      return;\n    }\n    var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    globalScope.btoa = function (chars) {\n      var buffer = '';\n      var i, n;\n      for (i = 0, n = chars.length; i < n; i += 3) {\n        var b1 = chars.charCodeAt(i) & 0xFF;\n        var b2 = chars.charCodeAt(i + 1) & 0xFF;\n        var b3 = chars.charCodeAt(i + 2) & 0xFF;\n        var d1 = b1 >> 2,\n            d2 = (b1 & 3) << 4 | b2 >> 4;\n        var d3 = i + 1 < n ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\n        var d4 = i + 2 < n ? b3 & 0x3F : 64;\n        buffer += digits.charAt(d1) + digits.charAt(d2) + digits.charAt(d3) + digits.charAt(d4);\n      }\n      return buffer;\n    };\n  })();\n  (function checkWindowAtobCompatibility() {\n    if ('atob' in globalScope) {\n      return;\n    }\n    var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n    globalScope.atob = function (input) {\n      input = input.replace(/=+$/, '');\n      if (input.length % 4 === 1) {\n        throw new Error('bad atob input');\n      }\n      for (var bc = 0, bs, buffer, idx = 0, output = ''; buffer = input.charAt(idx++); ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n        buffer = digits.indexOf(buffer);\n      }\n      return output;\n    };\n  })();\n  (function checkFunctionPrototypeBindCompatibility() {\n    if (typeof Function.prototype.bind !== 'undefined') {\n      return;\n    }\n    Function.prototype.bind = function functionPrototypeBind(obj) {\n      var fn = this,\n          headArgs = Array.prototype.slice.call(arguments, 1);\n      var bound = function functionPrototypeBindBound() {\n        var args = headArgs.concat(Array.prototype.slice.call(arguments));\n        return fn.apply(obj, args);\n      };\n      return bound;\n    };\n  })();\n  (function checkDatasetProperty() {\n    if (!hasDOM) {\n      return;\n    }\n    var div = document.createElement('div');\n    if ('dataset' in div) {\n      return;\n    }\n    Object.defineProperty(HTMLElement.prototype, 'dataset', {\n      get: function get() {\n        if (this._dataset) {\n          return this._dataset;\n        }\n        var dataset = {};\n        for (var j = 0, jj = this.attributes.length; j < jj; j++) {\n          var attribute = this.attributes[j];\n          if (attribute.name.substring(0, 5) !== 'data-') {\n            continue;\n          }\n          var key = attribute.name.substring(5).replace(/\\-([a-z])/g, function (all, ch) {\n            return ch.toUpperCase();\n          });\n          dataset[key] = attribute.value;\n        }\n        Object.defineProperty(this, '_dataset', {\n          value: dataset,\n          writable: false,\n          enumerable: false\n        });\n        return dataset;\n      },\n\n      enumerable: true\n    });\n  })();\n  (function checkClassListProperty() {\n    function changeList(element, itemName, add, remove) {\n      var s = element.className || '';\n      var list = s.split(/\\s+/g);\n      if (list[0] === '') {\n        list.shift();\n      }\n      var index = list.indexOf(itemName);\n      if (index < 0 && add) {\n        list.push(itemName);\n      }\n      if (index >= 0 && remove) {\n        list.splice(index, 1);\n      }\n      element.className = list.join(' ');\n      return index >= 0;\n    }\n    if (!hasDOM) {\n      return;\n    }\n    var div = document.createElement('div');\n    if ('classList' in div) {\n      return;\n    }\n    var classListPrototype = {\n      add: function add(name) {\n        changeList(this.element, name, true, false);\n      },\n      contains: function contains(name) {\n        return changeList(this.element, name, false, false);\n      },\n      remove: function remove(name) {\n        changeList(this.element, name, false, true);\n      },\n      toggle: function toggle(name) {\n        changeList(this.element, name, true, true);\n      }\n    };\n    Object.defineProperty(HTMLElement.prototype, 'classList', {\n      get: function get() {\n        if (this._classList) {\n          return this._classList;\n        }\n        var classList = Object.create(classListPrototype, {\n          element: {\n            value: this,\n            writable: false,\n            enumerable: true\n          }\n        });\n        Object.defineProperty(this, '_classList', {\n          value: classList,\n          writable: false,\n          enumerable: false\n        });\n        return classList;\n      },\n\n      enumerable: true\n    });\n  })();\n  (function checkWorkerConsoleCompatibility() {\n    if (typeof importScripts === 'undefined' || 'console' in globalScope) {\n      return;\n    }\n    var consoleTimer = {};\n    var workerConsole = {\n      log: function log() {\n        var args = Array.prototype.slice.call(arguments);\n        globalScope.postMessage({\n          targetName: 'main',\n          action: 'console_log',\n          data: args\n        });\n      },\n      error: function error() {\n        var args = Array.prototype.slice.call(arguments);\n        globalScope.postMessage({\n          targetName: 'main',\n          action: 'console_error',\n          data: args\n        });\n      },\n      time: function time(name) {\n        consoleTimer[name] = Date.now();\n      },\n      timeEnd: function timeEnd(name) {\n        var time = consoleTimer[name];\n        if (!time) {\n          throw new Error('Unknown timer name ' + name);\n        }\n        this.log('Timer:', name, Date.now() - time);\n      }\n    };\n    globalScope.console = workerConsole;\n  })();\n  (function checkConsoleCompatibility() {\n    if (!hasDOM) {\n      return;\n    }\n    if (!('console' in window)) {\n      window.console = {\n        log: function log() {},\n        error: function error() {},\n        warn: function warn() {}\n      };\n      return;\n    }\n    if (!('bind' in console.log)) {\n      console.log = function (fn) {\n        return function (msg) {\n          return fn(msg);\n        };\n      }(console.log);\n      console.error = function (fn) {\n        return function (msg) {\n          return fn(msg);\n        };\n      }(console.error);\n      console.warn = function (fn) {\n        return function (msg) {\n          return fn(msg);\n        };\n      }(console.warn);\n      return;\n    }\n  })();\n  (function checkOnClickCompatibility() {\n    function ignoreIfTargetDisabled(event) {\n      if (isDisabled(event.target)) {\n        event.stopPropagation();\n      }\n    }\n    function isDisabled(node) {\n      return node.disabled || node.parentNode && isDisabled(node.parentNode);\n    }\n    if (isOpera) {\n      document.addEventListener('click', ignoreIfTargetDisabled, true);\n    }\n  })();\n  (function checkOnBlobSupport() {\n    if (isIE || isIOSChrome) {\n      PDFJS.disableCreateObjectURL = true;\n    }\n  })();\n  (function checkNavigatorLanguage() {\n    if (typeof navigator === 'undefined') {\n      return;\n    }\n    if ('language' in navigator) {\n      return;\n    }\n    PDFJS.locale = navigator.userLanguage || 'en-US';\n  })();\n  (function checkRangeRequests() {\n    if (isSafari || isAndroidPre3 || isChromeWithRangeBug || isIOS) {\n      PDFJS.disableRange = true;\n      PDFJS.disableStream = true;\n    }\n  })();\n  (function checkHistoryManipulation() {\n    if (!hasDOM) {\n      return;\n    }\n    if (!history.pushState || isAndroidPre3) {\n      PDFJS.disableHistory = true;\n    }\n  })();\n  (function checkSetPresenceInImageData() {\n    if (!hasDOM) {\n      return;\n    }\n    if (window.CanvasPixelArray) {\n      if (typeof window.CanvasPixelArray.prototype.set !== 'function') {\n        window.CanvasPixelArray.prototype.set = function (arr) {\n          for (var i = 0, ii = this.length; i < ii; i++) {\n            this[i] = arr[i];\n          }\n        };\n      }\n    } else {\n      var polyfill = false,\n          versionMatch;\n      if (isChrome) {\n        versionMatch = userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n        polyfill = versionMatch && parseInt(versionMatch[2]) < 21;\n      } else if (isAndroid) {\n        polyfill = isAndroidPre5;\n      } else if (isSafari) {\n        versionMatch = userAgent.match(/Version\\/([0-9]+)\\.([0-9]+)\\.([0-9]+) Safari\\//);\n        polyfill = versionMatch && parseInt(versionMatch[1]) < 6;\n      }\n      if (polyfill) {\n        var contextPrototype = window.CanvasRenderingContext2D.prototype;\n        var createImageData = contextPrototype.createImageData;\n        contextPrototype.createImageData = function (w, h) {\n          var imageData = createImageData.call(this, w, h);\n          imageData.data.set = function (arr) {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n              this[i] = arr[i];\n            }\n          };\n          return imageData;\n        };\n        contextPrototype = null;\n      }\n    }\n  })();\n  (function checkRequestAnimationFrame() {\n    function installFakeAnimationFrameFunctions() {\n      window.requestAnimationFrame = function (callback) {\n        return window.setTimeout(callback, 20);\n      };\n      window.cancelAnimationFrame = function (timeoutID) {\n        window.clearTimeout(timeoutID);\n      };\n    }\n    if (!hasDOM) {\n      return;\n    }\n    if (isIOS) {\n      installFakeAnimationFrameFunctions();\n      return;\n    }\n    if ('requestAnimationFrame' in window) {\n      return;\n    }\n    window.requestAnimationFrame = window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame;\n    if (window.requestAnimationFrame) {\n      return;\n    }\n    installFakeAnimationFrameFunctions();\n  })();\n  (function checkCanvasSizeLimitation() {\n    if (isIOS || isAndroid) {\n      PDFJS.maxCanvasPixels = 5242880;\n    }\n  })();\n  (function checkFullscreenSupport() {\n    if (!hasDOM) {\n      return;\n    }\n    if (isIE && window.parent !== window) {\n      PDFJS.disableFullscreen = true;\n    }\n  })();\n  (function checkCurrentScript() {\n    if (!hasDOM) {\n      return;\n    }\n    if ('currentScript' in document) {\n      return;\n    }\n    Object.defineProperty(document, 'currentScript', {\n      get: function get() {\n        var scripts = document.getElementsByTagName('script');\n        return scripts[scripts.length - 1];\n      },\n\n      enumerable: true,\n      configurable: true\n    });\n  })();\n  (function checkInputTypeNumberAssign() {\n    if (!hasDOM) {\n      return;\n    }\n    var el = document.createElement('input');\n    try {\n      el.type = 'number';\n    } catch (ex) {\n      var inputProto = el.constructor.prototype;\n      var typeProperty = Object.getOwnPropertyDescriptor(inputProto, 'type');\n      Object.defineProperty(inputProto, 'type', {\n        get: function get() {\n          return typeProperty.get.call(this);\n        },\n        set: function set(value) {\n          typeProperty.set.call(this, value === 'number' ? 'text' : value);\n        },\n\n        enumerable: true,\n        configurable: true\n      });\n    }\n  })();\n  (function checkDocumentReadyState() {\n    if (!hasDOM) {\n      return;\n    }\n    if (!document.attachEvent) {\n      return;\n    }\n    var documentProto = document.constructor.prototype;\n    var readyStateProto = Object.getOwnPropertyDescriptor(documentProto, 'readyState');\n    Object.defineProperty(documentProto, 'readyState', {\n      get: function get() {\n        var value = readyStateProto.get.call(this);\n        return value === 'interactive' ? 'loading' : value;\n      },\n      set: function set(value) {\n        readyStateProto.set.call(this, value);\n      },\n\n      enumerable: true,\n      configurable: true\n    });\n  })();\n  (function checkChildNodeRemove() {\n    if (!hasDOM) {\n      return;\n    }\n    if (typeof Element.prototype.remove !== 'undefined') {\n      return;\n    }\n    Element.prototype.remove = function () {\n      if (this.parentNode) {\n        this.parentNode.removeChild(this);\n      }\n    };\n  })();\n  (function checkNumberIsNaN() {\n    if (Number.isNaN) {\n      return;\n    }\n    Number.isNaN = __w_pdfjs_require__(98);\n  })();\n  (function checkNumberIsInteger() {\n    if (Number.isInteger) {\n      return;\n    }\n    Number.isInteger = __w_pdfjs_require__(100);\n  })();\n  (function checkPromise() {\n    if (globalScope.Promise) {\n      return;\n    }\n    globalScope.Promise = __w_pdfjs_require__(103);\n  })();\n  (function checkWeakMap() {\n    if (globalScope.WeakMap) {\n      return;\n    }\n    globalScope.WeakMap = __w_pdfjs_require__(113);\n  })();\n  (function checkURLConstructor() {\n    var hasWorkingUrl = false;\n    try {\n      if (typeof URL === 'function' && _typeof(URL.prototype) === 'object' && 'origin' in URL.prototype) {\n        var u = new URL('b', 'http://a');\n        u.pathname = 'c%20d';\n        hasWorkingUrl = u.href === 'http://a/c%20d';\n      }\n    } catch (e) {}\n    if (hasWorkingUrl) {\n      return;\n    }\n    var relative = Object.create(null);\n    relative['ftp'] = 21;\n    relative['file'] = 0;\n    relative['gopher'] = 70;\n    relative['http'] = 80;\n    relative['https'] = 443;\n    relative['ws'] = 80;\n    relative['wss'] = 443;\n    var relativePathDotMapping = Object.create(null);\n    relativePathDotMapping['%2e'] = '.';\n    relativePathDotMapping['.%2e'] = '..';\n    relativePathDotMapping['%2e.'] = '..';\n    relativePathDotMapping['%2e%2e'] = '..';\n    function isRelativeScheme(scheme) {\n      return relative[scheme] !== undefined;\n    }\n    function invalid() {\n      clear.call(this);\n      this._isInvalid = true;\n    }\n    function IDNAToASCII(h) {\n      if (h === '') {\n        invalid.call(this);\n      }\n      return h.toLowerCase();\n    }\n    function percentEscape(c) {\n      var unicode = c.charCodeAt(0);\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x3F, 0x60].indexOf(unicode) === -1) {\n        return c;\n      }\n      return encodeURIComponent(c);\n    }\n    function percentEscapeQuery(c) {\n      var unicode = c.charCodeAt(0);\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x60].indexOf(unicode) === -1) {\n        return c;\n      }\n      return encodeURIComponent(c);\n    }\n    var EOF,\n        ALPHA = /[a-zA-Z]/,\n        ALPHANUMERIC = /[a-zA-Z0-9\\+\\-\\.]/;\n    function parse(input, stateOverride, base) {\n      function err(message) {\n        errors.push(message);\n      }\n      var state = stateOverride || 'scheme start',\n          cursor = 0,\n          buffer = '',\n          seenAt = false,\n          seenBracket = false,\n          errors = [];\n      loop: while ((input[cursor - 1] !== EOF || cursor === 0) && !this._isInvalid) {\n        var c = input[cursor];\n        switch (state) {\n          case 'scheme start':\n            if (c && ALPHA.test(c)) {\n              buffer += c.toLowerCase();\n              state = 'scheme';\n            } else if (!stateOverride) {\n              buffer = '';\n              state = 'no scheme';\n              continue;\n            } else {\n              err('Invalid scheme.');\n              break loop;\n            }\n            break;\n          case 'scheme':\n            if (c && ALPHANUMERIC.test(c)) {\n              buffer += c.toLowerCase();\n            } else if (c === ':') {\n              this._scheme = buffer;\n              buffer = '';\n              if (stateOverride) {\n                break loop;\n              }\n              if (isRelativeScheme(this._scheme)) {\n                this._isRelative = true;\n              }\n              if (this._scheme === 'file') {\n                state = 'relative';\n              } else if (this._isRelative && base && base._scheme === this._scheme) {\n                state = 'relative or authority';\n              } else if (this._isRelative) {\n                state = 'authority first slash';\n              } else {\n                state = 'scheme data';\n              }\n            } else if (!stateOverride) {\n              buffer = '';\n              cursor = 0;\n              state = 'no scheme';\n              continue;\n            } else if (c === EOF) {\n              break loop;\n            } else {\n              err('Code point not allowed in scheme: ' + c);\n              break loop;\n            }\n            break;\n          case 'scheme data':\n            if (c === '?') {\n              this._query = '?';\n              state = 'query';\n            } else if (c === '#') {\n              this._fragment = '#';\n              state = 'fragment';\n            } else {\n              if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n                this._schemeData += percentEscape(c);\n              }\n            }\n            break;\n          case 'no scheme':\n            if (!base || !isRelativeScheme(base._scheme)) {\n              err('Missing scheme.');\n              invalid.call(this);\n            } else {\n              state = 'relative';\n              continue;\n            }\n            break;\n          case 'relative or authority':\n            if (c === '/' && input[cursor + 1] === '/') {\n              state = 'authority ignore slashes';\n            } else {\n              err('Expected /, got: ' + c);\n              state = 'relative';\n              continue;\n            }\n            break;\n          case 'relative':\n            this._isRelative = true;\n            if (this._scheme !== 'file') {\n              this._scheme = base._scheme;\n            }\n            if (c === EOF) {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = base._query;\n              this._username = base._username;\n              this._password = base._password;\n              break loop;\n            } else if (c === '/' || c === '\\\\') {\n              if (c === '\\\\') {\n                err('\\\\ is an invalid code point.');\n              }\n              state = 'relative slash';\n            } else if (c === '?') {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = '?';\n              this._username = base._username;\n              this._password = base._password;\n              state = 'query';\n            } else if (c === '#') {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = base._query;\n              this._fragment = '#';\n              this._username = base._username;\n              this._password = base._password;\n              state = 'fragment';\n            } else {\n              var nextC = input[cursor + 1];\n              var nextNextC = input[cursor + 2];\n              if (this._scheme !== 'file' || !ALPHA.test(c) || nextC !== ':' && nextC !== '|' || nextNextC !== EOF && nextNextC !== '/' && nextNextC !== '\\\\' && nextNextC !== '?' && nextNextC !== '#') {\n                this._host = base._host;\n                this._port = base._port;\n                this._username = base._username;\n                this._password = base._password;\n                this._path = base._path.slice();\n                this._path.pop();\n              }\n              state = 'relative path';\n              continue;\n            }\n            break;\n          case 'relative slash':\n            if (c === '/' || c === '\\\\') {\n              if (c === '\\\\') {\n                err('\\\\ is an invalid code point.');\n              }\n              if (this._scheme === 'file') {\n                state = 'file host';\n              } else {\n                state = 'authority ignore slashes';\n              }\n            } else {\n              if (this._scheme !== 'file') {\n                this._host = base._host;\n                this._port = base._port;\n                this._username = base._username;\n                this._password = base._password;\n              }\n              state = 'relative path';\n              continue;\n            }\n            break;\n          case 'authority first slash':\n            if (c === '/') {\n              state = 'authority second slash';\n            } else {\n              err('Expected \\'/\\', got: ' + c);\n              state = 'authority ignore slashes';\n              continue;\n            }\n            break;\n          case 'authority second slash':\n            state = 'authority ignore slashes';\n            if (c !== '/') {\n              err('Expected \\'/\\', got: ' + c);\n              continue;\n            }\n            break;\n          case 'authority ignore slashes':\n            if (c !== '/' && c !== '\\\\') {\n              state = 'authority';\n              continue;\n            } else {\n              err('Expected authority, got: ' + c);\n            }\n            break;\n          case 'authority':\n            if (c === '@') {\n              if (seenAt) {\n                err('@ already seen.');\n                buffer += '%40';\n              }\n              seenAt = true;\n              for (var i = 0; i < buffer.length; i++) {\n                var cp = buffer[i];\n                if (cp === '\\t' || cp === '\\n' || cp === '\\r') {\n                  err('Invalid whitespace in authority.');\n                  continue;\n                }\n                if (cp === ':' && this._password === null) {\n                  this._password = '';\n                  continue;\n                }\n                var tempC = percentEscape(cp);\n                if (this._password !== null) {\n                  this._password += tempC;\n                } else {\n                  this._username += tempC;\n                }\n              }\n              buffer = '';\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              cursor -= buffer.length;\n              buffer = '';\n              state = 'host';\n              continue;\n            } else {\n              buffer += c;\n            }\n            break;\n          case 'file host':\n            if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              if (buffer.length === 2 && ALPHA.test(buffer[0]) && (buffer[1] === ':' || buffer[1] === '|')) {\n                state = 'relative path';\n              } else if (buffer.length === 0) {\n                state = 'relative path start';\n              } else {\n                this._host = IDNAToASCII.call(this, buffer);\n                buffer = '';\n                state = 'relative path start';\n              }\n              continue;\n            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n              err('Invalid whitespace in file host.');\n            } else {\n              buffer += c;\n            }\n            break;\n          case 'host':\n          case 'hostname':\n            if (c === ':' && !seenBracket) {\n              this._host = IDNAToASCII.call(this, buffer);\n              buffer = '';\n              state = 'port';\n              if (stateOverride === 'hostname') {\n                break loop;\n              }\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              this._host = IDNAToASCII.call(this, buffer);\n              buffer = '';\n              state = 'relative path start';\n              if (stateOverride) {\n                break loop;\n              }\n              continue;\n            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              if (c === '[') {\n                seenBracket = true;\n              } else if (c === ']') {\n                seenBracket = false;\n              }\n              buffer += c;\n            } else {\n              err('Invalid code point in host/hostname: ' + c);\n            }\n            break;\n          case 'port':\n            if (/[0-9]/.test(c)) {\n              buffer += c;\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#' || stateOverride) {\n              if (buffer !== '') {\n                var temp = parseInt(buffer, 10);\n                if (temp !== relative[this._scheme]) {\n                  this._port = temp + '';\n                }\n                buffer = '';\n              }\n              if (stateOverride) {\n                break loop;\n              }\n              state = 'relative path start';\n              continue;\n            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n              err('Invalid code point in port: ' + c);\n            } else {\n              invalid.call(this);\n            }\n            break;\n          case 'relative path start':\n            if (c === '\\\\') {\n              err('\\'\\\\\\' not allowed in path.');\n            }\n            state = 'relative path';\n            if (c !== '/' && c !== '\\\\') {\n              continue;\n            }\n            break;\n          case 'relative path':\n            if (c === EOF || c === '/' || c === '\\\\' || !stateOverride && (c === '?' || c === '#')) {\n              if (c === '\\\\') {\n                err('\\\\ not allowed in relative path.');\n              }\n              var tmp;\n              if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {\n                buffer = tmp;\n              }\n              if (buffer === '..') {\n                this._path.pop();\n                if (c !== '/' && c !== '\\\\') {\n                  this._path.push('');\n                }\n              } else if (buffer === '.' && c !== '/' && c !== '\\\\') {\n                this._path.push('');\n              } else if (buffer !== '.') {\n                if (this._scheme === 'file' && this._path.length === 0 && buffer.length === 2 && ALPHA.test(buffer[0]) && buffer[1] === '|') {\n                  buffer = buffer[0] + ':';\n                }\n                this._path.push(buffer);\n              }\n              buffer = '';\n              if (c === '?') {\n                this._query = '?';\n                state = 'query';\n              } else if (c === '#') {\n                this._fragment = '#';\n                state = 'fragment';\n              }\n            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              buffer += percentEscape(c);\n            }\n            break;\n          case 'query':\n            if (!stateOverride && c === '#') {\n              this._fragment = '#';\n              state = 'fragment';\n            } else if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              this._query += percentEscapeQuery(c);\n            }\n            break;\n          case 'fragment':\n            if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              this._fragment += c;\n            }\n            break;\n        }\n        cursor++;\n      }\n    }\n    function clear() {\n      this._scheme = '';\n      this._schemeData = '';\n      this._username = '';\n      this._password = null;\n      this._host = '';\n      this._port = '';\n      this._path = [];\n      this._query = '';\n      this._fragment = '';\n      this._isInvalid = false;\n      this._isRelative = false;\n    }\n    function JURL(url, base) {\n      if (base !== undefined && !(base instanceof JURL)) {\n        base = new JURL(String(base));\n      }\n      this._url = url;\n      clear.call(this);\n      var input = url.replace(/^[ \\t\\r\\n\\f]+|[ \\t\\r\\n\\f]+$/g, '');\n      parse.call(this, input, null, base);\n    }\n    JURL.prototype = {\n      toString: function toString() {\n        return this.href;\n      },\n\n      get href() {\n        if (this._isInvalid) {\n          return this._url;\n        }\n        var authority = '';\n        if (this._username !== '' || this._password !== null) {\n          authority = this._username + (this._password !== null ? ':' + this._password : '') + '@';\n        }\n        return this.protocol + (this._isRelative ? '//' + authority + this.host : '') + this.pathname + this._query + this._fragment;\n      },\n      set href(value) {\n        clear.call(this);\n        parse.call(this, value);\n      },\n      get protocol() {\n        return this._scheme + ':';\n      },\n      set protocol(value) {\n        if (this._isInvalid) {\n          return;\n        }\n        parse.call(this, value + ':', 'scheme start');\n      },\n      get host() {\n        return this._isInvalid ? '' : this._port ? this._host + ':' + this._port : this._host;\n      },\n      set host(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'host');\n      },\n      get hostname() {\n        return this._host;\n      },\n      set hostname(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'hostname');\n      },\n      get port() {\n        return this._port;\n      },\n      set port(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'port');\n      },\n      get pathname() {\n        return this._isInvalid ? '' : this._isRelative ? '/' + this._path.join('/') : this._schemeData;\n      },\n      set pathname(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        this._path = [];\n        parse.call(this, value, 'relative path start');\n      },\n      get search() {\n        return this._isInvalid || !this._query || this._query === '?' ? '' : this._query;\n      },\n      set search(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        this._query = '?';\n        if (value[0] === '?') {\n          value = value.slice(1);\n        }\n        parse.call(this, value, 'query');\n      },\n      get hash() {\n        return this._isInvalid || !this._fragment || this._fragment === '#' ? '' : this._fragment;\n      },\n      set hash(value) {\n        if (this._isInvalid) {\n          return;\n        }\n        this._fragment = '#';\n        if (value[0] === '#') {\n          value = value.slice(1);\n        }\n        parse.call(this, value, 'fragment');\n      },\n      get origin() {\n        var host;\n        if (this._isInvalid || !this._scheme) {\n          return '';\n        }\n        switch (this._scheme) {\n          case 'data':\n          case 'file':\n          case 'javascript':\n          case 'mailto':\n            return 'null';\n          case 'blob':\n            try {\n              return new JURL(this._schemeData).origin || 'null';\n            } catch (_) {}\n            return 'null';\n        }\n        host = this.host;\n        if (!host) {\n          return '';\n        }\n        return this._scheme + '://' + host;\n      }\n    };\n    var OriginalURL = globalScope.URL;\n    if (OriginalURL) {\n      JURL.createObjectURL = function (blob) {\n        return OriginalURL.createObjectURL.apply(OriginalURL, arguments);\n      };\n      JURL.revokeObjectURL = function (url) {\n        OriginalURL.revokeObjectURL(url);\n      };\n    }\n    globalScope.URL = JURL;\n  })();\n}\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = typeof window !== 'undefined' && window.Math === Math ? window : typeof global !== 'undefined' && global.Math === Math ? global : typeof self !== 'undefined' && self.Math === Math ? self : {};\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(87);\nmodule.exports = __w_pdfjs_require__(6).Uint8ClampedArray;\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(88)('Uint8', 1, function (init) {\n  return function Uint8ClampedArray(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n}, true);\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nif (__w_pdfjs_require__(10)) {\n  var LIBRARY = __w_pdfjs_require__(21);\n  var global = __w_pdfjs_require__(1);\n  var fails = __w_pdfjs_require__(11);\n  var $export = __w_pdfjs_require__(7);\n  var $typed = __w_pdfjs_require__(49);\n  var $buffer = __w_pdfjs_require__(89);\n  var ctx = __w_pdfjs_require__(13);\n  var anInstance = __w_pdfjs_require__(24);\n  var propertyDesc = __w_pdfjs_require__(29);\n  var hide = __w_pdfjs_require__(8);\n  var redefineAll = __w_pdfjs_require__(23);\n  var toInteger = __w_pdfjs_require__(18);\n  var toLength = __w_pdfjs_require__(14);\n  var toIndex = __w_pdfjs_require__(50);\n  var toAbsoluteIndex = __w_pdfjs_require__(31);\n  var toPrimitive = __w_pdfjs_require__(36);\n  var has = __w_pdfjs_require__(12);\n  var classof = __w_pdfjs_require__(32);\n  var isObject = __w_pdfjs_require__(3);\n  var toObject = __w_pdfjs_require__(19);\n  var isArrayIter = __w_pdfjs_require__(56);\n  var create = __w_pdfjs_require__(57);\n  var getPrototypeOf = __w_pdfjs_require__(59);\n  var gOPN = __w_pdfjs_require__(51).f;\n  var getIterFn = __w_pdfjs_require__(60);\n  var uid = __w_pdfjs_require__(17);\n  var wks = __w_pdfjs_require__(4);\n  var createArrayMethod = __w_pdfjs_require__(42);\n  var createArrayIncludes = __w_pdfjs_require__(53);\n  var speciesConstructor = __w_pdfjs_require__(43);\n  var ArrayIterators = __w_pdfjs_require__(61);\n  var Iterators = __w_pdfjs_require__(20);\n  var $iterDetect = __w_pdfjs_require__(44);\n  var setSpecies = __w_pdfjs_require__(63);\n  var arrayFill = __w_pdfjs_require__(55);\n  var arrayCopyWithin = __w_pdfjs_require__(97);\n  var $DP = __w_pdfjs_require__(15);\n  var $GOPD = __w_pdfjs_require__(64);\n  var dP = $DP.f;\n  var gOPD = $GOPD.f;\n  var RangeError = global.RangeError;\n  var TypeError = global.TypeError;\n  var Uint8Array = global.Uint8Array;\n  var ARRAY_BUFFER = 'ArrayBuffer';\n  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;\n  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';\n  var PROTOTYPE = 'prototype';\n  var ArrayProto = Array[PROTOTYPE];\n  var $ArrayBuffer = $buffer.ArrayBuffer;\n  var $DataView = $buffer.DataView;\n  var arrayForEach = createArrayMethod(0);\n  var arrayFilter = createArrayMethod(2);\n  var arraySome = createArrayMethod(3);\n  var arrayEvery = createArrayMethod(4);\n  var arrayFind = createArrayMethod(5);\n  var arrayFindIndex = createArrayMethod(6);\n  var arrayIncludes = createArrayIncludes(true);\n  var arrayIndexOf = createArrayIncludes(false);\n  var arrayValues = ArrayIterators.values;\n  var arrayKeys = ArrayIterators.keys;\n  var arrayEntries = ArrayIterators.entries;\n  var arrayLastIndexOf = ArrayProto.lastIndexOf;\n  var arrayReduce = ArrayProto.reduce;\n  var arrayReduceRight = ArrayProto.reduceRight;\n  var arrayJoin = ArrayProto.join;\n  var arraySort = ArrayProto.sort;\n  var arraySlice = ArrayProto.slice;\n  var arrayToString = ArrayProto.toString;\n  var arrayToLocaleString = ArrayProto.toLocaleString;\n  var ITERATOR = wks('iterator');\n  var TAG = wks('toStringTag');\n  var TYPED_CONSTRUCTOR = uid('typed_constructor');\n  var DEF_CONSTRUCTOR = uid('def_constructor');\n  var ALL_CONSTRUCTORS = $typed.CONSTR;\n  var TYPED_ARRAY = $typed.TYPED;\n  var VIEW = $typed.VIEW;\n  var WRONG_LENGTH = 'Wrong length!';\n  var $map = createArrayMethod(1, function (O, length) {\n    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);\n  });\n  var LITTLE_ENDIAN = fails(function () {\n    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;\n  });\n  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {\n    new Uint8Array(1).set({});\n  });\n  var toOffset = function toOffset(it, BYTES) {\n    var offset = toInteger(it);\n    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');\n    return offset;\n  };\n  var validate = function validate(it) {\n    if (isObject(it) && TYPED_ARRAY in it) return it;\n    throw TypeError(it + ' is not a typed array!');\n  };\n  var allocate = function allocate(C, length) {\n    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {\n      throw TypeError('It is not a typed array constructor!');\n    }\n    return new C(length);\n  };\n  var speciesFromList = function speciesFromList(O, list) {\n    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);\n  };\n  var fromList = function fromList(C, list) {\n    var index = 0;\n    var length = list.length;\n    var result = allocate(C, length);\n    while (length > index) {\n      result[index] = list[index++];\n    }return result;\n  };\n  var addGetter = function addGetter(it, key, internal) {\n    dP(it, key, {\n      get: function get() {\n        return this._d[internal];\n      }\n    });\n  };\n  var $from = function from(source) {\n    var O = toObject(source);\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var iterFn = getIterFn(O);\n    var i, length, values, result, step, iterator;\n    if (iterFn != undefined && !isArrayIter(iterFn)) {\n      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {\n        values.push(step.value);\n      }\n      O = values;\n    }\n    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);\n    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {\n      result[i] = mapping ? mapfn(O[i], i) : O[i];\n    }\n    return result;\n  };\n  var $of = function of() {\n    var index = 0;\n    var length = arguments.length;\n    var result = allocate(this, length);\n    while (length > index) {\n      result[index] = arguments[index++];\n    }return result;\n  };\n  var TO_LOCALE_BUG = !!Uint8Array && fails(function () {\n    arrayToLocaleString.call(new Uint8Array(1));\n  });\n  var $toLocaleString = function toLocaleString() {\n    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);\n  };\n  var proto = {\n    copyWithin: function copyWithin(target, start) {\n      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);\n    },\n    every: function every(callbackfn) {\n      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    fill: function fill(value) {\n      return arrayFill.apply(validate(this), arguments);\n    },\n    filter: function filter(callbackfn) {\n      return speciesFromList(this, arrayFilter(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined));\n    },\n    find: function find(predicate) {\n      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    findIndex: function findIndex(predicate) {\n      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    forEach: function forEach(callbackfn) {\n      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    indexOf: function indexOf(searchElement) {\n      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    includes: function includes(searchElement) {\n      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    join: function join(separator) {\n      return arrayJoin.apply(validate(this), arguments);\n    },\n    lastIndexOf: function lastIndexOf(searchElement) {\n      return arrayLastIndexOf.apply(validate(this), arguments);\n    },\n    map: function map(mapfn) {\n      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    reduce: function reduce(callbackfn) {\n      return arrayReduce.apply(validate(this), arguments);\n    },\n    reduceRight: function reduceRight(callbackfn) {\n      return arrayReduceRight.apply(validate(this), arguments);\n    },\n    reverse: function reverse() {\n      var that = this;\n      var length = validate(that).length;\n      var middle = Math.floor(length / 2);\n      var index = 0;\n      var value;\n      while (index < middle) {\n        value = that[index];\n        that[index++] = that[--length];\n        that[length] = value;\n      }\n      return that;\n    },\n    some: function some(callbackfn) {\n      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    },\n    sort: function sort(comparefn) {\n      return arraySort.call(validate(this), comparefn);\n    },\n    subarray: function subarray(begin, end) {\n      var O = validate(this);\n      var length = O.length;\n      var $begin = toAbsoluteIndex(begin, length);\n      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(O.buffer, O.byteOffset + $begin * O.BYTES_PER_ELEMENT, toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin));\n    }\n  };\n  var $slice = function slice(start, end) {\n    return speciesFromList(this, arraySlice.call(validate(this), start, end));\n  };\n  var $set = function set(arrayLike) {\n    validate(this);\n    var offset = toOffset(arguments[1], 1);\n    var length = this.length;\n    var src = toObject(arrayLike);\n    var len = toLength(src.length);\n    var index = 0;\n    if (len + offset > length) throw RangeError(WRONG_LENGTH);\n    while (index < len) {\n      this[offset + index] = src[index++];\n    }\n  };\n  var $iterators = {\n    entries: function entries() {\n      return arrayEntries.call(validate(this));\n    },\n    keys: function keys() {\n      return arrayKeys.call(validate(this));\n    },\n    values: function values() {\n      return arrayValues.call(validate(this));\n    }\n  };\n  var isTAIndex = function isTAIndex(target, key) {\n    return isObject(target) && target[TYPED_ARRAY] && (typeof key === 'undefined' ? 'undefined' : _typeof(key)) != 'symbol' && key in target && String(+key) == String(key);\n  };\n  var $getDesc = function getOwnPropertyDescriptor(target, key) {\n    return isTAIndex(target, key = toPrimitive(key, true)) ? propertyDesc(2, target[key]) : gOPD(target, key);\n  };\n  var $setDesc = function defineProperty(target, key, desc) {\n    if (isTAIndex(target, key = toPrimitive(key, true)) && isObject(desc) && has(desc, 'value') && !has(desc, 'get') && !has(desc, 'set') && !desc.configurable && (!has(desc, 'writable') || desc.writable) && (!has(desc, 'enumerable') || desc.enumerable)) {\n      target[key] = desc.value;\n      return target;\n    }\n    return dP(target, key, desc);\n  };\n  if (!ALL_CONSTRUCTORS) {\n    $GOPD.f = $getDesc;\n    $DP.f = $setDesc;\n  }\n  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {\n    getOwnPropertyDescriptor: $getDesc,\n    defineProperty: $setDesc\n  });\n  if (fails(function () {\n    arrayToString.call({});\n  })) {\n    arrayToString = arrayToLocaleString = function toString() {\n      return arrayJoin.call(this);\n    };\n  }\n  var $TypedArrayPrototype$ = redefineAll({}, proto);\n  redefineAll($TypedArrayPrototype$, $iterators);\n  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);\n  redefineAll($TypedArrayPrototype$, {\n    slice: $slice,\n    set: $set,\n    constructor: function constructor() {},\n    toString: arrayToString,\n    toLocaleString: $toLocaleString\n  });\n  addGetter($TypedArrayPrototype$, 'buffer', 'b');\n  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');\n  addGetter($TypedArrayPrototype$, 'byteLength', 'l');\n  addGetter($TypedArrayPrototype$, 'length', 'e');\n  dP($TypedArrayPrototype$, TAG, {\n    get: function get() {\n      return this[TYPED_ARRAY];\n    }\n  });\n  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {\n    CLAMPED = !!CLAMPED;\n    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';\n    var GETTER = 'get' + KEY;\n    var SETTER = 'set' + KEY;\n    var TypedArray = global[NAME];\n    var Base = TypedArray || {};\n    var TAC = TypedArray && getPrototypeOf(TypedArray);\n    var FORCED = !TypedArray || !$typed.ABV;\n    var O = {};\n    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];\n    var getter = function getter(that, index) {\n      var data = that._d;\n      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);\n    };\n    var setter = function setter(that, index, value) {\n      var data = that._d;\n      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;\n      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);\n    };\n    var addElement = function addElement(that, index) {\n      dP(that, index, {\n        get: function get() {\n          return getter(this, index);\n        },\n        set: function set(value) {\n          return setter(this, index, value);\n        },\n        enumerable: true\n      });\n    };\n    if (FORCED) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME, '_d');\n        var index = 0;\n        var offset = 0;\n        var buffer, byteLength, length, klass;\n        if (!isObject(data)) {\n          length = toIndex(data);\n          byteLength = length * BYTES;\n          buffer = new $ArrayBuffer(byteLength);\n        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          buffer = data;\n          offset = toOffset($offset, BYTES);\n          var $len = data.byteLength;\n          if ($length === undefined) {\n            if ($len % BYTES) throw RangeError(WRONG_LENGTH);\n            byteLength = $len - offset;\n            if (byteLength < 0) throw RangeError(WRONG_LENGTH);\n          } else {\n            byteLength = toLength($length) * BYTES;\n            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);\n          }\n          length = byteLength / BYTES;\n        } else if (TYPED_ARRAY in data) {\n          return fromList(TypedArray, data);\n        } else {\n          return $from.call(TypedArray, data);\n        }\n        hide(that, '_d', {\n          b: buffer,\n          o: offset,\n          l: byteLength,\n          e: length,\n          v: new $DataView(buffer)\n        });\n        while (index < length) {\n          addElement(that, index++);\n        }\n      });\n      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);\n      hide(TypedArrayPrototype, 'constructor', TypedArray);\n    } else if (!fails(function () {\n      TypedArray(1);\n    }) || !fails(function () {\n      new TypedArray(-1);\n    }) || !$iterDetect(function (iter) {\n      new TypedArray();\n      new TypedArray(null);\n      new TypedArray(1.5);\n      new TypedArray(iter);\n    }, true)) {\n      TypedArray = wrapper(function (that, data, $offset, $length) {\n        anInstance(that, TypedArray, NAME);\n        var klass;\n        if (!isObject(data)) return new Base(toIndex(data));\n        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {\n          return $length !== undefined ? new Base(data, toOffset($offset, BYTES), $length) : $offset !== undefined ? new Base(data, toOffset($offset, BYTES)) : new Base(data);\n        }\n        if (TYPED_ARRAY in data) return fromList(TypedArray, data);\n        return $from.call(TypedArray, data);\n      });\n      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {\n        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);\n      });\n      TypedArray[PROTOTYPE] = TypedArrayPrototype;\n      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;\n    }\n    var $nativeIterator = TypedArrayPrototype[ITERATOR];\n    var CORRECT_ITER_NAME = !!$nativeIterator && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);\n    var $iterator = $iterators.values;\n    hide(TypedArray, TYPED_CONSTRUCTOR, true);\n    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);\n    hide(TypedArrayPrototype, VIEW, true);\n    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);\n    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {\n      dP(TypedArrayPrototype, TAG, {\n        get: function get() {\n          return NAME;\n        }\n      });\n    }\n    O[NAME] = TypedArray;\n    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);\n    $export($export.S, NAME, { BYTES_PER_ELEMENT: BYTES });\n    $export($export.S + $export.F * fails(function () {\n      Base.of.call(TypedArray, 1);\n    }), NAME, {\n      from: $from,\n      of: $of\n    });\n    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);\n    $export($export.P, NAME, proto);\n    setSpecies(NAME);\n    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });\n    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);\n    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;\n    $export($export.P + $export.F * fails(function () {\n      new TypedArray(1).slice();\n    }), NAME, { slice: $slice });\n    $export($export.P + $export.F * (fails(function () {\n      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();\n    }) || !fails(function () {\n      TypedArrayPrototype.toLocaleString.call([1, 2]);\n    })), NAME, { toLocaleString: $toLocaleString });\n    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;\n    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);\n  };\n} else module.exports = function () {};\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(1);\nvar DESCRIPTORS = __w_pdfjs_require__(10);\nvar LIBRARY = __w_pdfjs_require__(21);\nvar $typed = __w_pdfjs_require__(49);\nvar hide = __w_pdfjs_require__(8);\nvar redefineAll = __w_pdfjs_require__(23);\nvar fails = __w_pdfjs_require__(11);\nvar anInstance = __w_pdfjs_require__(24);\nvar toInteger = __w_pdfjs_require__(18);\nvar toLength = __w_pdfjs_require__(14);\nvar toIndex = __w_pdfjs_require__(50);\nvar gOPN = __w_pdfjs_require__(51).f;\nvar dP = __w_pdfjs_require__(15).f;\nvar arrayFill = __w_pdfjs_require__(55);\nvar setToStringTag = __w_pdfjs_require__(26);\nvar ARRAY_BUFFER = 'ArrayBuffer';\nvar DATA_VIEW = 'DataView';\nvar PROTOTYPE = 'prototype';\nvar WRONG_LENGTH = 'Wrong length!';\nvar WRONG_INDEX = 'Wrong index!';\nvar $ArrayBuffer = global[ARRAY_BUFFER];\nvar $DataView = global[DATA_VIEW];\nvar Math = global.Math;\nvar RangeError = global.RangeError;\nvar Infinity = global.Infinity;\nvar BaseBuffer = $ArrayBuffer;\nvar abs = Math.abs;\nvar pow = Math.pow;\nvar floor = Math.floor;\nvar log = Math.log;\nvar LN2 = Math.LN2;\nvar BUFFER = 'buffer';\nvar BYTE_LENGTH = 'byteLength';\nvar BYTE_OFFSET = 'byteOffset';\nvar $BUFFER = DESCRIPTORS ? '_b' : BUFFER;\nvar $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;\nvar $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;\nfunction packIEEE754(value, mLen, nBytes) {\n  var buffer = new Array(nBytes);\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;\n  var i = 0;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  var e, m, c;\n  value = abs(value);\n  if (value != value || value === Infinity) {\n    m = value != value ? 1 : 0;\n    e = eMax;\n  } else {\n    e = floor(log(value) / LN2);\n    if (value * (c = pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * pow(2, 1 - eBias);\n    }\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * pow(2, eBias - 1) * pow(2, mLen);\n      e = 0;\n    }\n  }\n  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8) {}\n  e = e << mLen | m;\n  eLen += mLen;\n  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8) {}\n  buffer[--i] |= s * 128;\n  return buffer;\n}\nfunction unpackIEEE754(buffer, mLen, nBytes) {\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = eLen - 7;\n  var i = nBytes - 1;\n  var s = buffer[i--];\n  var e = s & 127;\n  var m;\n  s >>= 7;\n  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8) {}\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8) {}\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : s ? -Infinity : Infinity;\n  } else {\n    m = m + pow(2, mLen);\n    e = e - eBias;\n  }\n  return (s ? -1 : 1) * m * pow(2, e - mLen);\n}\nfunction unpackI32(bytes) {\n  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];\n}\nfunction packI8(it) {\n  return [it & 0xff];\n}\nfunction packI16(it) {\n  return [it & 0xff, it >> 8 & 0xff];\n}\nfunction packI32(it) {\n  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];\n}\nfunction packF64(it) {\n  return packIEEE754(it, 52, 8);\n}\nfunction packF32(it) {\n  return packIEEE754(it, 23, 4);\n}\nfunction addGetter(C, key, internal) {\n  dP(C[PROTOTYPE], key, {\n    get: function get() {\n      return this[internal];\n    }\n  });\n}\nfunction get(view, bytes, index, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = store.slice(start, start + bytes);\n  return isLittleEndian ? pack : pack.reverse();\n}\nfunction set(view, bytes, index, conversion, value, isLittleEndian) {\n  var numIndex = +index;\n  var intIndex = toIndex(numIndex);\n  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);\n  var store = view[$BUFFER]._b;\n  var start = intIndex + view[$OFFSET];\n  var pack = conversion(+value);\n  for (var i = 0; i < bytes; i++) {\n    store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];\n  }\n}\nif (!$typed.ABV) {\n  $ArrayBuffer = function ArrayBuffer(length) {\n    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);\n    var byteLength = toIndex(length);\n    this._b = arrayFill.call(new Array(byteLength), 0);\n    this[$LENGTH] = byteLength;\n  };\n  $DataView = function DataView(buffer, byteOffset, byteLength) {\n    anInstance(this, $DataView, DATA_VIEW);\n    anInstance(buffer, $ArrayBuffer, DATA_VIEW);\n    var bufferLength = buffer[$LENGTH];\n    var offset = toInteger(byteOffset);\n    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');\n    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);\n    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);\n    this[$BUFFER] = buffer;\n    this[$OFFSET] = offset;\n    this[$LENGTH] = byteLength;\n  };\n  if (DESCRIPTORS) {\n    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');\n    addGetter($DataView, BUFFER, '_b');\n    addGetter($DataView, BYTE_LENGTH, '_l');\n    addGetter($DataView, BYTE_OFFSET, '_o');\n  }\n  redefineAll($DataView[PROTOTYPE], {\n    getInt8: function getInt8(byteOffset) {\n      return get(this, 1, byteOffset)[0] << 24 >> 24;\n    },\n    getUint8: function getUint8(byteOffset) {\n      return get(this, 1, byteOffset)[0];\n    },\n    getInt16: function getInt16(byteOffset) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;\n    },\n    getUint16: function getUint16(byteOffset) {\n      var bytes = get(this, 2, byteOffset, arguments[1]);\n      return bytes[1] << 8 | bytes[0];\n    },\n    getInt32: function getInt32(byteOffset) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1]));\n    },\n    getUint32: function getUint32(byteOffset) {\n      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;\n    },\n    getFloat32: function getFloat32(byteOffset) {\n      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);\n    },\n    getFloat64: function getFloat64(byteOffset) {\n      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);\n    },\n    setInt8: function setInt8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      set(this, 1, byteOffset, packI8, value);\n    },\n    setInt16: function setInt16(byteOffset, value) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setUint16: function setUint16(byteOffset, value) {\n      set(this, 2, byteOffset, packI16, value, arguments[2]);\n    },\n    setInt32: function setInt32(byteOffset, value) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setUint32: function setUint32(byteOffset, value) {\n      set(this, 4, byteOffset, packI32, value, arguments[2]);\n    },\n    setFloat32: function setFloat32(byteOffset, value) {\n      set(this, 4, byteOffset, packF32, value, arguments[2]);\n    },\n    setFloat64: function setFloat64(byteOffset, value) {\n      set(this, 8, byteOffset, packF64, value, arguments[2]);\n    }\n  });\n} else {\n  if (!fails(function () {\n    $ArrayBuffer(1);\n  }) || !fails(function () {\n    new $ArrayBuffer(-1);\n  }) || fails(function () {\n    new $ArrayBuffer();\n    new $ArrayBuffer(1.5);\n    new $ArrayBuffer(NaN);\n    return $ArrayBuffer.name != ARRAY_BUFFER;\n  })) {\n    $ArrayBuffer = function ArrayBuffer(length) {\n      anInstance(this, $ArrayBuffer);\n      return new BaseBuffer(toIndex(length));\n    };\n    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];\n    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {\n      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);\n    }\n    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;\n  }\n  var view = new $DataView(new $ArrayBuffer(2));\n  var $setInt8 = $DataView[PROTOTYPE].setInt8;\n  view.setInt8(0, 2147483648);\n  view.setInt8(1, 2147483649);\n  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {\n    setInt8: function setInt8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    },\n    setUint8: function setUint8(byteOffset, value) {\n      $setInt8.call(this, byteOffset, value << 24 >> 24);\n    }\n  }, true);\n}\nsetToStringTag($ArrayBuffer, ARRAY_BUFFER);\nsetToStringTag($DataView, DATA_VIEW);\nhide($DataView[PROTOTYPE], $typed.VIEW, true);\nexports[ARRAY_BUFFER] = $ArrayBuffer;\nexports[DATA_VIEW] = $DataView;\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar dP = __w_pdfjs_require__(15);\nvar anObject = __w_pdfjs_require__(9);\nvar getKeys = __w_pdfjs_require__(41);\nmodule.exports = __w_pdfjs_require__(10) ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) {\n    dP.f(O, P = keys[i++], Properties[P]);\n  }return O;\n};\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar speciesConstructor = __w_pdfjs_require__(92);\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar isArray = __w_pdfjs_require__(93);\nvar SPECIES = __w_pdfjs_require__(4)('species');\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  }\n  return C === undefined ? Array : C;\n};\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(25);\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar UNSCOPABLES = __w_pdfjs_require__(4)('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) __w_pdfjs_require__(8)(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (done, value) {\n  return {\n    value: value,\n    done: !!done\n  };\n};\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar create = __w_pdfjs_require__(57);\nvar descriptor = __w_pdfjs_require__(29);\nvar setToStringTag = __w_pdfjs_require__(26);\nvar IteratorPrototype = {};\n__w_pdfjs_require__(8)(IteratorPrototype, __w_pdfjs_require__(4)('iterator'), function () {\n  return this;\n});\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toObject = __w_pdfjs_require__(19);\nvar toAbsoluteIndex = __w_pdfjs_require__(31);\nvar toLength = __w_pdfjs_require__(14);\nmodule.exports = [].copyWithin || function copyWithin(target, start) {\n  var O = toObject(this);\n  var len = toLength(O.length);\n  var to = toAbsoluteIndex(target, len);\n  var from = toAbsoluteIndex(start, len);\n  var end = arguments.length > 2 ? arguments[2] : undefined;\n  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);\n  var inc = 1;\n  if (from < to && to < from + count) {\n    inc = -1;\n    from += count - 1;\n    to += count - 1;\n  }\n  while (count-- > 0) {\n    if (from in O) O[to] = O[from];else delete O[to];\n    to += inc;\n    from += inc;\n  }\n  return O;\n};\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(99);\nmodule.exports = __w_pdfjs_require__(6).Number.isNaN;\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(7);\n$export($export.S, 'Number', {\n  isNaN: function isNaN(number) {\n    return number != number;\n  }\n});\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(101);\nmodule.exports = __w_pdfjs_require__(6).Number.isInteger;\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(7);\n$export($export.S, 'Number', { isInteger: __w_pdfjs_require__(102) });\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(66);\n__w_pdfjs_require__(104);\n__w_pdfjs_require__(67);\n__w_pdfjs_require__(106);\n__w_pdfjs_require__(111);\n__w_pdfjs_require__(112);\nmodule.exports = __w_pdfjs_require__(6).Promise;\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $at = __w_pdfjs_require__(105)(true);\n__w_pdfjs_require__(62)(String, 'String', function (iterated) {\n  this._t = String(iterated);\n  this._i = 0;\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return {\n    value: undefined,\n    done: true\n  };\n  point = $at(O, index);\n  this._i += point.length;\n  return {\n    value: point,\n    done: false\n  };\n});\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(18);\nvar defined = __w_pdfjs_require__(38);\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar LIBRARY = __w_pdfjs_require__(21);\nvar global = __w_pdfjs_require__(1);\nvar ctx = __w_pdfjs_require__(13);\nvar classof = __w_pdfjs_require__(32);\nvar $export = __w_pdfjs_require__(7);\nvar isObject = __w_pdfjs_require__(3);\nvar aFunction = __w_pdfjs_require__(22);\nvar anInstance = __w_pdfjs_require__(24);\nvar forOf = __w_pdfjs_require__(33);\nvar speciesConstructor = __w_pdfjs_require__(43);\nvar task = __w_pdfjs_require__(68).set;\nvar microtask = __w_pdfjs_require__(109)();\nvar newPromiseCapabilityModule = __w_pdfjs_require__(45);\nvar perform = __w_pdfjs_require__(69);\nvar userAgent = __w_pdfjs_require__(110);\nvar promiseResolve = __w_pdfjs_require__(70);\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function empty() {};\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\nvar USE_NATIVE = !!function () {\n  try {\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[__w_pdfjs_require__(4)('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise && v8.indexOf('6.6') !== 0 && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) {}\n}();\nvar isThenable = function isThenable(it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function notify(promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function run(reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;else {\n            if (domain) domain.enter();\n            result = handler(value);\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) {\n      run(chain[i++]);\n    }promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function onUnhandled(promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({\n            promise: promise,\n            reason: value\n          });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    }\n    promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function isUnhandled(promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function onHandleUnhandled(promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({\n        promise: promise,\n        reason: promise._v\n      });\n    }\n  });\n};\nvar $reject = function $reject(value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise;\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function $resolve(value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise;\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = {\n          _w: promise,\n          _d: false\n        };\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({\n      _w: promise,\n      _d: false\n    }, e);\n  }\n};\nif (!USE_NATIVE) {\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  Internal = function Promise(executor) {\n    this._c = [];\n    this._a = undefined;\n    this._s = 0;\n    this._d = false;\n    this._v = undefined;\n    this._h = 0;\n    this._n = false;\n  };\n  Internal.prototype = __w_pdfjs_require__(23)($Promise.prototype, {\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    'catch': function _catch(onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function OwnPromiseCapability() {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function newPromiseCapability(C) {\n    return C === $Promise || C === Wrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);\n  };\n}\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\n__w_pdfjs_require__(26)($Promise, PROMISE);\n__w_pdfjs_require__(63)(PROMISE);\nWrapper = __w_pdfjs_require__(6)[PROMISE];\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && __w_pdfjs_require__(44)(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(9);\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0:\n      return un ? fn() : fn.call(that);\n    case 1:\n      return un ? fn(args[0]) : fn.call(that, args[0]);\n    case 2:\n      return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);\n    case 3:\n      return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);\n    case 4:\n      return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);\n  }\n  return fn.apply(that, args);\n};\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(1);\nvar macrotask = __w_pdfjs_require__(68).set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = __w_pdfjs_require__(25)(process) == 'process';\nmodule.exports = function () {\n  var head, last, notify;\n  var flush = function flush() {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();else last = undefined;\n        throw e;\n      }\n    }\n    last = undefined;\n    if (parent) parent.enter();\n  };\n  if (isNode) {\n    notify = function notify() {\n      process.nextTick(flush);\n    };\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true });\n    notify = function notify() {\n      node.data = toggle = !toggle;\n    };\n  } else if (Promise && Promise.resolve) {\n    var promise = Promise.resolve(undefined);\n    notify = function notify() {\n      promise.then(flush);\n    };\n  } else {\n    notify = function notify() {\n      macrotask.call(global, flush);\n    };\n  }\n  return function (fn) {\n    var task = {\n      fn: fn,\n      next: undefined\n    };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    }\n    last = task;\n  };\n};\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(1);\nvar navigator = global.navigator;\nmodule.exports = navigator && navigator.userAgent || '';\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(7);\nvar core = __w_pdfjs_require__(6);\nvar global = __w_pdfjs_require__(1);\nvar speciesConstructor = __w_pdfjs_require__(43);\nvar promiseResolve = __w_pdfjs_require__(70);\n$export($export.P + $export.R, 'Promise', {\n  'finally': function _finally(onFinally) {\n    var C = speciesConstructor(this, core.Promise || global.Promise);\n    var isFunction = typeof onFinally == 'function';\n    return this.then(isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () {\n        return x;\n      });\n    } : onFinally, isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () {\n        throw e;\n      });\n    } : onFinally);\n  }\n});\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(7);\nvar newPromiseCapability = __w_pdfjs_require__(45);\nvar perform = __w_pdfjs_require__(69);\n$export($export.S, 'Promise', {\n  'try': function _try(callbackfn) {\n    var promiseCapability = newPromiseCapability.f(this);\n    var result = perform(callbackfn);\n    (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n    return promiseCapability.promise;\n  }\n});\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(66);\n__w_pdfjs_require__(67);\n__w_pdfjs_require__(114);\n__w_pdfjs_require__(121);\n__w_pdfjs_require__(123);\nmodule.exports = __w_pdfjs_require__(6).WeakMap;\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar each = __w_pdfjs_require__(42)(0);\nvar redefine = __w_pdfjs_require__(16);\nvar meta = __w_pdfjs_require__(46);\nvar assign = __w_pdfjs_require__(115);\nvar weak = __w_pdfjs_require__(117);\nvar isObject = __w_pdfjs_require__(3);\nvar fails = __w_pdfjs_require__(11);\nvar validate = __w_pdfjs_require__(71);\nvar WEAK_MAP = 'WeakMap';\nvar getWeak = meta.getWeak;\nvar isExtensible = Object.isExtensible;\nvar uncaughtFrozenStore = weak.ufstore;\nvar tmp = {};\nvar InternalMap;\nvar wrapper = function wrapper(get) {\n  return function WeakMap() {\n    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n  };\n};\nvar methods = {\n  get: function get(key) {\n    if (isObject(key)) {\n      var data = getWeak(key);\n      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);\n      return data ? data[this._i] : undefined;\n    }\n  },\n  set: function set(key, value) {\n    return weak.def(validate(this, WEAK_MAP), key, value);\n  }\n};\nvar $WeakMap = module.exports = __w_pdfjs_require__(118)(WEAK_MAP, wrapper, methods, weak, true, true);\nif (fails(function () {\n  return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7;\n})) {\n  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);\n  assign(InternalMap.prototype, methods);\n  meta.NEED = true;\n  each(['delete', 'has', 'get', 'set'], function (key) {\n    var proto = $WeakMap.prototype;\n    var method = proto[key];\n    redefine(proto, key, function (a, b) {\n      if (isObject(a) && !isExtensible(a)) {\n        if (!this._f) this._f = new InternalMap();\n        var result = this._f[key](a, b);\n        return key == 'set' ? this : result;\n      }\n      return method.call(this, a, b);\n    });\n  });\n}\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getKeys = __w_pdfjs_require__(41);\nvar gOPS = __w_pdfjs_require__(116);\nvar pIE = __w_pdfjs_require__(65);\nvar toObject = __w_pdfjs_require__(19);\nvar IObject = __w_pdfjs_require__(37);\nvar $assign = Object.assign;\nmodule.exports = !$assign || __w_pdfjs_require__(11)(function () {\n  var A = {};\n  var B = {};\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) {\n    B[k] = k;\n  });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) {\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n    }\n  }\n  return T;\n} : $assign;\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nexports.f = Object.getOwnPropertySymbols;\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar redefineAll = __w_pdfjs_require__(23);\nvar getWeak = __w_pdfjs_require__(46).getWeak;\nvar anObject = __w_pdfjs_require__(9);\nvar isObject = __w_pdfjs_require__(3);\nvar anInstance = __w_pdfjs_require__(24);\nvar forOf = __w_pdfjs_require__(33);\nvar createArrayMethod = __w_pdfjs_require__(42);\nvar $has = __w_pdfjs_require__(12);\nvar validate = __w_pdfjs_require__(71);\nvar arrayFind = createArrayMethod(5);\nvar arrayFindIndex = createArrayMethod(6);\nvar id = 0;\nvar uncaughtFrozenStore = function uncaughtFrozenStore(that) {\n  return that._l || (that._l = new UncaughtFrozenStore());\n};\nvar UncaughtFrozenStore = function UncaughtFrozenStore() {\n  this.a = [];\n};\nvar findUncaughtFrozen = function findUncaughtFrozen(store, key) {\n  return arrayFind(store.a, function (it) {\n    return it[0] === key;\n  });\n};\nUncaughtFrozenStore.prototype = {\n  get: function get(key) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) return entry[1];\n  },\n  has: function has(key) {\n    return !!findUncaughtFrozen(this, key);\n  },\n  set: function set(key, value) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) entry[1] = value;else this.a.push([key, value]);\n  },\n  'delete': function _delete(key) {\n    var index = arrayFindIndex(this.a, function (it) {\n      return it[0] === key;\n    });\n    if (~index) this.a.splice(index, 1);\n    return !!~index;\n  }\n};\nmodule.exports = {\n  getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;\n      that._i = id++;\n      that._l = undefined;\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      'delete': function _delete(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);\n        return data && $has(data, this._i) && delete data[this._i];\n      },\n      has: function has(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);\n        return data && $has(data, this._i);\n      }\n    });\n    return C;\n  },\n  def: function def(that, key, value) {\n    var data = getWeak(anObject(key), true);\n    if (data === true) uncaughtFrozenStore(that).set(key, value);else data[that._i] = value;\n    return that;\n  },\n  ufstore: uncaughtFrozenStore\n};\n\n/***/ }),\n/* 118 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(1);\nvar $export = __w_pdfjs_require__(7);\nvar redefine = __w_pdfjs_require__(16);\nvar redefineAll = __w_pdfjs_require__(23);\nvar meta = __w_pdfjs_require__(46);\nvar forOf = __w_pdfjs_require__(33);\nvar anInstance = __w_pdfjs_require__(24);\nvar isObject = __w_pdfjs_require__(3);\nvar fails = __w_pdfjs_require__(11);\nvar $iterDetect = __w_pdfjs_require__(44);\nvar setToStringTag = __w_pdfjs_require__(26);\nvar inheritIfRequired = __w_pdfjs_require__(119);\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  var fixMethod = function fixMethod(KEY) {\n    var fn = proto[KEY];\n    redefine(proto, KEY, KEY == 'delete' ? function (a) {\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'has' ? function has(a) {\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'get' ? function get(a) {\n      return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'add' ? function add(a) {\n      fn.call(this, a === 0 ? 0 : a);\n      return this;\n    } : function set(a, b) {\n      fn.call(this, a === 0 ? 0 : a, b);\n      return this;\n    });\n  };\n  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    var instance = new C();\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    var THROWS_ON_PRIMITIVES = fails(function () {\n      instance.has(1);\n    });\n    var ACCEPT_ITERABLES = $iterDetect(function (iter) {\n      new C(iter);\n    });\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      var $instance = new C();\n      var index = 5;\n      while (index--) {\n        $instance[ADDER](index, index);\n      }return !$instance.has(-0);\n    });\n    if (!ACCEPT_ITERABLES) {\n      C = wrapper(function (target, iterable) {\n        anInstance(target, C, NAME);\n        var that = inheritIfRequired(new Base(), target, C);\n        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n        return that;\n      });\n      C.prototype = proto;\n      proto.constructor = C;\n    }\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n    if (IS_WEAK && proto.clear) delete proto.clear;\n  }\n  setToStringTag(C, NAME);\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F * (C != Base), O);\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n  return C;\n};\n\n/***/ }),\n/* 119 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar setPrototypeOf = __w_pdfjs_require__(120).set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  }\n  return that;\n};\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar anObject = __w_pdfjs_require__(9);\nvar check = function check(O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? function (test, buggy, set) {\n    try {\n      set = __w_pdfjs_require__(13)(Function.call, __w_pdfjs_require__(64).f(Object.prototype, '__proto__').set, 2);\n      set(test, []);\n      buggy = !(test instanceof Array);\n    } catch (e) {\n      buggy = true;\n    }\n    return function setPrototypeOf(O, proto) {\n      check(O, proto);\n      if (buggy) O.__proto__ = proto;else set(O, proto);\n      return O;\n    };\n  }({}, false) : undefined),\n  check: check\n};\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(122)('WeakMap');\n\n/***/ }),\n/* 122 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(7);\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, {\n    of: function of() {\n      var length = arguments.length;\n      var A = new Array(length);\n      while (length--) {\n        A[length] = arguments[length];\n      }return new this(A);\n    }\n  });\n};\n\n/***/ }),\n/* 123 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(124)('WeakMap');\n\n/***/ }),\n/* 124 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(7);\nvar aFunction = __w_pdfjs_require__(22);\nvar ctx = __w_pdfjs_require__(13);\nvar forOf = __w_pdfjs_require__(33);\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, {\n    from: function from(source) {\n      var mapFn = arguments[1];\n      var mapping, A, n, cb;\n      aFunction(this);\n      mapping = mapFn !== undefined;\n      if (mapping) aFunction(mapFn);\n      if (source == undefined) return new this();\n      A = [];\n      if (mapping) {\n        n = 0;\n        cb = ctx(mapFn, arguments[2], 2);\n        forOf(source, false, function (nextItem) {\n          A.push(cb(nextItem, n++));\n        });\n      } else {\n        forOf(source, false, A.push, A);\n      }\n      return new this(A);\n    }\n  });\n};\n\n/***/ }),\n/* 125 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isReadableStreamSupported = false;\nif (typeof ReadableStream !== 'undefined') {\n  try {\n    new ReadableStream({\n      start: function start(controller) {\n        controller.close();\n      }\n    });\n    isReadableStreamSupported = true;\n  } catch (e) {}\n}\nif (isReadableStreamSupported) {\n  exports.ReadableStream = ReadableStream;\n} else {\n  exports.ReadableStream = __w_pdfjs_require__(126).ReadableStream;\n}\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function (e, a) {\n  for (var i in a) {\n    e[i] = a[i];\n  }\n})(exports, function (modules) {\n  var installedModules = {};\n  function __w_pdfjs_require__(moduleId) {\n    if (installedModules[moduleId]) return installedModules[moduleId].exports;\n    var module = installedModules[moduleId] = {\n      i: moduleId,\n      l: false,\n      exports: {}\n    };\n    modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n    module.l = true;\n    return module.exports;\n  }\n  __w_pdfjs_require__.m = modules;\n  __w_pdfjs_require__.c = installedModules;\n  __w_pdfjs_require__.i = function (value) {\n    return value;\n  };\n  __w_pdfjs_require__.d = function (exports, name, getter) {\n    if (!__w_pdfjs_require__.o(exports, name)) {\n      Object.defineProperty(exports, name, {\n        configurable: false,\n        enumerable: true,\n        get: getter\n      });\n    }\n  };\n  __w_pdfjs_require__.n = function (module) {\n    var getter = module && module.__esModule ? function getDefault() {\n      return module['default'];\n    } : function getModuleExports() {\n      return module;\n    };\n    __w_pdfjs_require__.d(getter, 'a', getter);\n    return getter;\n  };\n  __w_pdfjs_require__.o = function (object, property) {\n    return Object.prototype.hasOwnProperty.call(object, property);\n  };\n  __w_pdfjs_require__.p = \"\";\n  return __w_pdfjs_require__(__w_pdfjs_require__.s = 7);\n}([function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n    return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  };\n  var _require = __w_pdfjs_require__(1),\n      assert = _require.assert;\n  function IsPropertyKey(argument) {\n    return typeof argument === 'string' || (typeof argument === 'undefined' ? 'undefined' : _typeof(argument)) === 'symbol';\n  }\n  exports.typeIsObject = function (x) {\n    return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x !== null || typeof x === 'function';\n  };\n  exports.createDataProperty = function (o, p, v) {\n    assert(exports.typeIsObject(o));\n    Object.defineProperty(o, p, {\n      value: v,\n      writable: true,\n      enumerable: true,\n      configurable: true\n    });\n  };\n  exports.createArrayFromList = function (elements) {\n    return elements.slice();\n  };\n  exports.ArrayBufferCopy = function (dest, destOffset, src, srcOffset, n) {\n    new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n  };\n  exports.CreateIterResultObject = function (value, done) {\n    assert(typeof done === 'boolean');\n    var obj = {};\n    Object.defineProperty(obj, 'value', {\n      value: value,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    });\n    Object.defineProperty(obj, 'done', {\n      value: done,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    });\n    return obj;\n  };\n  exports.IsFiniteNonNegativeNumber = function (v) {\n    if (Number.isNaN(v)) {\n      return false;\n    }\n    if (v === Infinity) {\n      return false;\n    }\n    if (v < 0) {\n      return false;\n    }\n    return true;\n  };\n  function Call(F, V, args) {\n    if (typeof F !== 'function') {\n      throw new TypeError('Argument is not a function');\n    }\n    return Function.prototype.apply.call(F, V, args);\n  }\n  exports.InvokeOrNoop = function (O, P, args) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    var method = O[P];\n    if (method === undefined) {\n      return undefined;\n    }\n    return Call(method, O, args);\n  };\n  exports.PromiseInvokeOrNoop = function (O, P, args) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    try {\n      return Promise.resolve(exports.InvokeOrNoop(O, P, args));\n    } catch (returnValueE) {\n      return Promise.reject(returnValueE);\n    }\n  };\n  exports.PromiseInvokeOrPerformFallback = function (O, P, args, F, argsF) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    assert(Array.isArray(argsF));\n    var method = void 0;\n    try {\n      method = O[P];\n    } catch (methodE) {\n      return Promise.reject(methodE);\n    }\n    if (method === undefined) {\n      return F.apply(null, argsF);\n    }\n    try {\n      return Promise.resolve(Call(method, O, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  exports.TransferArrayBuffer = function (O) {\n    return O.slice();\n  };\n  exports.ValidateAndNormalizeHighWaterMark = function (highWaterMark) {\n    highWaterMark = Number(highWaterMark);\n    if (Number.isNaN(highWaterMark) || highWaterMark < 0) {\n      throw new RangeError('highWaterMark property of a queuing strategy must be non-negative and non-NaN');\n    }\n    return highWaterMark;\n  };\n  exports.ValidateAndNormalizeQueuingStrategy = function (size, highWaterMark) {\n    if (size !== undefined && typeof size !== 'function') {\n      throw new TypeError('size property of a queuing strategy must be a function');\n    }\n    highWaterMark = exports.ValidateAndNormalizeHighWaterMark(highWaterMark);\n    return {\n      size: size,\n      highWaterMark: highWaterMark\n    };\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  function rethrowAssertionErrorRejection(e) {\n    if (e && e.constructor === AssertionError) {\n      setTimeout(function () {\n        throw e;\n      }, 0);\n    }\n  }\n  function AssertionError(message) {\n    this.name = 'AssertionError';\n    this.message = message || '';\n    this.stack = new Error().stack;\n  }\n  AssertionError.prototype = Object.create(Error.prototype);\n  AssertionError.prototype.constructor = AssertionError;\n  function assert(value, message) {\n    if (!value) {\n      throw new AssertionError(message);\n    }\n  }\n  module.exports = {\n    rethrowAssertionErrorRejection: rethrowAssertionErrorRejection,\n    AssertionError: AssertionError,\n    assert: assert\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(0),\n      InvokeOrNoop = _require.InvokeOrNoop,\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n      typeIsObject = _require.typeIsObject;\n  var _require2 = __w_pdfjs_require__(1),\n      assert = _require2.assert,\n      rethrowAssertionErrorRejection = _require2.rethrowAssertionErrorRejection;\n  var _require3 = __w_pdfjs_require__(3),\n      DequeueValue = _require3.DequeueValue,\n      EnqueueValueWithSize = _require3.EnqueueValueWithSize,\n      PeekQueueValue = _require3.PeekQueueValue,\n      ResetQueue = _require3.ResetQueue;\n  var WritableStream = function () {\n    function WritableStream() {\n      var underlyingSink = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          size = _ref.size,\n          _ref$highWaterMark = _ref.highWaterMark,\n          highWaterMark = _ref$highWaterMark === undefined ? 1 : _ref$highWaterMark;\n      _classCallCheck(this, WritableStream);\n      this._state = 'writable';\n      this._storedError = undefined;\n      this._writer = undefined;\n      this._writableStreamController = undefined;\n      this._writeRequests = [];\n      this._inFlightWriteRequest = undefined;\n      this._closeRequest = undefined;\n      this._inFlightCloseRequest = undefined;\n      this._pendingAbortRequest = undefined;\n      this._backpressure = false;\n      var type = underlyingSink.type;\n      if (type !== undefined) {\n        throw new RangeError('Invalid type is specified');\n      }\n      this._writableStreamController = new WritableStreamDefaultController(this, underlyingSink, size, highWaterMark);\n      this._writableStreamController.__startSteps();\n    }\n    _createClass(WritableStream, [{\n      key: 'abort',\n      value: function abort(reason) {\n        if (IsWritableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('abort'));\n        }\n        if (IsWritableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('Cannot abort a stream that already has a writer'));\n        }\n        return WritableStreamAbort(this, reason);\n      }\n    }, {\n      key: 'getWriter',\n      value: function getWriter() {\n        if (IsWritableStream(this) === false) {\n          throw streamBrandCheckException('getWriter');\n        }\n        return AcquireWritableStreamDefaultWriter(this);\n      }\n    }, {\n      key: 'locked',\n      get: function get() {\n        if (IsWritableStream(this) === false) {\n          throw streamBrandCheckException('locked');\n        }\n        return IsWritableStreamLocked(this);\n      }\n    }]);\n    return WritableStream;\n  }();\n  module.exports = {\n    AcquireWritableStreamDefaultWriter: AcquireWritableStreamDefaultWriter,\n    IsWritableStream: IsWritableStream,\n    IsWritableStreamLocked: IsWritableStreamLocked,\n    WritableStream: WritableStream,\n    WritableStreamAbort: WritableStreamAbort,\n    WritableStreamDefaultControllerError: WritableStreamDefaultControllerError,\n    WritableStreamDefaultWriterCloseWithErrorPropagation: WritableStreamDefaultWriterCloseWithErrorPropagation,\n    WritableStreamDefaultWriterRelease: WritableStreamDefaultWriterRelease,\n    WritableStreamDefaultWriterWrite: WritableStreamDefaultWriterWrite,\n    WritableStreamCloseQueuedOrInFlight: WritableStreamCloseQueuedOrInFlight\n  };\n  function AcquireWritableStreamDefaultWriter(stream) {\n    return new WritableStreamDefaultWriter(stream);\n  }\n  function IsWritableStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function IsWritableStreamLocked(stream) {\n    assert(IsWritableStream(stream) === true, 'IsWritableStreamLocked should only be used on known writable streams');\n    if (stream._writer === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamAbort(stream, reason) {\n    var state = stream._state;\n    if (state === 'closed') {\n      return Promise.resolve(undefined);\n    }\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    var error = new TypeError('Requested to abort');\n    if (stream._pendingAbortRequest !== undefined) {\n      return Promise.reject(error);\n    }\n    assert(state === 'writable' || state === 'erroring', 'state must be writable or erroring');\n    var wasAlreadyErroring = false;\n    if (state === 'erroring') {\n      wasAlreadyErroring = true;\n      reason = undefined;\n    }\n    var promise = new Promise(function (resolve, reject) {\n      stream._pendingAbortRequest = {\n        _resolve: resolve,\n        _reject: reject,\n        _reason: reason,\n        _wasAlreadyErroring: wasAlreadyErroring\n      };\n    });\n    if (wasAlreadyErroring === false) {\n      WritableStreamStartErroring(stream, error);\n    }\n    return promise;\n  }\n  function WritableStreamAddWriteRequest(stream) {\n    assert(IsWritableStreamLocked(stream) === true);\n    assert(stream._state === 'writable');\n    var promise = new Promise(function (resolve, reject) {\n      var writeRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._writeRequests.push(writeRequest);\n    });\n    return promise;\n  }\n  function WritableStreamDealWithRejection(stream, error) {\n    var state = stream._state;\n    if (state === 'writable') {\n      WritableStreamStartErroring(stream, error);\n      return;\n    }\n    assert(state === 'erroring');\n    WritableStreamFinishErroring(stream);\n  }\n  function WritableStreamStartErroring(stream, reason) {\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n    assert(stream._state === 'writable', 'state must be writable');\n    var controller = stream._writableStreamController;\n    assert(controller !== undefined, 'controller must not be undefined');\n    stream._state = 'erroring';\n    stream._storedError = reason;\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n    }\n    if (WritableStreamHasOperationMarkedInFlight(stream) === false && controller._started === true) {\n      WritableStreamFinishErroring(stream);\n    }\n  }\n  function WritableStreamFinishErroring(stream) {\n    assert(stream._state === 'erroring', 'stream._state === erroring');\n    assert(WritableStreamHasOperationMarkedInFlight(stream) === false, 'WritableStreamHasOperationMarkedInFlight(stream) === false');\n    stream._state = 'errored';\n    stream._writableStreamController.__errorSteps();\n    var storedError = stream._storedError;\n    for (var i = 0; i < stream._writeRequests.length; i++) {\n      var writeRequest = stream._writeRequests[i];\n      writeRequest._reject(storedError);\n    }\n    stream._writeRequests = [];\n    if (stream._pendingAbortRequest === undefined) {\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      return;\n    }\n    var abortRequest = stream._pendingAbortRequest;\n    stream._pendingAbortRequest = undefined;\n    if (abortRequest._wasAlreadyErroring === true) {\n      abortRequest._reject(storedError);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      return;\n    }\n    var promise = stream._writableStreamController.__abortSteps(abortRequest._reason);\n    promise.then(function () {\n      abortRequest._resolve();\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    }, function (reason) {\n      abortRequest._reject(reason);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    });\n  }\n  function WritableStreamFinishInFlightWrite(stream) {\n    assert(stream._inFlightWriteRequest !== undefined);\n    stream._inFlightWriteRequest._resolve(undefined);\n    stream._inFlightWriteRequest = undefined;\n  }\n  function WritableStreamFinishInFlightWriteWithError(stream, error) {\n    assert(stream._inFlightWriteRequest !== undefined);\n    stream._inFlightWriteRequest._reject(error);\n    stream._inFlightWriteRequest = undefined;\n    assert(stream._state === 'writable' || stream._state === 'erroring');\n    WritableStreamDealWithRejection(stream, error);\n  }\n  function WritableStreamFinishInFlightClose(stream) {\n    assert(stream._inFlightCloseRequest !== undefined);\n    stream._inFlightCloseRequest._resolve(undefined);\n    stream._inFlightCloseRequest = undefined;\n    var state = stream._state;\n    assert(state === 'writable' || state === 'erroring');\n    if (state === 'erroring') {\n      stream._storedError = undefined;\n      if (stream._pendingAbortRequest !== undefined) {\n        stream._pendingAbortRequest._resolve();\n        stream._pendingAbortRequest = undefined;\n      }\n    }\n    stream._state = 'closed';\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      defaultWriterClosedPromiseResolve(writer);\n    }\n    assert(stream._pendingAbortRequest === undefined, 'stream._pendingAbortRequest === undefined');\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n  }\n  function WritableStreamFinishInFlightCloseWithError(stream, error) {\n    assert(stream._inFlightCloseRequest !== undefined);\n    stream._inFlightCloseRequest._reject(error);\n    stream._inFlightCloseRequest = undefined;\n    assert(stream._state === 'writable' || stream._state === 'erroring');\n    if (stream._pendingAbortRequest !== undefined) {\n      stream._pendingAbortRequest._reject(error);\n      stream._pendingAbortRequest = undefined;\n    }\n    WritableStreamDealWithRejection(stream, error);\n  }\n  function WritableStreamCloseQueuedOrInFlight(stream) {\n    if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamHasOperationMarkedInFlight(stream) {\n    if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamMarkCloseRequestInFlight(stream) {\n    assert(stream._inFlightCloseRequest === undefined);\n    assert(stream._closeRequest !== undefined);\n    stream._inFlightCloseRequest = stream._closeRequest;\n    stream._closeRequest = undefined;\n  }\n  function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n    assert(stream._inFlightWriteRequest === undefined, 'there must be no pending write request');\n    assert(stream._writeRequests.length !== 0, 'writeRequests must not be empty');\n    stream._inFlightWriteRequest = stream._writeRequests.shift();\n  }\n  function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n    assert(stream._state === 'errored', '_stream_.[[state]] is `\"errored\"`');\n    if (stream._closeRequest !== undefined) {\n      assert(stream._inFlightCloseRequest === undefined);\n      stream._closeRequest._reject(stream._storedError);\n      stream._closeRequest = undefined;\n    }\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      defaultWriterClosedPromiseReject(writer, stream._storedError);\n      writer._closedPromise.catch(function () {});\n    }\n  }\n  function WritableStreamUpdateBackpressure(stream, backpressure) {\n    assert(stream._state === 'writable');\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n    var writer = stream._writer;\n    if (writer !== undefined && backpressure !== stream._backpressure) {\n      if (backpressure === true) {\n        defaultWriterReadyPromiseReset(writer);\n      } else {\n        assert(backpressure === false);\n        defaultWriterReadyPromiseResolve(writer);\n      }\n    }\n    stream._backpressure = backpressure;\n  }\n  var WritableStreamDefaultWriter = function () {\n    function WritableStreamDefaultWriter(stream) {\n      _classCallCheck(this, WritableStreamDefaultWriter);\n      if (IsWritableStream(stream) === false) {\n        throw new TypeError('WritableStreamDefaultWriter can only be constructed with a WritableStream instance');\n      }\n      if (IsWritableStreamLocked(stream) === true) {\n        throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n      }\n      this._ownerWritableStream = stream;\n      stream._writer = this;\n      var state = stream._state;\n      if (state === 'writable') {\n        if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._backpressure === true) {\n          defaultWriterReadyPromiseInitialize(this);\n        } else {\n          defaultWriterReadyPromiseInitializeAsResolved(this);\n        }\n        defaultWriterClosedPromiseInitialize(this);\n      } else if (state === 'erroring') {\n        defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n        this._readyPromise.catch(function () {});\n        defaultWriterClosedPromiseInitialize(this);\n      } else if (state === 'closed') {\n        defaultWriterReadyPromiseInitializeAsResolved(this);\n        defaultWriterClosedPromiseInitializeAsResolved(this);\n      } else {\n        assert(state === 'errored', 'state must be errored');\n        var storedError = stream._storedError;\n        defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n        this._readyPromise.catch(function () {});\n        defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n        this._closedPromise.catch(function () {});\n      }\n    }\n    _createClass(WritableStreamDefaultWriter, [{\n      key: 'abort',\n      value: function abort(reason) {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('abort'));\n        }\n        if (this._ownerWritableStream === undefined) {\n          return Promise.reject(defaultWriterLockException('abort'));\n        }\n        return WritableStreamDefaultWriterAbort(this, reason);\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('close'));\n        }\n        var stream = this._ownerWritableStream;\n        if (stream === undefined) {\n          return Promise.reject(defaultWriterLockException('close'));\n        }\n        if (WritableStreamCloseQueuedOrInFlight(stream) === true) {\n          return Promise.reject(new TypeError('cannot close an already-closing stream'));\n        }\n        return WritableStreamDefaultWriterClose(this);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          throw defaultWriterBrandCheckException('releaseLock');\n        }\n        var stream = this._ownerWritableStream;\n        if (stream === undefined) {\n          return;\n        }\n        assert(stream._writer !== undefined);\n        WritableStreamDefaultWriterRelease(this);\n      }\n    }, {\n      key: 'write',\n      value: function write(chunk) {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('write'));\n        }\n        if (this._ownerWritableStream === undefined) {\n          return Promise.reject(defaultWriterLockException('write to'));\n        }\n        return WritableStreamDefaultWriterWrite(this, chunk);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          throw defaultWriterBrandCheckException('desiredSize');\n        }\n        if (this._ownerWritableStream === undefined) {\n          throw defaultWriterLockException('desiredSize');\n        }\n        return WritableStreamDefaultWriterGetDesiredSize(this);\n      }\n    }, {\n      key: 'ready',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('ready'));\n        }\n        return this._readyPromise;\n      }\n    }]);\n    return WritableStreamDefaultWriter;\n  }();\n  function IsWritableStreamDefaultWriter(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamDefaultWriterAbort(writer, reason) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    return WritableStreamAbort(stream, reason);\n  }\n  function WritableStreamDefaultWriterClose(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n      return Promise.reject(new TypeError('The stream (in ' + state + ' state) is not in the writable state and cannot be closed'));\n    }\n    assert(state === 'writable' || state === 'erroring');\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n    var promise = new Promise(function (resolve, reject) {\n      var closeRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._closeRequest = closeRequest;\n    });\n    if (stream._backpressure === true && state === 'writable') {\n      defaultWriterReadyPromiseResolve(writer);\n    }\n    WritableStreamDefaultControllerClose(stream._writableStreamController);\n    return promise;\n  }\n  function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var state = stream._state;\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n      return Promise.resolve();\n    }\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(state === 'writable' || state === 'erroring');\n    return WritableStreamDefaultWriterClose(writer);\n  }\n  function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n    if (writer._closedPromiseState === 'pending') {\n      defaultWriterClosedPromiseReject(writer, error);\n    } else {\n      defaultWriterClosedPromiseResetToRejected(writer, error);\n    }\n    writer._closedPromise.catch(function () {});\n  }\n  function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n    if (writer._readyPromiseState === 'pending') {\n      defaultWriterReadyPromiseReject(writer, error);\n    } else {\n      defaultWriterReadyPromiseResetToRejected(writer, error);\n    }\n    writer._readyPromise.catch(function () {});\n  }\n  function WritableStreamDefaultWriterGetDesiredSize(writer) {\n    var stream = writer._ownerWritableStream;\n    var state = stream._state;\n    if (state === 'errored' || state === 'erroring') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n  }\n  function WritableStreamDefaultWriterRelease(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    assert(stream._writer === writer);\n    var releasedError = new TypeError('Writer was released and can no longer be used to monitor the stream\\'s closedness');\n    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n    WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n    stream._writer = undefined;\n    writer._ownerWritableStream = undefined;\n  }\n  function WritableStreamDefaultWriterWrite(writer, chunk) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var controller = stream._writableStreamController;\n    var chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n    if (stream !== writer._ownerWritableStream) {\n      return Promise.reject(defaultWriterLockException('write to'));\n    }\n    var state = stream._state;\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n      return Promise.reject(new TypeError('The stream is closing or closed and cannot be written to'));\n    }\n    if (state === 'erroring') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(state === 'writable');\n    var promise = WritableStreamAddWriteRequest(stream);\n    WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n    return promise;\n  }\n  var WritableStreamDefaultController = function () {\n    function WritableStreamDefaultController(stream, underlyingSink, size, highWaterMark) {\n      _classCallCheck(this, WritableStreamDefaultController);\n      if (IsWritableStream(stream) === false) {\n        throw new TypeError('WritableStreamDefaultController can only be constructed with a WritableStream instance');\n      }\n      if (stream._writableStreamController !== undefined) {\n        throw new TypeError('WritableStreamDefaultController instances can only be created by the WritableStream constructor');\n      }\n      this._controlledWritableStream = stream;\n      this._underlyingSink = underlyingSink;\n      this._queue = undefined;\n      this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._started = false;\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n      this._strategySize = normalizedStrategy.size;\n      this._strategyHWM = normalizedStrategy.highWaterMark;\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(this);\n      WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n    _createClass(WritableStreamDefaultController, [{\n      key: 'error',\n      value: function error(e) {\n        if (IsWritableStreamDefaultController(this) === false) {\n          throw new TypeError('WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController');\n        }\n        var state = this._controlledWritableStream._state;\n        if (state !== 'writable') {\n          return;\n        }\n        WritableStreamDefaultControllerError(this, e);\n      }\n    }, {\n      key: '__abortSteps',\n      value: function __abortSteps(reason) {\n        return PromiseInvokeOrNoop(this._underlyingSink, 'abort', [reason]);\n      }\n    }, {\n      key: '__errorSteps',\n      value: function __errorSteps() {\n        ResetQueue(this);\n      }\n    }, {\n      key: '__startSteps',\n      value: function __startSteps() {\n        var _this = this;\n        var startResult = InvokeOrNoop(this._underlyingSink, 'start', [this]);\n        var stream = this._controlledWritableStream;\n        Promise.resolve(startResult).then(function () {\n          assert(stream._state === 'writable' || stream._state === 'erroring');\n          _this._started = true;\n          WritableStreamDefaultControllerAdvanceQueueIfNeeded(_this);\n        }, function (r) {\n          assert(stream._state === 'writable' || stream._state === 'erroring');\n          _this._started = true;\n          WritableStreamDealWithRejection(stream, r);\n        }).catch(rethrowAssertionErrorRejection);\n      }\n    }]);\n    return WritableStreamDefaultController;\n  }();\n  function WritableStreamDefaultControllerClose(controller) {\n    EnqueueValueWithSize(controller, 'close', 0);\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n  }\n  function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n    var strategySize = controller._strategySize;\n    if (strategySize === undefined) {\n      return 1;\n    }\n    try {\n      return strategySize(chunk);\n    } catch (chunkSizeE) {\n      WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n      return 1;\n    }\n  }\n  function WritableStreamDefaultControllerGetDesiredSize(controller) {\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n    var writeRecord = { chunk: chunk };\n    try {\n      EnqueueValueWithSize(controller, writeRecord, chunkSize);\n    } catch (enqueueE) {\n      WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n      return;\n    }\n    var stream = controller._controlledWritableStream;\n    if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._state === 'writable') {\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n      WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n  }\n  function IsWritableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSink')) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n    var stream = controller._controlledWritableStream;\n    if (controller._started === false) {\n      return;\n    }\n    if (stream._inFlightWriteRequest !== undefined) {\n      return;\n    }\n    var state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n      return;\n    }\n    if (state === 'erroring') {\n      WritableStreamFinishErroring(stream);\n      return;\n    }\n    if (controller._queue.length === 0) {\n      return;\n    }\n    var writeRecord = PeekQueueValue(controller);\n    if (writeRecord === 'close') {\n      WritableStreamDefaultControllerProcessClose(controller);\n    } else {\n      WritableStreamDefaultControllerProcessWrite(controller, writeRecord.chunk);\n    }\n  }\n  function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n    if (controller._controlledWritableStream._state === 'writable') {\n      WritableStreamDefaultControllerError(controller, error);\n    }\n  }\n  function WritableStreamDefaultControllerProcessClose(controller) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamMarkCloseRequestInFlight(stream);\n    DequeueValue(controller);\n    assert(controller._queue.length === 0, 'queue must be empty once the final write record is dequeued');\n    var sinkClosePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'close', []);\n    sinkClosePromise.then(function () {\n      WritableStreamFinishInFlightClose(stream);\n    }, function (reason) {\n      WritableStreamFinishInFlightCloseWithError(stream, reason);\n    }).catch(rethrowAssertionErrorRejection);\n  }\n  function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamMarkFirstWriteRequestInFlight(stream);\n    var sinkWritePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'write', [chunk, controller]);\n    sinkWritePromise.then(function () {\n      WritableStreamFinishInFlightWrite(stream);\n      var state = stream._state;\n      assert(state === 'writable' || state === 'erroring');\n      DequeueValue(controller);\n      if (WritableStreamCloseQueuedOrInFlight(stream) === false && state === 'writable') {\n        var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n      }\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }, function (reason) {\n      WritableStreamFinishInFlightWriteWithError(stream, reason);\n    }).catch(rethrowAssertionErrorRejection);\n  }\n  function WritableStreamDefaultControllerGetBackpressure(controller) {\n    var desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n    return desiredSize <= 0;\n  }\n  function WritableStreamDefaultControllerError(controller, error) {\n    var stream = controller._controlledWritableStream;\n    assert(stream._state === 'writable');\n    WritableStreamStartErroring(stream, error);\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('WritableStream.prototype.' + name + ' can only be used on a WritableStream');\n  }\n  function defaultWriterBrandCheckException(name) {\n    return new TypeError('WritableStreamDefaultWriter.prototype.' + name + ' can only be used on a WritableStreamDefaultWriter');\n  }\n  function defaultWriterLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released writer');\n  }\n  function defaultWriterClosedPromiseInitialize(writer) {\n    writer._closedPromise = new Promise(function (resolve, reject) {\n      writer._closedPromise_resolve = resolve;\n      writer._closedPromise_reject = reject;\n      writer._closedPromiseState = 'pending';\n    });\n  }\n  function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n    writer._closedPromise = Promise.reject(reason);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n    writer._closedPromise = Promise.resolve(undefined);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'resolved';\n  }\n  function defaultWriterClosedPromiseReject(writer, reason) {\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n    writer._closedPromise_reject(reason);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n    assert(writer._closedPromise_resolve === undefined, 'writer._closedPromise_resolve === undefined');\n    assert(writer._closedPromise_reject === undefined, 'writer._closedPromise_reject === undefined');\n    assert(writer._closedPromiseState !== 'pending', 'writer._closedPromiseState is not pending');\n    writer._closedPromise = Promise.reject(reason);\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseResolve(writer) {\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n    writer._closedPromise_resolve(undefined);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'resolved';\n  }\n  function defaultWriterReadyPromiseInitialize(writer) {\n    writer._readyPromise = new Promise(function (resolve, reject) {\n      writer._readyPromise_resolve = resolve;\n      writer._readyPromise_reject = reject;\n    });\n    writer._readyPromiseState = 'pending';\n  }\n  function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n    writer._readyPromise = Promise.reject(reason);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n    writer._readyPromise = Promise.resolve(undefined);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'fulfilled';\n  }\n  function defaultWriterReadyPromiseReject(writer, reason) {\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n    writer._readyPromise_reject(reason);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseReset(writer) {\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n    writer._readyPromise = new Promise(function (resolve, reject) {\n      writer._readyPromise_resolve = resolve;\n      writer._readyPromise_reject = reject;\n    });\n    writer._readyPromiseState = 'pending';\n  }\n  function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n    writer._readyPromise = Promise.reject(reason);\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseResolve(writer) {\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n    writer._readyPromise_resolve(undefined);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'fulfilled';\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _require = __w_pdfjs_require__(0),\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber;\n  var _require2 = __w_pdfjs_require__(1),\n      assert = _require2.assert;\n  exports.DequeueValue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: DequeueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    assert(container._queue.length > 0, 'Spec-level failure: should never dequeue from an empty queue.');\n    var pair = container._queue.shift();\n    container._queueTotalSize -= pair.size;\n    if (container._queueTotalSize < 0) {\n      container._queueTotalSize = 0;\n    }\n    return pair.value;\n  };\n  exports.EnqueueValueWithSize = function (container, value, size) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: EnqueueValueWithSize should only be used on containers with [[queue]] and ' + '[[queueTotalSize]].');\n    size = Number(size);\n    if (!IsFiniteNonNegativeNumber(size)) {\n      throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n    }\n    container._queue.push({\n      value: value,\n      size: size\n    });\n    container._queueTotalSize += size;\n  };\n  exports.PeekQueueValue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: PeekQueueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    assert(container._queue.length > 0, 'Spec-level failure: should never peek at an empty queue.');\n    var pair = container._queue[0];\n    return pair.value;\n  };\n  exports.ResetQueue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: ResetQueue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    container._queue = [];\n    container._queueTotalSize = 0;\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(0),\n      ArrayBufferCopy = _require.ArrayBufferCopy,\n      CreateIterResultObject = _require.CreateIterResultObject,\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber,\n      InvokeOrNoop = _require.InvokeOrNoop,\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n      TransferArrayBuffer = _require.TransferArrayBuffer,\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n      ValidateAndNormalizeHighWaterMark = _require.ValidateAndNormalizeHighWaterMark;\n  var _require2 = __w_pdfjs_require__(0),\n      createArrayFromList = _require2.createArrayFromList,\n      createDataProperty = _require2.createDataProperty,\n      typeIsObject = _require2.typeIsObject;\n  var _require3 = __w_pdfjs_require__(1),\n      assert = _require3.assert,\n      rethrowAssertionErrorRejection = _require3.rethrowAssertionErrorRejection;\n  var _require4 = __w_pdfjs_require__(3),\n      DequeueValue = _require4.DequeueValue,\n      EnqueueValueWithSize = _require4.EnqueueValueWithSize,\n      ResetQueue = _require4.ResetQueue;\n  var _require5 = __w_pdfjs_require__(2),\n      AcquireWritableStreamDefaultWriter = _require5.AcquireWritableStreamDefaultWriter,\n      IsWritableStream = _require5.IsWritableStream,\n      IsWritableStreamLocked = _require5.IsWritableStreamLocked,\n      WritableStreamAbort = _require5.WritableStreamAbort,\n      WritableStreamDefaultWriterCloseWithErrorPropagation = _require5.WritableStreamDefaultWriterCloseWithErrorPropagation,\n      WritableStreamDefaultWriterRelease = _require5.WritableStreamDefaultWriterRelease,\n      WritableStreamDefaultWriterWrite = _require5.WritableStreamDefaultWriterWrite,\n      WritableStreamCloseQueuedOrInFlight = _require5.WritableStreamCloseQueuedOrInFlight;\n  var ReadableStream = function () {\n    function ReadableStream() {\n      var underlyingSource = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          size = _ref.size,\n          highWaterMark = _ref.highWaterMark;\n      _classCallCheck(this, ReadableStream);\n      this._state = 'readable';\n      this._reader = undefined;\n      this._storedError = undefined;\n      this._disturbed = false;\n      this._readableStreamController = undefined;\n      var type = underlyingSource.type;\n      var typeString = String(type);\n      if (typeString === 'bytes') {\n        if (highWaterMark === undefined) {\n          highWaterMark = 0;\n        }\n        this._readableStreamController = new ReadableByteStreamController(this, underlyingSource, highWaterMark);\n      } else if (type === undefined) {\n        if (highWaterMark === undefined) {\n          highWaterMark = 1;\n        }\n        this._readableStreamController = new ReadableStreamDefaultController(this, underlyingSource, size, highWaterMark);\n      } else {\n        throw new RangeError('Invalid type is specified');\n      }\n    }\n    _createClass(ReadableStream, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (IsReadableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('cancel'));\n        }\n        if (IsReadableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('Cannot cancel a stream that already has a reader'));\n        }\n        return ReadableStreamCancel(this, reason);\n      }\n    }, {\n      key: 'getReader',\n      value: function getReader() {\n        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            mode = _ref2.mode;\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('getReader');\n        }\n        if (mode === undefined) {\n          return AcquireReadableStreamDefaultReader(this);\n        }\n        mode = String(mode);\n        if (mode === 'byob') {\n          return AcquireReadableStreamBYOBReader(this);\n        }\n        throw new RangeError('Invalid mode is specified');\n      }\n    }, {\n      key: 'pipeThrough',\n      value: function pipeThrough(_ref3, options) {\n        var writable = _ref3.writable,\n            readable = _ref3.readable;\n        var promise = this.pipeTo(writable, options);\n        ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise);\n        return readable;\n      }\n    }, {\n      key: 'pipeTo',\n      value: function pipeTo(dest) {\n        var _this = this;\n        var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n            preventClose = _ref4.preventClose,\n            preventAbort = _ref4.preventAbort,\n            preventCancel = _ref4.preventCancel;\n        if (IsReadableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('pipeTo'));\n        }\n        if (IsWritableStream(dest) === false) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo\\'s first argument must be a WritableStream'));\n        }\n        preventClose = Boolean(preventClose);\n        preventAbort = Boolean(preventAbort);\n        preventCancel = Boolean(preventCancel);\n        if (IsReadableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n        }\n        if (IsWritableStreamLocked(dest) === true) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n        }\n        var reader = AcquireReadableStreamDefaultReader(this);\n        var writer = AcquireWritableStreamDefaultWriter(dest);\n        var shuttingDown = false;\n        var currentWrite = Promise.resolve();\n        return new Promise(function (resolve, reject) {\n          function pipeLoop() {\n            currentWrite = Promise.resolve();\n            if (shuttingDown === true) {\n              return Promise.resolve();\n            }\n            return writer._readyPromise.then(function () {\n              return ReadableStreamDefaultReaderRead(reader).then(function (_ref5) {\n                var value = _ref5.value,\n                    done = _ref5.done;\n                if (done === true) {\n                  return;\n                }\n                currentWrite = WritableStreamDefaultWriterWrite(writer, value).catch(function () {});\n              });\n            }).then(pipeLoop);\n          }\n          isOrBecomesErrored(_this, reader._closedPromise, function (storedError) {\n            if (preventAbort === false) {\n              shutdownWithAction(function () {\n                return WritableStreamAbort(dest, storedError);\n              }, true, storedError);\n            } else {\n              shutdown(true, storedError);\n            }\n          });\n          isOrBecomesErrored(dest, writer._closedPromise, function (storedError) {\n            if (preventCancel === false) {\n              shutdownWithAction(function () {\n                return ReadableStreamCancel(_this, storedError);\n              }, true, storedError);\n            } else {\n              shutdown(true, storedError);\n            }\n          });\n          isOrBecomesClosed(_this, reader._closedPromise, function () {\n            if (preventClose === false) {\n              shutdownWithAction(function () {\n                return WritableStreamDefaultWriterCloseWithErrorPropagation(writer);\n              });\n            } else {\n              shutdown();\n            }\n          });\n          if (WritableStreamCloseQueuedOrInFlight(dest) === true || dest._state === 'closed') {\n            var destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n            if (preventCancel === false) {\n              shutdownWithAction(function () {\n                return ReadableStreamCancel(_this, destClosed);\n              }, true, destClosed);\n            } else {\n              shutdown(true, destClosed);\n            }\n          }\n          pipeLoop().catch(function (err) {\n            currentWrite = Promise.resolve();\n            rethrowAssertionErrorRejection(err);\n          });\n          function waitForWritesToFinish() {\n            var oldCurrentWrite = currentWrite;\n            return currentWrite.then(function () {\n              return oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined;\n            });\n          }\n          function isOrBecomesErrored(stream, promise, action) {\n            if (stream._state === 'errored') {\n              action(stream._storedError);\n            } else {\n              promise.catch(action).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function isOrBecomesClosed(stream, promise, action) {\n            if (stream._state === 'closed') {\n              action();\n            } else {\n              promise.then(action).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function shutdownWithAction(action, originalIsError, originalError) {\n            if (shuttingDown === true) {\n              return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n              waitForWritesToFinish().then(doTheRest);\n            } else {\n              doTheRest();\n            }\n            function doTheRest() {\n              action().then(function () {\n                return finalize(originalIsError, originalError);\n              }, function (newError) {\n                return finalize(true, newError);\n              }).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function shutdown(isError, error) {\n            if (shuttingDown === true) {\n              return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n              waitForWritesToFinish().then(function () {\n                return finalize(isError, error);\n              }).catch(rethrowAssertionErrorRejection);\n            } else {\n              finalize(isError, error);\n            }\n          }\n          function finalize(isError, error) {\n            WritableStreamDefaultWriterRelease(writer);\n            ReadableStreamReaderGenericRelease(reader);\n            if (isError) {\n              reject(error);\n            } else {\n              resolve(undefined);\n            }\n          }\n        });\n      }\n    }, {\n      key: 'tee',\n      value: function tee() {\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('tee');\n        }\n        var branches = ReadableStreamTee(this, false);\n        return createArrayFromList(branches);\n      }\n    }, {\n      key: 'locked',\n      get: function get() {\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('locked');\n        }\n        return IsReadableStreamLocked(this);\n      }\n    }]);\n    return ReadableStream;\n  }();\n  module.exports = {\n    ReadableStream: ReadableStream,\n    IsReadableStreamDisturbed: IsReadableStreamDisturbed,\n    ReadableStreamDefaultControllerClose: ReadableStreamDefaultControllerClose,\n    ReadableStreamDefaultControllerEnqueue: ReadableStreamDefaultControllerEnqueue,\n    ReadableStreamDefaultControllerError: ReadableStreamDefaultControllerError,\n    ReadableStreamDefaultControllerGetDesiredSize: ReadableStreamDefaultControllerGetDesiredSize\n  };\n  function AcquireReadableStreamBYOBReader(stream) {\n    return new ReadableStreamBYOBReader(stream);\n  }\n  function AcquireReadableStreamDefaultReader(stream) {\n    return new ReadableStreamDefaultReader(stream);\n  }\n  function IsReadableStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamDisturbed(stream) {\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamDisturbed should only be used on known readable streams');\n    return stream._disturbed;\n  }\n  function IsReadableStreamLocked(stream) {\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamLocked should only be used on known readable streams');\n    if (stream._reader === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamTee(stream, cloneForBranch2) {\n    assert(IsReadableStream(stream) === true);\n    assert(typeof cloneForBranch2 === 'boolean');\n    var reader = AcquireReadableStreamDefaultReader(stream);\n    var teeState = {\n      closedOrErrored: false,\n      canceled1: false,\n      canceled2: false,\n      reason1: undefined,\n      reason2: undefined\n    };\n    teeState.promise = new Promise(function (resolve) {\n      teeState._resolve = resolve;\n    });\n    var pull = create_ReadableStreamTeePullFunction();\n    pull._reader = reader;\n    pull._teeState = teeState;\n    pull._cloneForBranch2 = cloneForBranch2;\n    var cancel1 = create_ReadableStreamTeeBranch1CancelFunction();\n    cancel1._stream = stream;\n    cancel1._teeState = teeState;\n    var cancel2 = create_ReadableStreamTeeBranch2CancelFunction();\n    cancel2._stream = stream;\n    cancel2._teeState = teeState;\n    var underlyingSource1 = Object.create(Object.prototype);\n    createDataProperty(underlyingSource1, 'pull', pull);\n    createDataProperty(underlyingSource1, 'cancel', cancel1);\n    var branch1Stream = new ReadableStream(underlyingSource1);\n    var underlyingSource2 = Object.create(Object.prototype);\n    createDataProperty(underlyingSource2, 'pull', pull);\n    createDataProperty(underlyingSource2, 'cancel', cancel2);\n    var branch2Stream = new ReadableStream(underlyingSource2);\n    pull._branch1 = branch1Stream._readableStreamController;\n    pull._branch2 = branch2Stream._readableStreamController;\n    reader._closedPromise.catch(function (r) {\n      if (teeState.closedOrErrored === true) {\n        return;\n      }\n      ReadableStreamDefaultControllerError(pull._branch1, r);\n      ReadableStreamDefaultControllerError(pull._branch2, r);\n      teeState.closedOrErrored = true;\n    });\n    return [branch1Stream, branch2Stream];\n  }\n  function create_ReadableStreamTeePullFunction() {\n    function f() {\n      var reader = f._reader,\n          branch1 = f._branch1,\n          branch2 = f._branch2,\n          teeState = f._teeState;\n      return ReadableStreamDefaultReaderRead(reader).then(function (result) {\n        assert(typeIsObject(result));\n        var value = result.value;\n        var done = result.done;\n        assert(typeof done === 'boolean');\n        if (done === true && teeState.closedOrErrored === false) {\n          if (teeState.canceled1 === false) {\n            ReadableStreamDefaultControllerClose(branch1);\n          }\n          if (teeState.canceled2 === false) {\n            ReadableStreamDefaultControllerClose(branch2);\n          }\n          teeState.closedOrErrored = true;\n        }\n        if (teeState.closedOrErrored === true) {\n          return;\n        }\n        var value1 = value;\n        var value2 = value;\n        if (teeState.canceled1 === false) {\n          ReadableStreamDefaultControllerEnqueue(branch1, value1);\n        }\n        if (teeState.canceled2 === false) {\n          ReadableStreamDefaultControllerEnqueue(branch2, value2);\n        }\n      });\n    }\n    return f;\n  }\n  function create_ReadableStreamTeeBranch1CancelFunction() {\n    function f(reason) {\n      var stream = f._stream,\n          teeState = f._teeState;\n      teeState.canceled1 = true;\n      teeState.reason1 = reason;\n      if (teeState.canceled2 === true) {\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n        teeState._resolve(cancelResult);\n      }\n      return teeState.promise;\n    }\n    return f;\n  }\n  function create_ReadableStreamTeeBranch2CancelFunction() {\n    function f(reason) {\n      var stream = f._stream,\n          teeState = f._teeState;\n      teeState.canceled2 = true;\n      teeState.reason2 = reason;\n      if (teeState.canceled1 === true) {\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n        teeState._resolve(cancelResult);\n      }\n      return teeState.promise;\n    }\n    return f;\n  }\n  function ReadableStreamAddReadIntoRequest(stream) {\n    assert(IsReadableStreamBYOBReader(stream._reader) === true);\n    assert(stream._state === 'readable' || stream._state === 'closed');\n    var promise = new Promise(function (resolve, reject) {\n      var readIntoRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._reader._readIntoRequests.push(readIntoRequest);\n    });\n    return promise;\n  }\n  function ReadableStreamAddReadRequest(stream) {\n    assert(IsReadableStreamDefaultReader(stream._reader) === true);\n    assert(stream._state === 'readable');\n    var promise = new Promise(function (resolve, reject) {\n      var readRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._reader._readRequests.push(readRequest);\n    });\n    return promise;\n  }\n  function ReadableStreamCancel(stream, reason) {\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n      return Promise.resolve(undefined);\n    }\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    ReadableStreamClose(stream);\n    var sourceCancelPromise = stream._readableStreamController.__cancelSteps(reason);\n    return sourceCancelPromise.then(function () {\n      return undefined;\n    });\n  }\n  function ReadableStreamClose(stream) {\n    assert(stream._state === 'readable');\n    stream._state = 'closed';\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return undefined;\n    }\n    if (IsReadableStreamDefaultReader(reader) === true) {\n      for (var i = 0; i < reader._readRequests.length; i++) {\n        var _resolve = reader._readRequests[i]._resolve;\n        _resolve(CreateIterResultObject(undefined, true));\n      }\n      reader._readRequests = [];\n    }\n    defaultReaderClosedPromiseResolve(reader);\n    return undefined;\n  }\n  function ReadableStreamError(stream, e) {\n    assert(IsReadableStream(stream) === true, 'stream must be ReadableStream');\n    assert(stream._state === 'readable', 'state must be readable');\n    stream._state = 'errored';\n    stream._storedError = e;\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return undefined;\n    }\n    if (IsReadableStreamDefaultReader(reader) === true) {\n      for (var i = 0; i < reader._readRequests.length; i++) {\n        var readRequest = reader._readRequests[i];\n        readRequest._reject(e);\n      }\n      reader._readRequests = [];\n    } else {\n      assert(IsReadableStreamBYOBReader(reader), 'reader must be ReadableStreamBYOBReader');\n      for (var _i = 0; _i < reader._readIntoRequests.length; _i++) {\n        var readIntoRequest = reader._readIntoRequests[_i];\n        readIntoRequest._reject(e);\n      }\n      reader._readIntoRequests = [];\n    }\n    defaultReaderClosedPromiseReject(reader, e);\n    reader._closedPromise.catch(function () {});\n  }\n  function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n    var reader = stream._reader;\n    assert(reader._readIntoRequests.length > 0);\n    var readIntoRequest = reader._readIntoRequests.shift();\n    readIntoRequest._resolve(CreateIterResultObject(chunk, done));\n  }\n  function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n    var reader = stream._reader;\n    assert(reader._readRequests.length > 0);\n    var readRequest = reader._readRequests.shift();\n    readRequest._resolve(CreateIterResultObject(chunk, done));\n  }\n  function ReadableStreamGetNumReadIntoRequests(stream) {\n    return stream._reader._readIntoRequests.length;\n  }\n  function ReadableStreamGetNumReadRequests(stream) {\n    return stream._reader._readRequests.length;\n  }\n  function ReadableStreamHasBYOBReader(stream) {\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return false;\n    }\n    if (IsReadableStreamBYOBReader(reader) === false) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamHasDefaultReader(stream) {\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return false;\n    }\n    if (IsReadableStreamDefaultReader(reader) === false) {\n      return false;\n    }\n    return true;\n  }\n  var ReadableStreamDefaultReader = function () {\n    function ReadableStreamDefaultReader(stream) {\n      _classCallCheck(this, ReadableStreamDefaultReader);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableStreamDefaultReader can only be constructed with a ReadableStream instance');\n      }\n      if (IsReadableStreamLocked(stream) === true) {\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n      }\n      ReadableStreamReaderGenericInitialize(this, stream);\n      this._readRequests = [];\n    }\n    _createClass(ReadableStreamDefaultReader, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n      }\n    }, {\n      key: 'read',\n      value: function read() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('read'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('read from'));\n        }\n        return ReadableStreamDefaultReaderRead(this);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          throw defaultReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n          return;\n        }\n        if (this._readRequests.length > 0) {\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }]);\n    return ReadableStreamDefaultReader;\n  }();\n  var ReadableStreamBYOBReader = function () {\n    function ReadableStreamBYOBReader(stream) {\n      _classCallCheck(this, ReadableStreamBYOBReader);\n      if (!IsReadableStream(stream)) {\n        throw new TypeError('ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a ' + 'byte source');\n      }\n      if (IsReadableByteStreamController(stream._readableStreamController) === false) {\n        throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' + 'source');\n      }\n      if (IsReadableStreamLocked(stream)) {\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n      }\n      ReadableStreamReaderGenericInitialize(this, stream);\n      this._readIntoRequests = [];\n    }\n    _createClass(ReadableStreamBYOBReader, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n      }\n    }, {\n      key: 'read',\n      value: function read(view) {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('read'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('read from'));\n        }\n        if (!ArrayBuffer.isView(view)) {\n          return Promise.reject(new TypeError('view must be an array buffer view'));\n        }\n        if (view.byteLength === 0) {\n          return Promise.reject(new TypeError('view must have non-zero byteLength'));\n        }\n        return ReadableStreamBYOBReaderRead(this, view);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (!IsReadableStreamBYOBReader(this)) {\n          throw byobReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n          return;\n        }\n        if (this._readIntoRequests.length > 0) {\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }]);\n    return ReadableStreamBYOBReader;\n  }();\n  function IsReadableStreamBYOBReader(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamDefaultReader(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamReaderGenericInitialize(reader, stream) {\n    reader._ownerReadableStream = stream;\n    stream._reader = reader;\n    if (stream._state === 'readable') {\n      defaultReaderClosedPromiseInitialize(reader);\n    } else if (stream._state === 'closed') {\n      defaultReaderClosedPromiseInitializeAsResolved(reader);\n    } else {\n      assert(stream._state === 'errored', 'state must be errored');\n      defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n      reader._closedPromise.catch(function () {});\n    }\n  }\n  function ReadableStreamReaderGenericCancel(reader, reason) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    return ReadableStreamCancel(stream, reason);\n  }\n  function ReadableStreamReaderGenericRelease(reader) {\n    assert(reader._ownerReadableStream !== undefined);\n    assert(reader._ownerReadableStream._reader === reader);\n    if (reader._ownerReadableStream._state === 'readable') {\n      defaultReaderClosedPromiseReject(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n    } else {\n      defaultReaderClosedPromiseResetToRejected(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n    }\n    reader._closedPromise.catch(function () {});\n    reader._ownerReadableStream._reader = undefined;\n    reader._ownerReadableStream = undefined;\n  }\n  function ReadableStreamBYOBReaderRead(reader, view) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    stream._disturbed = true;\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    return ReadableByteStreamControllerPullInto(stream._readableStreamController, view);\n  }\n  function ReadableStreamDefaultReaderRead(reader) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n      return Promise.resolve(CreateIterResultObject(undefined, true));\n    }\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(stream._state === 'readable');\n    return stream._readableStreamController.__pullSteps();\n  }\n  var ReadableStreamDefaultController = function () {\n    function ReadableStreamDefaultController(stream, underlyingSource, size, highWaterMark) {\n      _classCallCheck(this, ReadableStreamDefaultController);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableStreamDefaultController can only be constructed with a ReadableStream instance');\n      }\n      if (stream._readableStreamController !== undefined) {\n        throw new TypeError('ReadableStreamDefaultController instances can only be created by the ReadableStream constructor');\n      }\n      this._controlledReadableStream = stream;\n      this._underlyingSource = underlyingSource;\n      this._queue = undefined;\n      this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._started = false;\n      this._closeRequested = false;\n      this._pullAgain = false;\n      this._pulling = false;\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n      this._strategySize = normalizedStrategy.size;\n      this._strategyHWM = normalizedStrategy.highWaterMark;\n      var controller = this;\n      var startResult = InvokeOrNoop(underlyingSource, 'start', [this]);\n      Promise.resolve(startResult).then(function () {\n        controller._started = true;\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }, function (r) {\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, r);\n      }).catch(rethrowAssertionErrorRejection);\n    }\n    _createClass(ReadableStreamDefaultController, [{\n      key: 'close',\n      value: function close() {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('close');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('The stream has already been closed; do not close it again!');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n        }\n        ReadableStreamDefaultControllerClose(this);\n      }\n    }, {\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('enqueue');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('stream is closed or draining');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n        }\n        return ReadableStreamDefaultControllerEnqueue(this, chunk);\n      }\n    }, {\n      key: 'error',\n      value: function error(e) {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('error');\n        }\n        var stream = this._controlledReadableStream;\n        if (stream._state !== 'readable') {\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n        }\n        ReadableStreamDefaultControllerError(this, e);\n      }\n    }, {\n      key: '__cancelSteps',\n      value: function __cancelSteps(reason) {\n        ResetQueue(this);\n        return PromiseInvokeOrNoop(this._underlyingSource, 'cancel', [reason]);\n      }\n    }, {\n      key: '__pullSteps',\n      value: function __pullSteps() {\n        var stream = this._controlledReadableStream;\n        if (this._queue.length > 0) {\n          var chunk = DequeueValue(this);\n          if (this._closeRequested === true && this._queue.length === 0) {\n            ReadableStreamClose(stream);\n          } else {\n            ReadableStreamDefaultControllerCallPullIfNeeded(this);\n          }\n          return Promise.resolve(CreateIterResultObject(chunk, false));\n        }\n        var pendingPromise = ReadableStreamAddReadRequest(stream);\n        ReadableStreamDefaultControllerCallPullIfNeeded(this);\n        return pendingPromise;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('desiredSize');\n        }\n        return ReadableStreamDefaultControllerGetDesiredSize(this);\n      }\n    }]);\n    return ReadableStreamDefaultController;\n  }();\n  function IsReadableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSource')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n    var shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n    if (shouldPull === false) {\n      return undefined;\n    }\n    if (controller._pulling === true) {\n      controller._pullAgain = true;\n      return undefined;\n    }\n    assert(controller._pullAgain === false);\n    controller._pulling = true;\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingSource, 'pull', [controller]);\n    pullPromise.then(function () {\n      controller._pulling = false;\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        return ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }\n      return undefined;\n    }, function (e) {\n      ReadableStreamDefaultControllerErrorIfNeeded(controller, e);\n    }).catch(rethrowAssertionErrorRejection);\n    return undefined;\n  }\n  function ReadableStreamDefaultControllerShouldCallPull(controller) {\n    var stream = controller._controlledReadableStream;\n    if (stream._state === 'closed' || stream._state === 'errored') {\n      return false;\n    }\n    if (controller._closeRequested === true) {\n      return false;\n    }\n    if (controller._started === false) {\n      return false;\n    }\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      return true;\n    }\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n    if (desiredSize > 0) {\n      return true;\n    }\n    return false;\n  }\n  function ReadableStreamDefaultControllerClose(controller) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    controller._closeRequested = true;\n    if (controller._queue.length === 0) {\n      ReadableStreamClose(stream);\n    }\n  }\n  function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      ReadableStreamFulfillReadRequest(stream, chunk, false);\n    } else {\n      var chunkSize = 1;\n      if (controller._strategySize !== undefined) {\n        var strategySize = controller._strategySize;\n        try {\n          chunkSize = strategySize(chunk);\n        } catch (chunkSizeE) {\n          ReadableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n          throw chunkSizeE;\n        }\n      }\n      try {\n        EnqueueValueWithSize(controller, chunk, chunkSize);\n      } catch (enqueueE) {\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n        throw enqueueE;\n      }\n    }\n    ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    return undefined;\n  }\n  function ReadableStreamDefaultControllerError(controller, e) {\n    var stream = controller._controlledReadableStream;\n    assert(stream._state === 'readable');\n    ResetQueue(controller);\n    ReadableStreamError(stream, e);\n  }\n  function ReadableStreamDefaultControllerErrorIfNeeded(controller, e) {\n    if (controller._controlledReadableStream._state === 'readable') {\n      ReadableStreamDefaultControllerError(controller, e);\n    }\n  }\n  function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n    var stream = controller._controlledReadableStream;\n    var state = stream._state;\n    if (state === 'errored') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  var ReadableStreamBYOBRequest = function () {\n    function ReadableStreamBYOBRequest(controller, view) {\n      _classCallCheck(this, ReadableStreamBYOBRequest);\n      this._associatedReadableByteStreamController = controller;\n      this._view = view;\n    }\n    _createClass(ReadableStreamBYOBRequest, [{\n      key: 'respond',\n      value: function respond(bytesWritten) {\n        if (IsReadableStreamBYOBRequest(this) === false) {\n          throw byobRequestBrandCheckException('respond');\n        }\n        if (this._associatedReadableByteStreamController === undefined) {\n          throw new TypeError('This BYOB request has been invalidated');\n        }\n        ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n      }\n    }, {\n      key: 'respondWithNewView',\n      value: function respondWithNewView(view) {\n        if (IsReadableStreamBYOBRequest(this) === false) {\n          throw byobRequestBrandCheckException('respond');\n        }\n        if (this._associatedReadableByteStreamController === undefined) {\n          throw new TypeError('This BYOB request has been invalidated');\n        }\n        if (!ArrayBuffer.isView(view)) {\n          throw new TypeError('You can only respond with array buffer views');\n        }\n        ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n      }\n    }, {\n      key: 'view',\n      get: function get() {\n        return this._view;\n      }\n    }]);\n    return ReadableStreamBYOBRequest;\n  }();\n  var ReadableByteStreamController = function () {\n    function ReadableByteStreamController(stream, underlyingByteSource, highWaterMark) {\n      _classCallCheck(this, ReadableByteStreamController);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableByteStreamController can only be constructed with a ReadableStream instance given ' + 'a byte source');\n      }\n      if (stream._readableStreamController !== undefined) {\n        throw new TypeError('ReadableByteStreamController instances can only be created by the ReadableStream constructor given a byte ' + 'source');\n      }\n      this._controlledReadableStream = stream;\n      this._underlyingByteSource = underlyingByteSource;\n      this._pullAgain = false;\n      this._pulling = false;\n      ReadableByteStreamControllerClearPendingPullIntos(this);\n      this._queue = this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._closeRequested = false;\n      this._started = false;\n      this._strategyHWM = ValidateAndNormalizeHighWaterMark(highWaterMark);\n      var autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n      if (autoAllocateChunkSize !== undefined) {\n        if (Number.isInteger(autoAllocateChunkSize) === false || autoAllocateChunkSize <= 0) {\n          throw new RangeError('autoAllocateChunkSize must be a positive integer');\n        }\n      }\n      this._autoAllocateChunkSize = autoAllocateChunkSize;\n      this._pendingPullIntos = [];\n      var controller = this;\n      var startResult = InvokeOrNoop(underlyingByteSource, 'start', [this]);\n      Promise.resolve(startResult).then(function () {\n        controller._started = true;\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }, function (r) {\n        if (stream._state === 'readable') {\n          ReadableByteStreamControllerError(controller, r);\n        }\n      }).catch(rethrowAssertionErrorRejection);\n    }\n    _createClass(ReadableByteStreamController, [{\n      key: 'close',\n      value: function close() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('close');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('The stream has already been closed; do not close it again!');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n        }\n        ReadableByteStreamControllerClose(this);\n      }\n    }, {\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('enqueue');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('stream is closed or draining');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n        }\n        if (!ArrayBuffer.isView(chunk)) {\n          throw new TypeError('You can only enqueue array buffer views when using a ReadableByteStreamController');\n        }\n        ReadableByteStreamControllerEnqueue(this, chunk);\n      }\n    }, {\n      key: 'error',\n      value: function error(e) {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('error');\n        }\n        var stream = this._controlledReadableStream;\n        if (stream._state !== 'readable') {\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n        }\n        ReadableByteStreamControllerError(this, e);\n      }\n    }, {\n      key: '__cancelSteps',\n      value: function __cancelSteps(reason) {\n        if (this._pendingPullIntos.length > 0) {\n          var firstDescriptor = this._pendingPullIntos[0];\n          firstDescriptor.bytesFilled = 0;\n        }\n        ResetQueue(this);\n        return PromiseInvokeOrNoop(this._underlyingByteSource, 'cancel', [reason]);\n      }\n    }, {\n      key: '__pullSteps',\n      value: function __pullSteps() {\n        var stream = this._controlledReadableStream;\n        assert(ReadableStreamHasDefaultReader(stream) === true);\n        if (this._queueTotalSize > 0) {\n          assert(ReadableStreamGetNumReadRequests(stream) === 0);\n          var entry = this._queue.shift();\n          this._queueTotalSize -= entry.byteLength;\n          ReadableByteStreamControllerHandleQueueDrain(this);\n          var view = void 0;\n          try {\n            view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n          } catch (viewE) {\n            return Promise.reject(viewE);\n          }\n          return Promise.resolve(CreateIterResultObject(view, false));\n        }\n        var autoAllocateChunkSize = this._autoAllocateChunkSize;\n        if (autoAllocateChunkSize !== undefined) {\n          var buffer = void 0;\n          try {\n            buffer = new ArrayBuffer(autoAllocateChunkSize);\n          } catch (bufferE) {\n            return Promise.reject(bufferE);\n          }\n          var pullIntoDescriptor = {\n            buffer: buffer,\n            byteOffset: 0,\n            byteLength: autoAllocateChunkSize,\n            bytesFilled: 0,\n            elementSize: 1,\n            ctor: Uint8Array,\n            readerType: 'default'\n          };\n          this._pendingPullIntos.push(pullIntoDescriptor);\n        }\n        var promise = ReadableStreamAddReadRequest(stream);\n        ReadableByteStreamControllerCallPullIfNeeded(this);\n        return promise;\n      }\n    }, {\n      key: 'byobRequest',\n      get: function get() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('byobRequest');\n        }\n        if (this._byobRequest === undefined && this._pendingPullIntos.length > 0) {\n          var firstDescriptor = this._pendingPullIntos[0];\n          var view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n          this._byobRequest = new ReadableStreamBYOBRequest(this, view);\n        }\n        return this._byobRequest;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('desiredSize');\n        }\n        return ReadableByteStreamControllerGetDesiredSize(this);\n      }\n    }]);\n    return ReadableByteStreamController;\n  }();\n  function IsReadableByteStreamController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingByteSource')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamBYOBRequest(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n    var shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n    if (shouldPull === false) {\n      return undefined;\n    }\n    if (controller._pulling === true) {\n      controller._pullAgain = true;\n      return undefined;\n    }\n    assert(controller._pullAgain === false);\n    controller._pulling = true;\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingByteSource, 'pull', [controller]);\n    pullPromise.then(function () {\n      controller._pulling = false;\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }\n    }, function (e) {\n      if (controller._controlledReadableStream._state === 'readable') {\n        ReadableByteStreamControllerError(controller, e);\n      }\n    }).catch(rethrowAssertionErrorRejection);\n    return undefined;\n  }\n  function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    controller._pendingPullIntos = [];\n  }\n  function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n    assert(stream._state !== 'errored', 'state must not be errored');\n    var done = false;\n    if (stream._state === 'closed') {\n      assert(pullIntoDescriptor.bytesFilled === 0);\n      done = true;\n    }\n    var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n    if (pullIntoDescriptor.readerType === 'default') {\n      ReadableStreamFulfillReadRequest(stream, filledView, done);\n    } else {\n      assert(pullIntoDescriptor.readerType === 'byob');\n      ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n    }\n  }\n  function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n    var bytesFilled = pullIntoDescriptor.bytesFilled;\n    var elementSize = pullIntoDescriptor.elementSize;\n    assert(bytesFilled <= pullIntoDescriptor.byteLength);\n    assert(bytesFilled % elementSize === 0);\n    return new pullIntoDescriptor.ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n  }\n  function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n    controller._queue.push({\n      buffer: buffer,\n      byteOffset: byteOffset,\n      byteLength: byteLength\n    });\n    controller._queueTotalSize += byteLength;\n  }\n  function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n    var elementSize = pullIntoDescriptor.elementSize;\n    var currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n    var maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n    var maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n    var maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n    var totalBytesToCopyRemaining = maxBytesToCopy;\n    var ready = false;\n    if (maxAlignedBytes > currentAlignedBytes) {\n      totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n      ready = true;\n    }\n    var queue = controller._queue;\n    while (totalBytesToCopyRemaining > 0) {\n      var headOfQueue = queue[0];\n      var bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n      var destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n      ArrayBufferCopy(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n      if (headOfQueue.byteLength === bytesToCopy) {\n        queue.shift();\n      } else {\n        headOfQueue.byteOffset += bytesToCopy;\n        headOfQueue.byteLength -= bytesToCopy;\n      }\n      controller._queueTotalSize -= bytesToCopy;\n      ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n      totalBytesToCopyRemaining -= bytesToCopy;\n    }\n    if (ready === false) {\n      assert(controller._queueTotalSize === 0, 'queue must be empty');\n      assert(pullIntoDescriptor.bytesFilled > 0);\n      assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);\n    }\n    return ready;\n  }\n  function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n    assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos[0] === pullIntoDescriptor);\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    pullIntoDescriptor.bytesFilled += size;\n  }\n  function ReadableByteStreamControllerHandleQueueDrain(controller) {\n    assert(controller._controlledReadableStream._state === 'readable');\n    if (controller._queueTotalSize === 0 && controller._closeRequested === true) {\n      ReadableStreamClose(controller._controlledReadableStream);\n    } else {\n      ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n  }\n  function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n    if (controller._byobRequest === undefined) {\n      return;\n    }\n    controller._byobRequest._associatedReadableByteStreamController = undefined;\n    controller._byobRequest._view = undefined;\n    controller._byobRequest = undefined;\n  }\n  function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n    assert(controller._closeRequested === false);\n    while (controller._pendingPullIntos.length > 0) {\n      if (controller._queueTotalSize === 0) {\n        return;\n      }\n      var pullIntoDescriptor = controller._pendingPullIntos[0];\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n      }\n    }\n  }\n  function ReadableByteStreamControllerPullInto(controller, view) {\n    var stream = controller._controlledReadableStream;\n    var elementSize = 1;\n    if (view.constructor !== DataView) {\n      elementSize = view.constructor.BYTES_PER_ELEMENT;\n    }\n    var ctor = view.constructor;\n    var pullIntoDescriptor = {\n      buffer: view.buffer,\n      byteOffset: view.byteOffset,\n      byteLength: view.byteLength,\n      bytesFilled: 0,\n      elementSize: elementSize,\n      ctor: ctor,\n      readerType: 'byob'\n    };\n    if (controller._pendingPullIntos.length > 0) {\n      pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n      controller._pendingPullIntos.push(pullIntoDescriptor);\n      return ReadableStreamAddReadIntoRequest(stream);\n    }\n    if (stream._state === 'closed') {\n      var emptyView = new view.constructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n      return Promise.resolve(CreateIterResultObject(emptyView, true));\n    }\n    if (controller._queueTotalSize > 0) {\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n        var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n        ReadableByteStreamControllerHandleQueueDrain(controller);\n        return Promise.resolve(CreateIterResultObject(filledView, false));\n      }\n      if (controller._closeRequested === true) {\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n        ReadableByteStreamControllerError(controller, e);\n        return Promise.reject(e);\n      }\n    }\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n    controller._pendingPullIntos.push(pullIntoDescriptor);\n    var promise = ReadableStreamAddReadIntoRequest(stream);\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n    return promise;\n  }\n  function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n    firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n    assert(firstDescriptor.bytesFilled === 0, 'bytesFilled must be 0');\n    var stream = controller._controlledReadableStream;\n    if (ReadableStreamHasBYOBReader(stream) === true) {\n      while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n        var pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n        ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n      }\n    }\n  }\n  function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n    if (pullIntoDescriptor.bytesFilled + bytesWritten > pullIntoDescriptor.byteLength) {\n      throw new RangeError('bytesWritten out of range');\n    }\n    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n    if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n      return;\n    }\n    ReadableByteStreamControllerShiftPendingPullInto(controller);\n    var remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n    if (remainderSize > 0) {\n      var end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n      var remainder = pullIntoDescriptor.buffer.slice(end - remainderSize, end);\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n    }\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n    pullIntoDescriptor.bytesFilled -= remainderSize;\n    ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n  }\n  function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n    var firstDescriptor = controller._pendingPullIntos[0];\n    var stream = controller._controlledReadableStream;\n    if (stream._state === 'closed') {\n      if (bytesWritten !== 0) {\n        throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n      }\n      ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n    } else {\n      assert(stream._state === 'readable');\n      ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n    }\n  }\n  function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n    var descriptor = controller._pendingPullIntos.shift();\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    return descriptor;\n  }\n  function ReadableByteStreamControllerShouldCallPull(controller) {\n    var stream = controller._controlledReadableStream;\n    if (stream._state !== 'readable') {\n      return false;\n    }\n    if (controller._closeRequested === true) {\n      return false;\n    }\n    if (controller._started === false) {\n      return false;\n    }\n    if (ReadableStreamHasDefaultReader(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      return true;\n    }\n    if (ReadableStreamHasBYOBReader(stream) === true && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n      return true;\n    }\n    if (ReadableByteStreamControllerGetDesiredSize(controller) > 0) {\n      return true;\n    }\n    return false;\n  }\n  function ReadableByteStreamControllerClose(controller) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    if (controller._queueTotalSize > 0) {\n      controller._closeRequested = true;\n      return;\n    }\n    if (controller._pendingPullIntos.length > 0) {\n      var firstPendingPullInto = controller._pendingPullIntos[0];\n      if (firstPendingPullInto.bytesFilled > 0) {\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n        ReadableByteStreamControllerError(controller, e);\n        throw e;\n      }\n    }\n    ReadableStreamClose(stream);\n  }\n  function ReadableByteStreamControllerEnqueue(controller, chunk) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    var buffer = chunk.buffer;\n    var byteOffset = chunk.byteOffset;\n    var byteLength = chunk.byteLength;\n    var transferredBuffer = TransferArrayBuffer(buffer);\n    if (ReadableStreamHasDefaultReader(stream) === true) {\n      if (ReadableStreamGetNumReadRequests(stream) === 0) {\n        ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n      } else {\n        assert(controller._queue.length === 0);\n        var transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n        ReadableStreamFulfillReadRequest(stream, transferredView, false);\n      }\n    } else if (ReadableStreamHasBYOBReader(stream) === true) {\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n      ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n    } else {\n      assert(IsReadableStreamLocked(stream) === false, 'stream must not be locked');\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    }\n  }\n  function ReadableByteStreamControllerError(controller, e) {\n    var stream = controller._controlledReadableStream;\n    assert(stream._state === 'readable');\n    ReadableByteStreamControllerClearPendingPullIntos(controller);\n    ResetQueue(controller);\n    ReadableStreamError(stream, e);\n  }\n  function ReadableByteStreamControllerGetDesiredSize(controller) {\n    var stream = controller._controlledReadableStream;\n    var state = stream._state;\n    if (state === 'errored') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n    bytesWritten = Number(bytesWritten);\n    if (IsFiniteNonNegativeNumber(bytesWritten) === false) {\n      throw new RangeError('bytesWritten must be a finite');\n    }\n    assert(controller._pendingPullIntos.length > 0);\n    ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n  }\n  function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n    assert(controller._pendingPullIntos.length > 0);\n    var firstDescriptor = controller._pendingPullIntos[0];\n    if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n      throw new RangeError('The region specified by view does not match byobRequest');\n    }\n    if (firstDescriptor.byteLength !== view.byteLength) {\n      throw new RangeError('The buffer of view has different capacity than byobRequest');\n    }\n    firstDescriptor.buffer = view.buffer;\n    ReadableByteStreamControllerRespondInternal(controller, view.byteLength);\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('ReadableStream.prototype.' + name + ' can only be used on a ReadableStream');\n  }\n  function readerLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released reader');\n  }\n  function defaultReaderBrandCheckException(name) {\n    return new TypeError('ReadableStreamDefaultReader.prototype.' + name + ' can only be used on a ReadableStreamDefaultReader');\n  }\n  function defaultReaderClosedPromiseInitialize(reader) {\n    reader._closedPromise = new Promise(function (resolve, reject) {\n      reader._closedPromise_resolve = resolve;\n      reader._closedPromise_reject = reject;\n    });\n  }\n  function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n    reader._closedPromise = Promise.reject(reason);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n    reader._closedPromise = Promise.resolve(undefined);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseReject(reader, reason) {\n    assert(reader._closedPromise_resolve !== undefined);\n    assert(reader._closedPromise_reject !== undefined);\n    reader._closedPromise_reject(reason);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n    assert(reader._closedPromise_resolve === undefined);\n    assert(reader._closedPromise_reject === undefined);\n    reader._closedPromise = Promise.reject(reason);\n  }\n  function defaultReaderClosedPromiseResolve(reader) {\n    assert(reader._closedPromise_resolve !== undefined);\n    assert(reader._closedPromise_reject !== undefined);\n    reader._closedPromise_resolve(undefined);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function byobReaderBrandCheckException(name) {\n    return new TypeError('ReadableStreamBYOBReader.prototype.' + name + ' can only be used on a ReadableStreamBYOBReader');\n  }\n  function defaultControllerBrandCheckException(name) {\n    return new TypeError('ReadableStreamDefaultController.prototype.' + name + ' can only be used on a ReadableStreamDefaultController');\n  }\n  function byobRequestBrandCheckException(name) {\n    return new TypeError('ReadableStreamBYOBRequest.prototype.' + name + ' can only be used on a ReadableStreamBYOBRequest');\n  }\n  function byteStreamControllerBrandCheckException(name) {\n    return new TypeError('ReadableByteStreamController.prototype.' + name + ' can only be used on a ReadableByteStreamController');\n  }\n  function ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise) {\n    try {\n      Promise.prototype.then.call(promise, undefined, function () {});\n    } catch (e) {}\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var transformStream = __w_pdfjs_require__(6);\n  var readableStream = __w_pdfjs_require__(4);\n  var writableStream = __w_pdfjs_require__(2);\n  exports.TransformStream = transformStream.TransformStream;\n  exports.ReadableStream = readableStream.ReadableStream;\n  exports.IsReadableStreamDisturbed = readableStream.IsReadableStreamDisturbed;\n  exports.ReadableStreamDefaultControllerClose = readableStream.ReadableStreamDefaultControllerClose;\n  exports.ReadableStreamDefaultControllerEnqueue = readableStream.ReadableStreamDefaultControllerEnqueue;\n  exports.ReadableStreamDefaultControllerError = readableStream.ReadableStreamDefaultControllerError;\n  exports.ReadableStreamDefaultControllerGetDesiredSize = readableStream.ReadableStreamDefaultControllerGetDesiredSize;\n  exports.AcquireWritableStreamDefaultWriter = writableStream.AcquireWritableStreamDefaultWriter;\n  exports.IsWritableStream = writableStream.IsWritableStream;\n  exports.IsWritableStreamLocked = writableStream.IsWritableStreamLocked;\n  exports.WritableStream = writableStream.WritableStream;\n  exports.WritableStreamAbort = writableStream.WritableStreamAbort;\n  exports.WritableStreamDefaultControllerError = writableStream.WritableStreamDefaultControllerError;\n  exports.WritableStreamDefaultWriterCloseWithErrorPropagation = writableStream.WritableStreamDefaultWriterCloseWithErrorPropagation;\n  exports.WritableStreamDefaultWriterRelease = writableStream.WritableStreamDefaultWriterRelease;\n  exports.WritableStreamDefaultWriterWrite = writableStream.WritableStreamDefaultWriterWrite;\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(1),\n      assert = _require.assert;\n  var _require2 = __w_pdfjs_require__(0),\n      InvokeOrNoop = _require2.InvokeOrNoop,\n      PromiseInvokeOrPerformFallback = _require2.PromiseInvokeOrPerformFallback,\n      PromiseInvokeOrNoop = _require2.PromiseInvokeOrNoop,\n      typeIsObject = _require2.typeIsObject;\n  var _require3 = __w_pdfjs_require__(4),\n      ReadableStream = _require3.ReadableStream,\n      ReadableStreamDefaultControllerClose = _require3.ReadableStreamDefaultControllerClose,\n      ReadableStreamDefaultControllerEnqueue = _require3.ReadableStreamDefaultControllerEnqueue,\n      ReadableStreamDefaultControllerError = _require3.ReadableStreamDefaultControllerError,\n      ReadableStreamDefaultControllerGetDesiredSize = _require3.ReadableStreamDefaultControllerGetDesiredSize;\n  var _require4 = __w_pdfjs_require__(2),\n      WritableStream = _require4.WritableStream,\n      WritableStreamDefaultControllerError = _require4.WritableStreamDefaultControllerError;\n  function TransformStreamCloseReadable(transformStream) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    if (transformStream._readableClosed === true) {\n      throw new TypeError('Readable side is already closed');\n    }\n    TransformStreamCloseReadableInternal(transformStream);\n  }\n  function TransformStreamEnqueueToReadable(transformStream, chunk) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    if (transformStream._readableClosed === true) {\n      throw new TypeError('Readable side is already closed');\n    }\n    var controller = transformStream._readableController;\n    try {\n      ReadableStreamDefaultControllerEnqueue(controller, chunk);\n    } catch (e) {\n      transformStream._readableClosed = true;\n      TransformStreamErrorIfNeeded(transformStream, e);\n      throw transformStream._storedError;\n    }\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n    var maybeBackpressure = desiredSize <= 0;\n    if (maybeBackpressure === true && transformStream._backpressure === false) {\n      TransformStreamSetBackpressure(transformStream, true);\n    }\n  }\n  function TransformStreamError(transformStream, e) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    TransformStreamErrorInternal(transformStream, e);\n  }\n  function TransformStreamCloseReadableInternal(transformStream) {\n    assert(transformStream._errored === false);\n    assert(transformStream._readableClosed === false);\n    try {\n      ReadableStreamDefaultControllerClose(transformStream._readableController);\n    } catch (e) {\n      assert(false);\n    }\n    transformStream._readableClosed = true;\n  }\n  function TransformStreamErrorIfNeeded(transformStream, e) {\n    if (transformStream._errored === false) {\n      TransformStreamErrorInternal(transformStream, e);\n    }\n  }\n  function TransformStreamErrorInternal(transformStream, e) {\n    assert(transformStream._errored === false);\n    transformStream._errored = true;\n    transformStream._storedError = e;\n    if (transformStream._writableDone === false) {\n      WritableStreamDefaultControllerError(transformStream._writableController, e);\n    }\n    if (transformStream._readableClosed === false) {\n      ReadableStreamDefaultControllerError(transformStream._readableController, e);\n    }\n  }\n  function TransformStreamReadableReadyPromise(transformStream) {\n    assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n    if (transformStream._backpressure === false) {\n      return Promise.resolve();\n    }\n    assert(transformStream._backpressure === true, '_backpressure should have been initialized');\n    return transformStream._backpressureChangePromise;\n  }\n  function TransformStreamSetBackpressure(transformStream, backpressure) {\n    assert(transformStream._backpressure !== backpressure, 'TransformStreamSetBackpressure() should be called only when backpressure is changed');\n    if (transformStream._backpressureChangePromise !== undefined) {\n      transformStream._backpressureChangePromise_resolve(backpressure);\n    }\n    transformStream._backpressureChangePromise = new Promise(function (resolve) {\n      transformStream._backpressureChangePromise_resolve = resolve;\n    });\n    transformStream._backpressureChangePromise.then(function (resolution) {\n      assert(resolution !== backpressure, '_backpressureChangePromise should be fulfilled only when backpressure is changed');\n    });\n    transformStream._backpressure = backpressure;\n  }\n  function TransformStreamDefaultTransform(chunk, transformStreamController) {\n    var transformStream = transformStreamController._controlledTransformStream;\n    TransformStreamEnqueueToReadable(transformStream, chunk);\n    return Promise.resolve();\n  }\n  function TransformStreamTransform(transformStream, chunk) {\n    assert(transformStream._errored === false);\n    assert(transformStream._transforming === false);\n    assert(transformStream._backpressure === false);\n    transformStream._transforming = true;\n    var transformer = transformStream._transformer;\n    var controller = transformStream._transformStreamController;\n    var transformPromise = PromiseInvokeOrPerformFallback(transformer, 'transform', [chunk, controller], TransformStreamDefaultTransform, [chunk, controller]);\n    return transformPromise.then(function () {\n      transformStream._transforming = false;\n      return TransformStreamReadableReadyPromise(transformStream);\n    }, function (e) {\n      TransformStreamErrorIfNeeded(transformStream, e);\n      return Promise.reject(e);\n    });\n  }\n  function IsTransformStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n      return false;\n    }\n    return true;\n  }\n  function IsTransformStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  var TransformStreamSink = function () {\n    function TransformStreamSink(transformStream, startPromise) {\n      _classCallCheck(this, TransformStreamSink);\n      this._transformStream = transformStream;\n      this._startPromise = startPromise;\n    }\n    _createClass(TransformStreamSink, [{\n      key: 'start',\n      value: function start(c) {\n        var transformStream = this._transformStream;\n        transformStream._writableController = c;\n        return this._startPromise.then(function () {\n          return TransformStreamReadableReadyPromise(transformStream);\n        });\n      }\n    }, {\n      key: 'write',\n      value: function write(chunk) {\n        var transformStream = this._transformStream;\n        return TransformStreamTransform(transformStream, chunk);\n      }\n    }, {\n      key: 'abort',\n      value: function abort() {\n        var transformStream = this._transformStream;\n        transformStream._writableDone = true;\n        TransformStreamErrorInternal(transformStream, new TypeError('Writable side aborted'));\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        var transformStream = this._transformStream;\n        assert(transformStream._transforming === false);\n        transformStream._writableDone = true;\n        var flushPromise = PromiseInvokeOrNoop(transformStream._transformer, 'flush', [transformStream._transformStreamController]);\n        return flushPromise.then(function () {\n          if (transformStream._errored === true) {\n            return Promise.reject(transformStream._storedError);\n          }\n          if (transformStream._readableClosed === false) {\n            TransformStreamCloseReadableInternal(transformStream);\n          }\n          return Promise.resolve();\n        }).catch(function (r) {\n          TransformStreamErrorIfNeeded(transformStream, r);\n          return Promise.reject(transformStream._storedError);\n        });\n      }\n    }]);\n    return TransformStreamSink;\n  }();\n  var TransformStreamSource = function () {\n    function TransformStreamSource(transformStream, startPromise) {\n      _classCallCheck(this, TransformStreamSource);\n      this._transformStream = transformStream;\n      this._startPromise = startPromise;\n    }\n    _createClass(TransformStreamSource, [{\n      key: 'start',\n      value: function start(c) {\n        var transformStream = this._transformStream;\n        transformStream._readableController = c;\n        return this._startPromise.then(function () {\n          assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n          if (transformStream._backpressure === true) {\n            return Promise.resolve();\n          }\n          assert(transformStream._backpressure === false, '_backpressure should have been initialized');\n          return transformStream._backpressureChangePromise;\n        });\n      }\n    }, {\n      key: 'pull',\n      value: function pull() {\n        var transformStream = this._transformStream;\n        assert(transformStream._backpressure === true, 'pull() should be never called while _backpressure is false');\n        assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n        TransformStreamSetBackpressure(transformStream, false);\n        return transformStream._backpressureChangePromise;\n      }\n    }, {\n      key: 'cancel',\n      value: function cancel() {\n        var transformStream = this._transformStream;\n        transformStream._readableClosed = true;\n        TransformStreamErrorInternal(transformStream, new TypeError('Readable side canceled'));\n      }\n    }]);\n    return TransformStreamSource;\n  }();\n  var TransformStreamDefaultController = function () {\n    function TransformStreamDefaultController(transformStream) {\n      _classCallCheck(this, TransformStreamDefaultController);\n      if (IsTransformStream(transformStream) === false) {\n        throw new TypeError('TransformStreamDefaultController can only be ' + 'constructed with a TransformStream instance');\n      }\n      if (transformStream._transformStreamController !== undefined) {\n        throw new TypeError('TransformStreamDefaultController instances can ' + 'only be created by the TransformStream constructor');\n      }\n      this._controlledTransformStream = transformStream;\n    }\n    _createClass(TransformStreamDefaultController, [{\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('enqueue');\n        }\n        TransformStreamEnqueueToReadable(this._controlledTransformStream, chunk);\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('close');\n        }\n        TransformStreamCloseReadable(this._controlledTransformStream);\n      }\n    }, {\n      key: 'error',\n      value: function error(reason) {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('error');\n        }\n        TransformStreamError(this._controlledTransformStream, reason);\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('desiredSize');\n        }\n        var transformStream = this._controlledTransformStream;\n        var readableController = transformStream._readableController;\n        return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n      }\n    }]);\n    return TransformStreamDefaultController;\n  }();\n  var TransformStream = function () {\n    function TransformStream() {\n      var transformer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _classCallCheck(this, TransformStream);\n      this._transformer = transformer;\n      var readableStrategy = transformer.readableStrategy,\n          writableStrategy = transformer.writableStrategy;\n      this._transforming = false;\n      this._errored = false;\n      this._storedError = undefined;\n      this._writableController = undefined;\n      this._readableController = undefined;\n      this._transformStreamController = undefined;\n      this._writableDone = false;\n      this._readableClosed = false;\n      this._backpressure = undefined;\n      this._backpressureChangePromise = undefined;\n      this._backpressureChangePromise_resolve = undefined;\n      this._transformStreamController = new TransformStreamDefaultController(this);\n      var startPromise_resolve = void 0;\n      var startPromise = new Promise(function (resolve) {\n        startPromise_resolve = resolve;\n      });\n      var source = new TransformStreamSource(this, startPromise);\n      this._readable = new ReadableStream(source, readableStrategy);\n      var sink = new TransformStreamSink(this, startPromise);\n      this._writable = new WritableStream(sink, writableStrategy);\n      assert(this._writableController !== undefined);\n      assert(this._readableController !== undefined);\n      var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(this._readableController);\n      TransformStreamSetBackpressure(this, desiredSize <= 0);\n      var transformStream = this;\n      var startResult = InvokeOrNoop(transformer, 'start', [transformStream._transformStreamController]);\n      startPromise_resolve(startResult);\n      startPromise.catch(function (e) {\n        if (transformStream._errored === false) {\n          transformStream._errored = true;\n          transformStream._storedError = e;\n        }\n      });\n    }\n    _createClass(TransformStream, [{\n      key: 'readable',\n      get: function get() {\n        if (IsTransformStream(this) === false) {\n          throw streamBrandCheckException('readable');\n        }\n        return this._readable;\n      }\n    }, {\n      key: 'writable',\n      get: function get() {\n        if (IsTransformStream(this) === false) {\n          throw streamBrandCheckException('writable');\n        }\n        return this._writable;\n      }\n    }]);\n    return TransformStream;\n  }();\n  module.exports = { TransformStream: TransformStream };\n  function defaultControllerBrandCheckException(name) {\n    return new TypeError('TransformStreamDefaultController.prototype.' + name + ' can only be used on a TransformStreamDefaultController');\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('TransformStream.prototype.' + name + ' can only be used on a TransformStream');\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  module.exports = __w_pdfjs_require__(5);\n}]));\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkPdfManager = exports.LocalPdfManager = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _chunked_stream = __w_pdfjs_require__(72);\n\nvar _document = __w_pdfjs_require__(128);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar BasePdfManager = function BasePdfManagerClosure() {\n  function BasePdfManager() {\n    throw new Error('Cannot initialize BaseManagerManager');\n  }\n  BasePdfManager.prototype = {\n    get docId() {\n      return this._docId;\n    },\n    get password() {\n      return this._password;\n    },\n    get docBaseUrl() {\n      var docBaseUrl = null;\n      if (this._docBaseUrl) {\n        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\n        if (absoluteUrl) {\n          docBaseUrl = absoluteUrl.href;\n        } else {\n          (0, _util.warn)('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n        }\n      }\n      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\n    },\n    onLoadedStream: function BasePdfManager_onLoadedStream() {\n      throw new _util.NotImplementedException();\n    },\n    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n      return this.ensure(this.pdfDocument, prop, args);\n    },\n    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n      return this.ensure(this.pdfDocument.xref, prop, args);\n    },\n    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n      return this.ensure(this.pdfDocument.catalog, prop, args);\n    },\n    getPage: function BasePdfManager_getPage(pageIndex) {\n      return this.pdfDocument.getPage(pageIndex);\n    },\n    cleanup: function BasePdfManager_cleanup() {\n      return this.pdfDocument.cleanup();\n    },\n    ensure: function BasePdfManager_ensure(obj, prop, args) {\n      return new _util.NotImplementedException();\n    },\n    requestRange: function BasePdfManager_requestRange(begin, end) {\n      return new _util.NotImplementedException();\n    },\n    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n      return new _util.NotImplementedException();\n    },\n    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n      return new _util.NotImplementedException();\n    },\n    updatePassword: function BasePdfManager_updatePassword(password) {\n      this._password = password;\n    },\n    terminate: function BasePdfManager_terminate() {\n      return new _util.NotImplementedException();\n    }\n  };\n  return BasePdfManager;\n}();\nvar LocalPdfManager = function LocalPdfManagerClosure() {\n  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = password;\n    this._docBaseUrl = docBaseUrl;\n    this.evaluatorOptions = evaluatorOptions;\n    var stream = new _stream.Stream(data);\n    this.pdfDocument = new _document.PDFDocument(this, stream);\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n    this._loadedStreamCapability.resolve(stream);\n  }\n  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\n    ensure: function LocalPdfManager_ensure(obj, prop, args) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var value = obj[prop];\n          var result;\n          if (typeof value === 'function') {\n            result = value.apply(obj, args);\n          } else {\n            result = value;\n          }\n          resolve(result);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n    requestRange: function LocalPdfManager_requestRange(begin, end) {\n      return Promise.resolve();\n    },\n    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\n    onLoadedStream: function LocalPdfManager_onLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    terminate: function LocalPdfManager_terminate() {}\n  });\n  return LocalPdfManager;\n}();\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = args.password;\n    this._docBaseUrl = docBaseUrl;\n    this.msgHandler = args.msgHandler;\n    this.evaluatorOptions = evaluatorOptions;\n    var params = {\n      msgHandler: args.msgHandler,\n      url: args.url,\n      length: args.length,\n      disableAutoFetch: args.disableAutoFetch,\n      rangeChunkSize: args.rangeChunkSize\n    };\n    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\n    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\n  }\n  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\n    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n      var pdfManager = this;\n      return new Promise(function (resolve, reject) {\n        function ensureHelper() {\n          try {\n            var result;\n            var value = obj[prop];\n            if (typeof value === 'function') {\n              result = value.apply(obj, args);\n            } else {\n              result = value;\n            }\n            resolve(result);\n          } catch (e) {\n            if (!(e instanceof _util.MissingDataException)) {\n              reject(e);\n              return;\n            }\n            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n          }\n        }\n        ensureHelper();\n      });\n    },\n    requestRange: function NetworkPdfManager_requestRange(begin, end) {\n      return this.streamManager.requestRange(begin, end);\n    },\n    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n      this.streamManager.requestAllChunks();\n    },\n    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n      this.streamManager.onReceiveData({ chunk: chunk });\n    },\n    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n      return this.streamManager.onLoadedStream();\n    },\n    terminate: function NetworkPdfManager_terminate() {\n      this.streamManager.abort();\n    }\n  });\n  return NetworkPdfManager;\n}();\nexports.LocalPdfManager = LocalPdfManager;\nexports.NetworkPdfManager = NetworkPdfManager;\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFDocument = exports.Page = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _obj = __w_pdfjs_require__(73);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar _evaluator = __w_pdfjs_require__(77);\n\nvar _annotation = __w_pdfjs_require__(145);\n\nvar _crypto = __w_pdfjs_require__(76);\n\nvar _parser = __w_pdfjs_require__(34);\n\nvar _function = __w_pdfjs_require__(81);\n\nvar Page = function PageClosure() {\n  var DEFAULT_USER_UNIT = 1.0;\n  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n  function isAnnotationRenderable(annotation, intent) {\n    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n  }\n  function Page(_ref) {\n    var pdfManager = _ref.pdfManager,\n        xref = _ref.xref,\n        pageIndex = _ref.pageIndex,\n        pageDict = _ref.pageDict,\n        ref = _ref.ref,\n        fontCache = _ref.fontCache,\n        builtInCMapCache = _ref.builtInCMapCache,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.pageIndex = pageIndex;\n    this.pageDict = pageDict;\n    this.xref = xref;\n    this.ref = ref;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.evaluatorOptions = pdfManager.evaluatorOptions;\n    this.resourcesPromise = null;\n    var uniquePrefix = 'p' + this.pageIndex + '_';\n    var idCounters = { obj: 0 };\n    this.idFactory = {\n      createObjId: function createObjId() {\n        return uniquePrefix + ++idCounters.obj;\n      }\n    };\n  }\n  Page.prototype = {\n    getPageProp: function Page_getPageProp(key) {\n      return this.pageDict.get(key);\n    },\n    getInheritedPageProp: function Page_getInheritedPageProp(key, getArray) {\n      var dict = this.pageDict,\n          valueArray = null,\n          loopCount = 0;\n      var MAX_LOOP_COUNT = 100;\n      getArray = getArray || false;\n      while (dict) {\n        var value = getArray ? dict.getArray(key) : dict.get(key);\n        if (value !== undefined) {\n          if (!valueArray) {\n            valueArray = [];\n          }\n          valueArray.push(value);\n        }\n        if (++loopCount > MAX_LOOP_COUNT) {\n          (0, _util.warn)('getInheritedPageProp: maximum loop count exceeded for ' + key);\n          return valueArray ? valueArray[0] : undefined;\n        }\n        dict = dict.get('Parent');\n      }\n      if (!valueArray) {\n        return undefined;\n      }\n      if (valueArray.length === 1 || !(0, _primitives.isDict)(valueArray[0])) {\n        return valueArray[0];\n      }\n      return _primitives.Dict.merge(this.xref, valueArray);\n    },\n    get content() {\n      return this.getPageProp('Contents');\n    },\n    get resources() {\n      return (0, _util.shadow)(this, 'resources', this.getInheritedPageProp('Resources') || _primitives.Dict.empty);\n    },\n    get mediaBox() {\n      var mediaBox = this.getInheritedPageProp('MediaBox', true);\n      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\n        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n      }\n      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\n    },\n    get cropBox() {\n      var cropBox = this.getInheritedPageProp('CropBox', true);\n      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\n        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\n      }\n      return (0, _util.shadow)(this, 'cropBox', cropBox);\n    },\n    get userUnit() {\n      var obj = this.getPageProp('UserUnit');\n      if (!(0, _util.isNum)(obj) || obj <= 0) {\n        obj = DEFAULT_USER_UNIT;\n      }\n      return (0, _util.shadow)(this, 'userUnit', obj);\n    },\n    get view() {\n      var mediaBox = this.mediaBox,\n          cropBox = this.cropBox;\n      if (mediaBox === cropBox) {\n        return (0, _util.shadow)(this, 'view', mediaBox);\n      }\n      var intersection = _util.Util.intersect(cropBox, mediaBox);\n      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\n    },\n    get rotate() {\n      var rotate = this.getInheritedPageProp('Rotate') || 0;\n      if (rotate % 90 !== 0) {\n        rotate = 0;\n      } else if (rotate >= 360) {\n        rotate = rotate % 360;\n      } else if (rotate < 0) {\n        rotate = (rotate % 360 + 360) % 360;\n      }\n      return (0, _util.shadow)(this, 'rotate', rotate);\n    },\n    getContentStream: function Page_getContentStream() {\n      var content = this.content;\n      var stream;\n      if (Array.isArray(content)) {\n        var xref = this.xref;\n        var i,\n            n = content.length;\n        var streams = [];\n        for (i = 0; i < n; ++i) {\n          streams.push(xref.fetchIfRef(content[i]));\n        }\n        stream = new _stream.StreamsSequenceStream(streams);\n      } else if ((0, _primitives.isStream)(content)) {\n        stream = content;\n      } else {\n        stream = new _stream.NullStream();\n      }\n      return stream;\n    },\n    loadResources: function Page_loadResources(keys) {\n      var _this = this;\n\n      if (!this.resourcesPromise) {\n        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n      }\n      return this.resourcesPromise.then(function () {\n        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\n        return objectLoader.load();\n      });\n    },\n    getOperatorList: function getOperatorList(_ref2) {\n      var _this2 = this;\n\n      var handler = _ref2.handler,\n          task = _ref2.task,\n          intent = _ref2.intent,\n          renderInteractiveForms = _ref2.renderInteractiveForms;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var partialEvaluator = new _evaluator.PartialEvaluator({\n        pdfManager: this.pdfManager,\n        xref: this.xref,\n        handler: handler,\n        pageIndex: this.pageIndex,\n        idFactory: this.idFactory,\n        fontCache: this.fontCache,\n        builtInCMapCache: this.builtInCMapCache,\n        options: this.evaluatorOptions,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      });\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      var pageListPromise = dataPromises.then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            contentStream = _ref4[0];\n\n        var opList = new _evaluator.OperatorList(intent, handler, _this2.pageIndex);\n        handler.send('StartRenderPage', {\n          transparency: partialEvaluator.hasBlendModes(_this2.resources),\n          pageIndex: _this2.pageIndex,\n          intent: intent\n        });\n        return partialEvaluator.getOperatorList({\n          stream: contentStream,\n          task: task,\n          resources: _this2.resources,\n          operatorList: opList\n        }).then(function () {\n          return opList;\n        });\n      });\n      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\n      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            pageOpList = _ref6[0],\n            annotations = _ref6[1];\n\n        if (annotations.length === 0) {\n          pageOpList.flush(true);\n          return pageOpList;\n        }\n        var i,\n            ii,\n            opListPromises = [];\n        for (i = 0, ii = annotations.length; i < ii; i++) {\n          if (isAnnotationRenderable(annotations[i], intent)) {\n            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n          }\n        }\n        return Promise.all(opListPromises).then(function (opLists) {\n          pageOpList.addOp(_util.OPS.beginAnnotations, []);\n          for (i = 0, ii = opLists.length; i < ii; i++) {\n            pageOpList.addOpList(opLists[i]);\n          }\n          pageOpList.addOp(_util.OPS.endAnnotations, []);\n          pageOpList.flush(true);\n          return pageOpList;\n        });\n      });\n    },\n    extractTextContent: function extractTextContent(_ref7) {\n      var _this3 = this;\n\n      var handler = _ref7.handler,\n          task = _ref7.task,\n          normalizeWhitespace = _ref7.normalizeWhitespace,\n          sink = _ref7.sink,\n          combineTextItems = _ref7.combineTextItems;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      return dataPromises.then(function (_ref8) {\n        var _ref9 = _slicedToArray(_ref8, 1),\n            contentStream = _ref9[0];\n\n        var partialEvaluator = new _evaluator.PartialEvaluator({\n          pdfManager: _this3.pdfManager,\n          xref: _this3.xref,\n          handler: handler,\n          pageIndex: _this3.pageIndex,\n          idFactory: _this3.idFactory,\n          fontCache: _this3.fontCache,\n          builtInCMapCache: _this3.builtInCMapCache,\n          options: _this3.evaluatorOptions,\n          pdfFunctionFactory: _this3.pdfFunctionFactory\n        });\n        return partialEvaluator.getTextContent({\n          stream: contentStream,\n          task: task,\n          resources: _this3.resources,\n          normalizeWhitespace: normalizeWhitespace,\n          combineTextItems: combineTextItems,\n          sink: sink\n        });\n      });\n    },\n\n    getAnnotationsData: function Page_getAnnotationsData(intent) {\n      var annotations = this.annotations;\n      var annotationsData = [];\n      for (var i = 0, n = annotations.length; i < n; ++i) {\n        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n          annotationsData.push(annotations[i].data);\n        }\n      }\n      return annotationsData;\n    },\n    get annotations() {\n      var annotations = [];\n      var annotationRefs = this.getInheritedPageProp('Annots') || [];\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n        var annotationRef = annotationRefs[i];\n        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n        if (annotation) {\n          annotations.push(annotation);\n        }\n      }\n      return (0, _util.shadow)(this, 'annotations', annotations);\n    }\n  };\n  return Page;\n}();\nvar PDFDocument = function PDFDocumentClosure() {\n  var FINGERPRINT_FIRST_BYTES = 1024;\n  var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n  function PDFDocument(pdfManager, arg) {\n    var stream;\n    if ((0, _primitives.isStream)(arg)) {\n      stream = arg;\n    } else if ((0, _util.isArrayBuffer)(arg)) {\n      stream = new _stream.Stream(arg);\n    } else {\n      throw new Error('PDFDocument: Unknown argument type');\n    }\n    if (stream.length <= 0) {\n      throw new Error('PDFDocument: stream must have data');\n    }\n    this.pdfManager = pdfManager;\n    this.stream = stream;\n    this.xref = new _obj.XRef(stream, pdfManager);\n    var evaluatorOptions = pdfManager.evaluatorOptions;\n    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\n      xref: this.xref,\n      isEvalSupported: evaluatorOptions.isEvalSupported\n    });\n  }\n  function find(stream, needle, limit, backwards) {\n    var pos = stream.pos;\n    var end = stream.end;\n    var strBuf = [];\n    if (pos + limit > end) {\n      limit = end - pos;\n    }\n    for (var n = 0; n < limit; ++n) {\n      strBuf.push(String.fromCharCode(stream.getByte()));\n    }\n    var str = strBuf.join('');\n    stream.pos = pos;\n    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n    if (index === -1) {\n      return false;\n    }\n    stream.pos += index;\n    return true;\n  }\n  var DocumentInfoValidators = {\n    get entries() {\n      return (0, _util.shadow)(this, 'entries', {\n        Title: _util.isString,\n        Author: _util.isString,\n        Subject: _util.isString,\n        Keywords: _util.isString,\n        Creator: _util.isString,\n        Producer: _util.isString,\n        CreationDate: _util.isString,\n        ModDate: _util.isString,\n        Trapped: _primitives.isName\n      });\n    }\n  };\n  PDFDocument.prototype = {\n    parse: function PDFDocument_parse(recoveryMode) {\n      this.setup(recoveryMode);\n      var version = this.catalog.catDict.get('Version');\n      if ((0, _primitives.isName)(version)) {\n        this.pdfFormatVersion = version.name;\n      }\n      try {\n        this.acroForm = this.catalog.catDict.get('AcroForm');\n        if (this.acroForm) {\n          this.xfa = this.acroForm.get('XFA');\n          var fields = this.acroForm.get('Fields');\n          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\n            this.acroForm = null;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.info)('Something wrong with AcroForm entry');\n        this.acroForm = null;\n      }\n    },\n    get linearization() {\n      var linearization = null;\n      if (this.stream.length) {\n        try {\n          linearization = _parser.Linearization.create(this.stream);\n        } catch (err) {\n          if (err instanceof _util.MissingDataException) {\n            throw err;\n          }\n          (0, _util.info)(err);\n        }\n      }\n      return (0, _util.shadow)(this, 'linearization', linearization);\n    },\n    get startXRef() {\n      var stream = this.stream;\n      var startXRef = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        stream.reset();\n        if (find(stream, 'endobj', 1024)) {\n          startXRef = stream.pos + 6;\n        }\n      } else {\n        var step = 1024;\n        var found = false,\n            pos = stream.end;\n        while (!found && pos > 0) {\n          pos -= step - 'startxref'.length;\n          if (pos < 0) {\n            pos = 0;\n          }\n          stream.pos = pos;\n          found = find(stream, 'startxref', step, true);\n        }\n        if (found) {\n          stream.skip(9);\n          var ch;\n          do {\n            ch = stream.getByte();\n          } while ((0, _util.isSpace)(ch));\n          var str = '';\n          while (ch >= 0x20 && ch <= 0x39) {\n            str += String.fromCharCode(ch);\n            ch = stream.getByte();\n          }\n          startXRef = parseInt(str, 10);\n          if (isNaN(startXRef)) {\n            startXRef = 0;\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'startXRef', startXRef);\n    },\n    get mainXRefEntriesOffset() {\n      var mainXRefEntriesOffset = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n      }\n      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n    },\n    checkHeader: function PDFDocument_checkHeader() {\n      var stream = this.stream;\n      stream.reset();\n      if (find(stream, '%PDF-', 1024)) {\n        stream.moveStart();\n        var MAX_VERSION_LENGTH = 12;\n        var version = '',\n            ch;\n        while ((ch = stream.getByte()) > 0x20) {\n          if (version.length >= MAX_VERSION_LENGTH) {\n            break;\n          }\n          version += String.fromCharCode(ch);\n        }\n        if (!this.pdfFormatVersion) {\n          this.pdfFormatVersion = version.substring(5);\n        }\n        return;\n      }\n    },\n    parseStartXRef: function PDFDocument_parseStartXRef() {\n      var startXRef = this.startXRef;\n      this.xref.setStartXRef(startXRef);\n    },\n    setup: function PDFDocument_setup(recoveryMode) {\n      var _this4 = this;\n\n      this.xref.parse(recoveryMode);\n      var pageFactory = {\n        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\n          return new Page({\n            pdfManager: _this4.pdfManager,\n            xref: _this4.xref,\n            pageIndex: pageIndex,\n            pageDict: dict,\n            ref: ref,\n            fontCache: fontCache,\n            builtInCMapCache: builtInCMapCache,\n            pdfFunctionFactory: _this4.pdfFunctionFactory\n          });\n        }\n      };\n      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\n    },\n    get numPages() {\n      var linearization = this.linearization;\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\n      return (0, _util.shadow)(this, 'numPages', num);\n    },\n    get documentInfo() {\n      var docInfo = {\n        PDFFormatVersion: this.pdfFormatVersion,\n        IsAcroFormPresent: !!this.acroForm,\n        IsXFAPresent: !!this.xfa\n      };\n      var infoDict;\n      try {\n        infoDict = this.xref.trailer.get('Info');\n      } catch (err) {\n        if (err instanceof _util.MissingDataException) {\n          throw err;\n        }\n        (0, _util.info)('The document information dictionary is invalid.');\n      }\n      if (infoDict) {\n        var validEntries = DocumentInfoValidators.entries;\n        for (var key in validEntries) {\n          if (infoDict.has(key)) {\n            var value = infoDict.get(key);\n            if (validEntries[key](value)) {\n              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\n            } else {\n              (0, _util.info)('Bad value in document info for \"' + key + '\"');\n            }\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'documentInfo', docInfo);\n    },\n    get fingerprint() {\n      var xref = this.xref,\n          hash,\n          fileID = '';\n      var idArray = xref.trailer.get('ID');\n      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n        hash = (0, _util.stringToBytes)(idArray[0]);\n      } else {\n        if (this.stream.ensureRange) {\n          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n        }\n        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n      }\n      for (var i = 0, n = hash.length; i < n; i++) {\n        var hex = hash[i].toString(16);\n        fileID += hex.length === 1 ? '0' + hex : hex;\n      }\n      return (0, _util.shadow)(this, 'fingerprint', fileID);\n    },\n    getPage: function PDFDocument_getPage(pageIndex) {\n      return this.catalog.getPage(pageIndex);\n    },\n    cleanup: function PDFDocument_cleanup() {\n      return this.catalog.cleanup();\n    }\n  };\n  return PDFDocument;\n}();\nexports.Page = Page;\nexports.PDFDocument = PDFDocument;\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegImage = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = __w_pdfjs_require__(0);\n\nvar JpegError = function JpegErrorClosure() {\n  function JpegError(msg) {\n    this.message = 'JPEG error: ' + msg;\n  }\n  JpegError.prototype = new Error();\n  JpegError.prototype.name = 'JpegError';\n  JpegError.constructor = JpegError;\n  return JpegError;\n}();\nvar JpegImage = function JpegImageClosure() {\n  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n  var dctCos1 = 4017;\n  var dctSin1 = 799;\n  var dctCos3 = 3406;\n  var dctSin3 = 2276;\n  var dctCos6 = 1567;\n  var dctSin6 = 3784;\n  var dctSqrt2 = 5793;\n  var dctSqrt1d2 = 2896;\n  function JpegImage() {\n    this.decodeTransform = null;\n    this.colorTransform = -1;\n  }\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0,\n        code = [],\n        i,\n        j,\n        length = 16;\n    while (length > 0 && !codeLengths[length - 1]) {\n      length--;\n    }\n    code.push({\n      children: [],\n      index: 0\n    });\n    var p = code[0],\n        q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {\n            children: [],\n            index: 0\n          });\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        code.push(q = {\n          children: [],\n          index: 0\n        });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n  function getBlockBufferOffset(component, row, col) {\n    return 64 * ((component.blocksPerLine + 1) * row + col);\n  }\n  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var startOffset = offset,\n        bitsData = 0,\n        bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return bitsData >> bitsCount & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData === 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n        }\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree;\n      while (true) {\n        node = node[readBit()];\n        if (typeof node === 'number') {\n          return node;\n        }\n        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\n          throw new JpegError('invalid huffman sequence');\n        }\n      }\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        n = n << 1 | readBit();\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      if (length === 1) {\n        return readBit() === 1 ? 1 : -1;\n      }\n      var n = receive(length);\n      if (n >= 1 << length - 1) {\n        return n;\n      }\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      component.blockData[offset] = component.pred += diff;\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n      component.blockData[offset] = component.pred += diff;\n    }\n    function decodeDCSuccessive(component, offset) {\n      component.blockData[offset] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, offset) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart,\n          e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0,\n        successiveACNextValue;\n    function decodeACSuccessive(component, offset) {\n      var k = spectralStart;\n      var e = spectralEnd;\n      var r = 0;\n      var s;\n      var rs;\n      while (k <= e) {\n        var z = dctZigZag[k];\n        switch (successiveACState) {\n          case 0:\n            rs = decodeHuffman(component.huffmanTableAC);\n            s = rs & 15;\n            r = rs >> 4;\n            if (s === 0) {\n              if (r < 15) {\n                eobrun = receive(r) + (1 << r);\n                successiveACState = 4;\n              } else {\n                r = 16;\n                successiveACState = 1;\n              }\n            } else {\n              if (s !== 1) {\n                throw new JpegError('invalid ACn encoding');\n              }\n              successiveACNextValue = receiveAndExtend(s);\n              successiveACState = r ? 2 : 3;\n            }\n            continue;\n          case 1:\n          case 2:\n            if (component.blockData[offset + z]) {\n              component.blockData[offset + z] += readBit() << successive;\n            } else {\n              r--;\n              if (r === 0) {\n                successiveACState = successiveACState === 2 ? 3 : 0;\n              }\n            }\n            break;\n          case 3:\n            if (component.blockData[offset + z]) {\n              component.blockData[offset + z] += readBit() << successive;\n            } else {\n              component.blockData[offset + z] = successiveACNextValue << successive;\n              successiveACState = 0;\n            }\n            break;\n          case 4:\n            if (component.blockData[offset + z]) {\n              component.blockData[offset + z] += readBit() << successive;\n            }\n            break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0) {\n          successiveACState = 0;\n        }\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = mcu / mcusPerLine | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = mcu / component.blocksPerLine | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0) {\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      } else {\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n      }\n    } else {\n      decodeFn = decodeBaseline;\n    }\n    var mcu = 0,\n        fileMarker;\n    var mcuExpected;\n    if (componentsLength === 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    var h, v;\n    while (mcu < mcuExpected) {\n      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n      bitsCount = 0;\n      fileMarker = findNextFileMarker(data, offset);\n      if (fileMarker && fileMarker.invalid) {\n        (0, _util.warn)('decodeScan - unexpected MCU data, next marker is: ' + fileMarker.invalid);\n        offset = fileMarker.offset;\n      }\n      var marker = fileMarker && fileMarker.marker;\n      if (!marker || marker <= 0xFF00) {\n        throw new JpegError('marker was not found');\n      }\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n        offset += 2;\n      } else {\n        break;\n      }\n    }\n    fileMarker = findNextFileMarker(data, offset);\n    if (fileMarker && fileMarker.invalid) {\n      (0, _util.warn)('decodeScan - unexpected Scan data, next marker is: ' + fileMarker.invalid);\n      offset = fileMarker.offset;\n    }\n    return offset - startOffset;\n  }\n  function quantizeAndInverse(component, blockBufferOffset, p) {\n    var qt = component.quantizationTable,\n        blockData = component.blockData;\n    var v0, v1, v2, v3, v4, v5, v6, v7;\n    var p0, p1, p2, p3, p4, p5, p6, p7;\n    var t;\n    if (!qt) {\n      throw new JpegError('missing required Quantization Table.');\n    }\n    for (var row = 0; row < 64; row += 8) {\n      p0 = blockData[blockBufferOffset + row];\n      p1 = blockData[blockBufferOffset + row + 1];\n      p2 = blockData[blockBufferOffset + row + 2];\n      p3 = blockData[blockBufferOffset + row + 3];\n      p4 = blockData[blockBufferOffset + row + 4];\n      p5 = blockData[blockBufferOffset + row + 5];\n      p6 = blockData[blockBufferOffset + row + 6];\n      p7 = blockData[blockBufferOffset + row + 7];\n      p0 *= qt[row];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 512 >> 10;\n        p[row] = t;\n        p[row + 1] = t;\n        p[row + 2] = t;\n        p[row + 3] = t;\n        p[row + 4] = t;\n        p[row + 5] = t;\n        p[row + 6] = t;\n        p[row + 7] = t;\n        continue;\n      }\n      p1 *= qt[row + 1];\n      p2 *= qt[row + 2];\n      p3 *= qt[row + 3];\n      p4 *= qt[row + 4];\n      p5 *= qt[row + 5];\n      p6 *= qt[row + 6];\n      p7 *= qt[row + 7];\n      v0 = dctSqrt2 * p0 + 128 >> 8;\n      v1 = dctSqrt2 * p4 + 128 >> 8;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n      v5 = p3 << 4;\n      v6 = p5 << 4;\n      v0 = v0 + v1 + 1 >> 1;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p[row] = v0 + v7;\n      p[row + 7] = v0 - v7;\n      p[row + 1] = v1 + v6;\n      p[row + 6] = v1 - v6;\n      p[row + 2] = v2 + v5;\n      p[row + 5] = v2 - v5;\n      p[row + 3] = v3 + v4;\n      p[row + 4] = v3 - v4;\n    }\n    for (var col = 0; col < 8; ++col) {\n      p0 = p[col];\n      p1 = p[col + 8];\n      p2 = p[col + 16];\n      p3 = p[col + 24];\n      p4 = p[col + 32];\n      p5 = p[col + 40];\n      p6 = p[col + 48];\n      p7 = p[col + 56];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 8192 >> 14;\n        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n        blockData[blockBufferOffset + col] = t;\n        blockData[blockBufferOffset + col + 8] = t;\n        blockData[blockBufferOffset + col + 16] = t;\n        blockData[blockBufferOffset + col + 24] = t;\n        blockData[blockBufferOffset + col + 32] = t;\n        blockData[blockBufferOffset + col + 40] = t;\n        blockData[blockBufferOffset + col + 48] = t;\n        blockData[blockBufferOffset + col + 56] = t;\n        continue;\n      }\n      v0 = dctSqrt2 * p0 + 2048 >> 12;\n      v1 = dctSqrt2 * p4 + 2048 >> 12;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n      v5 = p3;\n      v6 = p5;\n      v0 = (v0 + v1 + 1 >> 1) + 4112;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p0 = v0 + v7;\n      p7 = v0 - v7;\n      p1 = v1 + v6;\n      p6 = v1 - v6;\n      p2 = v2 + v5;\n      p5 = v2 - v5;\n      p3 = v3 + v4;\n      p4 = v3 - v4;\n      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n      blockData[blockBufferOffset + col] = p0;\n      blockData[blockBufferOffset + col + 8] = p1;\n      blockData[blockBufferOffset + col + 16] = p2;\n      blockData[blockBufferOffset + col + 24] = p3;\n      blockData[blockBufferOffset + col + 32] = p4;\n      blockData[blockBufferOffset + col + 40] = p5;\n      blockData[blockBufferOffset + col + 48] = p6;\n      blockData[blockBufferOffset + col + 56] = p7;\n    }\n  }\n  function buildComponentData(frame, component) {\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var computationBuffer = new Int16Array(64);\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        quantizeAndInverse(component, offset, computationBuffer);\n      }\n    }\n    return component.blockData;\n  }\n  function findNextFileMarker(data, currentPos, startPos) {\n    function peekUint16(pos) {\n      return data[pos] << 8 | data[pos + 1];\n    }\n    var maxPos = data.length - 1;\n    var newPos = startPos < currentPos ? startPos : currentPos;\n    if (currentPos >= maxPos) {\n      return null;\n    }\n    var currentMarker = peekUint16(currentPos);\n    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\n      return {\n        invalid: null,\n        marker: currentMarker,\n        offset: currentPos\n      };\n    }\n    var newMarker = peekUint16(newPos);\n    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\n      if (++newPos >= maxPos) {\n        return null;\n      }\n      newMarker = peekUint16(newPos);\n    }\n    return {\n      invalid: currentMarker.toString(16),\n      marker: newMarker,\n      offset: newPos\n    };\n  }\n  JpegImage.prototype = {\n    parse: function parse(data) {\n      function readUint16() {\n        var value = data[offset] << 8 | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var endOffset = offset + length - 2;\n        var fileMarker = findNextFileMarker(data, endOffset, offset);\n        if (fileMarker && fileMarker.invalid) {\n          (0, _util.warn)('readDataBlock - incorrect length, next marker is: ' + fileMarker.invalid);\n          endOffset = fileMarker.offset;\n        }\n        var array = data.subarray(offset, endOffset);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n        for (var i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n          var blocksPerLineForMcu = mcusPerLine * component.h;\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n          component.blockData = new Int16Array(blocksBufferSize);\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n        }\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var offset = 0;\n      var jfif = null;\n      var adobe = null;\n      var frame, resetInterval;\n      var quantizationTables = [];\n      var huffmanTablesAC = [],\n          huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      if (fileMarker !== 0xFFD8) {\n        throw new JpegError('SOI not found');\n      }\n      fileMarker = readUint16();\n      while (fileMarker !== 0xFFD9) {\n        var i, j, l;\n        switch (fileMarker) {\n          case 0xFFE0:\n          case 0xFFE1:\n          case 0xFFE2:\n          case 0xFFE3:\n          case 0xFFE4:\n          case 0xFFE5:\n          case 0xFFE6:\n          case 0xFFE7:\n          case 0xFFE8:\n          case 0xFFE9:\n          case 0xFFEA:\n          case 0xFFEB:\n          case 0xFFEC:\n          case 0xFFED:\n          case 0xFFEE:\n          case 0xFFEF:\n          case 0xFFFE:\n            var appData = readDataBlock();\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n                jfif = {\n                  version: {\n                    major: appData[5],\n                    minor: appData[6]\n                  },\n                  densityUnits: appData[7],\n                  xDensity: appData[8] << 8 | appData[9],\n                  yDensity: appData[10] << 8 | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n                adobe = {\n                  version: appData[5] << 8 | appData[6],\n                  flags0: appData[7] << 8 | appData[8],\n                  flags1: appData[9] << 8 | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n          case 0xFFDB:\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            var z;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              var tableData = new Uint16Array(64);\n              if (quantizationTableSpec >> 4 === 0) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if (quantizationTableSpec >> 4 === 1) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else {\n                throw new JpegError('DQT - invalid table spec');\n              }\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n          case 0xFFC0:\n          case 0xFFC1:\n          case 0xFFC2:\n            if (frame) {\n              throw new JpegError('Only single frame JPEGs supported');\n            }\n            readUint16();\n            frame = {};\n            frame.extended = fileMarker === 0xFFC1;\n            frame.progressive = fileMarker === 0xFFC2;\n            frame.precision = data[offset++];\n            frame.scanLines = readUint16();\n            frame.samplesPerLine = readUint16();\n            frame.components = [];\n            frame.componentIds = {};\n            var componentsCount = data[offset++],\n                componentId;\n            var maxH = 0,\n                maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              if (maxH < h) {\n                maxH = h;\n              }\n              if (maxV < v) {\n                maxV = v;\n              }\n              var qId = data[offset + 2];\n              l = frame.components.push({\n                h: h,\n                v: v,\n                quantizationId: qId,\n                quantizationTable: null\n              });\n              frame.componentIds[componentId] = l - 1;\n              offset += 3;\n            }\n            frame.maxH = maxH;\n            frame.maxV = maxV;\n            prepareComponents(frame);\n            break;\n          case 0xFFC4:\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += codeLengths[j] = data[offset];\n              }\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++) {\n                huffmanValues[j] = data[offset];\n              }\n              i += 17 + codeLengthSum;\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n          case 0xFFDD:\n            readUint16();\n            resetInterval = readUint16();\n            break;\n          case 0xFFDA:\n            readUint16();\n            var selectorsCount = data[offset++];\n            var components = [],\n                component;\n            for (i = 0; i < selectorsCount; i++) {\n              var componentIndex = frame.componentIds[data[offset++]];\n              component = frame.components[componentIndex];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15);\n            offset += processed;\n            break;\n          case 0xFFFF:\n            if (data[offset] !== 0xFF) {\n              offset--;\n            }\n            break;\n          default:\n            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              offset -= 3;\n              break;\n            }\n            throw new JpegError('unknown marker ' + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (i = 0; i < frame.components.length; i++) {\n        component = frame.components[i];\n        var quantizationTable = quantizationTables[component.quantizationId];\n        if (quantizationTable) {\n          component.quantizationTable = quantizationTable;\n        }\n        this.components.push({\n          output: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV,\n          blocksPerLine: component.blocksPerLine,\n          blocksPerColumn: component.blocksPerColumn\n        });\n      }\n      this.numComponents = this.components.length;\n    },\n    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n      var scaleX = this.width / width,\n          scaleY = this.height / height;\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\n      var x, y, i, j, k;\n      var index;\n      var offset = 0;\n      var output;\n      var numComponents = this.components.length;\n      var dataLength = width * height * numComponents;\n      var data = new Uint8ClampedArray(dataLength);\n      var xScaleBlockOffset = new Uint32Array(width);\n      var mask3LSB = 0xfffffff8;\n      for (i = 0; i < numComponents; i++) {\n        component = this.components[i];\n        componentScaleX = component.scaleX * scaleX;\n        componentScaleY = component.scaleY * scaleY;\n        offset = i;\n        output = component.output;\n        blocksPerScanline = component.blocksPerLine + 1 << 3;\n        for (x = 0; x < width; x++) {\n          j = 0 | x * componentScaleX;\n          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n        }\n        for (y = 0; y < height; y++) {\n          j = 0 | y * componentScaleY;\n          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n          for (x = 0; x < width; x++) {\n            data[offset] = output[index + xScaleBlockOffset[x]];\n            offset += numComponents;\n          }\n        }\n      }\n      var transform = this.decodeTransform;\n      if (transform) {\n        for (i = 0; i < dataLength;) {\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n          }\n        }\n      }\n      return data;\n    },\n    _isColorConversionNeeded: function _isColorConversionNeeded() {\n      if (this.adobe) {\n        return !!this.adobe.transformCode;\n      }\n      if (this.numComponents === 3) {\n        if (this.colorTransform === 0) {\n          return false;\n        }\n        return true;\n      }\n      if (this.colorTransform === 1) {\n        return true;\n      }\n      return false;\n    },\n\n    _convertYccToRgb: function convertYccToRgb(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 3) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = Y - 179.456 + 1.402 * Cr;\n        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n        data[i + 2] = Y - 226.816 + 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertYcckToRgb: function convertYcckToRgb(data) {\n      var Y, Cb, Cr, k;\n      var offset = 0;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        k = data[i + 3];\n        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n      }\n      return data;\n    },\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = 434.456 - Y - 1.402 * Cr;\n        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n        data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertCmykToRgb: function convertCmykToRgb(data) {\n      var c, m, y, k;\n      var offset = 0;\n      var scale = 1 / 255;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        c = data[i] * scale;\n        m = data[i + 1] * scale;\n        y = data[i + 2] * scale;\n        k = data[i + 3] * scale;\n        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\n        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\n        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\n      }\n      return data;\n    },\n    getData: function getData(width, height, forceRGBoutput) {\n      if (this.numComponents > 4) {\n        throw new JpegError('Unsupported color mode');\n      }\n      var data = this._getLinearizedBlockData(width, height);\n      if (this.numComponents === 1 && forceRGBoutput) {\n        var dataLength = data.length;\n        var rgbData = new Uint8ClampedArray(dataLength * 3);\n        var offset = 0;\n        for (var i = 0; i < dataLength; i++) {\n          var grayColor = data[i];\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n        }\n        return rgbData;\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n        return this._convertYccToRgb(data);\n      } else if (this.numComponents === 4) {\n        if (this._isColorConversionNeeded()) {\n          if (forceRGBoutput) {\n            return this._convertYcckToRgb(data);\n          }\n          return this._convertYcckToCmyk(data);\n        } else if (forceRGBoutput) {\n          return this._convertCmykToRgb(data);\n        }\n      }\n      return data;\n    }\n  };\n  return JpegImage;\n}();\nexports.JpegImage = JpegImage;\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxStream = undefined;\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _ccitt = __w_pdfjs_require__(131);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n  function CCITTFaxStream(str, maybeLength, params) {\n    this.str = str;\n    this.dict = str.dict;\n    if (!(0, _primitives.isDict)(params)) {\n      params = _primitives.Dict.empty;\n    }\n    var source = {\n      next: function next() {\n        return str.getByte();\n      }\n    };\n    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\n      K: params.get('K'),\n      EndOfLine: params.get('EndOfLine'),\n      EncodedByteAlign: params.get('EncodedByteAlign'),\n      Columns: params.get('Columns'),\n      Rows: params.get('Rows'),\n      EndOfBlock: params.get('EndOfBlock'),\n      BlackIs1: params.get('BlackIs1')\n    });\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  CCITTFaxStream.prototype.readBlock = function () {\n    while (!this.eof) {\n      var c = this.ccittFaxDecoder.readNextChar();\n      if (c === -1) {\n        this.eof = true;\n        return;\n      }\n      this.ensureBuffer(this.bufferLength + 1);\n      this.buffer[this.bufferLength++] = c;\n    }\n  };\n  return CCITTFaxStream;\n}();\nexports.CCITTFaxStream = CCITTFaxStream;\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxDecoder = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar CCITTFaxDecoder = function CCITTFaxDecoder() {\n  var ccittEOL = -2;\n  var ccittEOF = -1;\n  var twoDimPass = 0;\n  var twoDimHoriz = 1;\n  var twoDimVert0 = 2;\n  var twoDimVertR1 = 3;\n  var twoDimVertL1 = 4;\n  var twoDimVertR2 = 5;\n  var twoDimVertL2 = 6;\n  var twoDimVertR3 = 7;\n  var twoDimVertL3 = 8;\n  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\n  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\n  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\n  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\n  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\n  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\n  function CCITTFaxDecoder(source) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!source || typeof source.next !== 'function') {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n    this.encoding = options['K'] || 0;\n    this.eoline = options['EndOfLine'] || false;\n    this.byteAlign = options['EncodedByteAlign'] || false;\n    this.columns = options['Columns'] || 1728;\n    this.rows = options['Rows'] || 0;\n    var eoblock = options['EndOfBlock'];\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = options['BlackIs1'] || false;\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n    var code1 = void 0;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n  CCITTFaxDecoder.prototype = {\n    readNextChar: function readNextChar() {\n      if (this.eof) {\n        return -1;\n      }\n      var refLine = this.refLine;\n      var codingLine = this.codingLine;\n      var columns = this.columns;\n      var refPos = void 0,\n          blackPixels = void 0,\n          bits = void 0,\n          i = void 0;\n      if (this.outputBits === 0) {\n        if (this.rowsDone) {\n          this.eof = true;\n        }\n        if (this.eof) {\n          return -1;\n        }\n        this.err = false;\n        var code1 = void 0,\n            code2 = void 0,\n            code3 = void 0;\n        if (this.nextLine2D) {\n          for (i = 0; codingLine[i] < columns; ++i) {\n            refLine[i] = codingLine[i];\n          }\n          refLine[i++] = columns;\n          refLine[i] = columns;\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          refPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = this._getTwoDimCode();\n            switch (code1) {\n              case twoDimPass:\n                this._addPixels(refLine[refPos + 1], blackPixels);\n                if (refLine[refPos + 1] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimHoriz:\n                code1 = code2 = 0;\n                if (blackPixels) {\n                  do {\n                    code1 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                } else {\n                  do {\n                    code1 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                }\n                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n                if (codingLine[this.codingPos] < columns) {\n                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n                }\n                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimVertR3:\n                this._addPixels(refLine[refPos] + 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR2:\n                this._addPixels(refLine[refPos] + 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR1:\n                this._addPixels(refLine[refPos] + 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVert0:\n                this._addPixels(refLine[refPos], blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL3:\n                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL2:\n                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL1:\n                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case ccittEOF:\n                this._addPixels(columns, 0);\n                this.eof = true;\n                break;\n              default:\n                (0, _util.info)('bad 2d code');\n                this._addPixels(columns, 0);\n                this.err = true;\n            }\n          }\n        } else {\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = 0;\n            if (blackPixels) {\n              do {\n                code1 += code3 = this._getBlackCode();\n              } while (code3 >= 64);\n            } else {\n              do {\n                code1 += code3 = this._getWhiteCode();\n              } while (code3 >= 64);\n            }\n            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n            blackPixels ^= 1;\n          }\n        }\n        var gotEOL = false;\n        if (this.byteAlign) {\n          this.inputBits &= ~7;\n        }\n        if (!this.eoblock && this.row === this.rows - 1) {\n          this.rowsDone = true;\n        } else {\n          code1 = this._lookBits(12);\n          if (this.eoline) {\n            while (code1 !== ccittEOF && code1 !== 1) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          } else {\n            while (code1 === 0) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          }\n          if (code1 === 1) {\n            this._eatBits(12);\n            gotEOL = true;\n          } else if (code1 === ccittEOF) {\n            this.eof = true;\n          }\n        }\n        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n          this.nextLine2D = !this._lookBits(1);\n          this._eatBits(1);\n        }\n        if (this.eoblock && gotEOL && this.byteAlign) {\n          code1 = this._lookBits(12);\n          if (code1 === 1) {\n            this._eatBits(12);\n            if (this.encoding > 0) {\n              this._lookBits(1);\n              this._eatBits(1);\n            }\n            if (this.encoding >= 0) {\n              for (i = 0; i < 4; ++i) {\n                code1 = this._lookBits(12);\n                if (code1 !== 1) {\n                  (0, _util.info)('bad rtc code: ' + code1);\n                }\n                this._eatBits(12);\n                if (this.encoding > 0) {\n                  this._lookBits(1);\n                  this._eatBits(1);\n                }\n              }\n            }\n            this.eof = true;\n          }\n        } else if (this.err && this.eoline) {\n          while (true) {\n            code1 = this._lookBits(13);\n            if (code1 === ccittEOF) {\n              this.eof = true;\n              return -1;\n            }\n            if (code1 >> 1 === 1) {\n              break;\n            }\n            this._eatBits(1);\n          }\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._eatBits(1);\n            this.nextLine2D = !(code1 & 1);\n          }\n        }\n        if (codingLine[0] > 0) {\n          this.outputBits = codingLine[this.codingPos = 0];\n        } else {\n          this.outputBits = codingLine[this.codingPos = 1];\n        }\n        this.row++;\n      }\n      var c = void 0;\n      if (this.outputBits >= 8) {\n        c = this.codingPos & 1 ? 0 : 0xFF;\n        this.outputBits -= 8;\n        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n          this.codingPos++;\n          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n        }\n      } else {\n        bits = 8;\n        c = 0;\n        do {\n          if (this.outputBits > bits) {\n            c <<= bits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - bits;\n            }\n            this.outputBits -= bits;\n            bits = 0;\n          } else {\n            c <<= this.outputBits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - this.outputBits;\n            }\n            bits -= this.outputBits;\n            this.outputBits = 0;\n            if (codingLine[this.codingPos] < columns) {\n              this.codingPos++;\n              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n            } else if (bits > 0) {\n              c <<= bits;\n              bits = 0;\n            }\n          }\n        } while (bits);\n      }\n      if (this.black) {\n        c ^= 0xFF;\n      }\n      return c;\n    },\n    _addPixels: function _addPixels(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      } else if (a1 < codingLine[codingPos]) {\n        if (a1 < 0) {\n          (0, _util.info)('invalid code');\n          this.err = true;\n          a1 = 0;\n        }\n        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n          --codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _findTableCode: function _findTableCode(start, end, table, limit) {\n      var limitValue = limit || 0;\n      for (var i = start; i <= end; ++i) {\n        var code = this._lookBits(i);\n        if (code === ccittEOF) {\n          return [true, 1, false];\n        }\n        if (i < end) {\n          code <<= end - i;\n        }\n        if (!limitValue || code >= limitValue) {\n          var p = table[code - limitValue];\n          if (p[0] === i) {\n            this._eatBits(i);\n            return [true, p[1], true];\n          }\n        }\n      }\n      return [false, 0, false];\n    },\n    _getTwoDimCode: function _getTwoDimCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(7);\n        p = twoDimTable[code];\n        if (p && p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 7, twoDimTable);\n        if (result[0] && result[2]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('Bad two dim code');\n      return ccittEOF;\n    },\n    _getWhiteCode: function _getWhiteCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(12);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 5 === 0) {\n          p = whiteTable1[code];\n        } else {\n          p = whiteTable2[code >> 3];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 9, whiteTable2);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(11, 12, whiteTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad white code');\n      this._eatBits(1);\n      return 1;\n    },\n    _getBlackCode: function _getBlackCode() {\n      var code = void 0,\n          p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(13);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 7 === 0) {\n          p = blackTable1[code];\n        } else if (code >> 9 === 0 && code >> 7 !== 0) {\n          p = blackTable2[(code >> 1) - 64];\n        } else {\n          p = blackTable3[code >> 7];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(2, 6, blackTable3);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(7, 12, blackTable2, 64);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(10, 13, blackTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad black code');\n      this._eatBits(1);\n      return 1;\n    },\n    _lookBits: function _lookBits(n) {\n      var c = void 0;\n      while (this.inputBits < n) {\n        if ((c = this.source.next()) === -1) {\n          if (this.inputBits === 0) {\n            return ccittEOF;\n          }\n          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n        }\n        this.inputBuf = this.inputBuf << 8 | c;\n        this.inputBits += 8;\n      }\n      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n    },\n    _eatBits: function _eatBits(n) {\n      if ((this.inputBits -= n) < 0) {\n        this.inputBits = 0;\n      }\n    }\n  };\n  return CCITTFaxDecoder;\n}();\nexports.CCITTFaxDecoder = CCITTFaxDecoder;\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Stream = undefined;\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar _jbig = __w_pdfjs_require__(133);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar Jbig2Stream = function Jbig2StreamClosure() {\n  function Jbig2Stream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n    get: function get() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n\n    configurable: true\n  });\n  Jbig2Stream.prototype.ensureBuffer = function (req) {\n    if (this.bufferLength) {\n      return;\n    }\n    var jbig2Image = new _jbig.Jbig2Image();\n    var chunks = [];\n    if ((0, _primitives.isDict)(this.params)) {\n      var globalsStream = this.params.get('JBIG2Globals');\n      if ((0, _primitives.isStream)(globalsStream)) {\n        var globals = globalsStream.getBytes();\n        chunks.push({\n          data: globals,\n          start: 0,\n          end: globals.length\n        });\n      }\n    }\n    chunks.push({\n      data: this.bytes,\n      start: 0,\n      end: this.bytes.length\n    });\n    var data = jbig2Image.parseChunks(chunks);\n    var dataLength = data.length;\n    for (var i = 0; i < dataLength; i++) {\n      data[i] ^= 0xFF;\n    }\n    this.buffer = data;\n    this.bufferLength = dataLength;\n    this.eof = true;\n  };\n  return Jbig2Stream;\n}();\nexports.Jbig2Stream = Jbig2Stream;\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Image = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _arithmetic_decoder = __w_pdfjs_require__(75);\n\nvar Jbig2Error = function Jbig2ErrorClosure() {\n  function Jbig2Error(msg) {\n    this.message = 'JBIG2 error: ' + msg;\n  }\n  Jbig2Error.prototype = new Error();\n  Jbig2Error.prototype.name = 'Jbig2Error';\n  Jbig2Error.constructor = Jbig2Error;\n  return Jbig2Error;\n}();\nvar Jbig2Image = function Jbig2ImageClosure() {\n  function ContextCache() {}\n  ContextCache.prototype = {\n    getContexts: function getContexts(id) {\n      if (id in this) {\n        return this[id];\n      }\n      return this[id] = new Int8Array(1 << 16);\n    }\n  };\n  function DecodingContext(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n  DecodingContext.prototype = {\n    get decoder() {\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\n      return (0, _util.shadow)(this, 'decoder', decoder);\n    },\n    get contextCache() {\n      var cache = new ContextCache();\n      return (0, _util.shadow)(this, 'contextCache', cache);\n    }\n  };\n  function decodeInteger(contextCache, procedure, decoder) {\n    var contexts = contextCache.getContexts(procedure);\n    var prev = 1;\n    function readBits(length) {\n      var v = 0;\n      for (var i = 0; i < length; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n        v = v << 1 | bit;\n      }\n      return v >>> 0;\n    }\n    var sign = readBits(1);\n    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n    return sign === 0 ? value : value > 0 ? -value : null;\n  }\n  function decodeIAID(contextCache, decoder, codeLength) {\n    var contexts = contextCache.getContexts('IAID');\n    var prev = 1;\n    for (var i = 0; i < codeLength; i++) {\n      var bit = decoder.readBit(contexts, prev);\n      prev = prev << 1 | bit;\n    }\n    if (codeLength < 31) {\n      return prev & (1 << codeLength) - 1;\n    }\n    return prev & 0x7FFFFFFF;\n  }\n  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\n  var CodingTemplates = [[{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: 2,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -3,\n    y: -1\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }]];\n  var RefinementTemplates = [{\n    coding: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: -1,\n      y: 1\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }, {\n    coding: [{\n      x: -1,\n      y: -1\n    }, {\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }];\n  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\n  var RefinementReusedContexts = [0x0020, 0x0008];\n  function decodeBitmapTemplate0(width, height, decodingContext) {\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var contextLabel,\n        i,\n        j,\n        pixel,\n        row,\n        row1,\n        row2,\n        bitmap = [];\n    var OLD_PIXEL_MASK = 0x7BF7;\n    for (i = 0; i < height; i++) {\n      row = bitmap[i] = new Uint8Array(width);\n      row1 = i < 1 ? row : bitmap[i - 1];\n      row2 = i < 2 ? row : bitmap[i - 2];\n      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n      for (j = 0; j < width; j++) {\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n    if (mmr) {\n      throw new Jbig2Error('MMR encoding is not supported');\n    }\n    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n      return decodeBitmapTemplate0(width, height, decodingContext);\n    }\n    var useskip = !!skip;\n    var template = CodingTemplates[templateIndex].concat(at);\n    template.sort(function (a, b) {\n      return a.y - b.y || a.x - b.x;\n    });\n    var templateLength = template.length;\n    var templateX = new Int8Array(templateLength);\n    var templateY = new Int8Array(templateLength);\n    var changingTemplateEntries = [];\n    var reuseMask = 0,\n        minX = 0,\n        maxX = 0,\n        minY = 0;\n    var c, k;\n    for (k = 0; k < templateLength; k++) {\n      templateX[k] = template[k].x;\n      templateY[k] = template[k].y;\n      minX = Math.min(minX, template[k].x);\n      maxX = Math.max(maxX, template[k].x);\n      minY = Math.min(minY, template[k].y);\n      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n        reuseMask |= 1 << templateLength - 1 - k;\n      } else {\n        changingTemplateEntries.push(k);\n      }\n    }\n    var changingEntriesLength = changingTemplateEntries.length;\n    var changingTemplateX = new Int8Array(changingEntriesLength);\n    var changingTemplateY = new Int8Array(changingEntriesLength);\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n    for (c = 0; c < changingEntriesLength; c++) {\n      k = changingTemplateEntries[c];\n      changingTemplateX[c] = template[k].x;\n      changingTemplateY[c] = template[k].y;\n      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n    }\n    var sbb_left = -minX;\n    var sbb_top = -minY;\n    var sbb_right = width - maxX;\n    var pseudoPixelContext = ReusedContexts[templateIndex];\n    var row = new Uint8Array(width);\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var ltp = 0,\n        j,\n        i0,\n        j0,\n        contextLabel = 0,\n        bit,\n        shift;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          bitmap.push(row);\n          continue;\n        }\n      }\n      row = new Uint8Array(row);\n      bitmap.push(row);\n      for (j = 0; j < width; j++) {\n        if (useskip && skip[i][j]) {\n          row[j] = 0;\n          continue;\n        }\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n          contextLabel = contextLabel << 1 & reuseMask;\n          for (k = 0; k < changingEntriesLength; k++) {\n            i0 = i + changingTemplateY[k];\n            j0 = j + changingTemplateX[k];\n            bit = bitmap[i0][j0];\n            if (bit) {\n              bit = changingTemplateBit[k];\n              contextLabel |= bit;\n            }\n          }\n        } else {\n          contextLabel = 0;\n          shift = templateLength - 1;\n          for (k = 0; k < templateLength; k++, shift--) {\n            j0 = j + templateX[k];\n            if (j0 >= 0 && j0 < width) {\n              i0 = i + templateY[k];\n              if (i0 >= 0) {\n                bit = bitmap[i0][j0];\n                if (bit) {\n                  contextLabel |= bit << shift;\n                }\n              }\n            }\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\n    if (templateIndex === 0) {\n      codingTemplate = codingTemplate.concat([at[0]]);\n    }\n    var codingTemplateLength = codingTemplate.length;\n    var codingTemplateX = new Int32Array(codingTemplateLength);\n    var codingTemplateY = new Int32Array(codingTemplateLength);\n    var k;\n    for (k = 0; k < codingTemplateLength; k++) {\n      codingTemplateX[k] = codingTemplate[k].x;\n      codingTemplateY[k] = codingTemplate[k].y;\n    }\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n    if (templateIndex === 0) {\n      referenceTemplate = referenceTemplate.concat([at[1]]);\n    }\n    var referenceTemplateLength = referenceTemplate.length;\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n    for (k = 0; k < referenceTemplateLength; k++) {\n      referenceTemplateX[k] = referenceTemplate[k].x;\n      referenceTemplateY[k] = referenceTemplate[k].y;\n    }\n    var referenceWidth = referenceBitmap[0].length;\n    var referenceHeight = referenceBitmap.length;\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GR');\n    var ltp = 0;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          throw new Jbig2Error('prediction is not supported');\n        }\n      }\n      var row = new Uint8Array(width);\n      bitmap.push(row);\n      for (var j = 0; j < width; j++) {\n        var i0, j0;\n        var contextLabel = 0;\n        for (k = 0; k < codingTemplateLength; k++) {\n          i0 = i + codingTemplateY[k];\n          j0 = j + codingTemplateX[k];\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | bitmap[i0][j0];\n          }\n        }\n        for (k = 0; k < referenceTemplateLength; k++) {\n          i0 = i + referenceTemplateY[k] - offsetY;\n          j0 = j + referenceTemplateX[k] - offsetX;\n          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext) {\n    if (huffman) {\n      throw new Jbig2Error('huffman is not supported');\n    }\n    var newSymbols = [];\n    var currentHeight = 0;\n    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    while (newSymbols.length < numberOfNewSymbols) {\n      var deltaHeight = decodeInteger(contextCache, 'IADH', decoder);\n      currentHeight += deltaHeight;\n      var currentWidth = 0;\n      while (true) {\n        var deltaWidth = decodeInteger(contextCache, 'IADW', decoder);\n        if (deltaWidth === null) {\n          break;\n        }\n        currentWidth += deltaWidth;\n        var bitmap;\n        if (refinement) {\n          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n          if (numberOfInstances > 1) {\n            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext);\n          } else {\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n          }\n        } else {\n          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n        }\n        newSymbols.push(bitmap);\n      }\n    }\n    var exportedSymbols = [];\n    var flags = [],\n        currentFlag = false;\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n    while (flags.length < totalSymbolsLength) {\n      var runLength = decodeInteger(contextCache, 'IAEX', decoder);\n      while (runLength--) {\n        flags.push(currentFlag);\n      }\n      currentFlag = !currentFlag;\n    }\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\n      if (flags[i]) {\n        exportedSymbols.push(symbols[i]);\n      }\n    }\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n      if (flags[i]) {\n        exportedSymbols.push(newSymbols[j]);\n      }\n    }\n    return exportedSymbols;\n  }\n  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext) {\n    if (huffman) {\n      throw new Jbig2Error('huffman is not supported');\n    }\n    var bitmap = [];\n    var i, row;\n    for (i = 0; i < height; i++) {\n      row = new Uint8Array(width);\n      if (defaultPixelValue) {\n        for (var j = 0; j < width; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      bitmap.push(row);\n    }\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var stripT = -decodeInteger(contextCache, 'IADT', decoder);\n    var firstS = 0;\n    i = 0;\n    while (i < numberOfSymbolInstances) {\n      var deltaT = decodeInteger(contextCache, 'IADT', decoder);\n      stripT += deltaT;\n      var deltaFirstS = decodeInteger(contextCache, 'IAFS', decoder);\n      firstS += deltaFirstS;\n      var currentS = firstS;\n      do {\n        var currentT = stripSize === 1 ? 0 : decodeInteger(contextCache, 'IAIT', decoder);\n        var t = stripSize * stripT + currentT;\n        var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n        var applyRefinement = refinement && decodeInteger(contextCache, 'IARI', decoder);\n        var symbolBitmap = inputSymbols[symbolId];\n        var symbolWidth = symbolBitmap[0].length;\n        var symbolHeight = symbolBitmap.length;\n        if (applyRefinement) {\n          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n          symbolWidth += rdw;\n          symbolHeight += rdh;\n          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n        }\n        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n        var s2, t2, symbolRow;\n        if (transposed) {\n          for (s2 = 0; s2 < symbolHeight; s2++) {\n            row = bitmap[offsetS + s2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[s2];\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\n            switch (combinationOperator) {\n              case 0:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] |= symbolRow[t2];\n                }\n                break;\n              case 2:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] ^= symbolRow[t2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolHeight - 1;\n        } else {\n          for (t2 = 0; t2 < symbolHeight; t2++) {\n            row = bitmap[offsetT + t2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[t2];\n            switch (combinationOperator) {\n              case 0:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] |= symbolRow[s2];\n                }\n                break;\n              case 2:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] ^= symbolRow[s2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolWidth - 1;\n        }\n        i++;\n        var deltaS = decodeInteger(contextCache, 'IADS', decoder);\n        if (deltaS === null) {\n          break;\n        }\n        currentS += deltaS + dsOffset;\n      } while (true);\n    }\n    return bitmap;\n  }\n  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\n    var at = [];\n    at.push({\n      x: -patternWidth,\n      y: 0\n    });\n    if (template === 0) {\n      at.push({\n        x: -3,\n        y: -1\n      });\n      at.push({\n        x: 2,\n        y: -2\n      });\n      at.push({\n        x: -2,\n        y: -2\n      });\n    }\n    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\n    var patterns = [],\n        i = 0,\n        patternBitmap = void 0,\n        xMin = void 0,\n        xMax = void 0,\n        y = void 0;\n    while (i <= maxPatternIndex) {\n      patternBitmap = [];\n      xMin = patternWidth * i;\n      xMax = xMin + patternWidth;\n      for (y = 0; y < patternHeight; y++) {\n        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n      }\n      patterns.push(patternBitmap);\n      i++;\n    }\n    return patterns;\n  }\n  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\n    var skip = null;\n    if (enableSkip) {\n      throw new Jbig2Error('skip is not supported');\n    }\n    if (combinationOperator !== 0) {\n      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\n    }\n    var regionBitmap = [];\n    var i = void 0,\n        j = void 0,\n        row = void 0;\n    for (i = 0; i < regionHeight; i++) {\n      row = new Uint8Array(regionWidth);\n      if (defaultPixelValue) {\n        for (j = 0; j < regionWidth; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      regionBitmap.push(row);\n    }\n    var numberOfPatterns = patterns.length;\n    var pattern0 = patterns[0];\n    var patternWidth = pattern0[0].length,\n        patternHeight = pattern0.length;\n    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\n    var at = [];\n    at.push({\n      x: template <= 1 ? 3 : 2,\n      y: -1\n    });\n    if (template === 0) {\n      at.push({\n        x: -3,\n        y: -1\n      });\n      at.push({\n        x: 2,\n        y: -2\n      });\n      at.push({\n        x: -2,\n        y: -2\n      });\n    }\n    var grayScaleBitPlanes = [];\n    for (i = bitsPerValue - 1; i >= 0; i--) {\n      grayScaleBitPlanes[i] = decodeBitmap(mmr, gridWidth, gridHeight, template, false, skip, at, decodingContext);\n    }\n    var mg = void 0,\n        ng = void 0,\n        bit = void 0,\n        patternIndex = void 0,\n        patternBitmap = void 0,\n        x = void 0,\n        y = void 0,\n        patternRow = void 0,\n        regionRow = void 0;\n    for (mg = 0; mg < gridHeight; mg++) {\n      for (ng = 0; ng < gridWidth; ng++) {\n        bit = 0;\n        patternIndex = 0;\n        for (j = bitsPerValue - 1; j >= 0; j--) {\n          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\n          patternIndex |= bit << j;\n        }\n        patternBitmap = patterns[patternIndex];\n        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\n        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\n        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\n          for (i = 0; i < patternHeight; i++) {\n            regionRow = regionBitmap[y + i];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionRow[x + j] |= patternRow[j];\n            }\n          }\n        } else {\n          var regionX = void 0,\n              regionY = void 0;\n          for (i = 0; i < patternHeight; i++) {\n            regionY = y + i;\n            if (regionY < 0 || regionY >= regionHeight) {\n              continue;\n            }\n            regionRow = regionBitmap[regionY];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionX = x + j;\n              if (regionX >= 0 && regionX < regionWidth) {\n                regionRow[regionX] |= patternRow[j];\n              }\n            }\n          }\n        }\n      }\n    }\n    return regionBitmap;\n  }\n  function readSegmentHeader(data, start) {\n    var segmentHeader = {};\n    segmentHeader.number = (0, _util.readUint32)(data, start);\n    var flags = data[start + 4];\n    var segmentType = flags & 0x3F;\n    if (!SegmentTypes[segmentType]) {\n      throw new Jbig2Error('invalid segment type: ' + segmentType);\n    }\n    segmentHeader.type = segmentType;\n    segmentHeader.typeName = SegmentTypes[segmentType];\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n    var pageAssociationFieldSize = !!(flags & 0x40);\n    var referredFlags = data[start + 5];\n    var referredToCount = referredFlags >> 5 & 7;\n    var retainBits = [referredFlags & 31];\n    var position = start + 6;\n    if (referredFlags === 7) {\n      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\n      position += 3;\n      var bytes = referredToCount + 7 >> 3;\n      retainBits[0] = data[position++];\n      while (--bytes > 0) {\n        retainBits.push(data[position++]);\n      }\n    } else if (referredFlags === 5 || referredFlags === 6) {\n      throw new Jbig2Error('invalid referred-to flags');\n    }\n    segmentHeader.retainBits = retainBits;\n    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n    var referredTo = [];\n    var i, ii;\n    for (i = 0; i < referredToCount; i++) {\n      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\n      referredTo.push(number);\n      position += referredToSegmentNumberSize;\n    }\n    segmentHeader.referredTo = referredTo;\n    if (!pageAssociationFieldSize) {\n      segmentHeader.pageAssociation = data[position++];\n    } else {\n      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    segmentHeader.length = (0, _util.readUint32)(data, position);\n    position += 4;\n    if (segmentHeader.length === 0xFFFFFFFF) {\n      if (segmentType === 38) {\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\n        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n        var searchPatternLength = 6;\n        var searchPattern = new Uint8Array(searchPatternLength);\n        if (!genericRegionMmr) {\n          searchPattern[0] = 0xFF;\n          searchPattern[1] = 0xAC;\n        }\n        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n        searchPattern[5] = genericRegionInfo.height & 0xFF;\n        for (i = position, ii = data.length; i < ii; i++) {\n          var j = 0;\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n            j++;\n          }\n          if (j === searchPatternLength) {\n            segmentHeader.length = i + searchPatternLength;\n            break;\n          }\n        }\n        if (segmentHeader.length === 0xFFFFFFFF) {\n          throw new Jbig2Error('segment end was not found');\n        }\n      } else {\n        throw new Jbig2Error('invalid unknown segment length');\n      }\n    }\n    segmentHeader.headerEnd = position;\n    return segmentHeader;\n  }\n  function readSegments(header, data, start, end) {\n    var segments = [];\n    var position = start;\n    while (position < end) {\n      var segmentHeader = readSegmentHeader(data, position);\n      position = segmentHeader.headerEnd;\n      var segment = {\n        header: segmentHeader,\n        data: data\n      };\n      if (!header.randomAccess) {\n        segment.start = position;\n        position += segmentHeader.length;\n        segment.end = position;\n      }\n      segments.push(segment);\n      if (segmentHeader.type === 51) {\n        break;\n      }\n    }\n    if (header.randomAccess) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        segments[i].start = position;\n        position += segments[i].header.length;\n        segments[i].end = position;\n      }\n    }\n    return segments;\n  }\n  function readRegionSegmentInformation(data, start) {\n    return {\n      width: (0, _util.readUint32)(data, start),\n      height: (0, _util.readUint32)(data, start + 4),\n      x: (0, _util.readUint32)(data, start + 8),\n      y: (0, _util.readUint32)(data, start + 12),\n      combinationOperator: data[start + 16] & 7\n    };\n  }\n  var RegionSegmentInformationFieldLength = 17;\n  function processSegment(segment, visitor) {\n    var header = segment.header;\n    var data = segment.data,\n        position = segment.start,\n        end = segment.end;\n    var args, at, i, atLength;\n    switch (header.type) {\n      case 0:\n        var dictionary = {};\n        var dictionaryFlags = (0, _util.readUint16)(data, position);\n        dictionary.huffman = !!(dictionaryFlags & 1);\n        dictionary.refinement = !!(dictionaryFlags & 2);\n        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n        dictionary.template = dictionaryFlags >> 10 & 3;\n        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n        position += 2;\n        if (!dictionary.huffman) {\n          atLength = dictionary.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.at = at;\n        }\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.refinementAt = at;\n        }\n        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [dictionary, header.number, header.referredTo, data, position, end];\n        break;\n      case 6:\n      case 7:\n        var textRegion = {};\n        textRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\n        position += 2;\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n        textRegion.stripSize = 1 << (textRegionSegmentFlags >> 2 & 3);\n        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n        if (textRegion.huffman) {\n          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\n          position += 2;\n          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 14);\n        }\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          textRegion.refinementAt = at;\n        }\n        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\n        position += 4;\n        if (textRegion.huffman) {\n          throw new Jbig2Error('huffman is not supported');\n        }\n        args = [textRegion, header.referredTo, data, position, end];\n        break;\n      case 16:\n        var patternDictionary = {};\n        var patternDictionaryFlags = data[position++];\n        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\n        patternDictionary.patternWidth = data[position++];\n        patternDictionary.patternHeight = data[position++];\n        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [patternDictionary, header.number, data, position, end];\n        break;\n      case 22:\n      case 23:\n        var halftoneRegion = {};\n        halftoneRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var halftoneRegionFlags = data[position++];\n        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\n        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\n        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\n        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\n        position += 2;\n        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\n        position += 2;\n        args = [halftoneRegion, header.referredTo, data, position, end];\n        break;\n      case 38:\n      case 39:\n        var genericRegion = {};\n        genericRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var genericRegionSegmentFlags = data[position++];\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n        if (!genericRegion.mmr) {\n          atLength = genericRegion.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          genericRegion.at = at;\n        }\n        args = [genericRegion, data, position, end];\n        break;\n      case 48:\n        var pageInfo = {\n          width: (0, _util.readUint32)(data, position),\n          height: (0, _util.readUint32)(data, position + 4),\n          resolutionX: (0, _util.readUint32)(data, position + 8),\n          resolutionY: (0, _util.readUint32)(data, position + 12)\n        };\n        if (pageInfo.height === 0xFFFFFFFF) {\n          delete pageInfo.height;\n        }\n        var pageSegmentFlags = data[position + 16];\n        (0, _util.readUint16)(data, position + 17);\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\n        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n        args = [pageInfo];\n        break;\n      case 49:\n        break;\n      case 50:\n        break;\n      case 51:\n        break;\n      case 62:\n        break;\n      default:\n        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\n    }\n    var callbackName = 'on' + header.typeName;\n    if (callbackName in visitor) {\n      visitor[callbackName].apply(visitor, args);\n    }\n  }\n  function processSegments(segments, visitor) {\n    for (var i = 0, ii = segments.length; i < ii; i++) {\n      processSegment(segments[i], visitor);\n    }\n  }\n  function parseJbig2(data, start, end) {\n    var position = start;\n    if (data[position] !== 0x97 || data[position + 1] !== 0x4A || data[position + 2] !== 0x42 || data[position + 3] !== 0x32 || data[position + 4] !== 0x0D || data[position + 5] !== 0x0A || data[position + 6] !== 0x1A || data[position + 7] !== 0x0A) {\n      throw new Jbig2Error('invalid header');\n    }\n    var header = {};\n    position += 8;\n    var flags = data[position++];\n    header.randomAccess = !(flags & 1);\n    if (!(flags & 2)) {\n      header.numberOfPages = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    readSegments(header, data, position, end);\n    throw new Error('Not implemented');\n  }\n  function parseJbig2Chunks(chunks) {\n    var visitor = new SimpleSegmentVisitor();\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\n      var chunk = chunks[i];\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n      processSegments(segments, visitor);\n    }\n    return visitor.buffer;\n  }\n  function SimpleSegmentVisitor() {}\n  SimpleSegmentVisitor.prototype = {\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n      this.currentPageInfo = info;\n      var rowSize = info.width + 7 >> 3;\n      var buffer = new Uint8ClampedArray(rowSize * info.height);\n      if (info.defaultPixelValue) {\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = 0xFF;\n        }\n      }\n      this.buffer = buffer;\n    },\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n      var pageInfo = this.currentPageInfo;\n      var width = regionInfo.width,\n          height = regionInfo.height;\n      var rowSize = pageInfo.width + 7 >> 3;\n      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n      var buffer = this.buffer;\n      var mask0 = 128 >> (regionInfo.x & 7);\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n      var i, j, mask, offset;\n      switch (combinationOperator) {\n        case 0:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] |= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        case 2:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] ^= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        default:\n          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n      }\n    },\n    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n      this.onImmediateGenericRegion.apply(this, arguments);\n    },\n    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n      var huffmanTables;\n      if (dictionary.huffman) {\n        throw new Jbig2Error('huffman is not supported');\n      }\n      var symbols = this.symbols;\n      if (!symbols) {\n        this.symbols = symbols = {};\n      }\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext);\n    },\n    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n      var regionInfo = region.info;\n      var huffmanTables;\n      var symbols = this.symbols;\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n      }\n      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n      this.onImmediateTextRegion.apply(this, arguments);\n    },\n    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\n      var patterns = this.patterns;\n      if (!patterns) {\n        this.patterns = patterns = {};\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\n    },\n    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n      var patterns = this.patterns[referredSegments[0]];\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\n      this.onImmediateHalftoneRegion.apply(this, arguments);\n    }\n  };\n  function Jbig2Image() {}\n  Jbig2Image.prototype = {\n    parseChunks: function Jbig2Image_parseChunks(chunks) {\n      return parseJbig2Chunks(chunks);\n    }\n  };\n  return Jbig2Image;\n}();\nexports.Jbig2Image = Jbig2Image;\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _parser = __w_pdfjs_require__(34);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\nvar CMap = function CMapClosure() {\n  function CMap(builtInCMap) {\n    this.codespaceRanges = [[], [], [], []];\n    this.numCodespaceRanges = 0;\n    this._map = [];\n    this.name = '';\n    this.vertical = false;\n    this.useCMap = null;\n    this.builtInCMap = builtInCMap;\n  }\n  CMap.prototype = {\n    addCodespaceRange: function addCodespaceRange(n, low, high) {\n      this.codespaceRanges[n - 1].push(low, high);\n      this.numCodespaceRanges++;\n    },\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      while (low <= high) {\n        this._map[low++] = dstLow++;\n      }\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      var lastByte = dstLow.length - 1;\n      while (low <= high) {\n        this._map[low++] = dstLow;\n        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n      }\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      var i = 0,\n          ii = array.length;\n      while (low <= high && i < ii) {\n        this._map[low] = array[i++];\n        ++low;\n      }\n    },\n    mapOne: function mapOne(src, dst) {\n      this._map[src] = dst;\n    },\n    lookup: function lookup(code) {\n      return this._map[code];\n    },\n    contains: function contains(code) {\n      return this._map[code] !== undefined;\n    },\n    forEach: function forEach(callback) {\n      var map = this._map;\n      var length = map.length;\n      if (length <= 0x10000) {\n        for (var i = 0; i < length; i++) {\n          if (map[i] !== undefined) {\n            callback(i, map[i]);\n          }\n        }\n      } else {\n        for (var _i in map) {\n          callback(_i, map[_i]);\n        }\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    getMap: function getMap() {\n      return this._map;\n    },\n    readCharCode: function readCharCode(str, offset, out) {\n      var c = 0;\n      var codespaceRanges = this.codespaceRanges;\n      var codespaceRangesLen = this.codespaceRanges.length;\n      for (var n = 0; n < codespaceRangesLen; n++) {\n        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n        var codespaceRange = codespaceRanges[n];\n        for (var k = 0, kk = codespaceRange.length; k < kk;) {\n          var low = codespaceRange[k++];\n          var high = codespaceRange[k++];\n          if (c >= low && c <= high) {\n            out.charcode = c;\n            out.length = n + 1;\n            return;\n          }\n        }\n      }\n      out.charcode = 0;\n      out.length = 1;\n    },\n\n    get length() {\n      return this._map.length;\n    },\n    get isIdentityCMap() {\n      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n        return false;\n      }\n      if (this._map.length !== 0x10000) {\n        return false;\n      }\n      for (var i = 0; i < 0x10000; i++) {\n        if (this._map[i] !== i) {\n          return false;\n        }\n      }\n      return true;\n    }\n  };\n  return CMap;\n}();\nvar IdentityCMap = function IdentityCMapClosure() {\n  function IdentityCMap(vertical, n) {\n    CMap.call(this);\n    this.vertical = vertical;\n    this.addCodespaceRange(n, 0, 0xffff);\n  }\n  _util.Util.inherit(IdentityCMap, CMap, {});\n  IdentityCMap.prototype = {\n    addCodespaceRange: CMap.prototype.addCodespaceRange,\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      throw new Error('should not call mapCidRange');\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      throw new Error('should not call mapBfRange');\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      throw new Error('should not call mapBfRangeToArray');\n    },\n    mapOne: function mapOne(src, dst) {\n      throw new Error('should not call mapCidOne');\n    },\n    lookup: function lookup(code) {\n      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\n    },\n    contains: function contains(code) {\n      return Number.isInteger(code) && code <= 0xffff;\n    },\n    forEach: function forEach(callback) {\n      for (var i = 0; i <= 0xffff; i++) {\n        callback(i, i);\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      return Number.isInteger(value) && value <= 0xffff ? value : -1;\n    },\n    getMap: function getMap() {\n      var map = new Array(0x10000);\n      for (var i = 0; i <= 0xffff; i++) {\n        map[i] = i;\n      }\n      return map;\n    },\n\n    readCharCode: CMap.prototype.readCharCode,\n    get length() {\n      return 0x10000;\n    },\n    get isIdentityCMap() {\n      throw new Error('should not access .isIdentityCMap');\n    }\n  };\n  return IdentityCMap;\n}();\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n  function hexToInt(a, size) {\n    var n = 0;\n    for (var i = 0; i <= size; i++) {\n      n = n << 8 | a[i];\n    }\n    return n >>> 0;\n  }\n  function hexToStr(a, size) {\n    if (size === 1) {\n      return String.fromCharCode(a[0], a[1]);\n    }\n    if (size === 3) {\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n    }\n    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n  }\n  function addHex(a, b, size) {\n    var c = 0;\n    for (var i = size; i >= 0; i--) {\n      c += a[i] + b[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  function incHex(a, size) {\n    var c = 1;\n    for (var i = size; i >= 0 && c > 0; i--) {\n      c += a[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  var MAX_NUM_SIZE = 16;\n  var MAX_ENCODED_NUM_SIZE = 19;\n  function BinaryCMapStream(data) {\n    this.buffer = data;\n    this.pos = 0;\n    this.end = data.length;\n    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n  }\n  BinaryCMapStream.prototype = {\n    readByte: function readByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.buffer[this.pos++];\n    },\n    readNumber: function readNumber() {\n      var n = 0;\n      var last;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        n = n << 7 | b & 0x7F;\n      } while (!last);\n      return n;\n    },\n    readSigned: function readSigned() {\n      var n = this.readNumber();\n      return n & 1 ? ~(n >>> 1) : n >>> 1;\n    },\n    readHex: function readHex(num, size) {\n      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n      this.pos += size + 1;\n    },\n    readHexNumber: function readHexNumber(num, size) {\n      var last;\n      var stack = this.tmpBuf,\n          sp = 0;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        stack[sp++] = b & 0x7F;\n      } while (!last);\n      var i = size,\n          buffer = 0,\n          bufferSize = 0;\n      while (i >= 0) {\n        while (bufferSize < 8 && stack.length > 0) {\n          buffer = stack[--sp] << bufferSize | buffer;\n          bufferSize += 7;\n        }\n        num[i] = buffer & 255;\n        i--;\n        buffer >>= 8;\n        bufferSize -= 8;\n      }\n    },\n    readHexSigned: function readHexSigned(num, size) {\n      this.readHexNumber(num, size);\n      var sign = num[size] & 1 ? 255 : 0;\n      var c = 0;\n      for (var i = 0; i <= size; i++) {\n        c = (c & 1) << 8 | num[i];\n        num[i] = c >> 1 ^ sign;\n      }\n    },\n    readString: function readString() {\n      var len = this.readNumber();\n      var s = '';\n      for (var i = 0; i < len; i++) {\n        s += String.fromCharCode(this.readNumber());\n      }\n      return s;\n    }\n  };\n  function processBinaryCMap(data, cMap, extend) {\n    return new Promise(function (resolve, reject) {\n      var stream = new BinaryCMapStream(data);\n      var header = stream.readByte();\n      cMap.vertical = !!(header & 1);\n      var useCMap = null;\n      var start = new Uint8Array(MAX_NUM_SIZE);\n      var end = new Uint8Array(MAX_NUM_SIZE);\n      var char = new Uint8Array(MAX_NUM_SIZE);\n      var charCode = new Uint8Array(MAX_NUM_SIZE);\n      var tmp = new Uint8Array(MAX_NUM_SIZE);\n      var code;\n      var b;\n      while ((b = stream.readByte()) >= 0) {\n        var type = b >> 5;\n        if (type === 7) {\n          switch (b & 0x1F) {\n            case 0:\n              stream.readString();\n              break;\n            case 1:\n              useCMap = stream.readString();\n              break;\n          }\n          continue;\n        }\n        var sequence = !!(b & 0x10);\n        var dataSize = b & 15;\n        if (dataSize + 1 > MAX_NUM_SIZE) {\n          throw new Error('processBinaryCMap: Invalid dataSize.');\n        }\n        var ucs2DataSize = 1;\n        var subitemsCount = stream.readNumber();\n        var i;\n        switch (type) {\n          case 0:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            }\n            break;\n          case 1:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              code = stream.readNumber();\n            }\n            break;\n          case 2:\n            stream.readHex(char, dataSize);\n            code = stream.readNumber();\n            cMap.mapOne(hexToInt(char, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, dataSize);\n                addHex(char, tmp, dataSize);\n              }\n              code = stream.readSigned() + (code + 1);\n              cMap.mapOne(hexToInt(char, dataSize), code);\n            }\n            break;\n          case 3:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, dataSize);\n                addHex(start, end, dataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              code = stream.readNumber();\n              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            }\n            break;\n          case 4:\n            stream.readHex(char, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, ucs2DataSize);\n                addHex(char, tmp, ucs2DataSize);\n              }\n              incHex(charCode, dataSize);\n              stream.readHexSigned(tmp, dataSize);\n              addHex(charCode, tmp, dataSize);\n              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          case 5:\n            stream.readHex(start, ucs2DataSize);\n            stream.readHexNumber(end, ucs2DataSize);\n            addHex(end, start, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, ucs2DataSize);\n                addHex(start, end, ucs2DataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, ucs2DataSize);\n              addHex(end, start, ucs2DataSize);\n              stream.readHex(charCode, dataSize);\n              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          default:\n            reject(new Error('processBinaryCMap: Unknown type: ' + type));\n            return;\n        }\n      }\n      if (useCMap) {\n        resolve(extend(useCMap));\n        return;\n      }\n      resolve(cMap);\n    });\n  }\n  function BinaryCMapReader() {}\n  BinaryCMapReader.prototype = { process: processBinaryCMap };\n  return BinaryCMapReader;\n}();\nvar CMapFactory = function CMapFactoryClosure() {\n  function strToInt(str) {\n    var a = 0;\n    for (var i = 0; i < str.length; i++) {\n      a = a << 8 | str.charCodeAt(i);\n    }\n    return a >>> 0;\n  }\n  function expectString(obj) {\n    if (!(0, _util.isString)(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected string.');\n    }\n  }\n  function expectInt(obj) {\n    if (!Number.isInteger(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected int.');\n    }\n  }\n  function parseBfChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseBfRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\n        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\n        cMap.mapBfRange(low, high, dstLow);\n      } else if ((0, _primitives.isCmd)(obj, '[')) {\n        obj = lexer.getObj();\n        var array = [];\n        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\n          array.push(obj);\n          obj = lexer.getObj();\n        }\n        cMap.mapBfRangeToArray(low, high, array);\n      } else {\n        break;\n      }\n    }\n    throw new _util.FormatError('Invalid bf range.');\n  }\n  function parseCidChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseCidRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dstLow = obj;\n      cMap.mapCidRange(low, high, dstLow);\n    }\n  }\n  function parseCodespaceRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\n        return;\n      }\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var high = strToInt(obj);\n      cMap.addCodespaceRange(obj.length, low, high);\n    }\n    throw new _util.FormatError('Invalid codespace range.');\n  }\n  function parseWMode(cMap, lexer) {\n    var obj = lexer.getObj();\n    if (Number.isInteger(obj)) {\n      cMap.vertical = !!obj;\n    }\n  }\n  function parseCMapName(cMap, lexer) {\n    var obj = lexer.getObj();\n    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\n      cMap.name = obj.name;\n    }\n  }\n  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n    var previous;\n    var embededUseCMap;\n    objLoop: while (true) {\n      try {\n        var obj = lexer.getObj();\n        if ((0, _primitives.isEOF)(obj)) {\n          break;\n        } else if ((0, _primitives.isName)(obj)) {\n          if (obj.name === 'WMode') {\n            parseWMode(cMap, lexer);\n          } else if (obj.name === 'CMapName') {\n            parseCMapName(cMap, lexer);\n          }\n          previous = obj;\n        } else if ((0, _primitives.isCmd)(obj)) {\n          switch (obj.cmd) {\n            case 'endcmap':\n              break objLoop;\n            case 'usecmap':\n              if ((0, _primitives.isName)(previous)) {\n                embededUseCMap = previous.name;\n              }\n              break;\n            case 'begincodespacerange':\n              parseCodespaceRange(cMap, lexer);\n              break;\n            case 'beginbfchar':\n              parseBfChar(cMap, lexer);\n              break;\n            case 'begincidchar':\n              parseCidChar(cMap, lexer);\n              break;\n            case 'beginbfrange':\n              parseBfRange(cMap, lexer);\n              break;\n            case 'begincidrange':\n              parseCidRange(cMap, lexer);\n              break;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid cMap data: ' + ex);\n        continue;\n      }\n    }\n    if (!useCMap && embededUseCMap) {\n      useCMap = embededUseCMap;\n    }\n    if (useCMap) {\n      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n    }\n    return Promise.resolve(cMap);\n  }\n  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n      cMap.useCMap = newCMap;\n      if (cMap.numCodespaceRanges === 0) {\n        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n        for (var i = 0; i < useCodespaceRanges.length; i++) {\n          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n        }\n        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n      }\n      cMap.useCMap.forEach(function (key, value) {\n        if (!cMap.contains(key)) {\n          cMap.mapOne(key, cMap.useCMap.lookup(key));\n        }\n      });\n      return cMap;\n    });\n  }\n  function createBuiltInCMap(name, fetchBuiltInCMap) {\n    if (name === 'Identity-H') {\n      return Promise.resolve(new IdentityCMap(false, 2));\n    } else if (name === 'Identity-V') {\n      return Promise.resolve(new IdentityCMap(true, 2));\n    }\n    if (BUILT_IN_CMAPS.indexOf(name) === -1) {\n      return Promise.reject(new Error('Unknown CMap name: ' + name));\n    }\n    if (!fetchBuiltInCMap) {\n      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\n    }\n    return fetchBuiltInCMap(name).then(function (data) {\n      var cMapData = data.cMapData,\n          compressionType = data.compressionType;\n      var cMap = new CMap(true);\n      if (compressionType === _util.CMapCompressionType.BINARY) {\n        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n        });\n      }\n      if (compressionType === _util.CMapCompressionType.NONE) {\n        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n      }\n      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\n    });\n  }\n  return {\n    create: function create(params) {\n      var encoding = params.encoding;\n      var fetchBuiltInCMap = params.fetchBuiltInCMap;\n      var useCMap = params.useCMap;\n      if ((0, _primitives.isName)(encoding)) {\n        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n      } else if ((0, _primitives.isStream)(encoding)) {\n        var cMap = new CMap();\n        var lexer = new _parser.Lexer(encoding);\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n          if (parsedCMap.isIdentityCMap) {\n            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n          }\n          return parsedCMap;\n        });\n      }\n      return Promise.reject(new Error('Encoding required.'));\n    }\n  };\n}();\nexports.CMap = CMap;\nexports.IdentityCMap = IdentityCMap;\nexports.CMapFactory = CMapFactory;\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cff_parser = __w_pdfjs_require__(78);\n\nvar _glyphlist = __w_pdfjs_require__(47);\n\nvar _encodings = __w_pdfjs_require__(28);\n\nvar _standard_fonts = __w_pdfjs_require__(79);\n\nvar _unicode = __w_pdfjs_require__(80);\n\nvar _font_renderer = __w_pdfjs_require__(137);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar _type1_parser = __w_pdfjs_require__(138);\n\nvar PRIVATE_USE_OFFSET_START = 0xE000;\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\nvar PDF_GLYPH_SPACE_UNITS = 1000;\nvar SEAC_ANALYSIS_ENABLED = false;\nvar FontFlags = {\n  FixedPitch: 1,\n  Serif: 2,\n  Symbolic: 4,\n  Script: 8,\n  Nonsymbolic: 32,\n  Italic: 64,\n  AllCap: 65536,\n  SmallCap: 131072,\n  ForceBold: 262144\n};\nvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\nfunction adjustWidths(properties) {\n  if (!properties.fontMatrix) {\n    return;\n  }\n  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\n    return;\n  }\n  var scale = 0.001 / properties.fontMatrix[0];\n  var glyphsWidths = properties.widths;\n  for (var glyph in glyphsWidths) {\n    glyphsWidths[glyph] *= scale;\n  }\n  properties.defaultWidth *= scale;\n}\nfunction adjustToUnicode(properties, builtInEncoding) {\n  if (properties.hasIncludedToUnicodeMap) {\n    return;\n  }\n  if (properties.hasEncoding) {\n    return;\n  }\n  if (builtInEncoding === properties.defaultEncoding) {\n    return;\n  }\n  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n    return;\n  }\n  var toUnicode = [],\n      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n  for (var charCode in builtInEncoding) {\n    var glyphName = builtInEncoding[charCode];\n    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n    if (unicode !== -1) {\n      toUnicode[charCode] = String.fromCharCode(unicode);\n    }\n  }\n  properties.toUnicode.amend(toUnicode);\n}\nfunction getFontType(type, subtype) {\n  switch (type) {\n    case 'Type1':\n      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\n    case 'CIDFontType0':\n      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\n    case 'OpenType':\n      return _util.FontType.OPENTYPE;\n    case 'TrueType':\n      return _util.FontType.TRUETYPE;\n    case 'CIDFontType2':\n      return _util.FontType.CIDFONTTYPE2;\n    case 'MMType1':\n      return _util.FontType.MMTYPE1;\n    case 'Type0':\n      return _util.FontType.TYPE0;\n    default:\n      return _util.FontType.UNKNOWN;\n  }\n}\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\n  if (glyphsUnicodeMap[name] !== undefined) {\n    return name;\n  }\n  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\n  if (unicode !== -1) {\n    for (var key in glyphsUnicodeMap) {\n      if (glyphsUnicodeMap[key] === unicode) {\n        return key;\n      }\n    }\n  }\n  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\n  return name;\n}\nvar Glyph = function GlyphClosure() {\n  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    this.fontChar = fontChar;\n    this.unicode = unicode;\n    this.accent = accent;\n    this.width = width;\n    this.vmetric = vmetric;\n    this.operatorListId = operatorListId;\n    this.isSpace = isSpace;\n    this.isInFont = isInFont;\n  }\n  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n  };\n  return Glyph;\n}();\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\n  function ToUnicodeMap(cmap) {\n    this._map = cmap;\n  }\n  ToUnicodeMap.prototype = {\n    get length() {\n      return this._map.length;\n    },\n    forEach: function forEach(callback) {\n      for (var charCode in this._map) {\n        callback(charCode, this._map[charCode].charCodeAt(0));\n      }\n    },\n    has: function has(i) {\n      return this._map[i] !== undefined;\n    },\n    get: function get(i) {\n      return this._map[i];\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    amend: function amend(map) {\n      for (var charCode in map) {\n        this._map[charCode] = map[charCode];\n      }\n    }\n  };\n  return ToUnicodeMap;\n}();\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n  function IdentityToUnicodeMap(firstChar, lastChar) {\n    this.firstChar = firstChar;\n    this.lastChar = lastChar;\n  }\n  IdentityToUnicodeMap.prototype = {\n    get length() {\n      return this.lastChar + 1 - this.firstChar;\n    },\n    forEach: function forEach(callback) {\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n        callback(i, i);\n      }\n    },\n    has: function has(i) {\n      return this.firstChar <= i && i <= this.lastChar;\n    },\n    get: function get(i) {\n      if (this.firstChar <= i && i <= this.lastChar) {\n        return String.fromCharCode(i);\n      }\n      return undefined;\n    },\n    charCodeOf: function charCodeOf(v) {\n      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n    },\n    amend: function amend(map) {\n      throw new Error('Should not call amend()');\n    }\n  };\n  return IdentityToUnicodeMap;\n}();\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n  function writeInt16(dest, offset, num) {\n    dest[offset] = num >> 8 & 0xFF;\n    dest[offset + 1] = num & 0xFF;\n  }\n  function writeInt32(dest, offset, num) {\n    dest[offset] = num >> 24 & 0xFF;\n    dest[offset + 1] = num >> 16 & 0xFF;\n    dest[offset + 2] = num >> 8 & 0xFF;\n    dest[offset + 3] = num & 0xFF;\n  }\n  function writeData(dest, offset, data) {\n    var i, ii;\n    if (data instanceof Uint8Array) {\n      dest.set(data, offset);\n    } else if (typeof data === 'string') {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data.charCodeAt(i) & 0xFF;\n      }\n    } else {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data[i] & 0xFF;\n      }\n    }\n  }\n  function OpenTypeFileBuilder(sfnt) {\n    this.sfnt = sfnt;\n    this.tables = Object.create(null);\n  }\n  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n    var maxPower2 = 1,\n        log2 = 0;\n    while ((maxPower2 ^ entriesCount) > maxPower2) {\n      maxPower2 <<= 1;\n      log2++;\n    }\n    var searchRange = maxPower2 * entrySize;\n    return {\n      range: searchRange,\n      entry: log2,\n      rangeShift: entrySize * entriesCount - searchRange\n    };\n  };\n  var OTF_HEADER_SIZE = 12;\n  var OTF_TABLE_ENTRY_SIZE = 16;\n  OpenTypeFileBuilder.prototype = {\n    toArray: function OpenTypeFileBuilder_toArray() {\n      var sfnt = this.sfnt;\n      var tables = this.tables;\n      var tablesNames = Object.keys(tables);\n      tablesNames.sort();\n      var numTables = tablesNames.length;\n      var i, j, jj, table, tableName;\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n      var tableOffsets = [offset];\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        var paddedLength = (table.length + 3 & ~3) >>> 0;\n        offset += paddedLength;\n        tableOffsets.push(offset);\n      }\n      var file = new Uint8Array(offset);\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        writeData(file, tableOffsets[i], table);\n      }\n      if (sfnt === 'true') {\n        sfnt = (0, _util.string32)(0x00010000);\n      }\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\n      writeInt16(file, 4, numTables);\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n      writeInt16(file, 6, searchParams.range);\n      writeInt16(file, 8, searchParams.entry);\n      writeInt16(file, 10, searchParams.rangeShift);\n      offset = OTF_HEADER_SIZE;\n      for (i = 0; i < numTables; i++) {\n        tableName = tablesNames[i];\n        file[offset] = tableName.charCodeAt(0) & 0xFF;\n        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n        var checksum = 0;\n        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n          var quad = (0, _util.readUint32)(file, j);\n          checksum = checksum + quad >>> 0;\n        }\n        writeInt32(file, offset + 4, checksum);\n        writeInt32(file, offset + 8, tableOffsets[i]);\n        writeInt32(file, offset + 12, tables[tableName].length);\n        offset += OTF_TABLE_ENTRY_SIZE;\n      }\n      return file;\n    },\n    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n      if (tag in this.tables) {\n        throw new Error('Table ' + tag + ' already exists');\n      }\n      this.tables[tag] = data;\n    }\n  };\n  return OpenTypeFileBuilder;\n}();\nvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xFFF0, 0x10000]);\nvar Font = function FontClosure() {\n  function Font(name, file, properties) {\n    var charCode;\n    this.name = name;\n    this.loadedName = properties.loadedName;\n    this.isType3Font = properties.isType3Font;\n    this.sizes = [];\n    this.missingFile = false;\n    this.glyphCache = Object.create(null);\n    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n    var type = properties.type;\n    var subtype = properties.subtype;\n    this.type = type;\n    this.subtype = subtype;\n    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n    this.differences = properties.differences;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.composite = properties.composite;\n    this.wideChars = properties.wideChars;\n    this.cMap = properties.cMap;\n    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n    this.fontMatrix = properties.fontMatrix;\n    this.bbox = properties.bbox;\n    this.defaultEncoding = properties.defaultEncoding;\n    this.toUnicode = properties.toUnicode;\n    this.toFontChar = [];\n    if (properties.type === 'Type3') {\n      for (charCode = 0; charCode < 256; charCode++) {\n        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n      }\n      this.fontType = _util.FontType.TYPE3;\n      return;\n    }\n    this.cidEncoding = properties.cidEncoding;\n    this.vertical = properties.vertical;\n    if (this.vertical) {\n      this.vmetrics = properties.vmetrics;\n      this.defaultVMetrics = properties.defaultVMetrics;\n    }\n    if (!file || file.isEmpty) {\n      if (file) {\n        (0, _util.warn)('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n      }\n      this.fallbackToSystemFont();\n      return;\n    }\n    if (subtype === 'Type1C') {\n      if (type !== 'Type1' && type !== 'MMType1') {\n        if (isTrueTypeFile(file)) {\n          subtype = 'TrueType';\n        } else {\n          type = 'Type1';\n        }\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      }\n    }\n    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n      type = 'CIDFontType0';\n    }\n    if (type === 'CIDFontType0') {\n      if (isType1File(file)) {\n        subtype = 'CIDFontType0';\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      } else {\n        subtype = 'CIDFontType0C';\n      }\n    }\n    if (subtype === 'OpenType' && type !== 'OpenType') {\n      type = 'OpenType';\n    }\n    try {\n      var data;\n      switch (type) {\n        case 'MMType1':\n          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\n        case 'Type1':\n        case 'CIDFontType0':\n          this.mimetype = 'font/opentype';\n          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n          adjustWidths(properties);\n          data = this.convert(name, cff, properties);\n          break;\n        case 'OpenType':\n        case 'TrueType':\n        case 'CIDFontType2':\n          this.mimetype = 'font/opentype';\n          data = this.checkAndRepair(name, file, properties);\n          if (this.isOpenType) {\n            adjustWidths(properties);\n            type = 'OpenType';\n          }\n          break;\n        default:\n          throw new _util.FormatError('Font ' + type + ' is not supported');\n      }\n    } catch (e) {\n      if (!(e instanceof _util.FormatError)) {\n        throw e;\n      }\n      (0, _util.warn)(e);\n      this.fallbackToSystemFont();\n      return;\n    }\n    this.data = data;\n    this.fontType = getFontType(type, subtype);\n    this.fontMatrix = properties.fontMatrix;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.toUnicode = properties.toUnicode;\n    this.encoding = properties.baseEncoding;\n    this.seacMap = properties.seacMap;\n    this.loading = true;\n  }\n  Font.getFontID = function () {\n    var ID = 1;\n    return function Font_getFontID() {\n      return String(ID++);\n    };\n  }();\n  function int16(b0, b1) {\n    return (b0 << 8) + b1;\n  }\n  function writeSignedInt16(bytes, index, value) {\n    bytes[index + 1] = value;\n    bytes[index] = value >>> 8;\n  }\n  function signedInt16(b0, b1) {\n    var value = (b0 << 8) + b1;\n    return value & 1 << 15 ? value - 0x10000 : value;\n  }\n  function int32(b0, b1, b2, b3) {\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n  function string16(value) {\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function safeString16(value) {\n    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function isTrueTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.readUint32)(header, 0) === 0x00010000;\n  }\n  function isOpenTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'OTTO';\n  }\n  function isType1File(file) {\n    var header = file.peekBytes(2);\n    if (header[0] === 0x25 && header[1] === 0x21) {\n      return true;\n    }\n    if (header[0] === 0x80 && header[1] === 0x01) {\n      return true;\n    }\n    return false;\n  }\n  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n    var toFontChar = [],\n        unicode;\n    for (var i = 0, ii = encoding.length; i < ii; i++) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[i] = unicode;\n      }\n    }\n    for (var charCode in differences) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[+charCode] = unicode;\n      }\n    }\n    return toFontChar;\n  }\n  function isProblematicUnicodeLocation(code) {\n    var i = 0,\n        j = ProblematicCharRanges.length - 1;\n    while (i < j) {\n      var c = i + j + 1 >> 1;\n      if (code < ProblematicCharRanges[c]) {\n        j = c - 1;\n      } else {\n        i = c;\n      }\n    }\n    return !(i & 1);\n  }\n  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\n    var toUnicode = properties.toUnicode;\n    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n    var newMap = Object.create(null);\n    var toFontChar = [];\n    var usedFontCharCodes = [];\n    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n    for (var originalCharCode in charCodeToGlyphId) {\n      originalCharCode |= 0;\n      var glyphId = charCodeToGlyphId[originalCharCode];\n      if (missingGlyphs[glyphId]) {\n        continue;\n      }\n      var fontCharCode = originalCharCode;\n      var hasUnicodeValue = false;\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n        hasUnicodeValue = true;\n        var unicode = toUnicode.get(fontCharCode);\n        if (unicode.length === 1) {\n          fontCharCode = unicode.charCodeAt(0);\n        }\n      }\n      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\n        do {\n          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\n            (0, _util.warn)('Ran out of space in font private use area.');\n            break;\n          }\n          fontCharCode = nextAvailableFontCharCode++;\n          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n            fontCharCode = 0xF020;\n            nextAvailableFontCharCode = fontCharCode + 1;\n          }\n        } while (usedFontCharCodes[fontCharCode] !== undefined);\n      }\n      newMap[fontCharCode] = glyphId;\n      toFontChar[originalCharCode] = fontCharCode;\n      usedFontCharCodes[fontCharCode] = true;\n    }\n    return {\n      toFontChar: toFontChar,\n      charCodeToGlyphId: newMap,\n      nextAvailableFontCharCode: nextAvailableFontCharCode\n    };\n  }\n  function getRanges(glyphs, numGlyphs) {\n    var codes = [];\n    for (var charCode in glyphs) {\n      if (glyphs[charCode] >= numGlyphs) {\n        continue;\n      }\n      codes.push({\n        fontCharCode: charCode | 0,\n        glyphId: glyphs[charCode]\n      });\n    }\n    if (codes.length === 0) {\n      codes.push({\n        fontCharCode: 0,\n        glyphId: 0\n      });\n    }\n    codes.sort(function fontGetRangesSort(a, b) {\n      return a.fontCharCode - b.fontCharCode;\n    });\n    var ranges = [];\n    var length = codes.length;\n    for (var n = 0; n < length;) {\n      var start = codes[n].fontCharCode;\n      var codeIndices = [codes[n].glyphId];\n      ++n;\n      var end = start;\n      while (n < length && end + 1 === codes[n].fontCharCode) {\n        codeIndices.push(codes[n].glyphId);\n        ++end;\n        ++n;\n        if (end === 0xFFFF) {\n          break;\n        }\n      }\n      ranges.push([start, end, codeIndices]);\n    }\n    return ranges;\n  }\n  function createCmapTable(glyphs, numGlyphs) {\n    var ranges = getRanges(glyphs, numGlyphs);\n    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n    var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + (0, _util.string32)(4 + numTables * 8);\n    var i, ii, j, jj;\n    for (i = ranges.length - 1; i >= 0; --i) {\n      if (ranges[i][0] <= 0xFFFF) {\n        break;\n      }\n    }\n    var bmpLength = i + 1;\n    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n      ranges[i][1] = 0xFFFE;\n    }\n    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n    var segCount = bmpLength + trailingRangesCount;\n    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n    var startCount = '';\n    var endCount = '';\n    var idDeltas = '';\n    var idRangeOffsets = '';\n    var glyphsIds = '';\n    var bias = 0;\n    var range, start, end, codes;\n    for (i = 0, ii = bmpLength; i < ii; i++) {\n      range = ranges[i];\n      start = range[0];\n      end = range[1];\n      startCount += string16(start);\n      endCount += string16(end);\n      codes = range[2];\n      var contiguous = true;\n      for (j = 1, jj = codes.length; j < jj; ++j) {\n        if (codes[j] !== codes[j - 1] + 1) {\n          contiguous = false;\n          break;\n        }\n      }\n      if (!contiguous) {\n        var offset = (segCount - i) * 2 + bias * 2;\n        bias += end - start + 1;\n        idDeltas += string16(0);\n        idRangeOffsets += string16(offset);\n        for (j = 0, jj = codes.length; j < jj; ++j) {\n          glyphsIds += string16(codes[j]);\n        }\n      } else {\n        var startCode = codes[0];\n        idDeltas += string16(startCode - start & 0xFFFF);\n        idRangeOffsets += string16(0);\n      }\n    }\n    if (trailingRangesCount > 0) {\n      endCount += '\\xFF\\xFF';\n      startCount += '\\xFF\\xFF';\n      idDeltas += '\\x00\\x01';\n      idRangeOffsets += '\\x00\\x00';\n    }\n    var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n    var format31012 = '';\n    var header31012 = '';\n    if (numTables > 1) {\n      cmap += '\\x00\\x03' + '\\x00\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\n      format31012 = '';\n      for (i = 0, ii = ranges.length; i < ii; i++) {\n        range = ranges[i];\n        start = range[0];\n        codes = range[2];\n        var code = codes[0];\n        for (j = 1, jj = codes.length; j < jj; ++j) {\n          if (codes[j] !== codes[j - 1] + 1) {\n            end = range[0] + j - 1;\n            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\n            start = end + 1;\n            code = codes[j];\n          }\n        }\n        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\n      }\n      header31012 = '\\x00\\x0C' + '\\x00\\x00' + (0, _util.string32)(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + (0, _util.string32)(format31012.length / 12);\n    }\n    return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n  }\n  function validateOS2Table(os2) {\n    var stream = new _stream.Stream(os2.data);\n    var version = stream.getUint16();\n    stream.getBytes(60);\n    var selection = stream.getUint16();\n    if (version < 4 && selection & 0x0300) {\n      return false;\n    }\n    var firstChar = stream.getUint16();\n    var lastChar = stream.getUint16();\n    if (firstChar > lastChar) {\n      return false;\n    }\n    stream.getBytes(6);\n    var usWinAscent = stream.getUint16();\n    if (usWinAscent === 0) {\n      return false;\n    }\n    os2.data[8] = os2.data[9] = 0;\n    return true;\n  }\n  function createOS2Table(properties, charstrings, override) {\n    override = override || {\n      unitsPerEm: 0,\n      yMax: 0,\n      yMin: 0,\n      ascent: 0,\n      descent: 0\n    };\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    if (charstrings) {\n      for (var code in charstrings) {\n        code |= 0;\n        if (firstCharIndex > code || !firstCharIndex) {\n          firstCharIndex = code;\n        }\n        if (lastCharIndex < code) {\n          lastCharIndex = code;\n        }\n        var position = (0, _unicode.getUnicodeRangeFor)(code);\n        if (position < 32) {\n          ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n          ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n          ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n          ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\n        }\n      }\n    } else {\n      firstCharIndex = 0;\n      lastCharIndex = 255;\n    }\n    var bbox = properties.bbox || [0, 0, 0, 0];\n    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n      typoDescent = -typoDescent;\n    }\n    var winAscent = override.yMax || typoAscent;\n    var winDescent = -override.yMin || -typoDescent;\n    return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n  }\n  function createPostTable(properties) {\n    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n    return '\\x00\\x03\\x00\\x00' + (0, _util.string32)(angle) + '\\x00\\x00' + '\\x00\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n  }\n  function createNameTable(name, proto) {\n    if (!proto) {\n      proto = [[], []];\n    }\n    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\n    var stringsUnicode = [];\n    var i, ii, j, jj, str;\n    for (i = 0, ii = strings.length; i < ii; i++) {\n      str = proto[1][i] || strings[i];\n      var strBufUnicode = [];\n      for (j = 0, jj = str.length; j < jj; j++) {\n        strBufUnicode.push(string16(str.charCodeAt(j)));\n      }\n      stringsUnicode.push(strBufUnicode.join(''));\n    }\n    var names = [strings, stringsUnicode];\n    var platforms = ['\\x00\\x01', '\\x00\\x03'];\n    var encodings = ['\\x00\\x00', '\\x00\\x01'];\n    var languages = ['\\x00\\x00', '\\x04\\x09'];\n    var namesRecordCount = strings.length * platforms.length;\n    var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n    var strOffset = 0;\n    for (i = 0, ii = platforms.length; i < ii; i++) {\n      var strs = names[i];\n      for (j = 0, jj = strs.length; j < jj; j++) {\n        str = strs[j];\n        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n        nameTable += nameRecord;\n        strOffset += str.length;\n      }\n    }\n    nameTable += strings.join('') + stringsUnicode.join('');\n    return nameTable;\n  }\n  Font.prototype = {\n    name: null,\n    font: null,\n    mimetype: null,\n    encoding: null,\n    get renderer() {\n      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n      return (0, _util.shadow)(this, 'renderer', renderer);\n    },\n    exportData: function Font_exportData() {\n      var data = {};\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          data[i] = this[i];\n        }\n      }\n      return data;\n    },\n    fallbackToSystemFont: function Font_fallbackToSystemFont() {\n      var _this = this;\n\n      this.missingFile = true;\n      var charCode, unicode;\n      var name = this.name;\n      var type = this.type;\n      var subtype = this.subtype;\n      var fontName = name.replace(/[,_]/g, '-');\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\n          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\n      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n      this.bold = fontName.search(/bold/gi) !== -1;\n      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n      this.black = name.search(/Black/g) !== -1;\n      this.remeasure = Object.keys(this.widths).length > 0;\n      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\n        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n        var map = [];\n        for (charCode in GlyphMapForStandardFonts) {\n          map[+charCode] = GlyphMapForStandardFonts[charCode];\n        }\n        if (/Arial-?Black/i.test(name)) {\n          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\n          for (charCode in SupplementalGlyphMapForArialBlack) {\n            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n          }\n        }\n        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n        if (!isIdentityUnicode) {\n          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n            map[+charCode] = unicodeCharCode;\n          });\n        }\n        this.toFontChar = map;\n        this.toUnicode = new ToUnicodeMap(map);\n      } else if (/Symbol/i.test(fontName)) {\n        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else if (/Dingbats/i.test(fontName)) {\n        if (/Wingdings/i.test(name)) {\n          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n        }\n        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\n      } else if (isStandardFont) {\n        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else {\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n          if (!_this.composite) {\n            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\n            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n            if (unicode !== -1) {\n              unicodeCharCode = unicode;\n            }\n          }\n          _this.toFontChar[charCode] = unicodeCharCode;\n        });\n      }\n      this.loadedName = fontName.split('-')[0];\n      this.loading = false;\n      this.fontType = getFontType(type, subtype);\n    },\n    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n      function readTableEntry(file) {\n        var tag = (0, _util.bytesToString)(file.getBytes(4));\n        var checksum = file.getInt32() >>> 0;\n        var offset = file.getInt32() >>> 0;\n        var length = file.getInt32() >>> 0;\n        var previousPosition = file.pos;\n        file.pos = file.start ? file.start : 0;\n        file.skip(offset);\n        var data = file.getBytes(length);\n        file.pos = previousPosition;\n        if (tag === 'head') {\n          data[8] = data[9] = data[10] = data[11] = 0;\n          data[17] |= 0x20;\n        }\n        return {\n          tag: tag,\n          checksum: checksum,\n          length: length,\n          offset: offset,\n          data: data\n        };\n      }\n      function readOpenTypeHeader(ttf) {\n        return {\n          version: (0, _util.bytesToString)(ttf.getBytes(4)),\n          numTables: ttf.getUint16(),\n          searchRange: ttf.getUint16(),\n          entrySelector: ttf.getUint16(),\n          rangeShift: ttf.getUint16()\n        };\n      }\n      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n        if (!cmap) {\n          (0, _util.warn)('No cmap table available.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var segment;\n        var start = (font.start ? font.start : 0) + cmap.offset;\n        font.pos = start;\n        font.getUint16();\n        var numTables = font.getUint16();\n        var potentialTable;\n        var canBreak = false;\n        for (var i = 0; i < numTables; i++) {\n          var platformId = font.getUint16();\n          var encodingId = font.getUint16();\n          var offset = font.getInt32() >>> 0;\n          var useTable = false;\n          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\n            continue;\n          }\n          if (platformId === 0 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 1 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n            useTable = true;\n            if (!isSymbolicFont) {\n              canBreak = true;\n            }\n          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n            useTable = true;\n            canBreak = true;\n          }\n          if (useTable) {\n            potentialTable = {\n              platformId: platformId,\n              encodingId: encodingId,\n              offset: offset\n            };\n          }\n          if (canBreak) {\n            break;\n          }\n        }\n        if (potentialTable) {\n          font.pos = start + potentialTable.offset;\n        }\n        if (!potentialTable || font.peekByte() === -1) {\n          (0, _util.warn)('Could not find a preferred cmap table.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var format = font.getUint16();\n        font.getUint16();\n        font.getUint16();\n        var hasShortCmap = false;\n        var mappings = [];\n        var j, glyphId;\n        if (format === 0) {\n          for (j = 0; j < 256; j++) {\n            var index = font.getByte();\n            if (!index) {\n              continue;\n            }\n            mappings.push({\n              charCode: j,\n              glyphId: index\n            });\n          }\n          hasShortCmap = true;\n        } else if (format === 4) {\n          var segCount = font.getUint16() >> 1;\n          font.getBytes(6);\n          var segIndex,\n              segments = [];\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments.push({ end: font.getUint16() });\n          }\n          font.getUint16();\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].start = font.getUint16();\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].delta = font.getUint16();\n          }\n          var offsetsCount = 0;\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            var rangeOffset = font.getUint16();\n            if (!rangeOffset) {\n              segment.offsetIndex = -1;\n              continue;\n            }\n            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n            segment.offsetIndex = offsetIndex;\n            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n          }\n          var offsets = [];\n          for (j = 0; j < offsetsCount; j++) {\n            offsets.push(font.getUint16());\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            start = segment.start;\n            var end = segment.end;\n            var delta = segment.delta;\n            offsetIndex = segment.offsetIndex;\n            for (j = start; j <= end; j++) {\n              if (j === 0xFFFF) {\n                continue;\n              }\n              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n              glyphId = glyphId + delta & 0xFFFF;\n              mappings.push({\n                charCode: j,\n                glyphId: glyphId\n              });\n            }\n          }\n        } else if (format === 6) {\n          var firstCode = font.getUint16();\n          var entryCount = font.getUint16();\n          for (j = 0; j < entryCount; j++) {\n            glyphId = font.getUint16();\n            var charCode = firstCode + j;\n            mappings.push({\n              charCode: charCode,\n              glyphId: glyphId\n            });\n          }\n        } else {\n          (0, _util.warn)('cmap table has unsupported format: ' + format);\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        mappings.sort(function (a, b) {\n          return a.charCode - b.charCode;\n        });\n        for (i = 1; i < mappings.length; i++) {\n          if (mappings[i - 1].charCode === mappings[i].charCode) {\n            mappings.splice(i, 1);\n            i--;\n          }\n        }\n        return {\n          platformId: potentialTable.platformId,\n          encodingId: potentialTable.encodingId,\n          mappings: mappings,\n          hasShortCmap: hasShortCmap\n        };\n      }\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n        if (!header) {\n          if (metrics) {\n            metrics.data = null;\n          }\n          return;\n        }\n        font.pos = (font.start ? font.start : 0) + header.offset;\n        font.pos += header.length - 2;\n        var numOfMetrics = font.getUint16();\n        if (numOfMetrics > numGlyphs) {\n          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n          numOfMetrics = numGlyphs;\n          header.data[34] = (numOfMetrics & 0xff00) >> 8;\n          header.data[35] = numOfMetrics & 0x00ff;\n        }\n        var numOfSidebearings = numGlyphs - numOfMetrics;\n        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n        if (numMissing > 0) {\n          var entries = new Uint8Array(metrics.length + numMissing * 2);\n          entries.set(metrics.data);\n          metrics.data = entries;\n        }\n      }\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n        var glyphProfile = {\n          length: 0,\n          sizeOfInstructions: 0\n        };\n        if (sourceEnd - sourceStart <= 12) {\n          return glyphProfile;\n        }\n        var glyf = source.subarray(sourceStart, sourceEnd);\n        var contoursCount = signedInt16(glyf[0], glyf[1]);\n        if (contoursCount < 0) {\n          contoursCount = -1;\n          writeSignedInt16(glyf, 0, contoursCount);\n          dest.set(glyf, destStart);\n          glyphProfile.length = glyf.length;\n          return glyphProfile;\n        }\n        var i,\n            j = 10,\n            flagsCount = 0;\n        for (i = 0; i < contoursCount; i++) {\n          var endPoint = glyf[j] << 8 | glyf[j + 1];\n          flagsCount = endPoint + 1;\n          j += 2;\n        }\n        var instructionsStart = j;\n        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n        glyphProfile.sizeOfInstructions = instructionsLength;\n        j += 2 + instructionsLength;\n        var instructionsEnd = j;\n        var coordinatesLength = 0;\n        for (i = 0; i < flagsCount; i++) {\n          var flag = glyf[j++];\n          if (flag & 0xC0) {\n            glyf[j - 1] = flag & 0x3F;\n          }\n          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n          coordinatesLength += xyLength;\n          if (flag & 8) {\n            var repeat = glyf[j++];\n            i += repeat;\n            coordinatesLength += repeat * xyLength;\n          }\n        }\n        if (coordinatesLength === 0) {\n          return glyphProfile;\n        }\n        var glyphDataLength = j + coordinatesLength;\n        if (glyphDataLength > glyf.length) {\n          return glyphProfile;\n        }\n        if (!hintsValid && instructionsLength > 0) {\n          dest.set(glyf.subarray(0, instructionsStart), destStart);\n          dest.set([0, 0], destStart + instructionsStart);\n          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n          glyphDataLength -= instructionsLength;\n          if (glyf.length - glyphDataLength > 3) {\n            glyphDataLength = glyphDataLength + 3 & ~3;\n          }\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        if (glyf.length - glyphDataLength > 3) {\n          glyphDataLength = glyphDataLength + 3 & ~3;\n          dest.set(glyf.subarray(0, glyphDataLength), destStart);\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        dest.set(glyf, destStart);\n        glyphProfile.length = glyf.length;\n        return glyphProfile;\n      }\n      function sanitizeHead(head, numGlyphs, locaLength) {\n        var data = head.data;\n        var version = int32(data[0], data[1], data[2], data[3]);\n        if (version >> 16 !== 1) {\n          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\n          data[0] = 0;\n          data[1] = 1;\n          data[2] = 0;\n          data[3] = 0;\n        }\n        var indexToLocFormat = int16(data[50], data[51]);\n        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n          var numGlyphsPlusOne = numGlyphs + 1;\n          if (locaLength === numGlyphsPlusOne << 1) {\n            data[50] = 0;\n            data[51] = 0;\n          } else if (locaLength === numGlyphsPlusOne << 2) {\n            data[50] = 0;\n            data[51] = 1;\n          } else {\n            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\n          }\n        }\n      }\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\n        var itemSize, itemDecode, itemEncode;\n        if (isGlyphLocationsLong) {\n          itemSize = 4;\n          itemDecode = function fontItemDecodeLong(data, offset) {\n            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n          };\n          itemEncode = function fontItemEncodeLong(data, offset, value) {\n            data[offset] = value >>> 24 & 0xFF;\n            data[offset + 1] = value >> 16 & 0xFF;\n            data[offset + 2] = value >> 8 & 0xFF;\n            data[offset + 3] = value & 0xFF;\n          };\n        } else {\n          itemSize = 2;\n          itemDecode = function fontItemDecode(data, offset) {\n            return data[offset] << 9 | data[offset + 1] << 1;\n          };\n          itemEncode = function fontItemEncode(data, offset, value) {\n            data[offset] = value >> 9 & 0xFF;\n            data[offset + 1] = value >> 1 & 0xFF;\n          };\n        }\n        var locaData = loca.data;\n        var locaDataSize = itemSize * (1 + numGlyphs);\n        if (locaData.length !== locaDataSize) {\n          locaData = new Uint8Array(locaDataSize);\n          locaData.set(loca.data.subarray(0, locaDataSize));\n          loca.data = locaData;\n        }\n        var oldGlyfData = glyf.data;\n        var oldGlyfDataLength = oldGlyfData.length;\n        var newGlyfData = new Uint8Array(oldGlyfDataLength);\n        var startOffset = itemDecode(locaData, 0);\n        var writeOffset = 0;\n        var missingGlyphs = Object.create(null);\n        itemEncode(locaData, 0, writeOffset);\n        var i, j;\n        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\n        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\n          var endOffset = itemDecode(locaData, j);\n          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n            endOffset = oldGlyfDataLength;\n          }\n          if (endOffset > oldGlyfDataLength) {\n            startOffset = endOffset;\n          }\n          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n          var newLength = glyphProfile.length;\n          if (newLength === 0) {\n            missingGlyphs[i] = true;\n          }\n          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\n            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\n          }\n          writeOffset += newLength;\n          itemEncode(locaData, j, writeOffset);\n          startOffset = endOffset;\n        }\n        if (writeOffset === 0) {\n          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n            itemEncode(locaData, j, simpleGlyph.length);\n          }\n          glyf.data = simpleGlyph;\n        } else if (dupFirstEntry) {\n          var firstEntryLength = itemDecode(locaData, itemSize);\n          if (newGlyfData.length > firstEntryLength + writeOffset) {\n            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n          } else {\n            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n            glyf.data.set(newGlyfData.subarray(0, writeOffset));\n          }\n          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n        } else {\n          glyf.data = newGlyfData.subarray(0, writeOffset);\n        }\n        return {\n          missingGlyphs: missingGlyphs,\n          maxSizeOfInstructions: maxSizeOfInstructions\n        };\n      }\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n        var start = (font.start ? font.start : 0) + post.offset;\n        font.pos = start;\n        var length = post.length,\n            end = start + length;\n        var version = font.getInt32();\n        font.getBytes(28);\n        var glyphNames;\n        var valid = true;\n        var i;\n        switch (version) {\n          case 0x00010000:\n            glyphNames = MacStandardGlyphOrdering;\n            break;\n          case 0x00020000:\n            var numGlyphs = font.getUint16();\n            if (numGlyphs !== maxpNumGlyphs) {\n              valid = false;\n              break;\n            }\n            var glyphNameIndexes = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var index = font.getUint16();\n              if (index >= 32768) {\n                valid = false;\n                break;\n              }\n              glyphNameIndexes.push(index);\n            }\n            if (!valid) {\n              break;\n            }\n            var customNames = [];\n            var strBuf = [];\n            while (font.pos < end) {\n              var stringLength = font.getByte();\n              strBuf.length = stringLength;\n              for (i = 0; i < stringLength; ++i) {\n                strBuf[i] = String.fromCharCode(font.getByte());\n              }\n              customNames.push(strBuf.join(''));\n            }\n            glyphNames = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var j = glyphNameIndexes[i];\n              if (j < 258) {\n                glyphNames.push(MacStandardGlyphOrdering[j]);\n                continue;\n              }\n              glyphNames.push(customNames[j - 258]);\n            }\n            break;\n          case 0x00030000:\n            break;\n          default:\n            (0, _util.warn)('Unknown/unsupported post table version ' + version);\n            valid = false;\n            if (properties.defaultEncoding) {\n              glyphNames = properties.defaultEncoding;\n            }\n            break;\n        }\n        properties.glyphNames = glyphNames;\n        return valid;\n      }\n      function readNameTable(nameTable) {\n        var start = (font.start ? font.start : 0) + nameTable.offset;\n        font.pos = start;\n        var names = [[], []];\n        var length = nameTable.length,\n            end = start + length;\n        var format = font.getUint16();\n        var FORMAT_0_HEADER_LENGTH = 6;\n        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n          return names;\n        }\n        var numRecords = font.getUint16();\n        var stringsStart = font.getUint16();\n        var records = [];\n        var NAME_RECORD_LENGTH = 12;\n        var i, ii;\n        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n          var r = {\n            platform: font.getUint16(),\n            encoding: font.getUint16(),\n            language: font.getUint16(),\n            name: font.getUint16(),\n            length: font.getUint16(),\n            offset: font.getUint16()\n          };\n          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n            records.push(r);\n          }\n        }\n        for (i = 0, ii = records.length; i < ii; i++) {\n          var record = records[i];\n          if (record.length <= 0) {\n            continue;\n          }\n          var pos = start + stringsStart + record.offset;\n          if (pos + record.length > end) {\n            continue;\n          }\n          font.pos = pos;\n          var nameIndex = record.name;\n          if (record.encoding) {\n            var str = '';\n            for (var j = 0, jj = record.length; j < jj; j += 2) {\n              str += String.fromCharCode(font.getUint16());\n            }\n            names[1][nameIndex] = str;\n          } else {\n            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\n          }\n        }\n        return names;\n      }\n      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n      function sanitizeTTProgram(table, ttContext) {\n        var data = table.data;\n        var i = 0,\n            j,\n            n,\n            b,\n            funcId,\n            pc,\n            lastEndf = 0,\n            lastDeff = 0;\n        var stack = [];\n        var callstack = [];\n        var functionsCalled = [];\n        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n        var inFDEF = false,\n            ifLevel = 0,\n            inELSE = 0;\n        for (var ii = data.length; i < ii;) {\n          var op = data[i++];\n          if (op === 0x40) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if (op === 0x41) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB0) {\n            n = op - 0xB0 + 1;\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB8) {\n            n = op - 0xB8 + 1;\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n            if (!inFDEF && !inELSE) {\n              funcId = stack[stack.length - 1];\n              ttContext.functionsUsed[funcId] = true;\n              if (funcId in ttContext.functionsStackDeltas) {\n                stack.length += ttContext.functionsStackDeltas[funcId];\n              } else if (funcId in ttContext.functionsDefined && functionsCalled.indexOf(funcId) < 0) {\n                callstack.push({\n                  data: data,\n                  i: i,\n                  stackTop: stack.length - 1\n                });\n                functionsCalled.push(funcId);\n                pc = ttContext.functionsDefined[funcId];\n                if (!pc) {\n                  (0, _util.warn)('TT: CALL non-existent function');\n                  ttContext.hintsValid = false;\n                  return;\n                }\n                data = pc.data;\n                i = pc.i;\n              }\n            }\n          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested FDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n            funcId = stack.pop();\n            ttContext.functionsDefined[funcId] = {\n              data: data,\n              i: i\n            };\n          } else if (op === 0x2D) {\n            if (inFDEF) {\n              inFDEF = false;\n              lastEndf = i;\n            } else {\n              pc = callstack.pop();\n              if (!pc) {\n                (0, _util.warn)('TT: ENDF bad stack');\n                ttContext.hintsValid = false;\n                return;\n              }\n              funcId = functionsCalled.pop();\n              data = pc.data;\n              i = pc.i;\n              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n            }\n          } else if (op === 0x89) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested IDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n          } else if (op === 0x58) {\n            ++ifLevel;\n          } else if (op === 0x1B) {\n            inELSE = ifLevel;\n          } else if (op === 0x59) {\n            if (inELSE === ifLevel) {\n              inELSE = 0;\n            }\n            --ifLevel;\n          } else if (op === 0x1C) {\n            if (!inFDEF && !inELSE) {\n              var offset = stack[stack.length - 1];\n              if (offset > 0) {\n                i += offset - 1;\n              }\n            }\n          }\n          if (!inFDEF && !inELSE) {\n            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n            if (op >= 0x71 && op <= 0x75) {\n              n = stack.pop();\n              if (!isNaN(n)) {\n                stackDelta = -n * 2;\n              }\n            }\n            while (stackDelta < 0 && stack.length > 0) {\n              stack.pop();\n              stackDelta++;\n            }\n            while (stackDelta > 0) {\n              stack.push(NaN);\n              stackDelta--;\n            }\n          }\n        }\n        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n        var content = [data];\n        if (i > data.length) {\n          content.push(new Uint8Array(i - data.length));\n        }\n        if (lastDeff > lastEndf) {\n          (0, _util.warn)('TT: complementing a missing function tail');\n          content.push(new Uint8Array([0x22, 0x2D]));\n        }\n        foldTTTable(table, content);\n      }\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n        if (ttContext.tooComplexToFollowFunctions) {\n          return;\n        }\n        if (ttContext.functionsDefined.length > maxFunctionDefs) {\n          (0, _util.warn)('TT: more functions defined than expected');\n          ttContext.hintsValid = false;\n          return;\n        }\n        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n          if (j > maxFunctionDefs) {\n            (0, _util.warn)('TT: invalid function id: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n            (0, _util.warn)('TT: undefined function: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n        }\n      }\n      function foldTTTable(table, content) {\n        if (content.length > 1) {\n          var newLength = 0;\n          var j, jj;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            newLength += content[j].length;\n          }\n          newLength = newLength + 3 & ~3;\n          var result = new Uint8Array(newLength);\n          var pos = 0;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            result.set(content[j], pos);\n            pos += content[j].length;\n          }\n          table.data = result;\n          table.length = newLength;\n        }\n      }\n      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n        var ttContext = {\n          functionsDefined: [],\n          functionsUsed: [],\n          functionsStackDeltas: [],\n          tooComplexToFollowFunctions: false,\n          hintsValid: true\n        };\n        if (fpgm) {\n          sanitizeTTProgram(fpgm, ttContext);\n        }\n        if (prep) {\n          sanitizeTTProgram(prep, ttContext);\n        }\n        if (fpgm) {\n          checkInvalidFunctions(ttContext, maxFunctionDefs);\n        }\n        if (cvt && cvt.length & 1) {\n          var cvtData = new Uint8Array(cvt.length + 1);\n          cvtData.set(cvt.data);\n          cvt.data = cvtData;\n        }\n        return ttContext.hintsValid;\n      }\n      font = new _stream.Stream(new Uint8Array(font.getBytes()));\n      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\n      var header = readOpenTypeHeader(font);\n      var numTables = header.numTables;\n      var cff, cffFile;\n      var tables = Object.create(null);\n      tables['OS/2'] = null;\n      tables['cmap'] = null;\n      tables['head'] = null;\n      tables['hhea'] = null;\n      tables['hmtx'] = null;\n      tables['maxp'] = null;\n      tables['name'] = null;\n      tables['post'] = null;\n      var table;\n      for (var i = 0; i < numTables; i++) {\n        table = readTableEntry(font);\n        if (VALID_TABLES.indexOf(table.tag) < 0) {\n          continue;\n        }\n        if (table.length === 0) {\n          continue;\n        }\n        tables[table.tag] = table;\n      }\n      var isTrueType = !tables['CFF '];\n      if (!isTrueType) {\n        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          cff = new CFFFont(cffFile, properties);\n          adjustWidths(properties);\n          return this.convert(name, cff, properties);\n        }\n        delete tables['glyf'];\n        delete tables['loca'];\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n        this.isOpenType = true;\n      } else {\n        if (!tables['loca']) {\n          throw new _util.FormatError('Required \"loca\" table is not found');\n        }\n        if (!tables['glyf']) {\n          (0, _util.warn)('Required \"glyf\" table is not found -- trying to recover.');\n          tables['glyf'] = {\n            tag: 'glyf',\n            data: new Uint8Array(0)\n          };\n        }\n        this.isOpenType = false;\n      }\n      if (!tables['maxp']) {\n        throw new _util.FormatError('Required \"maxp\" table is not found');\n      }\n      font.pos = (font.start || 0) + tables['maxp'].offset;\n      var version = font.getInt32();\n      var numGlyphs = font.getUint16();\n      var maxFunctionDefs = 0;\n      var maxSizeOfInstructions = 0;\n      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n        font.pos += 8;\n        var maxZones = font.getUint16();\n        if (maxZones > 2) {\n          tables['maxp'].data[14] = 0;\n          tables['maxp'].data[15] = 2;\n        }\n        font.pos += 4;\n        maxFunctionDefs = font.getUint16();\n        font.pos += 6;\n        maxSizeOfInstructions = font.getUint16();\n      }\n      var dupFirstEntry = false;\n      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\0') {\n        dupFirstEntry = true;\n        numGlyphs++;\n        tables['maxp'].data[4] = numGlyphs >> 8;\n        tables['maxp'].data[5] = numGlyphs & 255;\n      }\n      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n      if (!hintsValid) {\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n      }\n      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n      if (!tables['head']) {\n        throw new _util.FormatError('Required \"head\" table is not found');\n      }\n      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n      var missingGlyphs = Object.create(null);\n      if (isTrueType) {\n        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\n        missingGlyphs = glyphsInfo.missingGlyphs;\n        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\n          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\n        }\n      }\n      if (!tables['hhea']) {\n        throw new _util.FormatError('Required \"hhea\" table is not found');\n      }\n      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n        tables['hhea'].data[10] = 0xFF;\n        tables['hhea'].data[11] = 0xFF;\n      }\n      var metricsOverride = {\n        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n      };\n      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n      if (tables['post']) {\n        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n        if (!valid) {\n          tables['post'] = null;\n        }\n      }\n      var charCodeToGlyphId = [],\n          charCode;\n      function hasGlyph(glyphId) {\n        return !missingGlyphs[glyphId];\n      }\n      if (properties.composite) {\n        var cidToGidMap = properties.cidToGidMap || [];\n        var isCidToGidMapEmpty = cidToGidMap.length === 0;\n        properties.cMap.forEach(function (charCode, cid) {\n          if (cid > 0xffff) {\n            throw new _util.FormatError('Max size of CID is 65,535');\n          }\n          var glyphId = -1;\n          if (isCidToGidMapEmpty) {\n            glyphId = cid;\n          } else if (cidToGidMap[cid] !== undefined) {\n            glyphId = cidToGidMap[cid];\n          }\n          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        });\n        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n          charCodeToGlyphId[0] = numGlyphs - 1;\n        }\n      } else {\n        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n        var cmapPlatformId = cmapTable.platformId;\n        var cmapEncodingId = cmapTable.encodingId;\n        var cmapMappings = cmapTable.mappings;\n        var cmapMappingsLength = cmapMappings.length;\n        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\n          var baseEncoding = [];\n          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n          }\n          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n          for (charCode = 0; charCode < 256; charCode++) {\n            var glyphName, standardGlyphName;\n            if (this.differences && charCode in this.differences) {\n              glyphName = this.differences[charCode];\n            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n              glyphName = baseEncoding[charCode];\n            } else {\n              glyphName = _encodings.StandardEncoding[charCode];\n            }\n            if (!glyphName) {\n              continue;\n            }\n            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n            var unicodeOrCharCode;\n            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\n            }\n            var found = false;\n            for (i = 0; i < cmapMappingsLength; ++i) {\n              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n                continue;\n              }\n              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n              found = true;\n              break;\n            }\n            if (!found && properties.glyphNames) {\n              var glyphId = properties.glyphNames.indexOf(glyphName);\n              if (glyphId === -1 && standardGlyphName !== glyphName) {\n                glyphId = properties.glyphNames.indexOf(standardGlyphName);\n              }\n              if (glyphId > 0 && hasGlyph(glyphId)) {\n                charCodeToGlyphId[charCode] = glyphId;\n                found = true;\n              }\n            }\n          }\n        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n          for (i = 0; i < cmapMappingsLength; ++i) {\n            charCodeToGlyphId[cmapMappings[i].charCode] = cmapMappings[i].glyphId;\n          }\n        } else {\n          for (i = 0; i < cmapMappingsLength; ++i) {\n            charCode = cmapMappings[i].charCode;\n            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\n              charCode &= 0xFF;\n            }\n            charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n          }\n        }\n      }\n      if (charCodeToGlyphId.length === 0) {\n        charCodeToGlyphId[0] = 0;\n      }\n      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\n      this.toFontChar = newMapping.toFontChar;\n      tables['cmap'] = {\n        tag: 'cmap',\n        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n      };\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n        tables['OS/2'] = {\n          tag: 'OS/2',\n          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n        };\n      }\n      if (!tables['post']) {\n        tables['post'] = {\n          tag: 'post',\n          data: createPostTable(properties)\n        };\n      }\n      if (!isTrueType) {\n        try {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n          cff = parser.parse();\n          var compiler = new _cff_parser.CFFCompiler(cff);\n          tables['CFF '].data = compiler.compile();\n        } catch (e) {\n          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n        }\n      }\n      if (!tables['name']) {\n        tables['name'] = {\n          tag: 'name',\n          data: createNameTable(this.name)\n        };\n      } else {\n        var namePrototype = readNameTable(tables['name']);\n        tables['name'].data = createNameTable(name, namePrototype);\n      }\n      var builder = new OpenTypeFileBuilder(header.version);\n      for (var tableTag in tables) {\n        builder.addTable(tableTag, tables[tableTag].data);\n      }\n      return builder.toArray();\n    },\n    convert: function Font_convert(fontName, font, properties) {\n      properties.fixedPitch = false;\n      if (properties.builtInEncoding) {\n        adjustToUnicode(properties, properties.builtInEncoding);\n      }\n      var mapping = font.getGlyphMapping(properties);\n      var newMapping = adjustMapping(mapping, properties, Object.create(null));\n      this.toFontChar = newMapping.toFontChar;\n      var numGlyphs = font.numGlyphs;\n      function getCharCodes(charCodeToGlyphId, glyphId) {\n        var charCodes = null;\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            if (!charCodes) {\n              charCodes = [];\n            }\n            charCodes.push(charCode | 0);\n          }\n        }\n        return charCodes;\n      }\n      function createCharCode(charCodeToGlyphId, glyphId) {\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            return charCode | 0;\n          }\n        }\n        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n        return newMapping.nextAvailableFontCharCode++;\n      }\n      var seacs = font.seacs;\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        var charset = font.getCharset();\n        var seacMap = Object.create(null);\n        for (var glyphId in seacs) {\n          glyphId |= 0;\n          var seac = seacs[glyphId];\n          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\n          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\n          var baseGlyphId = charset.indexOf(baseGlyphName);\n          var accentGlyphId = charset.indexOf(accentGlyphName);\n          if (baseGlyphId < 0 || accentGlyphId < 0) {\n            continue;\n          }\n          var accentOffset = {\n            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n          };\n          var charCodes = getCharCodes(mapping, glyphId);\n          if (!charCodes) {\n            continue;\n          }\n          for (var i = 0, ii = charCodes.length; i < ii; i++) {\n            var charCode = charCodes[i];\n            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n            seacMap[charCode] = {\n              baseFontCharCode: baseFontCharCode,\n              accentFontCharCode: accentFontCharCode,\n              accentOffset: accentOffset\n            };\n          }\n        }\n        properties.seacMap = seacMap;\n      }\n      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n      builder.addTable('CFF ', font.data);\n      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n      builder.addTable('hmtx', function fontFieldsHmtx() {\n        var charstrings = font.charstrings;\n        var cffWidths = font.cff ? font.cff.widths : null;\n        var hmtx = '\\x00\\x00\\x00\\x00';\n        for (var i = 1, ii = numGlyphs; i < ii; i++) {\n          var width = 0;\n          if (charstrings) {\n            var charstring = charstrings[i - 1];\n            width = 'width' in charstring ? charstring.width : 0;\n          } else if (cffWidths) {\n            width = Math.ceil(cffWidths[i] || 0);\n          }\n          hmtx += string16(width) + string16(0);\n        }\n        return hmtx;\n      }());\n      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n      builder.addTable('name', createNameTable(fontName));\n      builder.addTable('post', createPostTable(properties));\n      return builder.toArray();\n    },\n    get spaceWidth() {\n      if ('_shadowWidth' in this) {\n        return this._shadowWidth;\n      }\n      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\n      var width;\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n        var glyphName = possibleSpaceReplacements[i];\n        if (glyphName in this.widths) {\n          width = this.widths[glyphName];\n          break;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        var glyphUnicode = glyphsUnicodeMap[glyphName];\n        var charcode = 0;\n        if (this.composite) {\n          if (this.cMap.contains(glyphUnicode)) {\n            charcode = this.cMap.lookup(glyphUnicode);\n          }\n        }\n        if (!charcode && this.toUnicode) {\n          charcode = this.toUnicode.charCodeOf(glyphUnicode);\n        }\n        if (charcode <= 0) {\n          charcode = glyphUnicode;\n        }\n        width = this.widths[charcode];\n        if (width) {\n          break;\n        }\n      }\n      width = width || this.defaultWidth;\n      this._shadowWidth = width;\n      return width;\n    },\n    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n      var fontCharCode, width, operatorListId;\n      var widthCode = charcode;\n      if (this.cMap && this.cMap.contains(charcode)) {\n        widthCode = this.cMap.lookup(charcode);\n      }\n      width = this.widths[widthCode];\n      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n      var unicode = this.toUnicode.get(charcode) || charcode;\n      if (typeof unicode === 'number') {\n        unicode = String.fromCharCode(unicode);\n      }\n      var isInFont = charcode in this.toFontChar;\n      fontCharCode = this.toFontChar[charcode] || charcode;\n      if (this.missingFile) {\n        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\n      }\n      if (this.isType3Font) {\n        operatorListId = fontCharCode;\n      }\n      var accent = null;\n      if (this.seacMap && this.seacMap[charcode]) {\n        isInFont = true;\n        var seac = this.seacMap[charcode];\n        fontCharCode = seac.baseFontCharCode;\n        accent = {\n          fontChar: String.fromCharCode(seac.accentFontCharCode),\n          offset: seac.accentOffset\n        };\n      }\n      var fontChar = String.fromCharCode(fontCharCode);\n      var glyph = this.glyphCache[charcode];\n      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n        this.glyphCache[charcode] = glyph;\n      }\n      return glyph;\n    },\n    charsToGlyphs: function Font_charsToGlyphs(chars) {\n      var charsCache = this.charsCache;\n      var glyphs, glyph, charcode;\n      if (charsCache) {\n        glyphs = charsCache[chars];\n        if (glyphs) {\n          return glyphs;\n        }\n      }\n      if (!charsCache) {\n        charsCache = this.charsCache = Object.create(null);\n      }\n      glyphs = [];\n      var charsCacheKey = chars;\n      var i = 0,\n          ii;\n      if (this.cMap) {\n        var c = Object.create(null);\n        while (i < chars.length) {\n          this.cMap.readCharCode(chars, i, c);\n          charcode = c.charcode;\n          var length = c.length;\n          i += length;\n          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n          glyph = this.charToGlyph(charcode, isSpace);\n          glyphs.push(glyph);\n        }\n      } else {\n        for (i = 0, ii = chars.length; i < ii; ++i) {\n          charcode = chars.charCodeAt(i);\n          glyph = this.charToGlyph(charcode, charcode === 0x20);\n          glyphs.push(glyph);\n        }\n      }\n      return charsCache[charsCacheKey] = glyphs;\n    }\n  };\n  return Font;\n}();\nvar ErrorFont = function ErrorFontClosure() {\n  function ErrorFont(error) {\n    this.error = error;\n    this.loadedName = 'g_font_error';\n    this.loading = false;\n  }\n  ErrorFont.prototype = {\n    charsToGlyphs: function ErrorFont_charsToGlyphs() {\n      return [];\n    },\n    exportData: function ErrorFont_exportData() {\n      return { error: this.error };\n    }\n  };\n  return ErrorFont;\n}();\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n  var charCodeToGlyphId = Object.create(null);\n  var glyphId, charCode, baseEncoding;\n  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n  if (properties.baseEncodingName) {\n    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  } else if (isSymbolicFont) {\n    for (charCode in builtInEncoding) {\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n    }\n  } else {\n    baseEncoding = _encodings.StandardEncoding;\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  var differences = properties.differences,\n      glyphsUnicodeMap;\n  if (differences) {\n    for (charCode in differences) {\n      var glyphName = differences[charCode];\n      glyphId = glyphNames.indexOf(glyphName);\n      if (glyphId === -1) {\n        if (!glyphsUnicodeMap) {\n          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        }\n        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n        if (standardGlyphName !== glyphName) {\n          glyphId = glyphNames.indexOf(standardGlyphName);\n        }\n      }\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  return charCodeToGlyphId;\n}\nvar Type1Font = function Type1FontClosure() {\n  function findBlock(streamBytes, signature, startIndex) {\n    var streamBytesLength = streamBytes.length;\n    var signatureLength = signature.length;\n    var scanLength = streamBytesLength - signatureLength;\n    var i = startIndex,\n        j,\n        found = false;\n    while (i < scanLength) {\n      j = 0;\n      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n        j++;\n      }\n      if (j >= signatureLength) {\n        i += j;\n        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\n          i++;\n        }\n        found = true;\n        break;\n      }\n      i++;\n    }\n    return {\n      found: found,\n      length: i\n    };\n  }\n  function getHeaderBlock(stream, suggestedLength) {\n    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\n    var streamStartPos = stream.pos;\n    var headerBytes, headerBytesLength, block;\n    try {\n      headerBytes = stream.getBytes(suggestedLength);\n      headerBytesLength = headerBytes.length;\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n    }\n    if (headerBytesLength === suggestedLength) {\n      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n      if (block.found && block.length === suggestedLength) {\n        return {\n          stream: new _stream.Stream(headerBytes),\n          length: suggestedLength\n        };\n      }\n    }\n    (0, _util.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n    stream.pos = streamStartPos;\n    var SCAN_BLOCK_LENGTH = 2048;\n    var actualLength;\n    while (true) {\n      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n      if (block.length === 0) {\n        break;\n      }\n      stream.pos += block.length;\n      if (block.found) {\n        actualLength = stream.pos - streamStartPos;\n        break;\n      }\n    }\n    stream.pos = streamStartPos;\n    if (actualLength) {\n      return {\n        stream: new _stream.Stream(stream.getBytes(actualLength)),\n        length: actualLength\n      };\n    }\n    (0, _util.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n    return {\n      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\n      length: suggestedLength\n    };\n  }\n  function getEexecBlock(stream, suggestedLength) {\n    var eexecBytes = stream.getBytes();\n    return {\n      stream: new _stream.Stream(eexecBytes),\n      length: eexecBytes.length\n    };\n  }\n  function Type1Font(name, file, properties) {\n    var PFB_HEADER_SIZE = 6;\n    var headerBlockLength = properties.length1;\n    var eexecBlockLength = properties.length2;\n    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n    if (pfbHeaderPresent) {\n      file.skip(PFB_HEADER_SIZE);\n      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var headerBlock = getHeaderBlock(file, headerBlockLength);\n    headerBlockLength = headerBlock.length;\n    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n    headerBlockParser.extractFontHeader(properties);\n    if (pfbHeaderPresent) {\n      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var eexecBlock = getEexecBlock(file, eexecBlockLength);\n    eexecBlockLength = eexecBlock.length;\n    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n    var data = eexecBlockParser.extractFontProgram();\n    for (var info in data.properties) {\n      properties[info] = data.properties[info];\n    }\n    var charstrings = data.charstrings;\n    var type2Charstrings = this.getType2Charstrings(charstrings);\n    var subrs = this.getType2Subrs(data.subrs);\n    this.charstrings = charstrings;\n    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n    this.seacs = this.getSeacs(data.charstrings);\n  }\n  Type1Font.prototype = {\n    get numGlyphs() {\n      return this.charstrings.length + 1;\n    },\n    getCharset: function Type1Font_getCharset() {\n      var charset = ['.notdef'];\n      var charstrings = this.charstrings;\n      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        charset.push(charstrings[glyphId].glyphName);\n      }\n      return charset;\n    },\n    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n      var charstrings = this.charstrings;\n      var glyphNames = ['.notdef'],\n          glyphId;\n      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        glyphNames.push(charstrings[glyphId].glyphName);\n      }\n      var encoding = properties.builtInEncoding;\n      if (encoding) {\n        var builtInEncoding = Object.create(null);\n        for (var charCode in encoding) {\n          glyphId = glyphNames.indexOf(encoding[charCode]);\n          if (glyphId >= 0) {\n            builtInEncoding[charCode] = glyphId;\n          }\n        }\n      }\n      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n    },\n    getSeacs: function Type1Font_getSeacs(charstrings) {\n      var i, ii;\n      var seacMap = [];\n      for (i = 0, ii = charstrings.length; i < ii; i++) {\n        var charstring = charstrings[i];\n        if (charstring.seac) {\n          seacMap[i + 1] = charstring.seac;\n        }\n      }\n      return seacMap;\n    },\n    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n      var type2Charstrings = [];\n      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n        type2Charstrings.push(type1Charstrings[i].charstring);\n      }\n      return type2Charstrings;\n    },\n    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n      var bias = 0;\n      var count = type1Subrs.length;\n      if (count < 1133) {\n        bias = 107;\n      } else if (count < 33769) {\n        bias = 1131;\n      } else {\n        bias = 32768;\n      }\n      var type2Subrs = [];\n      var i;\n      for (i = 0; i < bias; i++) {\n        type2Subrs.push([0x0B]);\n      }\n      for (i = 0; i < count; i++) {\n        type2Subrs.push(type1Subrs[i]);\n      }\n      return type2Subrs;\n    },\n    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n      var cff = new _cff_parser.CFF();\n      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\n      cff.names = [name];\n      var topDict = new _cff_parser.CFFTopDict();\n      topDict.setByName('version', 391);\n      topDict.setByName('Notice', 392);\n      topDict.setByName('FullName', 393);\n      topDict.setByName('FamilyName', 394);\n      topDict.setByName('Weight', 395);\n      topDict.setByName('Encoding', null);\n      topDict.setByName('FontMatrix', properties.fontMatrix);\n      topDict.setByName('FontBBox', properties.bbox);\n      topDict.setByName('charset', null);\n      topDict.setByName('CharStrings', null);\n      topDict.setByName('Private', null);\n      cff.topDict = topDict;\n      var strings = new _cff_parser.CFFStrings();\n      strings.add('Version 0.11');\n      strings.add('See original notice');\n      strings.add(name);\n      strings.add(name);\n      strings.add('Medium');\n      cff.strings = strings;\n      cff.globalSubrIndex = new _cff_parser.CFFIndex();\n      var count = glyphs.length;\n      var charsetArray = [0];\n      var i, ii;\n      for (i = 0; i < count; i++) {\n        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\n        if (index === -1) {\n          index = 0;\n        }\n        charsetArray.push(index >> 8 & 0xff, index & 0xff);\n      }\n      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\n      var charStringsIndex = new _cff_parser.CFFIndex();\n      charStringsIndex.add([0x8B, 0x0E]);\n      for (i = 0; i < count; i++) {\n        var glyph = glyphs[i];\n        if (glyph.length === 0) {\n          charStringsIndex.add([0x8B, 0x0E]);\n          continue;\n        }\n        charStringsIndex.add(glyph);\n      }\n      cff.charStrings = charStringsIndex;\n      var privateDict = new _cff_parser.CFFPrivateDict();\n      privateDict.setByName('Subrs', null);\n      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\n      for (i = 0, ii = fields.length; i < ii; i++) {\n        var field = fields[i];\n        if (!(field in properties.privateData)) {\n          continue;\n        }\n        var value = properties.privateData[field];\n        if (Array.isArray(value)) {\n          for (var j = value.length - 1; j > 0; j--) {\n            value[j] -= value[j - 1];\n          }\n        }\n        privateDict.setByName(field, value);\n      }\n      cff.topDict.privateDict = privateDict;\n      var subrIndex = new _cff_parser.CFFIndex();\n      for (i = 0, ii = subrs.length; i < ii; i++) {\n        subrIndex.add(subrs[i]);\n      }\n      privateDict.subrsIndex = subrIndex;\n      var compiler = new _cff_parser.CFFCompiler(cff);\n      return compiler.compile();\n    }\n  };\n  return Type1Font;\n}();\nvar CFFFont = function CFFFontClosure() {\n  function CFFFont(file, properties) {\n    this.properties = properties;\n    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n    this.cff = parser.parse();\n    var compiler = new _cff_parser.CFFCompiler(this.cff);\n    this.seacs = this.cff.seacs;\n    try {\n      this.data = compiler.compile();\n    } catch (e) {\n      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n      this.data = file;\n    }\n  }\n  CFFFont.prototype = {\n    get numGlyphs() {\n      return this.cff.charStrings.count;\n    },\n    getCharset: function CFFFont_getCharset() {\n      return this.cff.charset.charset;\n    },\n    getGlyphMapping: function CFFFont_getGlyphMapping() {\n      var cff = this.cff;\n      var properties = this.properties;\n      var charsets = cff.charset.charset;\n      var charCodeToGlyphId;\n      var glyphId;\n      if (properties.composite) {\n        charCodeToGlyphId = Object.create(null);\n        if (cff.isCIDFont) {\n          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n            var cid = charsets[glyphId];\n            var charCode = properties.cMap.charCodeOf(cid);\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        } else {\n          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n            charCodeToGlyphId[glyphId] = glyphId;\n          }\n        }\n        return charCodeToGlyphId;\n      }\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n      return charCodeToGlyphId;\n    }\n  };\n  return CFFFont;\n}();\n(function checkSeacSupport() {\n  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\n  }\n})();\n(function checkChromeWindows() {\n  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n  }\n})();\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\nexports.ErrorFont = ErrorFont;\nexports.Font = Font;\nexports.FontFlags = FontFlags;\nexports.ToUnicodeMap = ToUnicodeMap;\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\nexports.ProblematicCharRanges = ProblematicCharRanges;\nexports.getFontType = getFontType;\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\nexports.ISOAdobeCharset = ISOAdobeCharset;\nexports.ExpertCharset = ExpertCharset;\nexports.ExpertSubsetCharset = ExpertSubsetCharset;\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontRendererFactory = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cff_parser = __w_pdfjs_require__(78);\n\nvar _glyphlist = __w_pdfjs_require__(47);\n\nvar _encodings = __w_pdfjs_require__(28);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar FontRendererFactory = function FontRendererFactoryClosure() {\n  function getLong(data, offset) {\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n  }\n  function getUshort(data, offset) {\n    return data[offset] << 8 | data[offset + 1];\n  }\n  function parseCmap(data, start, end) {\n    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n    var format = getUshort(data, start + offset);\n    var ranges, p, i;\n    if (format === 4) {\n      getUshort(data, start + offset + 2);\n      var segCount = getUshort(data, start + offset + 6) >> 1;\n      p = start + offset + 14;\n      ranges = [];\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i] = { end: getUshort(data, p) };\n      }\n      p += 2;\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].start = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].idDelta = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        var idOffset = getUshort(data, p);\n        if (idOffset === 0) {\n          continue;\n        }\n        ranges[i].ids = [];\n        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n          ranges[i].ids[j] = getUshort(data, p + idOffset);\n          idOffset += 2;\n        }\n      }\n      return ranges;\n    } else if (format === 12) {\n      getLong(data, start + offset + 4);\n      var groups = getLong(data, start + offset + 12);\n      p = start + offset + 16;\n      ranges = [];\n      for (i = 0; i < groups; i++) {\n        ranges.push({\n          start: getLong(data, p),\n          end: getLong(data, p + 4),\n          idDelta: getLong(data, p + 8) - getLong(data, p)\n        });\n        p += 12;\n      }\n      return ranges;\n    }\n    throw new _util.FormatError('unsupported cmap: ' + format);\n  }\n  function parseCff(data, start, end, seacAnalysisEnabled) {\n    var properties = {};\n    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\n    var cff = parser.parse();\n    return {\n      glyphs: cff.charStrings.objects,\n      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects\n    };\n  }\n  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n    var itemSize, itemDecode;\n    if (isGlyphLocationsLong) {\n      itemSize = 4;\n      itemDecode = function fontItemDecodeLong(data, offset) {\n        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n      };\n    } else {\n      itemSize = 2;\n      itemDecode = function fontItemDecode(data, offset) {\n        return data[offset] << 9 | data[offset + 1] << 1;\n      };\n    }\n    var glyphs = [];\n    var startOffset = itemDecode(loca, 0);\n    for (var j = itemSize; j < loca.length; j += itemSize) {\n      var endOffset = itemDecode(loca, j);\n      glyphs.push(glyf.subarray(startOffset, endOffset));\n      startOffset = endOffset;\n    }\n    return glyphs;\n  }\n  function lookupCmap(ranges, unicode) {\n    var code = unicode.charCodeAt(0),\n        gid = 0;\n    var l = 0,\n        r = ranges.length - 1;\n    while (l < r) {\n      var c = l + r + 1 >> 1;\n      if (code < ranges[c].start) {\n        r = c - 1;\n      } else {\n        l = c;\n      }\n    }\n    if (ranges[l].start <= code && code <= ranges[l].end) {\n      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n    }\n    return {\n      charCode: code,\n      glyphId: gid\n    };\n  }\n  function compileGlyf(code, cmds, font) {\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function quadraticCurveTo(xa, ya, x, y) {\n      cmds.push({\n        cmd: 'quadraticCurveTo',\n        args: [xa, ya, x, y]\n      });\n    }\n    var i = 0;\n    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n    var flags;\n    var x = 0,\n        y = 0;\n    i += 10;\n    if (numberOfContours < 0) {\n      do {\n        flags = code[i] << 8 | code[i + 1];\n        var glyphIndex = code[i + 2] << 8 | code[i + 3];\n        i += 4;\n        var arg1, arg2;\n        if (flags & 0x01) {\n          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n          i += 4;\n        } else {\n          arg1 = code[i++];\n          arg2 = code[i++];\n        }\n        if (flags & 0x02) {\n          x = arg1;\n          y = arg2;\n        } else {\n          x = 0;\n          y = 0;\n        }\n        var scaleX = 1,\n            scaleY = 1,\n            scale01 = 0,\n            scale10 = 0;\n        if (flags & 0x08) {\n          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          i += 2;\n        } else if (flags & 0x40) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          i += 4;\n        } else if (flags & 0x80) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n          i += 8;\n        }\n        var subglyph = font.glyphs[glyphIndex];\n        if (subglyph) {\n          cmds.push({ cmd: 'save' });\n          cmds.push({\n            cmd: 'transform',\n            args: [scaleX, scale01, scale10, scaleY, x, y]\n          });\n          compileGlyf(subglyph, cmds, font);\n          cmds.push({ cmd: 'restore' });\n        }\n      } while (flags & 0x20);\n    } else {\n      var endPtsOfContours = [];\n      var j, jj;\n      for (j = 0; j < numberOfContours; j++) {\n        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n        i += 2;\n      }\n      var instructionLength = code[i] << 8 | code[i + 1];\n      i += 2 + instructionLength;\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n      var points = [];\n      while (points.length < numberOfPoints) {\n        flags = code[i++];\n        var repeat = 1;\n        if (flags & 0x08) {\n          repeat += code[i++];\n        }\n        while (repeat-- > 0) {\n          points.push({ flags: flags });\n        }\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x12) {\n          case 0x00:\n            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x02:\n            x -= code[i++];\n            break;\n          case 0x12:\n            x += code[i++];\n            break;\n        }\n        points[j].x = x;\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x24) {\n          case 0x00:\n            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x04:\n            y -= code[i++];\n            break;\n          case 0x24:\n            y += code[i++];\n            break;\n        }\n        points[j].y = y;\n      }\n      var startPoint = 0;\n      for (i = 0; i < numberOfContours; i++) {\n        var endPoint = endPtsOfContours[i];\n        var contour = points.slice(startPoint, endPoint + 1);\n        if (contour[0].flags & 1) {\n          contour.push(contour[0]);\n        } else if (contour[contour.length - 1].flags & 1) {\n          contour.unshift(contour[contour.length - 1]);\n        } else {\n          var p = {\n            flags: 1,\n            x: (contour[0].x + contour[contour.length - 1].x) / 2,\n            y: (contour[0].y + contour[contour.length - 1].y) / 2\n          };\n          contour.unshift(p);\n          contour.push(p);\n        }\n        moveTo(contour[0].x, contour[0].y);\n        for (j = 1, jj = contour.length; j < jj; j++) {\n          if (contour[j].flags & 1) {\n            lineTo(contour[j].x, contour[j].y);\n          } else if (contour[j + 1].flags & 1) {\n            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n            j++;\n          } else {\n            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n          }\n        }\n        startPoint = endPoint + 1;\n      }\n    }\n  }\n  function compileCharString(code, cmds, font) {\n    var stack = [];\n    var x = 0,\n        y = 0;\n    var stems = 0;\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      cmds.push({\n        cmd: 'bezierCurveTo',\n        args: [x1, y1, x2, y2, x, y]\n      });\n    }\n    function parse(code) {\n      var i = 0;\n      while (i < code.length) {\n        var stackClean = false;\n        var v = code[i++];\n        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n        switch (v) {\n          case 1:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 3:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 4:\n            y += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 5:\n            while (stack.length > 0) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 6:\n            while (stack.length > 0) {\n              x += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 7:\n            while (stack.length > 0) {\n              y += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              x += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 8:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 10:\n            n = stack.pop() + font.subrsBias;\n            subrCode = font.subrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 11:\n            return;\n          case 12:\n            v = code[i++];\n            switch (v) {\n              case 34:\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y1 = y + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y, xb, y1, x, y1);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y, x, y);\n                break;\n              case 35:\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                stack.pop();\n                break;\n              case 36:\n                xa = x + stack.shift();\n                y1 = y + stack.shift();\n                xb = xa + stack.shift();\n                y2 = y1 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y2, x, y2);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y3 = y2 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y2, xb, y3, x, y);\n                break;\n              case 37:\n                var x0 = x,\n                    y0 = y;\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb;\n                y = yb;\n                if (Math.abs(x - x0) > Math.abs(y - y0)) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                break;\n              default:\n                throw new _util.FormatError('unknown operator: 12 ' + v);\n            }\n            break;\n          case 14:\n            if (stack.length >= 4) {\n              var achar = stack.pop();\n              var bchar = stack.pop();\n              y = stack.pop();\n              x = stack.pop();\n              cmds.push({ cmd: 'save' });\n              cmds.push({\n                cmd: 'translate',\n                args: [x, y]\n              });\n              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n              cmds.push({ cmd: 'restore' });\n              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n            }\n            return;\n          case 18:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 19:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 20:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 21:\n            y += stack.pop();\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 22:\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 23:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 24:\n            while (stack.length > 2) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            x += stack.shift();\n            y += stack.shift();\n            lineTo(x, y);\n            break;\n          case 25:\n            while (stack.length > 6) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            xa = x + stack.shift();\n            ya = y + stack.shift();\n            xb = xa + stack.shift();\n            yb = ya + stack.shift();\n            x = xb + stack.shift();\n            y = yb + stack.shift();\n            bezierCurveTo(xa, ya, xb, yb, x, y);\n            break;\n          case 26:\n            if (stack.length % 2) {\n              x += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb;\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 27:\n            if (stack.length % 2) {\n              y += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb;\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 28:\n            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n            i += 2;\n            break;\n          case 29:\n            n = stack.pop() + font.gsubrsBias;\n            subrCode = font.gsubrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 30:\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 31:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          default:\n            if (v < 32) {\n              throw new _util.FormatError('unknown operator: ' + v);\n            }\n            if (v < 247) {\n              stack.push(v - 139);\n            } else if (v < 251) {\n              stack.push((v - 247) * 256 + code[i++] + 108);\n            } else if (v < 255) {\n              stack.push(-(v - 251) * 256 - code[i++] - 108);\n            } else {\n              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n              i += 4;\n            }\n            break;\n        }\n        if (stackClean) {\n          stack.length = 0;\n        }\n      }\n    }\n    parse(code);\n  }\n  var noop = '';\n  function CompiledFont(fontMatrix) {\n    this.compiledGlyphs = Object.create(null);\n    this.compiledCharCodeToGlyphId = Object.create(null);\n    this.fontMatrix = fontMatrix;\n  }\n  CompiledFont.prototype = {\n    getPathJs: function getPathJs(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      var fn = this.compiledGlyphs[cmap.glyphId];\n      if (!fn) {\n        fn = this.compileGlyph(this.glyphs[cmap.glyphId]);\n        this.compiledGlyphs[cmap.glyphId] = fn;\n      }\n      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n      }\n      return fn;\n    },\n    compileGlyph: function compileGlyph(code) {\n      if (!code || code.length === 0 || code[0] === 14) {\n        return noop;\n      }\n      var cmds = [];\n      cmds.push({ cmd: 'save' });\n      cmds.push({\n        cmd: 'transform',\n        args: this.fontMatrix.slice()\n      });\n      cmds.push({\n        cmd: 'scale',\n        args: ['size', '-size']\n      });\n      this.compileGlyphImpl(code, cmds);\n      cmds.push({ cmd: 'restore' });\n      return cmds;\n    },\n    compileGlyphImpl: function compileGlyphImpl() {\n      throw new Error('Children classes should implement this.');\n    },\n    hasBuiltPath: function hasBuiltPath(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n    }\n  };\n  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = glyphs;\n    this.cmap = cmap;\n  }\n  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileGlyf(code, cmds, this);\n    }\n  });\n  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = cffInfo.glyphs;\n    this.gsubrs = cffInfo.gsubrs || [];\n    this.subrs = cffInfo.subrs || [];\n    this.cmap = cmap;\n    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\n    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n  }\n  _util.Util.inherit(Type2Compiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileCharString(code, cmds, this);\n    }\n  });\n  return {\n    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n      var data = new Uint8Array(font.data);\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n      var numTables = getUshort(data, 4);\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\n        var offset = getLong(data, p + 8);\n        var length = getLong(data, p + 12);\n        switch (tag) {\n          case 'cmap':\n            cmap = parseCmap(data, offset, offset + length);\n            break;\n          case 'glyf':\n            glyf = data.subarray(offset, offset + length);\n            break;\n          case 'loca':\n            loca = data.subarray(offset, offset + length);\n            break;\n          case 'head':\n            unitsPerEm = getUshort(data, offset + 18);\n            indexToLocFormat = getUshort(data, offset + 50);\n            break;\n          case 'CFF ':\n            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n            break;\n        }\n      }\n      if (glyf) {\n        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\n        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n      }\n      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n    }\n  };\n}();\nexports.FontRendererFactory = FontRendererFactory;\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Type1Parser = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _encodings = __w_pdfjs_require__(28);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar HINTING_ENABLED = false;\nvar Type1CharString = function Type1CharStringClosure() {\n  var COMMAND_MAP = {\n    'hstem': [1],\n    'vstem': [3],\n    'vmoveto': [4],\n    'rlineto': [5],\n    'hlineto': [6],\n    'vlineto': [7],\n    'rrcurveto': [8],\n    'callsubr': [10],\n    'flex': [12, 35],\n    'drop': [12, 18],\n    'endchar': [14],\n    'rmoveto': [21],\n    'hmoveto': [22],\n    'vhcurveto': [30],\n    'hvcurveto': [31]\n  };\n  function Type1CharString() {\n    this.width = 0;\n    this.lsb = 0;\n    this.flexing = false;\n    this.output = [];\n    this.stack = [];\n  }\n  Type1CharString.prototype = {\n    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n      var count = encoded.length;\n      var error = false;\n      var wx, sbx, subrNumber;\n      for (var i = 0; i < count; i++) {\n        var value = encoded[i];\n        if (value < 32) {\n          if (value === 12) {\n            value = (value << 8) + encoded[++i];\n          }\n          switch (value) {\n            case 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case 3:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case 4:\n              if (this.flexing) {\n                if (this.stack.length < 1) {\n                  error = true;\n                  break;\n                }\n                var dy = this.stack.pop();\n                this.stack.push(0, dy);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n              break;\n            case 5:\n              error = this.executeCommand(2, COMMAND_MAP.rlineto);\n              break;\n            case 6:\n              error = this.executeCommand(1, COMMAND_MAP.hlineto);\n              break;\n            case 7:\n              error = this.executeCommand(1, COMMAND_MAP.vlineto);\n              break;\n            case 8:\n              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n              break;\n            case 9:\n              this.stack = [];\n              break;\n            case 10:\n              if (this.stack.length < 1) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              if (!subrs[subrNumber]) {\n                error = true;\n                break;\n              }\n              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n              break;\n            case 11:\n              return error;\n            case 13:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              wx = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx);\n              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n              break;\n            case 14:\n              this.output.push(COMMAND_MAP.endchar[0]);\n              break;\n            case 21:\n              if (this.flexing) {\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n              break;\n            case 22:\n              if (this.flexing) {\n                this.stack.push(0);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n              break;\n            case 30:\n              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n              break;\n            case 31:\n              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n              break;\n            case (12 << 8) + 0:\n              this.stack = [];\n              break;\n            case (12 << 8) + 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case (12 << 8) + 2:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case (12 << 8) + 6:\n              if (seacAnalysisEnabled) {\n                this.seac = this.stack.splice(-4, 4);\n                error = this.executeCommand(0, COMMAND_MAP.endchar);\n              } else {\n                error = this.executeCommand(4, COMMAND_MAP.endchar);\n              }\n              break;\n            case (12 << 8) + 7:\n              if (this.stack.length < 4) {\n                error = true;\n                break;\n              }\n              this.stack.pop();\n              wx = this.stack.pop();\n              var sby = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx, sby);\n              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n              break;\n            case (12 << 8) + 12:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              var num2 = this.stack.pop();\n              var num1 = this.stack.pop();\n              this.stack.push(num1 / num2);\n              break;\n            case (12 << 8) + 16:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              var numArgs = this.stack.pop();\n              if (subrNumber === 0 && numArgs === 3) {\n                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n                error = this.executeCommand(13, COMMAND_MAP.flex, true);\n                this.flexing = false;\n                this.stack.push(flexArgs[15], flexArgs[16]);\n              } else if (subrNumber === 1 && numArgs === 0) {\n                this.flexing = true;\n              }\n              break;\n            case (12 << 8) + 17:\n              break;\n            case (12 << 8) + 33:\n              this.stack = [];\n              break;\n            default:\n              (0, _util.warn)('Unknown type 1 charstring command of \"' + value + '\"');\n              break;\n          }\n          if (error) {\n            break;\n          }\n          continue;\n        } else if (value <= 246) {\n          value = value - 139;\n        } else if (value <= 250) {\n          value = (value - 247) * 256 + encoded[++i] + 108;\n        } else if (value <= 254) {\n          value = -((value - 251) * 256) - encoded[++i] - 108;\n        } else {\n          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n        }\n        this.stack.push(value);\n      }\n      return error;\n    },\n    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\n      var stackLength = this.stack.length;\n      if (howManyArgs > stackLength) {\n        return true;\n      }\n      var start = stackLength - howManyArgs;\n      for (var i = start; i < stackLength; i++) {\n        var value = this.stack[i];\n        if (Number.isInteger(value)) {\n          this.output.push(28, value >> 8 & 0xff, value & 0xff);\n        } else {\n          value = 65536 * value | 0;\n          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n        }\n      }\n      this.output.push.apply(this.output, command);\n      if (keepStack) {\n        this.stack.splice(start, howManyArgs);\n      } else {\n        this.stack.length = 0;\n      }\n      return false;\n    }\n  };\n  return Type1CharString;\n}();\nvar Type1Parser = function Type1ParserClosure() {\n  var EEXEC_ENCRYPT_KEY = 55665;\n  var CHAR_STRS_ENCRYPT_KEY = 4330;\n  function isHexDigit(code) {\n    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n  }\n  function decrypt(data, key, discardNumber) {\n    if (discardNumber >= data.length) {\n      return new Uint8Array(0);\n    }\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719,\n        i,\n        j;\n    for (i = 0; i < discardNumber; i++) {\n      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    var count = data.length - discardNumber;\n    var decrypted = new Uint8Array(count);\n    for (i = discardNumber, j = 0; j < count; i++, j++) {\n      var value = data[i];\n      decrypted[j] = value ^ r >> 8;\n      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    return decrypted;\n  }\n  function decryptAscii(data, key, discardNumber) {\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719;\n    var count = data.length,\n        maybeLength = count >>> 1;\n    var decrypted = new Uint8Array(maybeLength);\n    var i, j;\n    for (i = 0, j = 0; i < count; i++) {\n      var digit1 = data[i];\n      if (!isHexDigit(digit1)) {\n        continue;\n      }\n      i++;\n      var digit2;\n      while (i < count && !isHexDigit(digit2 = data[i])) {\n        i++;\n      }\n      if (i < count) {\n        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n        decrypted[j++] = value ^ r >> 8;\n        r = (value + r) * c1 + c2 & (1 << 16) - 1;\n      }\n    }\n    return Array.prototype.slice.call(decrypted, discardNumber, j);\n  }\n  function isSpecial(c) {\n    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n  }\n  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n    if (encrypted) {\n      var data = stream.getBytes();\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n    }\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n    this.stream = stream;\n    this.nextChar();\n  }\n  Type1Parser.prototype = {\n    readNumberArray: function Type1Parser_readNumberArray() {\n      this.getToken();\n      var array = [];\n      while (true) {\n        var token = this.getToken();\n        if (token === null || token === ']' || token === '}') {\n          break;\n        }\n        array.push(parseFloat(token || 0));\n      }\n      return array;\n    },\n    readNumber: function Type1Parser_readNumber() {\n      var token = this.getToken();\n      return parseFloat(token || 0);\n    },\n    readInt: function Type1Parser_readInt() {\n      var token = this.getToken();\n      return parseInt(token || 0, 10) | 0;\n    },\n    readBoolean: function Type1Parser_readBoolean() {\n      var token = this.getToken();\n      return token === 'true' ? 1 : 0;\n    },\n    nextChar: function Type1_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function Type1Parser_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch === -1) {\n          return null;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      if (isSpecial(ch)) {\n        this.nextChar();\n        return String.fromCharCode(ch);\n      }\n      var token = '';\n      do {\n        token += String.fromCharCode(ch);\n        ch = this.nextChar();\n      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\n      return token;\n    },\n    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\n      if (lenIV === -1) {\n        return bytes;\n      }\n      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\n    },\n    extractFontProgram: function Type1Parser_extractFontProgram() {\n      var stream = this.stream;\n      var subrs = [],\n          charstrings = [];\n      var privateData = Object.create(null);\n      privateData['lenIV'] = 4;\n      var program = {\n        subrs: [],\n        charstrings: [],\n        properties: { 'privateData': privateData }\n      };\n      var token, length, data, lenIV, encoded;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'CharStrings':\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            while (true) {\n              token = this.getToken();\n              if (token === null || token === 'end') {\n                break;\n              }\n              if (token !== '/') {\n                continue;\n              }\n              var glyph = this.getToken();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              charstrings.push({\n                glyph: glyph,\n                encoded: encoded\n              });\n            }\n            break;\n          case 'Subrs':\n            this.readInt();\n            this.getToken();\n            while ((token = this.getToken()) === 'dup') {\n              var index = this.readInt();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              subrs[index] = encoded;\n            }\n            break;\n          case 'BlueValues':\n          case 'OtherBlues':\n          case 'FamilyBlues':\n          case 'FamilyOtherBlues':\n            var blueArray = this.readNumberArray();\n            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n              program.properties.privateData[token] = blueArray;\n            }\n            break;\n          case 'StemSnapH':\n          case 'StemSnapV':\n            program.properties.privateData[token] = this.readNumberArray();\n            break;\n          case 'StdHW':\n          case 'StdVW':\n            program.properties.privateData[token] = this.readNumberArray()[0];\n            break;\n          case 'BlueShift':\n          case 'lenIV':\n          case 'BlueFuzz':\n          case 'BlueScale':\n          case 'LanguageGroup':\n          case 'ExpansionFactor':\n            program.properties.privateData[token] = this.readNumber();\n            break;\n          case 'ForceBold':\n            program.properties.privateData[token] = this.readBoolean();\n            break;\n        }\n      }\n      for (var i = 0; i < charstrings.length; i++) {\n        glyph = charstrings[i].glyph;\n        encoded = charstrings[i].encoded;\n        var charString = new Type1CharString();\n        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n        var output = charString.output;\n        if (error) {\n          output = [14];\n        }\n        program.charstrings.push({\n          glyphName: glyph,\n          charstring: output,\n          width: charString.width,\n          lsb: charString.lsb,\n          seac: charString.seac\n        });\n      }\n      return program;\n    },\n    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n      var token;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'FontMatrix':\n            var matrix = this.readNumberArray();\n            properties.fontMatrix = matrix;\n            break;\n          case 'Encoding':\n            var encodingArg = this.getToken();\n            var encoding;\n            if (!/^\\d+$/.test(encodingArg)) {\n              encoding = (0, _encodings.getEncoding)(encodingArg);\n            } else {\n              encoding = [];\n              var size = parseInt(encodingArg, 10) | 0;\n              this.getToken();\n              for (var j = 0; j < size; j++) {\n                token = this.getToken();\n                while (token !== 'dup' && token !== 'def') {\n                  token = this.getToken();\n                  if (token === null) {\n                    return;\n                  }\n                }\n                if (token === 'def') {\n                  break;\n                }\n                var index = this.readInt();\n                this.getToken();\n                var glyph = this.getToken();\n                encoding[index] = glyph;\n                this.getToken();\n              }\n            }\n            properties.builtInEncoding = encoding;\n            break;\n          case 'FontBBox':\n            var fontBBox = this.readNumberArray();\n            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n            properties.ascentScaled = true;\n            break;\n        }\n      }\n    }\n  };\n  return Type1Parser;\n}();\nexports.Type1Parser = Type1Parser;\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTilingPatternIR = exports.Pattern = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _colorspace = __w_pdfjs_require__(27);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar ShadingType = {\n  FUNCTION_BASED: 1,\n  AXIAL: 2,\n  RADIAL: 3,\n  FREE_FORM_MESH: 4,\n  LATTICE_FORM_MESH: 5,\n  COONS_PATCH_MESH: 6,\n  TENSOR_PATCH_MESH: 7\n};\nvar Pattern = function PatternClosure() {\n  function Pattern() {\n    throw new Error('should not call Pattern constructor');\n  }\n  Pattern.prototype = {\n    getPattern: function Pattern_getPattern(ctx) {\n      throw new Error('Should not call Pattern.getStyle: ' + ctx);\n    }\n  };\n  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\n    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\n    var type = dict.get('ShadingType');\n    try {\n      switch (type) {\n        case ShadingType.AXIAL:\n        case ShadingType.RADIAL:\n          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\n        case ShadingType.FREE_FORM_MESH:\n        case ShadingType.LATTICE_FORM_MESH:\n        case ShadingType.COONS_PATCH_MESH:\n        case ShadingType.TENSOR_PATCH_MESH:\n          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\n        default:\n          throw new _util.FormatError('Unsupported ShadingType: ' + type);\n      }\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\n      (0, _util.warn)(ex);\n      return new Shadings.Dummy();\n    }\n  };\n  return Pattern;\n}();\nvar Shadings = {};\nShadings.SMALL_NUMBER = 1e-6;\nShadings.RadialAxial = function RadialAxialClosure() {\n  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\n    this.matrix = matrix;\n    this.coordsArr = dict.getArray('Coords');\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    var t0 = 0.0,\n        t1 = 1.0;\n    if (dict.has('Domain')) {\n      var domainArr = dict.getArray('Domain');\n      t0 = domainArr[0];\n      t1 = domainArr[1];\n    }\n    var extendStart = false,\n        extendEnd = false;\n    if (dict.has('Extend')) {\n      var extendArr = dict.getArray('Extend');\n      extendStart = extendArr[0];\n      extendEnd = extendArr[1];\n    }\n    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n      var x1 = this.coordsArr[0];\n      var y1 = this.coordsArr[1];\n      var r1 = this.coordsArr[2];\n      var x2 = this.coordsArr[3];\n      var y2 = this.coordsArr[4];\n      var r2 = this.coordsArr[5];\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n        (0, _util.warn)('Unsupported radial gradient.');\n      }\n    }\n    this.extendStart = extendStart;\n    this.extendEnd = extendEnd;\n    var fnObj = dict.get('Function');\n    var fn = pdfFunctionFactory.createFromArray(fnObj);\n    var diff = t1 - t0;\n    var step = diff / 10;\n    var colorStops = this.colorStops = [];\n    if (t0 >= t1 || step <= 0) {\n      (0, _util.info)('Bad shading domain.');\n      return;\n    }\n    var color = new Float32Array(cs.numComps),\n        ratio = new Float32Array(1);\n    var rgbColor;\n    for (var i = t0; i <= t1; i += step) {\n      ratio[0] = i;\n      fn(ratio, 0, color, 0);\n      rgbColor = cs.getRgb(color, 0);\n      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n      colorStops.push([(i - t0) / diff, cssColor]);\n    }\n    var background = 'transparent';\n    if (dict.has('Background')) {\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\n      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n    }\n    if (!extendStart) {\n      colorStops.unshift([0, background]);\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\n    }\n    if (!extendEnd) {\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n      colorStops.push([1, background]);\n    }\n    this.colorStops = colorStops;\n  }\n  RadialAxial.prototype = {\n    getIR: function RadialAxial_getIR() {\n      var coordsArr = this.coordsArr;\n      var shadingType = this.shadingType;\n      var type, p0, p1, r0, r1;\n      if (shadingType === ShadingType.AXIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[2], coordsArr[3]];\n        r0 = null;\n        r1 = null;\n        type = 'axial';\n      } else if (shadingType === ShadingType.RADIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[3], coordsArr[4]];\n        r0 = coordsArr[2];\n        r1 = coordsArr[5];\n        type = 'radial';\n      } else {\n        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\n      }\n      var matrix = this.matrix;\n      if (matrix) {\n        p0 = _util.Util.applyTransform(p0, matrix);\n        p1 = _util.Util.applyTransform(p1, matrix);\n        if (shadingType === ShadingType.RADIAL) {\n          var scale = _util.Util.singularValueDecompose2dScale(matrix);\n          r0 *= scale[0];\n          r1 *= scale[1];\n        }\n      }\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n    }\n  };\n  return RadialAxial;\n}();\nShadings.Mesh = function MeshClosure() {\n  function MeshStreamReader(stream, context) {\n    this.stream = stream;\n    this.context = context;\n    this.buffer = 0;\n    this.bufferLength = 0;\n    var numComps = context.numComps;\n    this.tmpCompsBuf = new Float32Array(numComps);\n    var csNumComps = context.colorSpace.numComps;\n    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n  }\n  MeshStreamReader.prototype = {\n    get hasData() {\n      if (this.stream.end) {\n        return this.stream.pos < this.stream.end;\n      }\n      if (this.bufferLength > 0) {\n        return true;\n      }\n      var nextByte = this.stream.getByte();\n      if (nextByte < 0) {\n        return false;\n      }\n      this.buffer = nextByte;\n      this.bufferLength = 8;\n      return true;\n    },\n    readBits: function MeshStreamReader_readBits(n) {\n      var buffer = this.buffer;\n      var bufferLength = this.bufferLength;\n      if (n === 32) {\n        if (bufferLength === 0) {\n          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n        }\n        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n        var nextByte = this.stream.getByte();\n        this.buffer = nextByte & (1 << bufferLength) - 1;\n        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n      }\n      if (n === 8 && bufferLength === 0) {\n        return this.stream.getByte();\n      }\n      while (bufferLength < n) {\n        buffer = buffer << 8 | this.stream.getByte();\n        bufferLength += 8;\n      }\n      bufferLength -= n;\n      this.bufferLength = bufferLength;\n      this.buffer = buffer & (1 << bufferLength) - 1;\n      return buffer >> bufferLength;\n    },\n    align: function MeshStreamReader_align() {\n      this.buffer = 0;\n      this.bufferLength = 0;\n    },\n    readFlag: function MeshStreamReader_readFlag() {\n      return this.readBits(this.context.bitsPerFlag);\n    },\n    readCoordinate: function MeshStreamReader_readCoordinate() {\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n      var xi = this.readBits(bitsPerCoordinate);\n      var yi = this.readBits(bitsPerCoordinate);\n      var decode = this.context.decode;\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\n    },\n    readComponents: function MeshStreamReader_readComponents() {\n      var numComps = this.context.numComps;\n      var bitsPerComponent = this.context.bitsPerComponent;\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n      var decode = this.context.decode;\n      var components = this.tmpCompsBuf;\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n        var ci = this.readBits(bitsPerComponent);\n        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n      }\n      var color = this.tmpCsCompsBuf;\n      if (this.context.colorFn) {\n        this.context.colorFn(components, 0, color, 0);\n      }\n      return this.context.colorSpace.getRgb(color, 0);\n    }\n  };\n  function decodeType4Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var operators = [];\n    var ps = [];\n    var verticesLeft = 0;\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      if (verticesLeft === 0) {\n        if (!(0 <= f && f <= 2)) {\n          throw new _util.FormatError('Unknown type4 flag');\n        }\n        switch (f) {\n          case 0:\n            verticesLeft = 3;\n            break;\n          case 1:\n            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n          case 2:\n            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n        }\n        operators.push(f);\n      }\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n      verticesLeft--;\n      reader.align();\n    }\n    mesh.figures.push({\n      type: 'triangles',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps)\n    });\n  }\n  function decodeType5Shading(mesh, reader, verticesPerRow) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = [];\n    while (reader.hasData) {\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n    }\n    mesh.figures.push({\n      type: 'lattice',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps),\n      verticesPerRow: verticesPerRow\n    });\n  }\n  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n  var TRIANGLE_DENSITY = 20;\n  var getB = function getBClosure() {\n    function buildB(count) {\n      var lut = [];\n      for (var i = 0; i <= count; i++) {\n        var t = i / count,\n            t_ = 1 - t;\n        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\n      }\n      return lut;\n    }\n    var cache = [];\n    return function getB(count) {\n      if (!cache[count]) {\n        cache[count] = buildB(count);\n      }\n      return cache[count];\n    };\n  }();\n  function buildFigureFromPatch(mesh, index) {\n    var figure = mesh.figures[index];\n    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\n    var coords = mesh.coords,\n        colors = mesh.colors;\n    var pi = figure.coords;\n    var ci = figure.colors;\n    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n    var verticesPerRow = splitXBy + 1;\n    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var k = 0;\n    var cl = new Uint8Array(3),\n        cr = new Uint8Array(3);\n    var c0 = colors[ci[0]],\n        c1 = colors[ci[1]],\n        c2 = colors[ci[2]],\n        c3 = colors[ci[3]];\n    var bRow = getB(splitYBy),\n        bCol = getB(splitXBy);\n    for (var row = 0; row <= splitYBy; row++) {\n      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n      for (var col = 0; col <= splitXBy; col++, k++) {\n        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n          continue;\n        }\n        var x = 0,\n            y = 0;\n        var q = 0;\n        for (var i = 0; i <= 3; i++) {\n          for (var j = 0; j <= 3; j++, q++) {\n            var m = bRow[row][i] * bCol[col][j];\n            x += coords[pi[q]][0] * m;\n            y += coords[pi[q]][1] * m;\n          }\n        }\n        figureCoords[k] = coords.length;\n        coords.push([x, y]);\n        figureColors[k] = colors.length;\n        var newColor = new Uint8Array(3);\n        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n        colors.push(newColor);\n      }\n    }\n    figureCoords[0] = pi[0];\n    figureColors[0] = ci[0];\n    figureCoords[splitXBy] = pi[3];\n    figureColors[splitXBy] = ci[1];\n    figureCoords[verticesPerRow * splitYBy] = pi[12];\n    figureColors[verticesPerRow * splitYBy] = ci[2];\n    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n    mesh.figures[index] = {\n      type: 'lattice',\n      coords: figureCoords,\n      colors: figureColors,\n      verticesPerRow: verticesPerRow\n    };\n  }\n  function decodeType6Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type6 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      ps[5] = coords.length;\n      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\n      ps[6] = coords.length;\n      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\n      ps[9] = coords.length;\n      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\n      ps[10] = coords.length;\n      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function decodeType7Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type7 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[9] = pi + 13;\n          ps[10] = pi + 14;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[5] = pi + 12;\n          ps[6] = pi + 15;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function updateBounds(mesh) {\n    var minX = mesh.coords[0][0],\n        minY = mesh.coords[0][1],\n        maxX = minX,\n        maxY = minY;\n    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n      var x = mesh.coords[i][0],\n          y = mesh.coords[i][1];\n      minX = minX > x ? x : minX;\n      minY = minY > y ? y : minY;\n      maxX = maxX < x ? x : maxX;\n      maxY = maxY < y ? y : maxY;\n    }\n    mesh.bounds = [minX, minY, maxX, maxY];\n  }\n  function packData(mesh) {\n    var i, ii, j, jj;\n    var coords = mesh.coords;\n    var coordsPacked = new Float32Array(coords.length * 2);\n    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n      var xy = coords[i];\n      coordsPacked[j++] = xy[0];\n      coordsPacked[j++] = xy[1];\n    }\n    mesh.coords = coordsPacked;\n    var colors = mesh.colors;\n    var colorsPacked = new Uint8Array(colors.length * 3);\n    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n      var c = colors[i];\n      colorsPacked[j++] = c[0];\n      colorsPacked[j++] = c[1];\n      colorsPacked[j++] = c[2];\n    }\n    mesh.colors = colorsPacked;\n    var figures = mesh.figures;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n          ps = figure.coords,\n          cs = figure.colors;\n      for (j = 0, jj = ps.length; j < jj; j++) {\n        ps[j] *= 2;\n        cs[j] *= 3;\n      }\n    }\n  }\n  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\n    if (!(0, _primitives.isStream)(stream)) {\n      throw new _util.FormatError('Mesh data is not a stream');\n    }\n    var dict = stream.dict;\n    this.matrix = matrix;\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    this.bbox = dict.getArray('BBox');\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n    var fnObj = dict.get('Function');\n    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\n    this.coords = [];\n    this.colors = [];\n    this.figures = [];\n    var decodeContext = {\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n      bitsPerComponent: dict.get('BitsPerComponent'),\n      bitsPerFlag: dict.get('BitsPerFlag'),\n      decode: dict.getArray('Decode'),\n      colorFn: fn,\n      colorSpace: cs,\n      numComps: fn ? 1 : cs.numComps\n    };\n    var reader = new MeshStreamReader(stream, decodeContext);\n    var patchMesh = false;\n    switch (this.shadingType) {\n      case ShadingType.FREE_FORM_MESH:\n        decodeType4Shading(this, reader);\n        break;\n      case ShadingType.LATTICE_FORM_MESH:\n        var verticesPerRow = dict.get('VerticesPerRow') | 0;\n        if (verticesPerRow < 2) {\n          throw new _util.FormatError('Invalid VerticesPerRow');\n        }\n        decodeType5Shading(this, reader, verticesPerRow);\n        break;\n      case ShadingType.COONS_PATCH_MESH:\n        decodeType6Shading(this, reader);\n        patchMesh = true;\n        break;\n      case ShadingType.TENSOR_PATCH_MESH:\n        decodeType7Shading(this, reader);\n        patchMesh = true;\n        break;\n      default:\n        (0, _util.unreachable)('Unsupported mesh type.');\n        break;\n    }\n    if (patchMesh) {\n      updateBounds(this);\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n        buildFigureFromPatch(this, i);\n      }\n    }\n    updateBounds(this);\n    packData(this);\n  }\n  Mesh.prototype = {\n    getIR: function Mesh_getIR() {\n      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\n    }\n  };\n  return Mesh;\n}();\nShadings.Dummy = function DummyClosure() {\n  function Dummy() {\n    this.type = 'Pattern';\n  }\n  Dummy.prototype = {\n    getIR: function Dummy_getIR() {\n      return ['Dummy'];\n    }\n  };\n  return Dummy;\n}();\nfunction getTilingPatternIR(operatorList, dict, args) {\n  var matrix = dict.getArray('Matrix');\n  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\n  var xstep = dict.get('XStep');\n  var ystep = dict.get('YStep');\n  var paintType = dict.get('PaintType');\n  var tilingType = dict.get('TilingType');\n  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\n    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\n  }\n  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\n}\nexports.Pattern = Pattern;\nexports.getTilingPatternIR = getTilingPatternIR;\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bidi = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\nvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\nfunction isOdd(i) {\n  return (i & 1) !== 0;\n}\nfunction isEven(i) {\n  return (i & 1) === 0;\n}\nfunction findUnequal(arr, start, value) {\n  for (var j = start, jj = arr.length; j < jj; ++j) {\n    if (arr[j] !== value) {\n      return j;\n    }\n  }\n  return j;\n}\nfunction setValues(arr, start, end, value) {\n  for (var j = start; j < end; ++j) {\n    arr[j] = value;\n  }\n}\nfunction reverseValues(arr, start, end) {\n  for (var i = start, j = end - 1; i < j; ++i, --j) {\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n}\nfunction createBidiText(str, isLTR, vertical) {\n  return {\n    str: str,\n    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n  };\n}\nvar chars = [];\nvar types = [];\nfunction bidi(str, startLevel, vertical) {\n  var isLTR = true;\n  var strLength = str.length;\n  if (strLength === 0 || vertical) {\n    return createBidiText(str, isLTR, vertical);\n  }\n  chars.length = strLength;\n  types.length = strLength;\n  var numBidi = 0;\n  var i, ii;\n  for (i = 0; i < strLength; ++i) {\n    chars[i] = str.charAt(i);\n    var charCode = str.charCodeAt(i);\n    var charType = 'L';\n    if (charCode <= 0x00ff) {\n      charType = baseTypes[charCode];\n    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n      charType = 'R';\n    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n      charType = arabicTypes[charCode & 0xff];\n      if (!charType) {\n        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\n      }\n    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n      charType = 'AL';\n    }\n    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n      numBidi++;\n    }\n    types[i] = charType;\n  }\n  if (numBidi === 0) {\n    isLTR = true;\n    return createBidiText(str, isLTR);\n  }\n  if (startLevel === -1) {\n    if (numBidi / strLength < 0.3) {\n      isLTR = true;\n      startLevel = 0;\n    } else {\n      isLTR = false;\n      startLevel = 1;\n    }\n  }\n  var levels = [];\n  for (i = 0; i < strLength; ++i) {\n    levels[i] = startLevel;\n  }\n  var e = isOdd(startLevel) ? 'R' : 'L';\n  var sor = e;\n  var eor = sor;\n  var lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'NSM') {\n      types[i] = lastType;\n    } else {\n      lastType = types[i];\n    }\n  }\n  lastType = sor;\n  var t;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n    } else if (t === 'R' || t === 'L' || t === 'AL') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'AL') {\n      types[i] = 'R';\n    }\n  }\n  for (i = 1; i < strLength - 1; ++i) {\n    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n      types[i] = 'EN';\n    }\n    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n      types[i] = types[i - 1];\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'EN') {\n      var j;\n      for (j = i - 1; j >= 0; --j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n      for (j = i + 1; j < strLength; ++j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n      types[i] = 'ON';\n    }\n  }\n  lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'L' ? 'L' : 'EN';\n    } else if (t === 'R' || t === 'L') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      var end = findUnequal(types, i + 1, 'ON');\n      var before = sor;\n      if (i > 0) {\n        before = types[i - 1];\n      }\n      var after = eor;\n      if (end + 1 < strLength) {\n        after = types[end + 1];\n      }\n      if (before !== 'L') {\n        before = 'R';\n      }\n      if (after !== 'L') {\n        after = 'R';\n      }\n      if (before === after) {\n        setValues(types, i, end, before);\n      }\n      i = end - 1;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      types[i] = e;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (isEven(levels[i])) {\n      if (t === 'R') {\n        levels[i] += 1;\n      } else if (t === 'AN' || t === 'EN') {\n        levels[i] += 2;\n      }\n    } else {\n      if (t === 'L' || t === 'AN' || t === 'EN') {\n        levels[i] += 1;\n      }\n    }\n  }\n  var highestLevel = -1;\n  var lowestOddLevel = 99;\n  var level;\n  for (i = 0, ii = levels.length; i < ii; ++i) {\n    level = levels[i];\n    if (highestLevel < level) {\n      highestLevel = level;\n    }\n    if (lowestOddLevel > level && isOdd(level)) {\n      lowestOddLevel = level;\n    }\n  }\n  for (level = highestLevel; level >= lowestOddLevel; --level) {\n    var start = -1;\n    for (i = 0, ii = levels.length; i < ii; ++i) {\n      if (levels[i] < level) {\n        if (start >= 0) {\n          reverseValues(chars, start, i);\n          start = -1;\n        }\n      } else if (start < 0) {\n        start = i;\n      }\n    }\n    if (start >= 0) {\n      reverseValues(chars, start, levels.length);\n    }\n  }\n  for (i = 0, ii = chars.length; i < ii; ++i) {\n    var ch = chars[i];\n    if (ch === '<' || ch === '>') {\n      chars[i] = '';\n    }\n  }\n  return createBidiText(chars.join(''), isLTR);\n}\nexports.bidi = bidi;\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMetrics = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\n  t['Courier'] = 600;\n  t['Courier-Bold'] = 600;\n  t['Courier-BoldOblique'] = 600;\n  t['Courier-Oblique'] = 600;\n  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['universal'] = 713;\n    t['numbersign'] = 500;\n    t['existential'] = 549;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['suchthat'] = 439;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asteriskmath'] = 500;\n    t['plus'] = 549;\n    t['comma'] = 250;\n    t['minus'] = 549;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 549;\n    t['equal'] = 549;\n    t['greater'] = 549;\n    t['question'] = 444;\n    t['congruent'] = 549;\n    t['Alpha'] = 722;\n    t['Beta'] = 667;\n    t['Chi'] = 722;\n    t['Delta'] = 612;\n    t['Epsilon'] = 611;\n    t['Phi'] = 763;\n    t['Gamma'] = 603;\n    t['Eta'] = 722;\n    t['Iota'] = 333;\n    t['theta1'] = 631;\n    t['Kappa'] = 722;\n    t['Lambda'] = 686;\n    t['Mu'] = 889;\n    t['Nu'] = 722;\n    t['Omicron'] = 722;\n    t['Pi'] = 768;\n    t['Theta'] = 741;\n    t['Rho'] = 556;\n    t['Sigma'] = 592;\n    t['Tau'] = 611;\n    t['Upsilon'] = 690;\n    t['sigma1'] = 439;\n    t['Omega'] = 768;\n    t['Xi'] = 645;\n    t['Psi'] = 795;\n    t['Zeta'] = 611;\n    t['bracketleft'] = 333;\n    t['therefore'] = 863;\n    t['bracketright'] = 333;\n    t['perpendicular'] = 658;\n    t['underscore'] = 500;\n    t['radicalex'] = 500;\n    t['alpha'] = 631;\n    t['beta'] = 549;\n    t['chi'] = 549;\n    t['delta'] = 494;\n    t['epsilon'] = 439;\n    t['phi'] = 521;\n    t['gamma'] = 411;\n    t['eta'] = 603;\n    t['iota'] = 329;\n    t['phi1'] = 603;\n    t['kappa'] = 549;\n    t['lambda'] = 549;\n    t['mu'] = 576;\n    t['nu'] = 521;\n    t['omicron'] = 549;\n    t['pi'] = 549;\n    t['theta'] = 521;\n    t['rho'] = 549;\n    t['sigma'] = 603;\n    t['tau'] = 439;\n    t['upsilon'] = 576;\n    t['omega1'] = 713;\n    t['omega'] = 686;\n    t['xi'] = 493;\n    t['psi'] = 686;\n    t['zeta'] = 494;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['similar'] = 549;\n    t['Euro'] = 750;\n    t['Upsilon1'] = 620;\n    t['minute'] = 247;\n    t['lessequal'] = 549;\n    t['fraction'] = 167;\n    t['infinity'] = 713;\n    t['florin'] = 500;\n    t['club'] = 753;\n    t['diamond'] = 753;\n    t['heart'] = 753;\n    t['spade'] = 753;\n    t['arrowboth'] = 1042;\n    t['arrowleft'] = 987;\n    t['arrowup'] = 603;\n    t['arrowright'] = 987;\n    t['arrowdown'] = 603;\n    t['degree'] = 400;\n    t['plusminus'] = 549;\n    t['second'] = 411;\n    t['greaterequal'] = 549;\n    t['multiply'] = 549;\n    t['proportional'] = 713;\n    t['partialdiff'] = 494;\n    t['bullet'] = 460;\n    t['divide'] = 549;\n    t['notequal'] = 549;\n    t['equivalence'] = 549;\n    t['approxequal'] = 549;\n    t['ellipsis'] = 1000;\n    t['arrowvertex'] = 603;\n    t['arrowhorizex'] = 1000;\n    t['carriagereturn'] = 658;\n    t['aleph'] = 823;\n    t['Ifraktur'] = 686;\n    t['Rfraktur'] = 795;\n    t['weierstrass'] = 987;\n    t['circlemultiply'] = 768;\n    t['circleplus'] = 768;\n    t['emptyset'] = 823;\n    t['intersection'] = 768;\n    t['union'] = 768;\n    t['propersuperset'] = 713;\n    t['reflexsuperset'] = 713;\n    t['notsubset'] = 713;\n    t['propersubset'] = 713;\n    t['reflexsubset'] = 713;\n    t['element'] = 713;\n    t['notelement'] = 713;\n    t['angle'] = 768;\n    t['gradient'] = 713;\n    t['registerserif'] = 790;\n    t['copyrightserif'] = 790;\n    t['trademarkserif'] = 890;\n    t['product'] = 823;\n    t['radical'] = 549;\n    t['dotmath'] = 250;\n    t['logicalnot'] = 713;\n    t['logicaland'] = 603;\n    t['logicalor'] = 603;\n    t['arrowdblboth'] = 1042;\n    t['arrowdblleft'] = 987;\n    t['arrowdblup'] = 603;\n    t['arrowdblright'] = 987;\n    t['arrowdbldown'] = 603;\n    t['lozenge'] = 494;\n    t['angleleft'] = 329;\n    t['registersans'] = 790;\n    t['copyrightsans'] = 790;\n    t['trademarksans'] = 786;\n    t['summation'] = 713;\n    t['parenlefttp'] = 384;\n    t['parenleftex'] = 384;\n    t['parenleftbt'] = 384;\n    t['bracketlefttp'] = 384;\n    t['bracketleftex'] = 384;\n    t['bracketleftbt'] = 384;\n    t['bracelefttp'] = 494;\n    t['braceleftmid'] = 494;\n    t['braceleftbt'] = 494;\n    t['braceex'] = 494;\n    t['angleright'] = 329;\n    t['integral'] = 274;\n    t['integraltp'] = 686;\n    t['integralex'] = 686;\n    t['integralbt'] = 686;\n    t['parenrighttp'] = 384;\n    t['parenrightex'] = 384;\n    t['parenrightbt'] = 384;\n    t['bracketrighttp'] = 384;\n    t['bracketrightex'] = 384;\n    t['bracketrightbt'] = 384;\n    t['bracerighttp'] = 494;\n    t['bracerightmid'] = 494;\n    t['bracerightbt'] = 494;\n    t['apple'] = 790;\n  });\n  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 408;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 564;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 564;\n    t['equal'] = 564;\n    t['greater'] = 564;\n    t['question'] = 444;\n    t['at'] = 921;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 556;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 389;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 556;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 944;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 469;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 444;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 333;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 180;\n    t['quotedblleft'] = 444;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 453;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 444;\n    t['quotedblright'] = 444;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 444;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 889;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 444;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 564;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 444;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 444;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 444;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 444;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 444;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 444;\n    t['Amacron'] = 722;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 556;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 588;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 564;\n    t['uacute'] = 500;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 444;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 333;\n    t['plusminus'] = 564;\n    t['brokenbar'] = 200;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 333;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 326;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 444;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 344;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 564;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 564;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 1000;\n    t['ampersand'] = 833;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 930;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 778;\n    t['L'] = 667;\n    t['M'] = 944;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 611;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 556;\n    t['T'] = 667;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 1000;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 667;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 581;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 556;\n    t['c'] = 444;\n    t['d'] = 556;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 333;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 444;\n    t['s'] = 389;\n    t['t'] = 333;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 394;\n    t['bar'] = 220;\n    t['braceright'] = 394;\n    t['asciitilde'] = 520;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 540;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 300;\n    t['Lslash'] = 667;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 330;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 556;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 570;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 667;\n    t['Cacute'] = 722;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 722;\n    t['rcaron'] = 444;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 667;\n    t['Thorn'] = 611;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 556;\n    t['dcaron'] = 672;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 667;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 444;\n    t['omacron'] = 500;\n    t['Zacute'] = 667;\n    t['Zcaron'] = 667;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 416;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 394;\n    t['Kcommaaccent'] = 778;\n    t['Lacute'] = 667;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 667;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 444;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 667;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 570;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 570;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 389;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 832;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 667;\n    t['G'] = 722;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 889;\n    t['X'] = 667;\n    t['Y'] = 611;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 570;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 500;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 348;\n    t['bar'] = 220;\n    t['braceright'] = 348;\n    t['asciitilde'] = 570;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 500;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 944;\n    t['ordfeminine'] = 266;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 300;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 611;\n    t['divide'] = 570;\n    t['Yacute'] = 611;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 667;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 608;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 366;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 576;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 382;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 606;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 606;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 420;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 675;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 675;\n    t['equal'] = 675;\n    t['greater'] = 675;\n    t['question'] = 500;\n    t['at'] = 920;\n    t['A'] = 611;\n    t['B'] = 611;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 611;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 444;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 667;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 611;\n    t['S'] = 500;\n    t['T'] = 556;\n    t['U'] = 722;\n    t['V'] = 611;\n    t['W'] = 833;\n    t['X'] = 611;\n    t['Y'] = 556;\n    t['Z'] = 556;\n    t['bracketleft'] = 389;\n    t['backslash'] = 278;\n    t['bracketright'] = 389;\n    t['asciicircum'] = 422;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 278;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 444;\n    t['l'] = 278;\n    t['m'] = 722;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 444;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 400;\n    t['bar'] = 275;\n    t['braceright'] = 400;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 214;\n    t['quotedblleft'] = 556;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 523;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 556;\n    t['quotedblright'] = 556;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 889;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 889;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 556;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 667;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 556;\n    t['divide'] = 675;\n    t['Yacute'] = 556;\n    t['Acircumflex'] = 611;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 667;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 556;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 611;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 611;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 556;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 611;\n    t['Sacute'] = 500;\n    t['dcaron'] = 544;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 611;\n    t['Abreve'] = 611;\n    t['multiply'] = 675;\n    t['uacute'] = 500;\n    t['Tcaron'] = 556;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 667;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 667;\n    t['Iacute'] = 333;\n    t['plusminus'] = 675;\n    t['brokenbar'] = 275;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 556;\n    t['Zcaron'] = 556;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 300;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 611;\n    t['Adieresis'] = 611;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 500;\n    t['lcaron'] = 300;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 500;\n    t['Scommaaccent'] = 500;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 667;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 611;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 611;\n    t['Aogonek'] = 611;\n    t['Aring'] = 611;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 444;\n    t['minus'] = 675;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 675;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['a1'] = 974;\n    t['a2'] = 961;\n    t['a202'] = 974;\n    t['a3'] = 980;\n    t['a4'] = 719;\n    t['a5'] = 789;\n    t['a119'] = 790;\n    t['a118'] = 791;\n    t['a117'] = 690;\n    t['a11'] = 960;\n    t['a12'] = 939;\n    t['a13'] = 549;\n    t['a14'] = 855;\n    t['a15'] = 911;\n    t['a16'] = 933;\n    t['a105'] = 911;\n    t['a17'] = 945;\n    t['a18'] = 974;\n    t['a19'] = 755;\n    t['a20'] = 846;\n    t['a21'] = 762;\n    t['a22'] = 761;\n    t['a23'] = 571;\n    t['a24'] = 677;\n    t['a25'] = 763;\n    t['a26'] = 760;\n    t['a27'] = 759;\n    t['a28'] = 754;\n    t['a6'] = 494;\n    t['a7'] = 552;\n    t['a8'] = 537;\n    t['a9'] = 577;\n    t['a10'] = 692;\n    t['a29'] = 786;\n    t['a30'] = 788;\n    t['a31'] = 788;\n    t['a32'] = 790;\n    t['a33'] = 793;\n    t['a34'] = 794;\n    t['a35'] = 816;\n    t['a36'] = 823;\n    t['a37'] = 789;\n    t['a38'] = 841;\n    t['a39'] = 823;\n    t['a40'] = 833;\n    t['a41'] = 816;\n    t['a42'] = 831;\n    t['a43'] = 923;\n    t['a44'] = 744;\n    t['a45'] = 723;\n    t['a46'] = 749;\n    t['a47'] = 790;\n    t['a48'] = 792;\n    t['a49'] = 695;\n    t['a50'] = 776;\n    t['a51'] = 768;\n    t['a52'] = 792;\n    t['a53'] = 759;\n    t['a54'] = 707;\n    t['a55'] = 708;\n    t['a56'] = 682;\n    t['a57'] = 701;\n    t['a58'] = 826;\n    t['a59'] = 815;\n    t['a60'] = 789;\n    t['a61'] = 789;\n    t['a62'] = 707;\n    t['a63'] = 687;\n    t['a64'] = 696;\n    t['a65'] = 689;\n    t['a66'] = 786;\n    t['a67'] = 787;\n    t['a68'] = 713;\n    t['a69'] = 791;\n    t['a70'] = 785;\n    t['a71'] = 791;\n    t['a72'] = 873;\n    t['a73'] = 761;\n    t['a74'] = 762;\n    t['a203'] = 762;\n    t['a75'] = 759;\n    t['a204'] = 759;\n    t['a76'] = 892;\n    t['a77'] = 892;\n    t['a78'] = 788;\n    t['a79'] = 784;\n    t['a81'] = 438;\n    t['a82'] = 138;\n    t['a83'] = 277;\n    t['a84'] = 415;\n    t['a97'] = 392;\n    t['a98'] = 392;\n    t['a99'] = 668;\n    t['a100'] = 668;\n    t['a89'] = 390;\n    t['a90'] = 390;\n    t['a93'] = 317;\n    t['a94'] = 317;\n    t['a91'] = 276;\n    t['a92'] = 276;\n    t['a205'] = 509;\n    t['a85'] = 509;\n    t['a206'] = 410;\n    t['a86'] = 410;\n    t['a87'] = 234;\n    t['a88'] = 234;\n    t['a95'] = 334;\n    t['a96'] = 334;\n    t['a101'] = 732;\n    t['a102'] = 544;\n    t['a103'] = 544;\n    t['a104'] = 910;\n    t['a106'] = 667;\n    t['a107'] = 760;\n    t['a108'] = 760;\n    t['a112'] = 776;\n    t['a111'] = 595;\n    t['a110'] = 694;\n    t['a109'] = 626;\n    t['a120'] = 788;\n    t['a121'] = 788;\n    t['a122'] = 788;\n    t['a123'] = 788;\n    t['a124'] = 788;\n    t['a125'] = 788;\n    t['a126'] = 788;\n    t['a127'] = 788;\n    t['a128'] = 788;\n    t['a129'] = 788;\n    t['a130'] = 788;\n    t['a131'] = 788;\n    t['a132'] = 788;\n    t['a133'] = 788;\n    t['a134'] = 788;\n    t['a135'] = 788;\n    t['a136'] = 788;\n    t['a137'] = 788;\n    t['a138'] = 788;\n    t['a139'] = 788;\n    t['a140'] = 788;\n    t['a141'] = 788;\n    t['a142'] = 788;\n    t['a143'] = 788;\n    t['a144'] = 788;\n    t['a145'] = 788;\n    t['a146'] = 788;\n    t['a147'] = 788;\n    t['a148'] = 788;\n    t['a149'] = 788;\n    t['a150'] = 788;\n    t['a151'] = 788;\n    t['a152'] = 788;\n    t['a153'] = 788;\n    t['a154'] = 788;\n    t['a155'] = 788;\n    t['a156'] = 788;\n    t['a157'] = 788;\n    t['a158'] = 788;\n    t['a159'] = 788;\n    t['a160'] = 894;\n    t['a161'] = 838;\n    t['a163'] = 1016;\n    t['a164'] = 458;\n    t['a196'] = 748;\n    t['a165'] = 924;\n    t['a192'] = 748;\n    t['a166'] = 918;\n    t['a167'] = 927;\n    t['a168'] = 928;\n    t['a169'] = 928;\n    t['a170'] = 834;\n    t['a171'] = 873;\n    t['a172'] = 828;\n    t['a173'] = 924;\n    t['a162'] = 924;\n    t['a174'] = 917;\n    t['a175'] = 930;\n    t['a176'] = 931;\n    t['a177'] = 463;\n    t['a178'] = 883;\n    t['a179'] = 836;\n    t['a193'] = 836;\n    t['a180'] = 867;\n    t['a199'] = 867;\n    t['a181'] = 696;\n    t['a200'] = 696;\n    t['a182'] = 874;\n    t['a201'] = 874;\n    t['a183'] = 760;\n    t['a184'] = 946;\n    t['a197'] = 771;\n    t['a185'] = 865;\n    t['a194'] = 771;\n    t['a198'] = 888;\n    t['a186'] = 967;\n    t['a195'] = 888;\n    t['a187'] = 831;\n    t['a188'] = 873;\n    t['a189'] = 927;\n    t['a190'] = 970;\n    t['a191'] = 918;\n  });\n});\nexports.getMetrics = getMetrics;\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptParser = exports.PostScriptLexer = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar PostScriptParser = function PostScriptParserClosure() {\n  function PostScriptParser(lexer) {\n    this.lexer = lexer;\n    this.operators = [];\n    this.token = null;\n    this.prev = null;\n  }\n  PostScriptParser.prototype = {\n    nextToken: function PostScriptParser_nextToken() {\n      this.prev = this.token;\n      this.token = this.lexer.getToken();\n    },\n    accept: function PostScriptParser_accept(type) {\n      if (this.token.type === type) {\n        this.nextToken();\n        return true;\n      }\n      return false;\n    },\n    expect: function PostScriptParser_expect(type) {\n      if (this.accept(type)) {\n        return true;\n      }\n      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n    },\n    parse: function PostScriptParser_parse() {\n      this.nextToken();\n      this.expect(PostScriptTokenTypes.LBRACE);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      return this.operators;\n    },\n    parseBlock: function PostScriptParser_parseBlock() {\n      while (true) {\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n          this.parseCondition();\n        } else {\n          return;\n        }\n      }\n    },\n    parseCondition: function PostScriptParser_parseCondition() {\n      var conditionLocation = this.operators.length;\n      this.operators.push(null, null);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      if (this.accept(PostScriptTokenTypes.IF)) {\n        this.operators[conditionLocation] = this.operators.length;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n        var jumpLocation = this.operators.length;\n        this.operators.push(null, null);\n        var endOfTrue = this.operators.length;\n        this.parseBlock();\n        this.expect(PostScriptTokenTypes.RBRACE);\n        this.expect(PostScriptTokenTypes.IFELSE);\n        this.operators[jumpLocation] = this.operators.length;\n        this.operators[jumpLocation + 1] = 'j';\n        this.operators[conditionLocation] = endOfTrue;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else {\n        throw new _util.FormatError('PS Function: error parsing conditional.');\n      }\n    }\n  };\n  return PostScriptParser;\n}();\nvar PostScriptTokenTypes = {\n  LBRACE: 0,\n  RBRACE: 1,\n  NUMBER: 2,\n  OPERATOR: 3,\n  IF: 4,\n  IFELSE: 5\n};\nvar PostScriptToken = function PostScriptTokenClosure() {\n  function PostScriptToken(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n  var opCache = Object.create(null);\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n    var opValue = opCache[op];\n    if (opValue) {\n      return opValue;\n    }\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n  };\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n  return PostScriptToken;\n}();\nvar PostScriptLexer = function PostScriptLexerClosure() {\n  function PostScriptLexer(stream) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n  }\n  PostScriptLexer.prototype = {\n    nextChar: function PostScriptLexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function PostScriptLexer_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n        case 0x7B:\n          this.nextChar();\n          return PostScriptToken.LBRACE;\n        case 0x7D:\n          this.nextChar();\n          return PostScriptToken.RBRACE;\n      }\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n        strBuf.push(String.fromCharCode(ch));\n      }\n      var str = strBuf.join('');\n      switch (str.toLowerCase()) {\n        case 'if':\n          return PostScriptToken.IF;\n        case 'ifelse':\n          return PostScriptToken.IFELSE;\n        default:\n          return PostScriptToken.getOperator(str);\n      }\n    },\n    getNumber: function PostScriptLexer_getNumber() {\n      var ch = this.currentChar;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0) {\n        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n          strBuf.push(String.fromCharCode(ch));\n        } else {\n          break;\n        }\n      }\n      var value = parseFloat(strBuf.join(''));\n      if (isNaN(value)) {\n        throw new _util.FormatError('Invalid floating point number: ' + value);\n      }\n      return value;\n    }\n  };\n  return PostScriptLexer;\n}();\nexports.PostScriptLexer = PostScriptLexer;\nexports.PostScriptParser = PostScriptParser;\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n  var MASK_HIGH = 0xffff0000;\n  var MASK_LOW = 0xffff;\n  function MurmurHash3_64(seed) {\n    var SEED = 0xc3d2e1f0;\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n  MurmurHash3_64.prototype = {\n    update: function MurmurHash3_64_update(input) {\n      var i;\n      if (typeof input === 'string') {\n        var data = new Uint8Array(input.length * 2);\n        var length = 0;\n        for (i = 0; i < input.length; i++) {\n          var code = input.charCodeAt(i);\n          if (code <= 0xff) {\n            data[length++] = code;\n          } else {\n            data[length++] = code >>> 8;\n            data[length++] = code & 0xff;\n          }\n        }\n      } else if ((typeof input === 'undefined' ? 'undefined' : _typeof(input)) === 'object' && 'byteLength' in input) {\n        data = input;\n        length = data.byteLength;\n      } else {\n        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n      }\n      var blockCounts = length >> 2;\n      var tailLength = length - blockCounts * 4;\n      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n      var k1 = 0;\n      var k2 = 0;\n      var h1 = this.h1;\n      var h2 = this.h2;\n      var C1 = 0xcc9e2d51;\n      var C2 = 0x1b873593;\n      var C1_LOW = C1 & MASK_LOW;\n      var C2_LOW = C2 & MASK_LOW;\n      for (i = 0; i < blockCounts; i++) {\n        if (i & 1) {\n          k1 = dataUint32[i];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          h1 ^= k1;\n          h1 = h1 << 13 | h1 >>> 19;\n          h1 = h1 * 5 + 0xe6546b64;\n        } else {\n          k2 = dataUint32[i];\n          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n          k2 = k2 << 15 | k2 >>> 17;\n          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n          h2 ^= k2;\n          h2 = h2 << 13 | h2 >>> 19;\n          h2 = h2 * 5 + 0xe6546b64;\n        }\n      }\n      k1 = 0;\n      switch (tailLength) {\n        case 3:\n          k1 ^= data[blockCounts * 4 + 2] << 16;\n        case 2:\n          k1 ^= data[blockCounts * 4 + 1] << 8;\n        case 1:\n          k1 ^= data[blockCounts * 4];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          if (blockCounts & 1) {\n            h1 ^= k1;\n          } else {\n            h2 ^= k1;\n          }\n      }\n      this.h1 = h1;\n      this.h2 = h2;\n      return this;\n    },\n    hexdigest: function MurmurHash3_64_hexdigest() {\n      var h1 = this.h1;\n      var h2 = this.h2;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\n        var hex = (arr[i] >>> 0).toString(16);\n        while (hex.length < 8) {\n          hex = '0' + hex;\n        }\n        str += hex;\n      }\n      return str;\n    }\n  };\n  return MurmurHash3_64;\n}();\nexports.MurmurHash3_64 = MurmurHash3_64;\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFImage = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _stream = __w_pdfjs_require__(5);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _colorspace = __w_pdfjs_require__(27);\n\nvar _jpx = __w_pdfjs_require__(74);\n\nvar PDFImage = function PDFImageClosure() {\n  function handleImageData(image, nativeDecoder) {\n    if (nativeDecoder && nativeDecoder.canDecode(image)) {\n      return nativeDecoder.decode(image);\n    }\n    return Promise.resolve(image);\n  }\n  function decodeAndClamp(value, addend, coefficient, max) {\n    value = addend + value * coefficient;\n    return value < 0 ? 0 : value > max ? max : value;\n  }\n  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n    var length = w2 * h2;\n    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio);\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex];\n      }\n    }\n    return dest;\n  }\n  function PDFImage(_ref) {\n    var xref = _ref.xref,\n        res = _ref.res,\n        image = _ref.image,\n        _ref$smask = _ref.smask,\n        smask = _ref$smask === undefined ? null : _ref$smask,\n        _ref$mask = _ref.mask,\n        mask = _ref$mask === undefined ? null : _ref$mask,\n        _ref$isMask = _ref.isMask,\n        isMask = _ref$isMask === undefined ? false : _ref$isMask,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.image = image;\n    var dict = image.dict;\n    if (dict.has('Filter')) {\n      var filter = dict.get('Filter').name;\n      if (filter === 'JPXDecode') {\n        var jpxImage = new _jpx.JpxImage();\n        jpxImage.parseImageProperties(image.stream);\n        image.stream.reset();\n        image.bitsPerComponent = jpxImage.bitsPerComponent;\n        image.numComps = jpxImage.componentsCount;\n      } else if (filter === 'JBIG2Decode') {\n        image.bitsPerComponent = 1;\n        image.numComps = 1;\n      }\n    }\n    this.width = dict.get('Width', 'W');\n    this.height = dict.get('Height', 'H');\n    if (this.width < 1 || this.height < 1) {\n      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\n    }\n    this.interpolate = dict.get('Interpolate', 'I') || false;\n    this.imageMask = dict.get('ImageMask', 'IM') || false;\n    this.matte = dict.get('Matte') || false;\n    var bitsPerComponent = image.bitsPerComponent;\n    if (!bitsPerComponent) {\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n      if (!bitsPerComponent) {\n        if (this.imageMask) {\n          bitsPerComponent = 1;\n        } else {\n          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\n        }\n      }\n    }\n    this.bpc = bitsPerComponent;\n    if (!this.imageMask) {\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      if (!colorSpace) {\n        (0, _util.info)('JPX images (which do not require color spaces)');\n        switch (image.numComps) {\n          case 1:\n            colorSpace = _primitives.Name.get('DeviceGray');\n            break;\n          case 3:\n            colorSpace = _primitives.Name.get('DeviceRGB');\n            break;\n          case 4:\n            colorSpace = _primitives.Name.get('DeviceCMYK');\n            break;\n          default:\n            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\n        }\n      }\n      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, res, pdfFunctionFactory);\n      this.numComps = this.colorSpace.numComps;\n    }\n    this.decode = dict.getArray('Decode', 'D');\n    this.needsDecode = false;\n    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\n      this.needsDecode = true;\n      var max = (1 << bitsPerComponent) - 1;\n      this.decodeCoefficients = [];\n      this.decodeAddends = [];\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n        var dmin = this.decode[i];\n        var dmax = this.decode[i + 1];\n        this.decodeCoefficients[j] = dmax - dmin;\n        this.decodeAddends[j] = max * dmin;\n      }\n    }\n    if (smask) {\n      this.smask = new PDFImage({\n        xref: xref,\n        res: res,\n        image: smask,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    } else if (mask) {\n      if ((0, _primitives.isStream)(mask)) {\n        var maskDict = mask.dict,\n            imageMask = maskDict.get('ImageMask', 'IM');\n        if (!imageMask) {\n          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\n        } else {\n          this.mask = new PDFImage({\n            xref: xref,\n            res: res,\n            image: mask,\n            isMask: true,\n            pdfFunctionFactory: pdfFunctionFactory\n          });\n        }\n      } else {\n        this.mask = mask;\n      }\n    }\n  }\n  PDFImage.buildImage = function (_ref2) {\n    var handler = _ref2.handler,\n        xref = _ref2.xref,\n        res = _ref2.res,\n        image = _ref2.image,\n        _ref2$nativeDecoder = _ref2.nativeDecoder,\n        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    var imagePromise = handleImageData(image, nativeDecoder);\n    var smaskPromise;\n    var maskPromise;\n    var smask = image.dict.get('SMask');\n    var mask = image.dict.get('Mask');\n    if (smask) {\n      smaskPromise = handleImageData(smask, nativeDecoder);\n      maskPromise = Promise.resolve(null);\n    } else {\n      smaskPromise = Promise.resolve(null);\n      if (mask) {\n        if ((0, _primitives.isStream)(mask)) {\n          maskPromise = handleImageData(mask, nativeDecoder);\n        } else if (Array.isArray(mask)) {\n          maskPromise = Promise.resolve(mask);\n        } else {\n          (0, _util.warn)('Unsupported mask format.');\n          maskPromise = Promise.resolve(null);\n        }\n      } else {\n        maskPromise = Promise.resolve(null);\n      }\n    }\n    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 3),\n          imageData = _ref4[0],\n          smaskData = _ref4[1],\n          maskData = _ref4[2];\n\n      return new PDFImage({\n        xref: xref,\n        res: res,\n        image: imageData,\n        smask: smaskData,\n        mask: maskData,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    });\n  };\n  PDFImage.createMask = function (_ref5) {\n    var imgArray = _ref5.imgArray,\n        width = _ref5.width,\n        height = _ref5.height,\n        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\n        inverseDecode = _ref5.inverseDecode;\n\n    var computedLength = (width + 7 >> 3) * height;\n    var actualLength = imgArray.byteLength;\n    var haveFullData = computedLength === actualLength;\n    var data, i;\n    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n      data = imgArray;\n    } else if (!inverseDecode) {\n      data = new Uint8Array(actualLength);\n      data.set(imgArray);\n    } else {\n      data = new Uint8Array(computedLength);\n      data.set(imgArray);\n      for (i = actualLength; i < computedLength; i++) {\n        data[i] = 0xff;\n      }\n    }\n    if (inverseDecode) {\n      for (i = 0; i < actualLength; i++) {\n        data[i] ^= 0xFF;\n      }\n    }\n    return {\n      data: data,\n      width: width,\n      height: height\n    };\n  };\n  PDFImage.prototype = {\n    get drawWidth() {\n      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n    },\n    get drawHeight() {\n      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n    },\n    decodeBuffer: function decodeBuffer(buffer) {\n      var bpc = this.bpc;\n      var numComps = this.numComps;\n      var decodeAddends = this.decodeAddends;\n      var decodeCoefficients = this.decodeCoefficients;\n      var max = (1 << bpc) - 1;\n      var i, ii;\n      if (bpc === 1) {\n        for (i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = +!buffer[i];\n        }\n        return;\n      }\n      var index = 0;\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n        for (var j = 0; j < numComps; j++) {\n          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n          index++;\n        }\n      }\n    },\n    getComponents: function getComponents(buffer) {\n      var bpc = this.bpc;\n      if (bpc === 8) {\n        return buffer;\n      }\n      var width = this.width;\n      var height = this.height;\n      var numComps = this.numComps;\n      var length = width * height * numComps;\n      var bufferPos = 0;\n      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n      var rowComps = width * numComps;\n      var max = (1 << bpc) - 1;\n      var i = 0,\n          ii,\n          buf;\n      if (bpc === 1) {\n        var mask, loop1End, loop2End;\n        for (var j = 0; j < height; j++) {\n          loop1End = i + (rowComps & ~7);\n          loop2End = i + rowComps;\n          while (i < loop1End) {\n            buf = buffer[bufferPos++];\n            output[i] = buf >> 7 & 1;\n            output[i + 1] = buf >> 6 & 1;\n            output[i + 2] = buf >> 5 & 1;\n            output[i + 3] = buf >> 4 & 1;\n            output[i + 4] = buf >> 3 & 1;\n            output[i + 5] = buf >> 2 & 1;\n            output[i + 6] = buf >> 1 & 1;\n            output[i + 7] = buf & 1;\n            i += 8;\n          }\n          if (i < loop2End) {\n            buf = buffer[bufferPos++];\n            mask = 128;\n            while (i < loop2End) {\n              output[i++] = +!!(buf & mask);\n              mask >>= 1;\n            }\n          }\n        }\n      } else {\n        var bits = 0;\n        buf = 0;\n        for (i = 0, ii = length; i < ii; ++i) {\n          if (i % rowComps === 0) {\n            buf = 0;\n            bits = 0;\n          }\n          while (bits < bpc) {\n            buf = buf << 8 | buffer[bufferPos++];\n            bits += 8;\n          }\n          var remainingBits = bits - bpc;\n          var value = buf >> remainingBits;\n          output[i] = value < 0 ? 0 : value > max ? max : value;\n          buf = buf & (1 << remainingBits) - 1;\n          bits = remainingBits;\n        }\n      }\n      return output;\n    },\n    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n      var smask = this.smask;\n      var mask = this.mask;\n      var alphaBuf, sw, sh, i, ii, j;\n      if (smask) {\n        sw = smask.width;\n        sh = smask.height;\n        alphaBuf = new Uint8Array(sw * sh);\n        smask.fillGrayBuffer(alphaBuf);\n        if (sw !== width || sh !== height) {\n          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n        }\n      } else if (mask) {\n        if (mask instanceof PDFImage) {\n          sw = mask.width;\n          sh = mask.height;\n          alphaBuf = new Uint8Array(sw * sh);\n          mask.numComps = 1;\n          mask.fillGrayBuffer(alphaBuf);\n          for (i = 0, ii = sw * sh; i < ii; ++i) {\n            alphaBuf[i] = 255 - alphaBuf[i];\n          }\n          if (sw !== width || sh !== height) {\n            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n          }\n        } else if (Array.isArray(mask)) {\n          alphaBuf = new Uint8Array(width * height);\n          var numComps = this.numComps;\n          for (i = 0, ii = width * height; i < ii; ++i) {\n            var opacity = 0;\n            var imageOffset = i * numComps;\n            for (j = 0; j < numComps; ++j) {\n              var color = image[imageOffset + j];\n              var maskOffset = j * 2;\n              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n                opacity = 255;\n                break;\n              }\n            }\n            alphaBuf[i] = opacity;\n          }\n        } else {\n          throw new _util.FormatError('Unknown mask format.');\n        }\n      }\n      if (alphaBuf) {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = alphaBuf[i];\n        }\n      } else {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = 255;\n        }\n      }\n    },\n    undoPreblend: function undoPreblend(buffer, width, height) {\n      var matte = this.smask && this.smask.matte;\n      if (!matte) {\n        return;\n      }\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\n      var matteR = matteRgb[0];\n      var matteG = matteRgb[1];\n      var matteB = matteRgb[2];\n      var length = width * height * 4;\n      var r, g, b;\n      for (var i = 0; i < length; i += 4) {\n        var alpha = buffer[i + 3];\n        if (alpha === 0) {\n          buffer[i] = 255;\n          buffer[i + 1] = 255;\n          buffer[i + 2] = 255;\n          continue;\n        }\n        var k = 255 / alpha;\n        r = (buffer[i] - matteR) * k + matteR;\n        g = (buffer[i + 1] - matteG) * k + matteG;\n        b = (buffer[i + 2] - matteB) * k + matteB;\n        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n      }\n    },\n    createImageData: function createImageData() {\n      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var drawWidth = this.drawWidth;\n      var drawHeight = this.drawHeight;\n      var imgData = {\n        width: drawWidth,\n        height: drawHeight\n      };\n      var numComps = this.numComps;\n      var originalWidth = this.width;\n      var originalHeight = this.height;\n      var bpc = this.bpc;\n      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n      var imgArray;\n      if (!forceRGBA) {\n        var kind;\n        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n          kind = _util.ImageKind.GRAYSCALE_1BPP;\n        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n          kind = _util.ImageKind.RGB_24BPP;\n        }\n        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n          imgData.kind = kind;\n          imgArray = this.getImageBytes(originalHeight * rowBytes);\n          if (this.image instanceof _stream.DecodeStream) {\n            imgData.data = imgArray;\n          } else {\n            var newArray = new Uint8Array(imgArray.length);\n            newArray.set(imgArray);\n            imgData.data = newArray;\n          }\n          if (this.needsDecode) {\n            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\n            var buffer = imgData.data;\n            for (var i = 0, ii = buffer.length; i < ii; i++) {\n              buffer[i] ^= 0xff;\n            }\n          }\n          return imgData;\n        }\n        if (this.image instanceof _stream.JpegStream && !this.smask && !this.mask && (this.colorSpace.name === 'DeviceGray' || this.colorSpace.name === 'DeviceRGB' || this.colorSpace.name === 'DeviceCMYK')) {\n          imgData.kind = _util.ImageKind.RGB_24BPP;\n          imgData.data = this.getImageBytes(originalHeight * rowBytes, drawWidth, drawHeight, true);\n          return imgData;\n        }\n      }\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\n      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n      var comps = this.getComponents(imgArray);\n      var alpha01, maybeUndoPreblend;\n      if (!forceRGBA && !this.smask && !this.mask) {\n        imgData.kind = _util.ImageKind.RGB_24BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n        alpha01 = 0;\n        maybeUndoPreblend = false;\n      } else {\n        imgData.kind = _util.ImageKind.RGBA_32BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n        alpha01 = 1;\n        maybeUndoPreblend = true;\n        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n      if (maybeUndoPreblend) {\n        this.undoPreblend(imgData.data, drawWidth, actualHeight);\n      }\n      return imgData;\n    },\n    fillGrayBuffer: function fillGrayBuffer(buffer) {\n      var numComps = this.numComps;\n      if (numComps !== 1) {\n        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\n      }\n      var width = this.width;\n      var height = this.height;\n      var bpc = this.bpc;\n      var rowBytes = width * numComps * bpc + 7 >> 3;\n      var imgArray = this.getImageBytes(height * rowBytes);\n      var comps = this.getComponents(imgArray);\n      var i, length;\n      if (bpc === 1) {\n        length = width * height;\n        if (this.needsDecode) {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = comps[i] - 1 & 255;\n          }\n        } else {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = -comps[i] & 255;\n          }\n        }\n        return;\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      length = width * height;\n      var scale = 255 / ((1 << bpc) - 1);\n      for (i = 0; i < length; ++i) {\n        buffer[i] = scale * comps[i] | 0;\n      }\n    },\n    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\n      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      this.image.reset();\n      this.image.drawWidth = drawWidth || this.width;\n      this.image.drawHeight = drawHeight || this.height;\n      this.image.forceRGB = !!forceRGB;\n      return this.image.getBytes(length);\n    }\n  };\n  return PDFImage;\n}();\nexports.PDFImage = PDFImage;\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _obj = __w_pdfjs_require__(73);\n\nvar _primitives = __w_pdfjs_require__(2);\n\nvar _colorspace = __w_pdfjs_require__(27);\n\nvar _evaluator = __w_pdfjs_require__(77);\n\nvar _stream = __w_pdfjs_require__(5);\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AnnotationFactory = function () {\n  function AnnotationFactory() {\n    _classCallCheck(this, AnnotationFactory);\n  }\n\n  _createClass(AnnotationFactory, null, [{\n    key: 'create',\n    value: function create(xref, ref, pdfManager, idFactory) {\n      var dict = xref.fetchIfRef(ref);\n      if (!(0, _primitives.isDict)(dict)) {\n        return;\n      }\n      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n      var subtype = dict.get('Subtype');\n      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\n      var parameters = {\n        xref: xref,\n        dict: dict,\n        ref: (0, _primitives.isRef)(ref) ? ref : null,\n        subtype: subtype,\n        id: id,\n        pdfManager: pdfManager\n      };\n      switch (subtype) {\n        case 'Link':\n          return new LinkAnnotation(parameters);\n        case 'Text':\n          return new TextAnnotation(parameters);\n        case 'Widget':\n          var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n          switch (fieldType) {\n            case 'Tx':\n              return new TextWidgetAnnotation(parameters);\n            case 'Btn':\n              return new ButtonWidgetAnnotation(parameters);\n            case 'Ch':\n              return new ChoiceWidgetAnnotation(parameters);\n          }\n          (0, _util.warn)('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n          return new WidgetAnnotation(parameters);\n        case 'Popup':\n          return new PopupAnnotation(parameters);\n        case 'Line':\n          return new LineAnnotation(parameters);\n        case 'Square':\n          return new SquareAnnotation(parameters);\n        case 'Circle':\n          return new CircleAnnotation(parameters);\n        case 'PolyLine':\n          return new PolylineAnnotation(parameters);\n        case 'Polygon':\n          return new PolygonAnnotation(parameters);\n        case 'Highlight':\n          return new HighlightAnnotation(parameters);\n        case 'Underline':\n          return new UnderlineAnnotation(parameters);\n        case 'Squiggly':\n          return new SquigglyAnnotation(parameters);\n        case 'StrikeOut':\n          return new StrikeOutAnnotation(parameters);\n        case 'Stamp':\n          return new StampAnnotation(parameters);\n        case 'FileAttachment':\n          return new FileAttachmentAnnotation(parameters);\n        default:\n          if (!subtype) {\n            (0, _util.warn)('Annotation is missing the required /Subtype.');\n          } else {\n            (0, _util.warn)('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n          }\n          return new Annotation(parameters);\n      }\n    }\n  }]);\n\n  return AnnotationFactory;\n}();\n\nfunction getTransformMatrix(rect, bbox, matrix) {\n  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\n  var minX = bounds[0];\n  var minY = bounds[1];\n  var maxX = bounds[2];\n  var maxY = bounds[3];\n  if (minX === maxX || minY === maxY) {\n    return [1, 0, 0, 1, rect[0], rect[1]];\n  }\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\n}\n\nvar Annotation = function () {\n  function Annotation(params) {\n    _classCallCheck(this, Annotation);\n\n    var dict = params.dict;\n    this.setFlags(dict.get('F'));\n    this.setRectangle(dict.getArray('Rect'));\n    this.setColor(dict.getArray('C'));\n    this.setBorderStyle(dict);\n    this.setAppearance(dict);\n    this.data = {\n      annotationFlags: this.flags,\n      borderStyle: this.borderStyle,\n      color: this.color,\n      hasAppearance: !!this.appearance,\n      id: params.id,\n      rect: this.rectangle,\n      subtype: params.subtype\n    };\n  }\n\n  _createClass(Annotation, [{\n    key: '_hasFlag',\n    value: function _hasFlag(flags, flag) {\n      return !!(flags & flag);\n    }\n  }, {\n    key: '_isViewable',\n    value: function _isViewable(flags) {\n      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\n    }\n  }, {\n    key: '_isPrintable',\n    value: function _isPrintable(flags) {\n      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\n    }\n  }, {\n    key: 'setFlags',\n    value: function setFlags(flags) {\n      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\n    }\n  }, {\n    key: 'hasFlag',\n    value: function hasFlag(flag) {\n      return this._hasFlag(this.flags, flag);\n    }\n  }, {\n    key: 'setRectangle',\n    value: function setRectangle(rectangle) {\n      if (Array.isArray(rectangle) && rectangle.length === 4) {\n        this.rectangle = _util.Util.normalizeRect(rectangle);\n      } else {\n        this.rectangle = [0, 0, 0, 0];\n      }\n    }\n  }, {\n    key: 'setColor',\n    value: function setColor(color) {\n      var rgbColor = new Uint8Array(3);\n      if (!Array.isArray(color)) {\n        this.color = rgbColor;\n        return;\n      }\n      switch (color.length) {\n        case 0:\n          this.color = null;\n          break;\n        case 1:\n          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 3:\n          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 4:\n          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        default:\n          this.color = rgbColor;\n          break;\n      }\n    }\n  }, {\n    key: 'setBorderStyle',\n    value: function setBorderStyle(borderStyle) {\n      this.borderStyle = new AnnotationBorderStyle();\n      if (!(0, _primitives.isDict)(borderStyle)) {\n        return;\n      }\n      if (borderStyle.has('BS')) {\n        var dict = borderStyle.get('BS');\n        var dictType = dict.get('Type');\n        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\n          this.borderStyle.setWidth(dict.get('W'));\n          this.borderStyle.setStyle(dict.get('S'));\n          this.borderStyle.setDashArray(dict.getArray('D'));\n        }\n      } else if (borderStyle.has('Border')) {\n        var array = borderStyle.getArray('Border');\n        if (Array.isArray(array) && array.length >= 3) {\n          this.borderStyle.setHorizontalCornerRadius(array[0]);\n          this.borderStyle.setVerticalCornerRadius(array[1]);\n          this.borderStyle.setWidth(array[2]);\n          if (array.length === 4) {\n            this.borderStyle.setDashArray(array[3]);\n          }\n        }\n      } else {\n        this.borderStyle.setWidth(0);\n      }\n    }\n  }, {\n    key: 'setAppearance',\n    value: function setAppearance(dict) {\n      this.appearance = null;\n      var appearanceStates = dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if ((0, _primitives.isStream)(normalAppearanceState)) {\n        this.appearance = normalAppearanceState;\n        return;\n      }\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var as = dict.get('AS');\n      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\n        return;\n      }\n      this.appearance = normalAppearanceState.get(as.name);\n    }\n  }, {\n    key: '_preparePopup',\n    value: function _preparePopup(dict) {\n      if (!dict.has('C')) {\n        this.data.color = null;\n      }\n      this.data.hasPopup = dict.has('Popup');\n      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\n      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\n    }\n  }, {\n    key: 'loadResources',\n    value: function loadResources(keys) {\n      return this.appearance.dict.getAsync('Resources').then(function (resources) {\n        if (!resources) {\n          return;\n        }\n        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\n        return objectLoader.load().then(function () {\n          return resources;\n        });\n      });\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      var _this = this;\n\n      if (!this.appearance) {\n        return Promise.resolve(new _evaluator.OperatorList());\n      }\n      var data = this.data;\n      var appearanceDict = this.appearance.dict;\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\n      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\n      return resourcesPromise.then(function (resources) {\n        var opList = new _evaluator.OperatorList();\n        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\n        return evaluator.getOperatorList({\n          stream: _this.appearance,\n          task: task,\n          resources: resources,\n          operatorList: opList\n        }).then(function () {\n          opList.addOp(_util.OPS.endAnnotation, []);\n          _this.appearance.reset();\n          return opList;\n        });\n      });\n    }\n  }, {\n    key: 'viewable',\n    get: function get() {\n      if (this.flags === 0) {\n        return true;\n      }\n      return this._isViewable(this.flags);\n    }\n  }, {\n    key: 'printable',\n    get: function get() {\n      if (this.flags === 0) {\n        return false;\n      }\n      return this._isPrintable(this.flags);\n    }\n  }]);\n\n  return Annotation;\n}();\n\nvar AnnotationBorderStyle = function () {\n  function AnnotationBorderStyle() {\n    _classCallCheck(this, AnnotationBorderStyle);\n\n    this.width = 1;\n    this.style = _util.AnnotationBorderStyleType.SOLID;\n    this.dashArray = [3];\n    this.horizontalCornerRadius = 0;\n    this.verticalCornerRadius = 0;\n  }\n\n  _createClass(AnnotationBorderStyle, [{\n    key: 'setWidth',\n    value: function setWidth(width) {\n      if (Number.isInteger(width)) {\n        this.width = width;\n      }\n    }\n  }, {\n    key: 'setStyle',\n    value: function setStyle(style) {\n      if (!style) {\n        return;\n      }\n      switch (style.name) {\n        case 'S':\n          this.style = _util.AnnotationBorderStyleType.SOLID;\n          break;\n        case 'D':\n          this.style = _util.AnnotationBorderStyleType.DASHED;\n          break;\n        case 'B':\n          this.style = _util.AnnotationBorderStyleType.BEVELED;\n          break;\n        case 'I':\n          this.style = _util.AnnotationBorderStyleType.INSET;\n          break;\n        case 'U':\n          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'setDashArray',\n    value: function setDashArray(dashArray) {\n      if (Array.isArray(dashArray) && dashArray.length > 0) {\n        var isValid = true;\n        var allZeros = true;\n        for (var i = 0, len = dashArray.length; i < len; i++) {\n          var element = dashArray[i];\n          var validNumber = +element >= 0;\n          if (!validNumber) {\n            isValid = false;\n            break;\n          } else if (element > 0) {\n            allZeros = false;\n          }\n        }\n        if (isValid && !allZeros) {\n          this.dashArray = dashArray;\n        } else {\n          this.width = 0;\n        }\n      } else if (dashArray) {\n        this.width = 0;\n      }\n    }\n  }, {\n    key: 'setHorizontalCornerRadius',\n    value: function setHorizontalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.horizontalCornerRadius = radius;\n      }\n    }\n  }, {\n    key: 'setVerticalCornerRadius',\n    value: function setVerticalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.verticalCornerRadius = radius;\n      }\n    }\n  }]);\n\n  return AnnotationBorderStyle;\n}();\n\nvar WidgetAnnotation = function (_Annotation) {\n  _inherits(WidgetAnnotation, _Annotation);\n\n  function WidgetAnnotation(params) {\n    _classCallCheck(this, WidgetAnnotation);\n\n    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    var data = _this2.data;\n    data.annotationType = _util.AnnotationType.WIDGET;\n    data.fieldName = _this2._constructFieldName(dict);\n    data.fieldValue = _util.Util.getInheritableProperty(dict, 'V', true);\n    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\n    data.defaultAppearance = _util.Util.getInheritableProperty(dict, 'DA') || '';\n    var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n    _this2.fieldResources = _util.Util.getInheritableProperty(dict, 'DR') || _primitives.Dict.empty;\n    data.fieldFlags = _util.Util.getInheritableProperty(dict, 'Ff');\n    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\n      data.fieldFlags = 0;\n    }\n    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\n    if (data.fieldType === 'Sig') {\n      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\n    }\n    return _this2;\n  }\n\n  _createClass(WidgetAnnotation, [{\n    key: '_constructFieldName',\n    value: function _constructFieldName(dict) {\n      if (!dict.has('T') && !dict.has('Parent')) {\n        (0, _util.warn)('Unknown field name, falling back to empty field name.');\n        return '';\n      }\n      if (!dict.has('Parent')) {\n        return (0, _util.stringToPDFString)(dict.get('T'));\n      }\n      var fieldName = [];\n      if (dict.has('T')) {\n        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\n      }\n      var loopDict = dict;\n      while (loopDict.has('Parent')) {\n        loopDict = loopDict.get('Parent');\n        if (!(0, _primitives.isDict)(loopDict)) {\n          break;\n        }\n        if (loopDict.has('T')) {\n          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\n        }\n      }\n      return fieldName.join('.');\n    }\n  }, {\n    key: 'hasFieldFlag',\n    value: function hasFieldFlag(flag) {\n      return !!(this.data.fieldFlags & flag);\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms) {\n        return Promise.resolve(new _evaluator.OperatorList());\n      }\n      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n    }\n  }]);\n\n  return WidgetAnnotation;\n}(Annotation);\n\nvar TextWidgetAnnotation = function (_WidgetAnnotation) {\n  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\n\n  function TextWidgetAnnotation(params) {\n    _classCallCheck(this, TextWidgetAnnotation);\n\n    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\n\n    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\n    var alignment = _util.Util.getInheritableProperty(params.dict, 'Q');\n    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\n      alignment = null;\n    }\n    _this3.data.textAlignment = alignment;\n    var maximumLength = _util.Util.getInheritableProperty(params.dict, 'MaxLen');\n    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\n      maximumLength = null;\n    }\n    _this3.data.maxLen = maximumLength;\n    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\n    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\n    return _this3;\n  }\n\n  _createClass(TextWidgetAnnotation, [{\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms || this.appearance) {\n        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n      }\n      var operatorList = new _evaluator.OperatorList();\n      if (!this.data.defaultAppearance) {\n        return Promise.resolve(operatorList);\n      }\n      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\n      return evaluator.getOperatorList({\n        stream: stream,\n        task: task,\n        resources: this.fieldResources,\n        operatorList: operatorList\n      }).then(function () {\n        return operatorList;\n      });\n    }\n  }]);\n\n  return TextWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\n  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\n\n  function ButtonWidgetAnnotation(params) {\n    _classCallCheck(this, ButtonWidgetAnnotation);\n\n    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\n\n    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    if (_this4.data.checkBox) {\n      if (!(0, _primitives.isName)(_this4.data.fieldValue)) {\n        return _possibleConstructorReturn(_this4);\n      }\n      _this4.data.fieldValue = _this4.data.fieldValue.name;\n    }\n    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    if (_this4.data.radioButton) {\n      _this4.data.fieldValue = _this4.data.buttonValue = null;\n      var fieldParent = params.dict.get('Parent');\n      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\n        var fieldParentValue = fieldParent.get('V');\n        if ((0, _primitives.isName)(fieldParentValue)) {\n          _this4.data.fieldValue = fieldParentValue.name;\n        }\n      }\n      var appearanceStates = params.dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return _possibleConstructorReturn(_this4);\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return _possibleConstructorReturn(_this4);\n      }\n      var keys = normalAppearanceState.getKeys();\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        if (keys[i] !== 'Off') {\n          _this4.data.buttonValue = keys[i];\n          break;\n        }\n      }\n    }\n    return _this4;\n  }\n\n  return ButtonWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\n  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\n\n  function ChoiceWidgetAnnotation(params) {\n    _classCallCheck(this, ChoiceWidgetAnnotation);\n\n    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\n\n    _this5.data.options = [];\n    var options = _util.Util.getInheritableProperty(params.dict, 'Opt');\n    if (Array.isArray(options)) {\n      var xref = params.xref;\n      for (var i = 0, ii = options.length; i < ii; i++) {\n        var option = xref.fetchIfRef(options[i]);\n        var isOptionArray = Array.isArray(option);\n        _this5.data.options[i] = {\n          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n          displayValue: isOptionArray ? xref.fetchIfRef(option[1]) : option\n        };\n      }\n    }\n    if (!Array.isArray(_this5.data.fieldValue)) {\n      _this5.data.fieldValue = [_this5.data.fieldValue];\n    }\n    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\n    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\n    return _this5;\n  }\n\n  return ChoiceWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar TextAnnotation = function (_Annotation2) {\n  _inherits(TextAnnotation, _Annotation2);\n\n  function TextAnnotation(parameters) {\n    _classCallCheck(this, TextAnnotation);\n\n    var DEFAULT_ICON_SIZE = 22;\n\n    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\n\n    _this6.data.annotationType = _util.AnnotationType.TEXT;\n    if (_this6.data.hasAppearance) {\n      _this6.data.name = 'NoIcon';\n    } else {\n      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\n      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\n      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n    }\n    _this6._preparePopup(parameters.dict);\n    return _this6;\n  }\n\n  return TextAnnotation;\n}(Annotation);\n\nvar LinkAnnotation = function (_Annotation3) {\n  _inherits(LinkAnnotation, _Annotation3);\n\n  function LinkAnnotation(params) {\n    _classCallCheck(this, LinkAnnotation);\n\n    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\n\n    _this7.data.annotationType = _util.AnnotationType.LINK;\n    _obj.Catalog.parseDestDictionary({\n      destDict: params.dict,\n      resultObj: _this7.data,\n      docBaseUrl: params.pdfManager.docBaseUrl\n    });\n    return _this7;\n  }\n\n  return LinkAnnotation;\n}(Annotation);\n\nvar PopupAnnotation = function (_Annotation4) {\n  _inherits(PopupAnnotation, _Annotation4);\n\n  function PopupAnnotation(parameters) {\n    _classCallCheck(this, PopupAnnotation);\n\n    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\n\n    _this8.data.annotationType = _util.AnnotationType.POPUP;\n    var dict = parameters.dict;\n    var parentItem = dict.get('Parent');\n    if (!parentItem) {\n      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\n      return _possibleConstructorReturn(_this8);\n    }\n    var parentSubtype = parentItem.get('Subtype');\n    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\n    _this8.data.parentId = dict.getRaw('Parent').toString();\n    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\n    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\n    if (!parentItem.has('C')) {\n      _this8.data.color = null;\n    } else {\n      _this8.setColor(parentItem.getArray('C'));\n      _this8.data.color = _this8.color;\n    }\n    if (!_this8.viewable) {\n      var parentFlags = parentItem.get('F');\n      if (_this8._isViewable(parentFlags)) {\n        _this8.setFlags(parentFlags);\n      }\n    }\n    return _this8;\n  }\n\n  return PopupAnnotation;\n}(Annotation);\n\nvar LineAnnotation = function (_Annotation5) {\n  _inherits(LineAnnotation, _Annotation5);\n\n  function LineAnnotation(parameters) {\n    _classCallCheck(this, LineAnnotation);\n\n    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\n\n    _this9.data.annotationType = _util.AnnotationType.LINE;\n    var dict = parameters.dict;\n    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\n    _this9._preparePopup(dict);\n    return _this9;\n  }\n\n  return LineAnnotation;\n}(Annotation);\n\nvar SquareAnnotation = function (_Annotation6) {\n  _inherits(SquareAnnotation, _Annotation6);\n\n  function SquareAnnotation(parameters) {\n    _classCallCheck(this, SquareAnnotation);\n\n    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\n\n    _this10.data.annotationType = _util.AnnotationType.SQUARE;\n    _this10._preparePopup(parameters.dict);\n    return _this10;\n  }\n\n  return SquareAnnotation;\n}(Annotation);\n\nvar CircleAnnotation = function (_Annotation7) {\n  _inherits(CircleAnnotation, _Annotation7);\n\n  function CircleAnnotation(parameters) {\n    _classCallCheck(this, CircleAnnotation);\n\n    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\n\n    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\n    _this11._preparePopup(parameters.dict);\n    return _this11;\n  }\n\n  return CircleAnnotation;\n}(Annotation);\n\nvar PolylineAnnotation = function (_Annotation8) {\n  _inherits(PolylineAnnotation, _Annotation8);\n\n  function PolylineAnnotation(parameters) {\n    _classCallCheck(this, PolylineAnnotation);\n\n    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\n\n    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\n    var dict = parameters.dict;\n    var rawVertices = dict.getArray('Vertices');\n    _this12.data.vertices = [];\n    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\n      _this12.data.vertices.push({\n        x: rawVertices[i],\n        y: rawVertices[i + 1]\n      });\n    }\n    _this12._preparePopup(dict);\n    return _this12;\n  }\n\n  return PolylineAnnotation;\n}(Annotation);\n\nvar PolygonAnnotation = function (_PolylineAnnotation) {\n  _inherits(PolygonAnnotation, _PolylineAnnotation);\n\n  function PolygonAnnotation(parameters) {\n    _classCallCheck(this, PolygonAnnotation);\n\n    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\n\n    _this13.data.annotationType = _util.AnnotationType.POLYGON;\n    return _this13;\n  }\n\n  return PolygonAnnotation;\n}(PolylineAnnotation);\n\nvar HighlightAnnotation = function (_Annotation9) {\n  _inherits(HighlightAnnotation, _Annotation9);\n\n  function HighlightAnnotation(parameters) {\n    _classCallCheck(this, HighlightAnnotation);\n\n    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\n\n    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\n    _this14._preparePopup(parameters.dict);\n    return _this14;\n  }\n\n  return HighlightAnnotation;\n}(Annotation);\n\nvar UnderlineAnnotation = function (_Annotation10) {\n  _inherits(UnderlineAnnotation, _Annotation10);\n\n  function UnderlineAnnotation(parameters) {\n    _classCallCheck(this, UnderlineAnnotation);\n\n    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\n\n    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\n    _this15._preparePopup(parameters.dict);\n    return _this15;\n  }\n\n  return UnderlineAnnotation;\n}(Annotation);\n\nvar SquigglyAnnotation = function (_Annotation11) {\n  _inherits(SquigglyAnnotation, _Annotation11);\n\n  function SquigglyAnnotation(parameters) {\n    _classCallCheck(this, SquigglyAnnotation);\n\n    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\n\n    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\n    _this16._preparePopup(parameters.dict);\n    return _this16;\n  }\n\n  return SquigglyAnnotation;\n}(Annotation);\n\nvar StrikeOutAnnotation = function (_Annotation12) {\n  _inherits(StrikeOutAnnotation, _Annotation12);\n\n  function StrikeOutAnnotation(parameters) {\n    _classCallCheck(this, StrikeOutAnnotation);\n\n    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\n\n    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\n    _this17._preparePopup(parameters.dict);\n    return _this17;\n  }\n\n  return StrikeOutAnnotation;\n}(Annotation);\n\nvar StampAnnotation = function (_Annotation13) {\n  _inherits(StampAnnotation, _Annotation13);\n\n  function StampAnnotation(parameters) {\n    _classCallCheck(this, StampAnnotation);\n\n    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\n\n    _this18.data.annotationType = _util.AnnotationType.STAMP;\n    _this18._preparePopup(parameters.dict);\n    return _this18;\n  }\n\n  return StampAnnotation;\n}(Annotation);\n\nvar FileAttachmentAnnotation = function (_Annotation14) {\n  _inherits(FileAttachmentAnnotation, _Annotation14);\n\n  function FileAttachmentAnnotation(parameters) {\n    _classCallCheck(this, FileAttachmentAnnotation);\n\n    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\n\n    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\n    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\n    _this19.data.file = file.serializable;\n    _this19._preparePopup(parameters.dict);\n    return _this19;\n  }\n\n  return FileAttachmentAnnotation;\n}(Annotation);\n\nexports.Annotation = Annotation;\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\nexports.AnnotationFactory = AnnotationFactory;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=pdf.worker.js.map\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/pdfjs-dist/build/pdf.worker.js\n ** module id = 236\n ** module chunks = 1\n **/"],"sourceRoot":""}
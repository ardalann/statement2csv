{"version":3,"sources":["../node_modules/pdfjs-dist/build sync","helpers/pdfToCsv.js","App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","settings","rowsBeginning","rowsEnding","rowBeginning","rowEnding","ignoreNumeric","replacements","search","replace","joins","join","columnTitles","dateColumn","inputDatePattern","outputDatePattern","importPages","PDF","pageNum","rows","getPage","then","page","getTextContent","textContent","_rows","push","apply","Object","toConsumableArray","textContentItems","cells","foundBeginning","forEach","item","str","match","isNaN","replacement","strArr","trim","split","map","st","filter","length","pushRow","row","moment","format","cell","key","splice","console","warn","extractPageRows","items","numPages","pdfToCsv","pdfArrayBuffer","PDFJS","getDocument","concat","App","state","encodedCsv","fileName","handleUpload","generatedFileName","_this2","_input","files","name","reader","FileReader","_this","assertThisInitialized","onload","arrayBuffer","this","result","csv","setState","encodeURI","readAsArrayBuffer","_this3","react_default","a","createElement","className","type","ref","onChange","_link","href","download","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f96dd1d9.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 7;","import PDFJS from \"pdfjs-dist\";\nimport moment from \"moment\";\n\nconst settings = {\n  rowsBeginning: /^DATE$/g,\n  rowsEnding: /^NEW BALANCE$/g,\n  rowBeginning: /^[A-Z]{3} [0-9]{2}$/g,\n  rowEnding: null, // /^[0-9]{2}\\.[0-9]{2}$/g,\n  ignoreNumeric: true,\n  replacements: [\n    {\n      search: \"CALGARY AB\",\n      replace: \"\"\n    },\n    {\n      search: /^([A-Z]{3} [0-9]{2})[ ]{2,4}[A-Z]{3} [0-9]{2}[ ]{1,2}(.*)$/g,\n      replace: \"$1{SPLIT}$2\"\n    },\n    {\n      search: /\\$([0-9]),([0-9]{3})/g,\n      replace: \"$1$2\"\n    },\n    {\n      search: /(\\-?)\\$([0-9]+\\.[0-9]{2})$/g,\n      replace: \"$1$2\"\n    }\n  ],\n  joins: [\n    {\n      search: /^Foreign Currency\\-(.*)$/g,\n      replace: \" ($1\",\n      join: 1\n    },\n    {\n      search: /^Exchange rate\\-(.*)$/g,\n      replace: \" - Rate $1)\",\n      join: 1\n    }\n  ],\n  columnTitles: [\n    \"Date\",\n    \"Description\",\n    \"Amount\"\n    // 'Category',\n  ],\n  dateColumn: 0,\n  inputDatePattern: \"ll DD\",\n  outputDatePattern: \"L\"\n  // descriptionColumn: 1,\n  // categoryColumn: 3,\n  // categories: [\n  //   {\n  //     search: 'TIM',\n  //     category: '\"Restaurants, Coffee & Bars\"',\n  //   },\n  // ],\n};\n\nconst extractPageRows = textContentItems => {\n  let cells = [];\n  let rows = [];\n  let foundBeginning = false;\n\n  textContentItems.forEach(item => {\n    if (item.str.match(settings.rowsBeginning)) {\n      foundBeginning = true;\n    } else if (item.str.match(settings.rowsEnding)) {\n      foundBeginning = false;\n    } else if (settings.ignoreNumeric && !isNaN(item.str)) {\n      // Skip\n    } else if (foundBeginning) {\n      let str = item.str;\n\n      settings.replacements.forEach(replacement => {\n        str = str.replace(replacement.search, replacement.replace);\n      });\n\n      str = str.trim();\n\n      // console.log('str', str);\n\n      let strArr = str\n        .split(/\\{SPLIT\\}/g)\n        .map(st => st.trim())\n        .filter(st => st.length > 0);\n\n      // console.log('item2cells', item, strArr);\n\n      cells.push(...strArr);\n    }\n  });\n\n  // console.log('cells', cells);\n\n  const pushRow = row => {\n    // console.log('pushRow', row);\n\n    row[settings.dateColumn] = moment(\n      row[settings.dateColumn],\n      settings.inputDatePattern\n    ).format(settings.outputDatePattern);\n\n    // if (settings.categoryColumn || settings.categoryColumn.length === 0) {\n    //   row[settings.categoryColumn] = '';\n    //   settings.categories.forEach(categoryInfo => {\n    //     if (row[settings.categoryColumn].length > 0) return; // Already found\n\n    //     if (row[settings.descriptionColumn].search(categoryInfo.search) > -1) {\n    //       row[settings.categoryColumn] = categoryInfo.category;\n    //     }\n    //   });\n    // }\n\n    row.forEach((cell, key) => {\n      settings.joins.forEach(join => {\n        if (row[key].search(join.search) > -1) {\n          row[key] = row[key].replace(join.search, join.replace);\n          row[join.join] += row[key];\n          row.splice(key, 1);\n        }\n      });\n    });\n\n    // console.log('pushed', row);\n\n    rows.push(row);\n\n    if (row.length !== settings.columnTitles.length) {\n      console.warn(\"Invalid row length\", row);\n    }\n  };\n\n  let row = [];\n\n  // console.log('cells to iterate', cells);\n\n  cells.forEach(cell => {\n    if (settings.rowBeginning && cell.match(settings.rowBeginning)) {\n      if (row.length > 0) {\n        pushRow(row);\n        row = [];\n      }\n      row.push(cell);\n    } else if (settings.rowEnding && cell.match(settings.rowEnding)) {\n      row.push(cell);\n      pushRow(row);\n      row = [];\n    } else {\n      row.push(cell);\n    }\n  });\n\n  if (row.length > 0) {\n    // console.log('Last row',row);\n    pushRow(row);\n    row = [];\n  }\n\n  return rows;\n};\n\nconst importPages = (PDF, pageNum, rows) => {\n  pageNum = pageNum || 1;\n  rows = rows || [settings.columnTitles];\n\n  return PDF.getPage(pageNum).then(page =>\n    page.getTextContent().then(textContent => {\n      rows.push(...extractPageRows(textContent.items));\n\n      if (pageNum < PDF.numPages) {\n        return importPages(PDF, pageNum + 1, rows);\n      } else {\n        return rows;\n      }\n    })\n  );\n};\n\nexport default pdfArrayBuffer => {\n  return PDFJS.getDocument(pdfArrayBuffer)\n    .then(PDF => importPages(PDF))\n    .then(rows =>\n      rows.map(row => row.map(cell => `\"${cell}\"`).join(\",\")).join(\"\\n\")\n    );\n};\n","import React, { Component } from \"react\";\nimport pdfToCsv from \"./helpers/pdfToCsv\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    encodedCsv: \"\",\n    fileName: \"\"\n  };\n  handleUpload = e => {\n    const generatedFileName = this._input.files[0].name.replace(\".pdf\", \".csv\");\n\n    const reader = new FileReader();\n    const _this = this;\n    reader.onload = function() {\n      const arrayBuffer = this.result;\n      pdfToCsv(arrayBuffer).then(csv => {\n        _this.setState({\n          encodedCsv: `data:text/csv;charset=utf-8,${encodeURI(csv).replace(/#/g, \"-\")}`,\n          fileName: generatedFileName\n        });\n      });\n    };\n    reader.readAsArrayBuffer(this._input.files[0]);\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-intro\">\n          <input\n            className=\"App-input\"\n            type=\"file\"\n            ref={ref => (this._input = ref)}\n            onChange={this.handleUpload}\n          />\n          <a\n            className=\"App-link\"\n            ref={ref => (this._link = ref)}\n            href={this.state.encodedCsv}\n            download={this.state.fileName}\n          >\n            {this.state.fileName}\n          </a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}